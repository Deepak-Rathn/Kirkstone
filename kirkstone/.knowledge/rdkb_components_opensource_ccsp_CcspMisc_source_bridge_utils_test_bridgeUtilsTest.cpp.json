{"is_source_file": true, "format": "C++", "description": "This file is a test source file for the bridge_utils module, using Google Test framework to validate various functions related to network bridging, interface management, and system configuration in a network device environment.", "external_files": ["gtest/gtest.h", "gmock/gmock.h", "mocks/mock_syscfg.h", "mocks/mock_file_io.h", "mocks/mock_psm.h", "mocks/mock_socket.h", "mocks/mock_sysevent.h", "mocks/mock_fd.h", "mocks/mock_util.h", "mocks/mock_ovs.h", "mocks/mock_messagebus.h", "mocks/mock_bridge_util_generic.h", "bridge_util.h", "bridge_util_hal.h"], "external_methods": ["getMTU", "Initialize", "getXfinityEnableStatus", "checkIfExists", "checkIfExistsInBridge", "removeIfaceFromList", "enableMoCaIsolationSettings", "disableMoCaIsolationSettings", "getIfList", "wait_for_gre_ready", "assignIpToBridge", "getCurrentIfList", "getSettings"], "published": ["getMTU", "Initialize", "getXfinityEnableStatus", "checkIfExists", "checkIfExistsInBridge", "removeIfaceFromList", "enableMoCaIsolationSettings", "disableMoCaIsolationSettings", "getIfList", "wait_for_gre_ready", "assignIpToBridge", "getCurrentIfList", "getSettings"], "classes": [{"name": "BridgeUtilsTestFixture", "description": "A Google Test fixture class setting up mocks for multiple system components and shared resources used across tests."}], "methods": [{"name": "getMTU", "description": "Returns the MTU size based on the network type."}, {"name": "Initialize", "description": "Initializes system components, messaging bus, and synchronization markers."}, {"name": "getXfinityEnableStatus", "description": "Retrieves the status of the Xfinity hotspot feature via PSM."}, {"name": "checkIfExists", "description": "Checks whether a network interface exists by name."}, {"name": "checkIfExistsInBridge", "description": "Checks if a network interface exists within a specific bridge."}, {"name": "removeIfaceFromList", "description": "Removes a specified interface from a list of interfaces."}, {"name": "enableMoCaIsolationSettings", "description": "Configures MoCA isolation settings on a bridge, based on system parameters."}, {"name": "disableMoCaIsolationSettings", "description": "Disables MoCA isolation by bringing down the specified bridge."}, {"name": "getIfList", "description": "Retrieves the list of interfaces associated with a network bridge or interface group."}, {"name": "wait_for_gre_ready", "description": "Waits until the GRE interface(s) are in a ready state by querying system events."}, {"name": "assignIpToBridge", "description": "Assigns an IP address to a bridge interface based on system configuration."}, {"name": "getCurrentIfList", "description": "Retrieves current interface list from bridge, using ovs or bridge utils depending on configuration."}, {"name": "getSettings", "description": "Retrieves system settings and configuration parameters, populating global variables accordingly."}, {"name": "ACTION_P(SetGwConfigArg1,value)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "ACTION_P(SetPsmValueArg4,value)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "ACTION_TEMPLATE(SetArgNPointeeTo,HAS_1_TEMPLATE_PARAMS (unsigned,uIndex),AND_2_VALUE_PARAMS (pData,uiDataSize))", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "BridgeUtilsTestFixture()", "scope": "BridgeUtilsTestFixture", "scopeKind": "class", "description": "unavailable"}, {"name": "void SetUp()", "scope": "BridgeUtilsTestFixture", "scopeKind": "class", "description": "unavailable"}, {"name": "TEST(BridgeUtils,getMTU)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "TEST(BridgeUtils,removeIfaceFromList)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "TEST_F(BridgeUtilsTestFixture,AddOrDeletePortBridgeUtilsDelete)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "TEST_F(BridgeUtilsTestFixture,AddOrDeletePortBridgeUtilsUp)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "TEST_F(BridgeUtilsTestFixture,AddOrDeletePortFail)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "TEST_F(BridgeUtilsTestFixture,AddOrDeletePortOvsFail)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "TEST_F(BridgeUtilsTestFixture,AddOrDeletePortOvsFailGetConfig)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "TEST_F(BridgeUtilsTestFixture,AddOrDeletePortOvsRemove)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "TEST_F(BridgeUtilsTestFixture,AddOrDeletePortOvsUp)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "TEST_F(BridgeUtilsTestFixture,CreateBrInterface)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "TEST_F(BridgeUtilsTestFixture,CreateBrInterfaceHotspot2G)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "TEST_F(BridgeUtilsTestFixture,CreateBrInterfaceHotspotSecure5G)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "TEST_F(BridgeUtilsTestFixture,CreateBrInterfaceInst1ETHWAN)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "TEST_F(BridgeUtilsTestFixture,CreateBrInterfaceLnF)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "TEST_F(BridgeUtilsTestFixture,CreateBrInterfaceMesh)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "TEST_F(BridgeUtilsTestFixture,CreateBrInterfaceMeshWiFi2G)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "TEST_F(BridgeUtilsTestFixture,CreateBrInterfaceMeshWiFi5G)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "TEST_F(BridgeUtilsTestFixture,CreateBrInterfaceMocaIsolation)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "TEST_F(BridgeUtilsTestFixture,DeleteBrInterface)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "TEST_F(BridgeUtilsTestFixture,Initialize)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "TEST_F(BridgeUtilsTestFixture,InitializeMessageBusFail)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "TEST_F(BridgeUtilsTestFixture,InitializeSyscfgFail1)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "TEST_F(BridgeUtilsTestFixture,InitializeSyscfgFail2)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "TEST_F(BridgeUtilsTestFixture,InitializeSyseventopenFail1)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "TEST_F(BridgeUtilsTestFixture,InitializeSyseventopenFail2)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "TEST_F(BridgeUtilsTestFixture,InitializeSyseventopenFail3)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "TEST_F(BridgeUtilsTestFixture,InitializeSyseventopenFail4)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "TEST_F(BridgeUtilsTestFixture,InitializeSyseventopenFail5)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "TEST_F(BridgeUtilsTestFixture,InitializeSyseventopenFail6)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "TEST_F(BridgeUtilsTestFixture,SyncBrInterfaces)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "TEST_F(BridgeUtilsTestFixture,SyncBrInterfacesBridgeMode)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "TEST_F(BridgeUtilsTestFixture,assignIpToBridge)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "TEST_F(BridgeUtilsTestFixture,assignIpToBridgeNoSubnet)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "TEST_F(BridgeUtilsTestFixture,assignIpToBridgePsmFail)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "TEST_F(BridgeUtilsTestFixture,checkIfExists)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "TEST_F(BridgeUtilsTestFixture,checkIfExistsFailure)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "TEST_F(BridgeUtilsTestFixture,checkIfExistsInBridgeOvsDisable)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "TEST_F(BridgeUtilsTestFixture,checkIfExistsInBridgeOvsEnable)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "TEST_F(BridgeUtilsTestFixture,checkIfExistsInBridgePopenFailure)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "TEST_F(BridgeUtilsTestFixture,disableMoCaIsolationSettings)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "TEST_F(BridgeUtilsTestFixture,enableMoCaIsolationSettings)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "TEST_F(BridgeUtilsTestFixture,enableMoCaIsolationSettingsPSMFail)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "TEST_F(BridgeUtilsTestFixture,getCurrentIfListBridgeUtilsEnable)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "TEST_F(BridgeUtilsTestFixture,getCurrentIfListFail)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "TEST_F(BridgeUtilsTestFixture,getCurrentIfListOvsEnable)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "TEST_F(BridgeUtilsTestFixture,getCurrentIfListPopenFail)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "TEST_F(BridgeUtilsTestFixture,getIfList)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "TEST_F(BridgeUtilsTestFixture,getIfListPsmFail)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "TEST_F(BridgeUtilsTestFixture,getIfListSkipMoca)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "TEST_F(BridgeUtilsTestFixture,getIfListSkipWifi)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "TEST_F(BridgeUtilsTestFixture,getSettings)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "TEST_F(BridgeUtilsTestFixture,getSettingsFail)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "TEST_F(BridgeUtilsTestFixture,getSettingsPsmWan)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "TEST_F(BridgeUtilsTestFixture,getXfinityEnableStatus)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "TEST_F(BridgeUtilsTestFixture,getXfinityEnableStatusPsmFail)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "TEST_F(BridgeUtilsTestFixture,removeIfaceFromBridge)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "TEST_F(BridgeUtilsTestFixture,wait_for_gre_ready)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "TEST_F(BridgeUtilsTestFixture,wait_for_gre_ready_syseventFailed)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "void TearDown()", "scope": "BridgeUtilsTestFixture", "scopeKind": "class", "description": "unavailable"}], "calls": ["system", "CCSP_Message_Bus_Init", "syscfg_init", "sysevent_open", "PSM_Get_Record_Value2", "sysevent_get", "sysevent_set", "popen", "fgets", "pclose", "ovs_agent_api_get_config", "ovs_agent_api_interact", "HandlePreConfigVendorGeneric", "HandlePostConfigVendorGeneric"], "search-terms": ["bridge", "ovs", "system configuration", "interface list", "MoCA isolation", "GRE ready", "system event", "bridge utils", "system parameters", "network interface existence"], "state": 2, "file_id": 9869, "knowledge_revision": 22905, "git_revision": "", "ctags": [{"_type": "tag", "name": "ACTION_P", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspMisc/source/bridge_utils/test/bridgeUtilsTest.cpp", "pattern": "/^ACTION_P(SetGwConfigArg1, value)$/", "language": "C++", "kind": "function", "signature": "(SetGwConfigArg1,value)"}, {"_type": "tag", "name": "ACTION_P", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspMisc/source/bridge_utils/test/bridgeUtilsTest.cpp", "pattern": "/^ACTION_P(SetPsmValueArg4, value)$/", "language": "C++", "kind": "function", "signature": "(SetPsmValueArg4,value)"}, {"_type": "tag", "name": "ACTION_TEMPLATE", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspMisc/source/bridge_utils/test/bridgeUtilsTest.cpp", "pattern": "/^ACTION_TEMPLATE(SetArgNPointeeTo, HAS_1_TEMPLATE_PARAMS(unsigned, uIndex), AND_2_VALUE_PARAMS(pD/", "language": "C++", "kind": "function", "signature": "(SetArgNPointeeTo,HAS_1_TEMPLATE_PARAMS (unsigned,uIndex),AND_2_VALUE_PARAMS (pData,uiDataSize))"}, {"_type": "tag", "name": "BridgeUtilsTestFixture", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspMisc/source/bridge_utils/test/bridgeUtilsTest.cpp", "pattern": "/^        BridgeUtilsTestFixture()$/", "file": true, "language": "C++", "kind": "function", "signature": "()", "scope": "BridgeUtilsTestFixture", "scopeKind": "class"}, {"_type": "tag", "name": "BridgeUtilsTestFixture", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspMisc/source/bridge_utils/test/bridgeUtilsTest.cpp", "pattern": "/^class BridgeUtilsTestFixture : public ::testing::Test {$/", "file": true, "language": "C++", "kind": "class"}, {"_type": "tag", "name": "SetUp", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspMisc/source/bridge_utils/test/bridgeUtilsTest.cpp", "pattern": "/^        virtual void SetUp()$/", "file": true, "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "()", "scope": "BridgeUtilsTestFixture", "scopeKind": "class"}, {"_type": "tag", "name": "TEST", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspMisc/source/bridge_utils/test/bridgeUtilsTest.cpp", "pattern": "/^TEST (BridgeUtils, getMTU)$/", "language": "C++", "kind": "function", "signature": "(BridgeUtils,getMTU)"}, {"_type": "tag", "name": "TEST", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspMisc/source/bridge_utils/test/bridgeUtilsTest.cpp", "pattern": "/^TEST(BridgeUtils, removeIfaceFromList)$/", "language": "C++", "kind": "function", "signature": "(BridgeUtils,removeIfaceFromList)"}, {"_type": "tag", "name": "TEST_F", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspMisc/source/bridge_utils/test/bridgeUtilsTest.cpp", "pattern": "/^TEST_F(BridgeUtilsTestFixture, AddOrDeletePortBridgeUtilsDelete)$/", "language": "C++", "kind": "function", "signature": "(BridgeUtilsTestFixture,AddOrDeletePortBridgeUtilsDelete)"}, {"_type": "tag", "name": "TEST_F", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspMisc/source/bridge_utils/test/bridgeUtilsTest.cpp", "pattern": "/^TEST_F(BridgeUtilsTestFixture, AddOrDeletePortBridgeUtilsUp)$/", "language": "C++", "kind": "function", "signature": "(BridgeUtilsTestFixture,AddOrDeletePortBridgeUtilsUp)"}, {"_type": "tag", "name": "TEST_F", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspMisc/source/bridge_utils/test/bridgeUtilsTest.cpp", "pattern": "/^TEST_F(BridgeUtilsTestFixture, AddOrDeletePortFail)$/", "language": "C++", "kind": "function", "signature": "(BridgeUtilsTestFixture,AddOrDeletePortFail)"}, {"_type": "tag", "name": "TEST_F", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspMisc/source/bridge_utils/test/bridgeUtilsTest.cpp", "pattern": "/^TEST_F(BridgeUtilsTestFixture, AddOrDeletePortOvsFail)$/", "language": "C++", "kind": "function", "signature": "(BridgeUtilsTestFixture,AddOrDeletePortOvsFail)"}, {"_type": "tag", "name": "TEST_F", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspMisc/source/bridge_utils/test/bridgeUtilsTest.cpp", "pattern": "/^TEST_F(BridgeUtilsTestFixture, AddOrDeletePortOvsFailGetConfig)$/", "language": "C++", "kind": "function", "signature": "(BridgeUtilsTestFixture,AddOrDeletePortOvsFailGetConfig)"}, {"_type": "tag", "name": "TEST_F", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspMisc/source/bridge_utils/test/bridgeUtilsTest.cpp", "pattern": "/^TEST_F(BridgeUtilsTestFixture, AddOrDeletePortOvsRemove)$/", "language": "C++", "kind": "function", "signature": "(BridgeUtilsTestFixture,AddOrDeletePortOvsRemove)"}, {"_type": "tag", "name": "TEST_F", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspMisc/source/bridge_utils/test/bridgeUtilsTest.cpp", "pattern": "/^TEST_F(BridgeUtilsTestFixture, AddOrDeletePortOvsUp)$/", "language": "C++", "kind": "function", "signature": "(BridgeUtilsTestFixture,AddOrDeletePortOvsUp)"}, {"_type": "tag", "name": "TEST_F", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspMisc/source/bridge_utils/test/bridgeUtilsTest.cpp", "pattern": "/^TEST_F(BridgeUtilsTestFixture, CreateBrInterface)$/", "language": "C++", "kind": "function", "signature": "(BridgeUtilsTestFixture,CreateBrInterface)"}, {"_type": "tag", "name": "TEST_F", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspMisc/source/bridge_utils/test/bridgeUtilsTest.cpp", "pattern": "/^TEST_F(BridgeUtilsTestFixture, CreateBrInterfaceHotspot2G)$/", "language": "C++", "kind": "function", "signature": "(BridgeUtilsTestFixture,CreateBrInterfaceHotspot2G)"}, {"_type": "tag", "name": "TEST_F", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspMisc/source/bridge_utils/test/bridgeUtilsTest.cpp", "pattern": "/^TEST_F(BridgeUtilsTestFixture, CreateBrInterfaceHotspotSecure5G)$/", "language": "C++", "kind": "function", "signature": "(BridgeUtilsTestFixture,CreateBrInterfaceHotspotSecure5G)"}, {"_type": "tag", "name": "TEST_F", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspMisc/source/bridge_utils/test/bridgeUtilsTest.cpp", "pattern": "/^TEST_F(BridgeUtilsTestFixture, CreateBrInterfaceInst1ETHWAN)$/", "language": "C++", "kind": "function", "signature": "(BridgeUtilsTestFixture,CreateBrInterfaceInst1ETHWAN)"}, {"_type": "tag", "name": "TEST_F", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspMisc/source/bridge_utils/test/bridgeUtilsTest.cpp", "pattern": "/^TEST_F(BridgeUtilsTestFixture, CreateBrInterfaceLnF)$/", "language": "C++", "kind": "function", "signature": "(BridgeUtilsTestFixture,CreateBrInterfaceLnF)"}, {"_type": "tag", "name": "TEST_F", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspMisc/source/bridge_utils/test/bridgeUtilsTest.cpp", "pattern": "/^TEST_F(BridgeUtilsTestFixture, CreateBrInterfaceMesh)$/", "language": "C++", "kind": "function", "signature": "(BridgeUtilsTestFixture,CreateBrInterfaceMesh)"}, {"_type": "tag", "name": "TEST_F", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspMisc/source/bridge_utils/test/bridgeUtilsTest.cpp", "pattern": "/^TEST_F(BridgeUtilsTestFixture, CreateBrInterfaceMeshWiFi2G)$/", "language": "C++", "kind": "function", "signature": "(BridgeUtilsTestFixture,CreateBrInterfaceMeshWiFi2G)"}, {"_type": "tag", "name": "TEST_F", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspMisc/source/bridge_utils/test/bridgeUtilsTest.cpp", "pattern": "/^TEST_F(BridgeUtilsTestFixture, CreateBrInterfaceMeshWiFi5G)$/", "language": "C++", "kind": "function", "signature": "(BridgeUtilsTestFixture,CreateBrInterfaceMeshWiFi5G)"}, {"_type": "tag", "name": "TEST_F", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspMisc/source/bridge_utils/test/bridgeUtilsTest.cpp", "pattern": "/^TEST_F(BridgeUtilsTestFixture, CreateBrInterfaceMocaIsolation)$/", "language": "C++", "kind": "function", "signature": "(BridgeUtilsTestFixture,CreateBrInterfaceMocaIsolation)"}, {"_type": "tag", "name": "TEST_F", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspMisc/source/bridge_utils/test/bridgeUtilsTest.cpp", "pattern": "/^TEST_F(BridgeUtilsTestFixture, DeleteBrInterface)$/", "language": "C++", "kind": "function", "signature": "(BridgeUtilsTestFixture,DeleteBrInterface)"}, {"_type": "tag", "name": "TEST_F", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspMisc/source/bridge_utils/test/bridgeUtilsTest.cpp", "pattern": "/^TEST_F(BridgeUtilsTestFixture, Initialize)$/", "language": "C++", "kind": "function", "signature": "(BridgeUtilsTestFixture,Initialize)"}, {"_type": "tag", "name": "TEST_F", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspMisc/source/bridge_utils/test/bridgeUtilsTest.cpp", "pattern": "/^TEST_F(BridgeUtilsTestFixture, InitializeMessageBusFail)$/", "language": "C++", "kind": "function", "signature": "(BridgeUtilsTestFixture,InitializeMessageBusFail)"}, {"_type": "tag", "name": "TEST_F", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspMisc/source/bridge_utils/test/bridgeUtilsTest.cpp", "pattern": "/^TEST_F(BridgeUtilsTestFixture, InitializeSyscfgFail1)$/", "language": "C++", "kind": "function", "signature": "(BridgeUtilsTestFixture,InitializeSyscfgFail1)"}, {"_type": "tag", "name": "TEST_F", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspMisc/source/bridge_utils/test/bridgeUtilsTest.cpp", "pattern": "/^TEST_F(BridgeUtilsTestFixture, InitializeSyscfgFail2)$/", "language": "C++", "kind": "function", "signature": "(BridgeUtilsTestFixture,InitializeSyscfgFail2)"}, {"_type": "tag", "name": "TEST_F", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspMisc/source/bridge_utils/test/bridgeUtilsTest.cpp", "pattern": "/^TEST_F(BridgeUtilsTestFixture, InitializeSyseventopenFail1)$/", "language": "C++", "kind": "function", "signature": "(BridgeUtilsTestFixture,InitializeSyseventopenFail1)"}, {"_type": "tag", "name": "TEST_F", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspMisc/source/bridge_utils/test/bridgeUtilsTest.cpp", "pattern": "/^TEST_F(BridgeUtilsTestFixture, InitializeSyseventopenFail2)$/", "language": "C++", "kind": "function", "signature": "(BridgeUtilsTestFixture,InitializeSyseventopenFail2)"}, {"_type": "tag", "name": "TEST_F", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspMisc/source/bridge_utils/test/bridgeUtilsTest.cpp", "pattern": "/^TEST_F(BridgeUtilsTestFixture, InitializeSyseventopenFail3)$/", "language": "C++", "kind": "function", "signature": "(BridgeUtilsTestFixture,InitializeSyseventopenFail3)"}, {"_type": "tag", "name": "TEST_F", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspMisc/source/bridge_utils/test/bridgeUtilsTest.cpp", "pattern": "/^TEST_F(BridgeUtilsTestFixture, InitializeSyseventopenFail4)$/", "language": "C++", "kind": "function", "signature": "(BridgeUtilsTestFixture,InitializeSyseventopenFail4)"}, {"_type": "tag", "name": "TEST_F", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspMisc/source/bridge_utils/test/bridgeUtilsTest.cpp", "pattern": "/^TEST_F(BridgeUtilsTestFixture, InitializeSyseventopenFail5)$/", "language": "C++", "kind": "function", "signature": "(BridgeUtilsTestFixture,InitializeSyseventopenFail5)"}, {"_type": "tag", "name": "TEST_F", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspMisc/source/bridge_utils/test/bridgeUtilsTest.cpp", "pattern": "/^TEST_F(BridgeUtilsTestFixture, InitializeSyseventopenFail6)$/", "language": "C++", "kind": "function", "signature": "(BridgeUtilsTestFixture,InitializeSyseventopenFail6)"}, {"_type": "tag", "name": "TEST_F", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspMisc/source/bridge_utils/test/bridgeUtilsTest.cpp", "pattern": "/^TEST_F(BridgeUtilsTestFixture, SyncBrInterfaces)$/", "language": "C++", "kind": "function", "signature": "(BridgeUtilsTestFixture,SyncBrInterfaces)"}, {"_type": "tag", "name": "TEST_F", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspMisc/source/bridge_utils/test/bridgeUtilsTest.cpp", "pattern": "/^TEST_F(BridgeUtilsTestFixture, SyncBrInterfacesBridgeMode)$/", "language": "C++", "kind": "function", "signature": "(BridgeUtilsTestFixture,SyncBrInterfacesBridgeMode)"}, {"_type": "tag", "name": "TEST_F", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspMisc/source/bridge_utils/test/bridgeUtilsTest.cpp", "pattern": "/^TEST_F(BridgeUtilsTestFixture, assignIpToBridge)$/", "language": "C++", "kind": "function", "signature": "(BridgeUtilsTestFixture,assignIpToBridge)"}, {"_type": "tag", "name": "TEST_F", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspMisc/source/bridge_utils/test/bridgeUtilsTest.cpp", "pattern": "/^TEST_F(BridgeUtilsTestFixture, assignIpToBridgeNoSubnet)$/", "language": "C++", "kind": "function", "signature": "(BridgeUtilsTestFixture,assignIpToBridgeNoSubnet)"}, {"_type": "tag", "name": "TEST_F", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspMisc/source/bridge_utils/test/bridgeUtilsTest.cpp", "pattern": "/^TEST_F(BridgeUtilsTestFixture, assignIpToBridgePsmFail)$/", "language": "C++", "kind": "function", "signature": "(BridgeUtilsTestFixture,assignIpToBridgePsmFail)"}, {"_type": "tag", "name": "TEST_F", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspMisc/source/bridge_utils/test/bridgeUtilsTest.cpp", "pattern": "/^TEST_F(BridgeUtilsTestFixture, checkIfExists)$/", "language": "C++", "kind": "function", "signature": "(BridgeUtilsTestFixture,checkIfExists)"}, {"_type": "tag", "name": "TEST_F", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspMisc/source/bridge_utils/test/bridgeUtilsTest.cpp", "pattern": "/^TEST_F(BridgeUtilsTestFixture, checkIfExistsFailure)$/", "language": "C++", "kind": "function", "signature": "(BridgeUtilsTestFixture,checkIfExistsFailure)"}, {"_type": "tag", "name": "TEST_F", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspMisc/source/bridge_utils/test/bridgeUtilsTest.cpp", "pattern": "/^TEST_F(BridgeUtilsTestFixture, checkIfExistsInBridgeOvsDisable)$/", "language": "C++", "kind": "function", "signature": "(BridgeUtilsTestFixture,checkIfExistsInBridgeOvsDisable)"}, {"_type": "tag", "name": "TEST_F", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspMisc/source/bridge_utils/test/bridgeUtilsTest.cpp", "pattern": "/^TEST_F(BridgeUtilsTestFixture, checkIfExistsInBridgeOvsEnable)$/", "language": "C++", "kind": "function", "signature": "(BridgeUtilsTestFixture,checkIfExistsInBridgeOvsEnable)"}, {"_type": "tag", "name": "TEST_F", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspMisc/source/bridge_utils/test/bridgeUtilsTest.cpp", "pattern": "/^TEST_F(BridgeUtilsTestFixture, checkIfExistsInBridgePopenFailure)$/", "language": "C++", "kind": "function", "signature": "(BridgeUtilsTestFixture,checkIfExistsInBridgePopenFailure)"}, {"_type": "tag", "name": "TEST_F", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspMisc/source/bridge_utils/test/bridgeUtilsTest.cpp", "pattern": "/^TEST_F(BridgeUtilsTestFixture, disableMoCaIsolationSettings)$/", "language": "C++", "kind": "function", "signature": "(BridgeUtilsTestFixture,disableMoCaIsolationSettings)"}, {"_type": "tag", "name": "TEST_F", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspMisc/source/bridge_utils/test/bridgeUtilsTest.cpp", "pattern": "/^TEST_F(BridgeUtilsTestFixture, enableMoCaIsolationSettings)$/", "language": "C++", "kind": "function", "signature": "(BridgeUtilsTestFixture,enableMoCaIsolationSettings)"}, {"_type": "tag", "name": "TEST_F", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspMisc/source/bridge_utils/test/bridgeUtilsTest.cpp", "pattern": "/^TEST_F(BridgeUtilsTestFixture, enableMoCaIsolationSettingsPSMFail)$/", "language": "C++", "kind": "function", "signature": "(BridgeUtilsTestFixture,enableMoCaIsolationSettingsPSMFail)"}, {"_type": "tag", "name": "TEST_F", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspMisc/source/bridge_utils/test/bridgeUtilsTest.cpp", "pattern": "/^TEST_F(BridgeUtilsTestFixture, getCurrentIfListBridgeUtilsEnable)$/", "language": "C++", "kind": "function", "signature": "(BridgeUtilsTestFixture,getCurrentIfListBridgeUtilsEnable)"}, {"_type": "tag", "name": "TEST_F", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspMisc/source/bridge_utils/test/bridgeUtilsTest.cpp", "pattern": "/^TEST_F(BridgeUtilsTestFixture, getCurrentIfListFail)$/", "language": "C++", "kind": "function", "signature": "(BridgeUtilsTestFixture,getCurrentIfListFail)"}, {"_type": "tag", "name": "TEST_F", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspMisc/source/bridge_utils/test/bridgeUtilsTest.cpp", "pattern": "/^TEST_F(BridgeUtilsTestFixture, getCurrentIfListOvsEnable)$/", "language": "C++", "kind": "function", "signature": "(BridgeUtilsTestFixture,getCurrentIfListOvsEnable)"}, {"_type": "tag", "name": "TEST_F", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspMisc/source/bridge_utils/test/bridgeUtilsTest.cpp", "pattern": "/^TEST_F(BridgeUtilsTestFixture, getCurrentIfListPopenFail)$/", "language": "C++", "kind": "function", "signature": "(BridgeUtilsTestFixture,getCurrentIfListPopenFail)"}, {"_type": "tag", "name": "TEST_F", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspMisc/source/bridge_utils/test/bridgeUtilsTest.cpp", "pattern": "/^TEST_F(BridgeUtilsTestFixture, getIfList)$/", "language": "C++", "kind": "function", "signature": "(BridgeUtilsTestFixture,getIfList)"}, {"_type": "tag", "name": "TEST_F", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspMisc/source/bridge_utils/test/bridgeUtilsTest.cpp", "pattern": "/^TEST_F(BridgeUtilsTestFixture, getIfListPsmFail)$/", "language": "C++", "kind": "function", "signature": "(BridgeUtilsTestFixture,getIfListPsmFail)"}, {"_type": "tag", "name": "TEST_F", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspMisc/source/bridge_utils/test/bridgeUtilsTest.cpp", "pattern": "/^TEST_F(BridgeUtilsTestFixture, getIfListSkipMoca)$/", "language": "C++", "kind": "function", "signature": "(BridgeUtilsTestFixture,getIfListSkipMoca)"}, {"_type": "tag", "name": "TEST_F", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspMisc/source/bridge_utils/test/bridgeUtilsTest.cpp", "pattern": "/^TEST_F(BridgeUtilsTestFixture, getIfListSkipWifi)$/", "language": "C++", "kind": "function", "signature": "(BridgeUtilsTestFixture,getIfListSkipWifi)"}, {"_type": "tag", "name": "TEST_F", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspMisc/source/bridge_utils/test/bridgeUtilsTest.cpp", "pattern": "/^TEST_F(BridgeUtilsTestFixture, getSettings)$/", "language": "C++", "kind": "function", "signature": "(BridgeUtilsTestFixture,getSettings)"}, {"_type": "tag", "name": "TEST_F", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspMisc/source/bridge_utils/test/bridgeUtilsTest.cpp", "pattern": "/^TEST_F(BridgeUtilsTestFixture, getSettingsFail)$/", "language": "C++", "kind": "function", "signature": "(BridgeUtilsTestFixture,getSettingsFail)"}, {"_type": "tag", "name": "TEST_F", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspMisc/source/bridge_utils/test/bridgeUtilsTest.cpp", "pattern": "/^TEST_F(BridgeUtilsTestFixture, getSettingsPsmWan)$/", "language": "C++", "kind": "function", "signature": "(BridgeUtilsTestFixture,getSettingsPsmWan)"}, {"_type": "tag", "name": "TEST_F", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspMisc/source/bridge_utils/test/bridgeUtilsTest.cpp", "pattern": "/^TEST_F(BridgeUtilsTestFixture, getXfinityEnableStatus)$/", "language": "C++", "kind": "function", "signature": "(BridgeUtilsTestFixture,getXfinityEnableStatus)"}, {"_type": "tag", "name": "TEST_F", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspMisc/source/bridge_utils/test/bridgeUtilsTest.cpp", "pattern": "/^TEST_F(BridgeUtilsTestFixture, getXfinityEnableStatusPsmFail)$/", "language": "C++", "kind": "function", "signature": "(BridgeUtilsTestFixture,getXfinityEnableStatusPsmFail)"}, {"_type": "tag", "name": "TEST_F", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspMisc/source/bridge_utils/test/bridgeUtilsTest.cpp", "pattern": "/^TEST_F(BridgeUtilsTestFixture, removeIfaceFromBridge)$/", "language": "C++", "kind": "function", "signature": "(BridgeUtilsTestFixture,removeIfaceFromBridge)"}, {"_type": "tag", "name": "TEST_F", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspMisc/source/bridge_utils/test/bridgeUtilsTest.cpp", "pattern": "/^TEST_F(BridgeUtilsTestFixture, wait_for_gre_ready)$/", "language": "C++", "kind": "function", "signature": "(BridgeUtilsTestFixture,wait_for_gre_ready)"}, {"_type": "tag", "name": "TEST_F", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspMisc/source/bridge_utils/test/bridgeUtilsTest.cpp", "pattern": "/^TEST_F(BridgeUtilsTestFixture, wait_for_gre_ready_syseventFailed)$/", "language": "C++", "kind": "function", "signature": "(BridgeUtilsTestFixture,wait_for_gre_ready_syseventFailed)"}, {"_type": "tag", "name": "TearDown", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspMisc/source/bridge_utils/test/bridgeUtilsTest.cpp", "pattern": "/^        virtual void TearDown()$/", "file": true, "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "()", "scope": "BridgeUtilsTestFixture", "scopeKind": "class"}, {"_type": "tag", "name": "g_bridgeUtilsGenericMock", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspMisc/source/bridge_utils/test/bridgeUtilsTest.cpp", "pattern": "/^BridgeUtilsGenericMock * g_bridgeUtilsGenericMock = NULL;$/", "language": "C++", "typeref": "typename:BridgeUtilsGenericMock *", "kind": "variable"}, {"_type": "tag", "name": "g_fdMock", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspMisc/source/bridge_utils/test/bridgeUtilsTest.cpp", "pattern": "/^FileDescriptorMock * g_fdMock = NULL;$/", "language": "C++", "typeref": "typename:FileDescriptorMock *", "kind": "variable"}, {"_type": "tag", "name": "g_fileIOMock", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspMisc/source/bridge_utils/test/bridgeUtilsTest.cpp", "pattern": "/^FileIOMock * g_fileIOMock = NULL;$/", "language": "C++", "typeref": "typename:FileIOMock *", "kind": "variable"}, {"_type": "tag", "name": "g_messagebusMock", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspMisc/source/bridge_utils/test/bridgeUtilsTest.cpp", "pattern": "/^MessageBusMock * g_messagebusMock = NULL;$/", "language": "C++", "typeref": "typename:MessageBusMock *", "kind": "variable"}, {"_type": "tag", "name": "g_ovsMock", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspMisc/source/bridge_utils/test/bridgeUtilsTest.cpp", "pattern": "/^OvsMock * g_ovsMock = NULL;$/", "language": "C++", "typeref": "typename:OvsMock *", "kind": "variable"}, {"_type": "tag", "name": "g_psmMock", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspMisc/source/bridge_utils/test/bridgeUtilsTest.cpp", "pattern": "/^PsmMock * g_psmMock = NULL;$/", "language": "C++", "typeref": "typename:PsmMock *", "kind": "variable"}, {"_type": "tag", "name": "g_socketMock", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspMisc/source/bridge_utils/test/bridgeUtilsTest.cpp", "pattern": "/^SocketMock * g_socketMock = NULL;$/", "language": "C++", "typeref": "typename:SocketMock *", "kind": "variable"}, {"_type": "tag", "name": "g_syscfgMock", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspMisc/source/bridge_utils/test/bridgeUtilsTest.cpp", "pattern": "/^SyscfgMock * g_syscfgMock = NULL;$/", "language": "C++", "typeref": "typename:SyscfgMock *", "kind": "variable"}, {"_type": "tag", "name": "g_syseventMock", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspMisc/source/bridge_utils/test/bridgeUtilsTest.cpp", "pattern": "/^SyseventMock * g_syseventMock = NULL;$/", "language": "C++", "typeref": "typename:SyseventMock *", "kind": "variable"}, {"_type": "tag", "name": "g_utilMock", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspMisc/source/bridge_utils/test/bridgeUtilsTest.cpp", "pattern": "/^UtilMock * g_utilMock = NULL;$/", "language": "C++", "typeref": "typename:UtilMock *", "kind": "variable"}, {"_type": "tag", "name": "mockedFd", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspMisc/source/bridge_utils/test/bridgeUtilsTest.cpp", "pattern": "/^        FileDescriptorMock mockedFd;$/", "file": true, "language": "C++", "typeref": "typename:FileDescriptorMock", "kind": "member", "scope": "BridgeUtilsTestFixture", "scopeKind": "class"}, {"_type": "tag", "name": "mockedFileIO", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspMisc/source/bridge_utils/test/bridgeUtilsTest.cpp", "pattern": "/^        FileIOMock mockedFileIO;$/", "file": true, "language": "C++", "typeref": "typename:FileIOMock", "kind": "member", "scope": "BridgeUtilsTestFixture", "scopeKind": "class"}, {"_type": "tag", "name": "mockedGeneric", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspMisc/source/bridge_utils/test/bridgeUtilsTest.cpp", "pattern": "/^\tBridgeUtilsGenericMock mockedGeneric;$/", "file": true, "language": "C++", "typeref": "typename:BridgeUtilsGenericMock", "kind": "member", "scope": "BridgeUtilsTestFixture", "scopeKind": "class"}, {"_type": "tag", "name": "mockedMsgbus", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspMisc/source/bridge_utils/test/bridgeUtilsTest.cpp", "pattern": "/^        MessageBusMock mockedMsgbus;$/", "file": true, "language": "C++", "typeref": "typename:MessageBusMock", "kind": "member", "scope": "BridgeUtilsTestFixture", "scopeKind": "class"}, {"_type": "tag", "name": "mockedOvs", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspMisc/source/bridge_utils/test/bridgeUtilsTest.cpp", "pattern": "/^        OvsMock mockedOvs;$/", "file": true, "language": "C++", "typeref": "typename:OvsMock", "kind": "member", "scope": "BridgeUtilsTestFixture", "scopeKind": "class"}, {"_type": "tag", "name": "mockedPsm", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspMisc/source/bridge_utils/test/bridgeUtilsTest.cpp", "pattern": "/^        PsmMock mockedPsm;$/", "file": true, "language": "C++", "typeref": "typename:PsmMock", "kind": "member", "scope": "BridgeUtilsTestFixture", "scopeKind": "class"}, {"_type": "tag", "name": "mockedSocket", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspMisc/source/bridge_utils/test/bridgeUtilsTest.cpp", "pattern": "/^        SocketMock mockedSocket;$/", "file": true, "language": "C++", "typeref": "typename:SocketMock", "kind": "member", "scope": "BridgeUtilsTestFixture", "scopeKind": "class"}], "hash": "fe0cd08fda72ba73fd4944e0105dee29", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "rdkb/components/opensource/ccsp/CcspMisc/source/bridge_utils/test/bridgeUtilsTest.cpp", "fields": [{"name": "BridgeUtilsGenericMock * g_bridgeUtilsGenericMock", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "FileDescriptorMock * g_fdMock", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "FileIOMock * g_fileIOMock", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "MessageBusMock * g_messagebusMock", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "OvsMock * g_ovsMock", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "PsmMock * g_psmMock", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "SocketMock * g_socketMock", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "SyscfgMock * g_syscfgMock", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "SyseventMock * g_syseventMock", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "UtilMock * g_utilMock", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "FileDescriptorMock mockedFd", "scope": "BridgeUtilsTestFixture", "scopeKind": "class", "description": "unavailable"}, {"name": "FileIOMock mockedFileIO", "scope": "BridgeUtilsTestFixture", "scopeKind": "class", "description": "unavailable"}, {"name": "BridgeUtilsGenericMock mockedGeneric", "scope": "BridgeUtilsTestFixture", "scopeKind": "class", "description": "unavailable"}, {"name": "MessageBusMock mockedMsgbus", "scope": "BridgeUtilsTestFixture", "scopeKind": "class", "description": "unavailable"}, {"name": "OvsMock mockedOvs", "scope": "BridgeUtilsTestFixture", "scopeKind": "class", "description": "unavailable"}, {"name": "PsmMock mockedPsm", "scope": "BridgeUtilsTestFixture", "scopeKind": "class", "description": "unavailable"}, {"name": "SocketMock mockedSocket", "scope": "BridgeUtilsTestFixture", "scopeKind": "class", "description": "unavailable"}], "revision_history": [{"22905": ""}]}