{"is_source_file": true, "format": "C", "description": "This file contains functions for handling DHCP message parsing, options comparison, copying, cleanup, validation, and IP address option creation. It is part of a DHCP protocol implementation in C.", "external_files": ["dhcp_msg.h"], "external_methods": [], "published": ["compare_option", "dhcp_copy_option", "dhcp_cleanup_option", "dhcp_clear_option_info", "dhcp_parse_options", "dhcp_parse_msg", "dhcp_validate_msg", "dhcp_add_ipaddr_option"], "classes": [], "methods": [{"name": "int compare_option(const struct dhcp_option * opt1,const struct dhcp_option * opt2)", "description": "Compares two DHCP options for equality based on length and data content.", "scope": "", "scopeKind": ""}, {"name": "void dhcp_copy_option(struct dhcp_option * dst,const struct dhcp_option * src)", "description": "Creates a copy of a DHCP option, allocating new memory for data.", "scope": "", "scopeKind": ""}, {"name": "void dhcp_cleanup_option(struct dhcp_option * opt)", "description": "Frees the memory associated with a DHCP option's data and resets the option structure.", "scope": "", "scopeKind": ""}, {"name": "void dhcp_clear_option_info(struct dhcp_option_info * opt_info)", "description": "Clears all DHCP options stored in dhcp_option_info structure, freeing associated memory.", "scope": "", "scopeKind": ""}, {"name": "struct:dhcp_option * dhcp_parse_options(struct dhcp_option_info * opt_info,ui8 * opt_data,size_t size)", "description": "Parses DHCP options from raw data into linked list structures, extracting relevant option values.", "scope": "", "scopeKind": ""}, {"name": "void dhcp_parse_msg(struct dhcp_option_info * opt_info,struct dhcp_msg * msg,size_t size)", "description": "Parses DHCP message options from different sections based on overload flags.", "scope": "", "scopeKind": ""}, {"name": "int dhcp_validate_msg(const struct dhcp_msg * msg,const struct dhcp_option_info * opt_info)", "description": "Validates DHCP messages based on operation code and message type.", "scope": "", "scopeKind": ""}, {"name": "size_t dhcp_add_ipaddr_option(ui8 code,struct in_addr ipaddr,ui8 * buf,size_t bufsize)", "description": "Adds an IP address option to a buffer, returning the size of the added data.", "scope": "", "scopeKind": ""}], "calls": ["memcmp", "malloc", "free", "memcpy", "memset"], "search-terms": ["dhcp_option", "dhcp_msg", "dhcp_parse_options", "dhcp_validate_msg", "dhcp_add_ipaddr_option"], "state": 2, "file_id": 7458, "knowledge_revision": 20526, "git_revision": "", "ctags": [{"_type": "tag", "name": "compare_option", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/dhcpproxy/dhcp_msg.c", "pattern": "/^int compare_option(const struct dhcp_option *opt1, const struct dhcp_option *opt2)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(const struct dhcp_option * opt1,const struct dhcp_option * opt2)"}, {"_type": "tag", "name": "dhcp_add_ipaddr_option", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/dhcpproxy/dhcp_msg.c", "pattern": "/^size_t dhcp_add_ipaddr_option(ui8 code, struct in_addr ipaddr, ui8* buf, size_t bufsize)$/", "language": "C", "typeref": "typename:size_t", "kind": "function", "signature": "(ui8 code,struct in_addr ipaddr,ui8 * buf,size_t bufsize)"}, {"_type": "tag", "name": "dhcp_cleanup_option", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/dhcpproxy/dhcp_msg.c", "pattern": "/^void dhcp_cleanup_option(struct dhcp_option *opt)$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(struct dhcp_option * opt)"}, {"_type": "tag", "name": "dhcp_clear_option_info", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/dhcpproxy/dhcp_msg.c", "pattern": "/^void dhcp_clear_option_info(struct dhcp_option_info *opt_info)$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(struct dhcp_option_info * opt_info)"}, {"_type": "tag", "name": "dhcp_copy_option", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/dhcpproxy/dhcp_msg.c", "pattern": "/^void dhcp_copy_option(struct dhcp_option *dst, const struct dhcp_option *src)$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(struct dhcp_option * dst,const struct dhcp_option * src)"}, {"_type": "tag", "name": "dhcp_parse_msg", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/dhcpproxy/dhcp_msg.c", "pattern": "/^void dhcp_parse_msg(struct dhcp_option_info *opt_info, struct dhcp_msg *msg, size_t size)$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(struct dhcp_option_info * opt_info,struct dhcp_msg * msg,size_t size)"}, {"_type": "tag", "name": "dhcp_parse_options", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/dhcpproxy/dhcp_msg.c", "pattern": "/^struct dhcp_option *dhcp_parse_options(struct dhcp_option_info *opt_info,$/", "language": "C", "typeref": "struct:dhcp_option *", "kind": "function", "signature": "(struct dhcp_option_info * opt_info,ui8 * opt_data,size_t size)"}, {"_type": "tag", "name": "dhcp_validate_msg", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/dhcpproxy/dhcp_msg.c", "pattern": "/^int dhcp_validate_msg(const struct dhcp_msg *msg, const struct dhcp_option_info *opt_info)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(const struct dhcp_msg * msg,const struct dhcp_option_info * opt_info)"}], "hash": "f4a5e7af54992be743c974809aeb82a0", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "rdkb/components/opensource/ccsp/Utopia/source/dhcpproxy/dhcp_msg.c", "revision_history": [{"20526": ""}]}