{"is_source_file": true, "format": "C", "description": "Source code file for t2parser, part of a telemetry profiling system. Contains functions for parsing, configuring, and validating telemetry profile data, including parameters, trigger conditions, encoding, and protocol settings. It supports multiple formats (JSON, MsgPack) and protocols (HTTP, RBUS).", "external_files": ["t2parser.h", "t2common.h", "xconfclient.h", "reportprofiles.h", "t2log_wrapper.h", "rbusInterface.h"], "external_methods": ["rbusCheckMethodExists", "cJSON_Parse", "cJSON_GetObjectItem", "cJSON_GetArraySize", "cJSON_GetObjectItem", "cJSON_IsTrue", "cJSON_PrintUnformatted", "cJSON_Delete"], "published": ["processConfiguration", "addParameter", "addMessagePackTriggerCondition", "verifyMsgPckTriggerCondition", "time_param_MsgPackReporting_Adjustments_valid_set", "addParameterMsgpack_marker_config", "msgpack_strdup", "msgpack_strcmp", "msgpack_print", "msgpack_get_map_value", "msgpack_get_array_element", "verifyMsgPckTriggerCondition"], "classes": [], "methods": [{"name": "T2ERROR processConfiguration(char ** configData,char * profileName,char * profileHash,Profile ** localProfile)", "description": "Parses JSON configuration data to create and configure a telemetry profile, including protocol, encoding, parameters, and trigger conditions.", "scope": "", "scopeKind": ""}, {"name": "T2ERROR addParameter(Profile * profile,const char * name,const char * ref,const char * fileName,int skipFreq,int firstSeekFromEOF,const char * ptype,const char * use,bool ReportEmpty,reportTimestampFormat reportTimestamp,bool trim)", "description": "Adds a telemetry parameter or trigger marker to the profile based on provided data.", "scope": "", "scopeKind": ""}, {"name": "addMessagePackTriggerCondition", "description": "Adds trigger conditions to the profile using MessagePack formatted data."}, {"name": "T2ERROR verifyMsgPckTriggerCondition(msgpack_object * value_map)", "description": "Validates trigger conditions in MessagePack data for correctness.", "scope": "", "scopeKind": ""}, {"name": "T2ERROR time_param_MsgPackReporting_Adjustments_valid_set(Profile * profile,msgpack_object * ReportingInterval_u64,msgpack_object * ActivationTimeout_u64,msgpack_object * TimeReference_str,msgpack_object * ReportOnUpdate_boolean,msgpack_object * FirstReportInterval_u64,msgpack_object * MaxUploadLatency_u64)", "description": "Configures reporting and timing adjustments for a profile based on MessagePack objects.", "scope": "", "scopeKind": ""}, {"name": "T2ERROR addParameterMsgpack_marker_config(Profile * profile,msgpack_object * value_map)", "description": "Adds parameters or markers to the profile from MessagePack data.", "scope": "", "scopeKind": ""}, {"name": "char * msgpack_strdup(msgpack_object * obj)", "description": "Duplicates a MsgPack string object into a C string.", "scope": "", "scopeKind": ""}, {"name": "int msgpack_strcmp(msgpack_object * obj,char * str)", "description": "Compares a MsgPack string object with a C string.", "scope": "", "scopeKind": ""}, {"name": "void msgpack_print(msgpack_object * obj,char * obj_name)", "description": "Prints details of a MsgPack object for debugging.", "scope": "", "scopeKind": ""}, {"name": "msgpack_object * msgpack_get_map_value(msgpack_object * obj,char * key)", "description": "Retrieves a value from a MsgPack map by key.", "scope": "", "scopeKind": ""}, {"name": "msgpack_object * msgpack_get_array_element(msgpack_object * obj,int index)", "description": "Retrieves an element from a MsgPack array by index.", "scope": "", "scopeKind": ""}, {"name": "verifyMsgPckTriggerCondition", "description": "Validates trigger conditions in MsgPack data."}, {"name": "T2ERROR processMsgPackConfiguration(msgpack_object * profiles_array_map,Profile ** profile_dp)", "description": "Parses MsgPack configuration data to create and configure a telemetry profile, including trigger conditions, protocol, encoding, and parameters.", "scope": "", "scopeKind": ""}, {"name": "T2ERROR encodingSetMsgpack(Profile * profile,msgpack_object * value_map)", "description": "Sets encoding parameters for a profile based on MessagePack data, including report format and timestamp format.", "scope": "", "scopeKind": ""}, {"name": "T2ERROR protocolSetMsgpack(Profile * profile,msgpack_object * value_map,msgpack_object * Protocol_str)", "description": "Configures protocol-specific settings for a profile (HTTP or RBUS) based on MessagePack data.", "scope": "", "scopeKind": ""}, {"name": "T2ERROR addMsgPckTriggerCondition(Profile * profile,msgpack_object * value_map)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "T2ERROR addParameter_marker_config(Profile * profile,cJSON * jprofileParameter,int ThisProfileParameter_count)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "T2ERROR addRbusMethodParameter(Profile * profile,const char * name,const char * value)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "T2ERROR addTriggerCondition(Profile * profile,cJSON * jprofileTriggerCondition)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "T2ERROR addhttpURIreqParameter(Profile * profile,const char * Hname,const char * Href)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "T2ERROR encodingSet(Profile * profile,cJSON * jprofileEncodingType,cJSON * jprofileJSONReportFormat,cJSON * jprofileJSONReportTimestamp)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "char * getProfileParameter(Profile * profile,const char * ref)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "T2ERROR protocolSet(Profile * profile,cJSON * jprofileProtocol,cJSON * jprofileHTTPURL,cJSON * jprofileHTTPRequestURIParameter,int ThisprofileHTTPRequestURIParameter_count,cJSON * jprofileRBUSMethodName,cJSON * jprofileRBUSMethodParamArr,int rbusMethodParamArrCount)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "void time_param_Reporting_Adjustments_valid_set(Profile * profile,cJSON * jprofileReportingInterval,cJSON * jprofileActivationTimeout,cJSON * jprofileTimeReference,cJSON * jprofileReportOnUpdate,cJSON * jprofilefirstReportingInterval,cJSON * jprofilemaxUploadLatency,cJSON * jprofileReportingAdjustments)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "T2ERROR verifyTriggerCondition(cJSON * jprofileTriggerCondition)", "scope": "", "scopeKind": "", "description": "unavailable"}], "search-terms": ["t2parser", "TelemetryProfile", "Parameter", "TriggerCondition", "MsgPack", "ConfigurationParsing", "HTTP", "RBUS", "Encoding", "TriggerConditionValidation", "MessagePackParsing", "HTTP Protocol", "RBUS Protocol", "ProtocolConfiguration"], "calls": ["msgpack_get_map_value", "msgpack_print", "MSGPACK_GET_NUMBER", "msgpack_strdup", "msgpack_strcmp", "addParameter", "addhttpURIreqParameter", "addRbusMethodParameter", "verifyMsgPckTriggerCondition", "addParameterMsgpack_marker_config", "addMsgPckTriggerCondition", "protocolSetMsgpack", "encodingSetMsgpack"], "state": 2, "file_id": 12880, "knowledge_revision": 25785, "git_revision": "", "ctags": [{"_type": "tag", "name": "DEFAULT_TIME_REFERENCE", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/t2parser/t2parser.c", "pattern": "/^#define DEFAULT_TIME_REFERENCE /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "MAX_STATIC_PROP_VAL_LEN", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/t2parser/t2parser.c", "pattern": "/^static const int MAX_STATIC_PROP_VAL_LEN = 128 ;$/", "file": true, "language": "C", "typeref": "typename:const int", "kind": "variable"}, {"_type": "tag", "name": "addMsgPckTriggerCondition", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/t2parser/t2parser.c", "pattern": "/^T2ERROR addMsgPckTriggerCondition(Profile *profile, msgpack_object *value_map) {$/", "language": "C", "typeref": "typename:T2ERROR", "kind": "function", "signature": "(Profile * profile,msgpack_object * value_map)"}, {"_type": "tag", "name": "addParameter", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/t2parser/t2parser.c", "pattern": "/^static T2ERROR addParameter(Profile *profile, const char* name, const char* ref, const char* fil/", "file": true, "language": "C", "typeref": "typename:T2ERROR", "kind": "function", "signature": "(Profile * profile,const char * name,const char * ref,const char * fileName,int skipFreq,int firstSeekFromEOF,const char * ptype,const char * use,bool ReportEmpty,reportTimestampFormat reportTimestamp,bool trim)"}, {"_type": "tag", "name": "addParameterMsgpack_marker_config", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/t2parser/t2parser.c", "pattern": "/^T2ERROR addParameterMsgpack_marker_config(Profile* profile, msgpack_object* value_map){$/", "language": "C", "typeref": "typename:T2ERROR", "kind": "function", "signature": "(Profile * profile,msgpack_object * value_map)"}, {"_type": "tag", "name": "addParameter_marker_config", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/t2parser/t2parser.c", "pattern": "/^T2ERROR addParameter_marker_config(Profile* profile, cJSON *jprofileParameter, int ThisProfilePa/", "language": "C", "typeref": "typename:T2ERROR", "kind": "function", "signature": "(Profile * profile,cJSON * jprofileParameter,int ThisProfileParameter_count)"}, {"_type": "tag", "name": "addRbusMethodParameter", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/t2parser/t2parser.c", "pattern": "/^static T2ERROR addRbusMethodParameter(Profile *profile, const char* name, const char* value) {$/", "file": true, "language": "C", "typeref": "typename:T2ERROR", "kind": "function", "signature": "(Profile * profile,const char * name,const char * value)"}, {"_type": "tag", "name": "addTriggerCondition", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/t2parser/t2parser.c", "pattern": "/^T2ERROR addTriggerCondition(Profile *profile, cJSON *jprofileTriggerCondition) {$/", "language": "C", "typeref": "typename:T2ERROR", "kind": "function", "signature": "(Profile * profile,cJSON * jprofileTriggerCondition)"}, {"_type": "tag", "name": "addhttpURIreqParameter", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/t2parser/t2parser.c", "pattern": "/^static T2ERROR addhttpURIreqParameter(Profile *profile, const char* Hname, const char* Href) {$/", "file": true, "language": "C", "typeref": "typename:T2ERROR", "kind": "function", "signature": "(Profile * profile,const char * Hname,const char * Href)"}, {"_type": "tag", "name": "encodingSet", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/t2parser/t2parser.c", "pattern": "/^T2ERROR encodingSet(Profile* profile, cJSON *jprofileEncodingType, cJSON *jprofileJSONReportForm/", "language": "C", "typeref": "typename:T2ERROR", "kind": "function", "signature": "(Profile * profile,cJSON * jprofileEncodingType,cJSON * jprofileJSONReportFormat,cJSON * jprofileJSONReportTimestamp)"}, {"_type": "tag", "name": "encodingSetMsgpack", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/t2parser/t2parser.c", "pattern": "/^T2ERROR encodingSetMsgpack (Profile *profile, msgpack_object* value_map){$/", "language": "C", "typeref": "typename:T2ERROR", "kind": "function", "signature": "(Profile * profile,msgpack_object * value_map)"}, {"_type": "tag", "name": "getProfileParameter", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/t2parser/t2parser.c", "pattern": "/^static char * getProfileParameter(Profile * profile, const char *ref) {$/", "file": true, "language": "C", "typeref": "typename:char *", "kind": "function", "signature": "(Profile * profile,const char * ref)"}, {"_type": "tag", "name": "msgpack_get_array_element", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/t2parser/t2parser.c", "pattern": "/^msgpack_object *msgpack_get_array_element(msgpack_object *obj, int index)$/", "language": "C", "typeref": "typename:msgpack_object *", "kind": "function", "signature": "(msgpack_object * obj,int index)"}, {"_type": "tag", "name": "msgpack_get_map_value", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/t2parser/t2parser.c", "pattern": "/^msgpack_object *msgpack_get_map_value(msgpack_object *obj, char *key)$/", "language": "C", "typeref": "typename:msgpack_object *", "kind": "function", "signature": "(msgpack_object * obj,char * key)"}, {"_type": "tag", "name": "msgpack_print", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/t2parser/t2parser.c", "pattern": "/^void msgpack_print(msgpack_object *obj, char *obj_name)$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(msgpack_object * obj,char * obj_name)"}, {"_type": "tag", "name": "msgpack_strcmp", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/t2parser/t2parser.c", "pattern": "/^int msgpack_strcmp(msgpack_object *obj, char *str)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(msgpack_object * obj,char * str)"}, {"_type": "tag", "name": "msgpack_strdup", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/t2parser/t2parser.c", "pattern": "/^char *msgpack_strdup(msgpack_object *obj)$/", "language": "C", "typeref": "typename:char *", "kind": "function", "signature": "(msgpack_object * obj)"}, {"_type": "tag", "name": "processConfiguration", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/t2parser/t2parser.c", "pattern": "/^T2ERROR processConfiguration(char** configData, char *profileName, char* profileHash, Profile **/", "language": "C", "typeref": "typename:T2ERROR", "kind": "function", "signature": "(char ** configData,char * profileName,char * profileHash,Profile ** localProfile)"}, {"_type": "tag", "name": "processMsgPackConfiguration", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/t2parser/t2parser.c", "pattern": "/^T2ERROR processMsgPackConfiguration(msgpack_object *profiles_array_map, Profile **profile_dp) {$/", "language": "C", "typeref": "typename:T2ERROR", "kind": "function", "signature": "(msgpack_object * profiles_array_map,Profile ** profile_dp)"}, {"_type": "tag", "name": "protocolSet", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/t2parser/t2parser.c", "pattern": "/^T2ERROR protocolSet (Profile *profile, cJSON *jprofileProtocol, cJSON *jprofileHTTPURL, cJSON *j/", "language": "C", "typeref": "typename:T2ERROR", "kind": "function", "signature": "(Profile * profile,cJSON * jprofileProtocol,cJSON * jprofileHTTPURL,cJSON * jprofileHTTPRequestURIParameter,int ThisprofileHTTPRequestURIParameter_count,cJSON * jprofileRBUSMethodName,cJSON * jprofileRBUSMethodParamArr,int rbusMethodParamArrCount)"}, {"_type": "tag", "name": "protocolSetMsgpack", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/t2parser/t2parser.c", "pattern": "/^T2ERROR protocolSetMsgpack(Profile *profile, msgpack_object* value_map, msgpack_object* Protocol/", "language": "C", "typeref": "typename:T2ERROR", "kind": "function", "signature": "(Profile * profile,msgpack_object * value_map,msgpack_object * Protocol_str)"}, {"_type": "tag", "name": "time_param_MsgPackReporting_Adjustments_valid_set", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/t2parser/t2parser.c", "pattern": "/^T2ERROR time_param_MsgPackReporting_Adjustments_valid_set(Profile *profile, msgpack_object* Repo/", "language": "C", "typeref": "typename:T2ERROR", "kind": "function", "signature": "(Profile * profile,msgpack_object * ReportingInterval_u64,msgpack_object * ActivationTimeout_u64,msgpack_object * TimeReference_str,msgpack_object * ReportOnUpdate_boolean,msgpack_object * FirstReportInterval_u64,msgpack_object * MaxUploadLatency_u64)"}, {"_type": "tag", "name": "time_param_Reporting_Adjustments_valid_set", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/t2parser/t2parser.c", "pattern": "/^void time_param_Reporting_Adjustments_valid_set(Profile *profile, cJSON *jprofileReportingInterv/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(Profile * profile,cJSON * jprofileReportingInterval,cJSON * jprofileActivationTimeout,cJSON * jprofileTimeReference,cJSON * jprofileReportOnUpdate,cJSON * jprofilefirstReportingInterval,cJSON * jprofilemaxUploadLatency,cJSON * jprofileReportingAdjustments)"}, {"_type": "tag", "name": "verifyMsgPckTriggerCondition", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/t2parser/t2parser.c", "pattern": "/^T2ERROR verifyMsgPckTriggerCondition(msgpack_object *value_map) {$/", "language": "C", "typeref": "typename:T2ERROR", "kind": "function", "signature": "(msgpack_object * value_map)"}, {"_type": "tag", "name": "verifyTriggerCondition", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/t2parser/t2parser.c", "pattern": "/^T2ERROR verifyTriggerCondition(cJSON *jprofileTriggerCondition) {$/", "language": "C", "typeref": "typename:T2ERROR", "kind": "function", "signature": "(cJSON * jprofileTriggerCondition)"}], "hash": "620d47dbc50506e2436b2fa4357fe627", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "rdk/components/generic/telemetry/source/t2parser/t2parser.c", "fields": [{"name": "const int MAX_STATIC_PROP_VAL_LEN", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"25785": ""}]}