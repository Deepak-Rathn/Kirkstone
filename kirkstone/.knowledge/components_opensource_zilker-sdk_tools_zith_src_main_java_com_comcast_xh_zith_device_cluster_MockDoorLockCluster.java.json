{"is_source_file": true, "format": "Java", "description": "This Java source file defines the MockDoorLockCluster class, which simulates a door lock device cluster with attributes and command handling for locking, unlocking, and managing PIN codes. It extends a base MockCluster and implements Tamperable, providing methods for lock state management, tamper detection, PIN code handling, and event generation.", "external_files": ["com.comcast.xh.zith.device.capability.Tamperable", "com.comcast.xh.zith.mockzigbeecore.event.AlarmClusterEvent", "com.comcast.xh.zith.mockzigbeecore.event.AttributeReportEvent", "com.comcast.xh.zith.mockzigbeecore.event.ClearAllPinCodesResponseEvent", "com.comcast.xh.zith.mockzigbeecore.event.OperationEventNotificationEvent", "com.comcast.xh.zith.mockzigbeecore.event.SetPinCodeResponseEvent", "org.slf4j.Logger", "org.slf4j.LoggerFactory"], "external_methods": ["addAttribute", "getAttributeData", "setAttributeData", "send"], "published": ["MockDoorLockCluster", "MockDoorLockCluster.PinEntry", "MockDoorLockCluster.setLocked", "MockDoorLockCluster.setTampered", "MockDoorLockCluster.setInvalidCodeEntryLimit", "MockDoorLockCluster.setLockBoltJammed", "MockDoorLockCluster.addPin", "MockDoorLockCluster.getPinCount", "MockDoorLockCluster.getPins", "MockDoorLockCluster.getAutoRelockTime", "MockDoorLockCluster.setAutoRelockTime"], "classes": [{"name": "MockDoorLockCluster", "description": "A mock class simulating a door lock device cluster with capabilities to lock/unlock, manage PIN codes, handle tampering, and generate related events."}, {"name": "MockDoorLockCluster.PinEntry", "description": "A data class representing a PIN entry with user ID, status, type, and PIN string."}], "methods": [{"name": "handleCommand", "description": "Processes incoming commands based on command ID, handling lock, unlock, PIN code setting, and clearing."}, {"name": "isLocked", "description": "Returns whether the lock is currently engaged."}, {"name": "setLocked", "description": "Sets the lock state and triggers lock/unlock event notification."}, {"name": "isTampered", "description": "Returns whether the device has been tampered with."}, {"name": "setTampered", "description": "Sets the tampered state and sends an alarm event if tampered."}, {"name": "isInvalidCodeEntryLimit", "description": "Checks if invalid code entry limit has been reached."}, {"name": "setInvalidCodeEntryLimit", "description": "Sets the invalid code entry limit state and triggers corresponding alarm."}, {"name": "setLockBoltJammed", "description": "Sets the bolt jammed status and sends an alarm event."}, {"name": "isLockBoltJammed", "description": "Returns whether the lock bolt is jammed."}, {"name": "addPin", "description": "Adds a PIN entry for a user."}, {"name": "getPinCount", "description": "Returns the number of PIN entries."}, {"name": "getPins", "description": "Returns a collection of all PIN entries."}, {"name": "getAutoRelockTime", "description": "Retrieves the auto relock time in seconds."}, {"name": "setAutoRelockTime", "description": "Sets the auto relock time and reports the change via event."}], "calls": ["new SetPinCodeResponseEvent(this, status).send()", "new ClearAllPinCodesResponseEvent(this, (byte)0).send()", "new OperationEventNotificationEvent(this, isLocked).send()", "new AlarmClusterEvent(this, alarmCode).send()", "new AttributeReportEvent(...).send()"], "search-terms": ["MockDoorLockCluster", "PIN management", "lock/unlock commands", "tamper detection", "auto relock", "attribute handling", "alarming", "setPinCode"], "state": 2, "file_id": 347, "knowledge_revision": 13516, "git_revision": "", "hash": "c56c325d50b7ad2ef268b865c32719eb", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "components/opensource/zilker-sdk/tools/zith/src/main/java/com/comcast/xh/zith/device/cluster/MockDoorLockCluster.java", "revision_history": [{"13516": ""}]}