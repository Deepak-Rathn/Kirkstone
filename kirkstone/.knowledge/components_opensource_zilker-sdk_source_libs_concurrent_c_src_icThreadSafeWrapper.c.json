{"is_source_file": true, "format": "C", "description": "This file implements a thread-safe wrapper around a generic item, providing mechanisms for concurrent reads, deferred modifications, auto-release, and future signaling for modifications. It manages internal references, applies pending modifications, and ensures thread safety using mutexes and condition variables.", "external_files": ["icTypes/icLinkedList.h", "icConcurrent/icThreadSafeWrapper.h", "icConcurrent/timedWait.h"], "external_methods": ["linkedListCreate", "linkedListDestroy", "linkedListAppend", "linkedListIteratorCreate", "linkedListIteratorHasNext", "linkedListIteratorGetNext", "linkedListIteratorDestroy"], "published": ["threadSafeWrapperAssignItem", "threadSafeWrapperAssignItemIfReleased", "threadSafeWrapperReleaseItem", "threadSafeWrapperConditionalReleaseItem", "threadSafeWrapperReadItem", "threadSafeWrapperEnqueueModification", "threadSafeWrapperModifyItem", "threadSafeWrapperItemDeref", "threadSafeWrapperFutureInit", "threadSafeWrapperFutureDestroy", "threadSafeWrapperFutureAwait", "threadSafeWrapperFutureIsComplete", "threadSafeWrapperFutureIsApplied"], "classes": [{"name": "icThreadSafeWrapperItemRef_", "description": "Internal structure representing a reference to a wrapped item, including reader count and pending modifications."}], "methods": [{"name": "icThreadSafeWrapperItemRef * createRef(void * itemToWrap)", "description": "Creates a new reference object wrapping the provided item.", "scope": "", "scopeKind": ""}, {"name": "void destroyRef(icThreadSafeWrapperItemRef * ref,ThreadSafeWrapperDestroyItemFunc destroyFunc)", "description": "Destroys a reference object, freeing its resources and applying the destroy function if provided.", "scope": "", "scopeKind": ""}, {"name": "icThreadSafeWrapperItemRef * getRef(icThreadSafeWrapper * wrapper)", "description": "Retrieves the current reference, applying any pending modifications if possible. Assumes caller holds mutex.", "scope": "", "scopeKind": ""}, {"name": "void applyModifications(icThreadSafeWrapperItemRef * ref)", "description": "Applies all pending modifications to the wrapped item within a reference.", "scope": "", "scopeKind": ""}, {"name": "void destroyPendingModificationFunc(void * item)", "description": "Destroys a pending modification info structure, marking its future as complete with failure.", "scope": "", "scopeKind": ""}, {"name": "bool alwaysReleaseFunc(void * item)", "description": "A helper function that always returns true, indicating an item should always be released.", "scope": "", "scopeKind": ""}, {"name": "void freeModificationContext(void * context,ThreadSafeWrapperDestroyContextFunc destroyContextFunc)", "description": "Cleans up the modification context using the provided destroy function or by freeing.", "scope": "", "scopeKind": ""}, {"name": "void postModificationCheckRelease(icThreadSafeWrapper * wrapper,icThreadSafeWrapperItemRef * ref)", "description": "Checks whether to auto-release the ref after modifications based on the autoReleaseCheckFunc.", "scope": "", "scopeKind": ""}, {"name": "void setFutureComplete(PendingModificationInfo * pendingModificationInfo,bool applied)", "description": "Marks a future as complete and applied or not based on the passed boolean.", "scope": "", "scopeKind": ""}, {"name": "bool threadSafeWrapperAssignItem(icThreadSafeWrapper * wrapper,void * itemToWrap)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "bool threadSafeWrapperAssignItemIfReleased(icThreadSafeWrapper * wrapper,ThreadSafeWrapperGetItemFunc getItemFunc)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "bool threadSafeWrapperConditionalReleaseItem(icThreadSafeWrapper * wrapper,ThreadSafeWrapperReleaseCheckFunc releaseCheckFunc)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "void threadSafeWrapperDoNotFreeContextFunc(void * context)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "bool threadSafeWrapperEnqueueModification(icThreadSafeWrapper * wrapper,ThreadSafeWrapperModificationFunc modificationFunc,void * context,ThreadSafeWrapperDestroyContextFunc destroyContextFunc,icThreadSafeWrapperFuture * future)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "bool threadSafeWrapperFutureAwait(icThreadSafeWrapperFuture * future,uint32_t timeoutSecs)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "void threadSafeWrapperFutureDestroy(icThreadSafeWrapperFuture * future)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "void threadSafeWrapperFutureInit(icThreadSafeWrapperFuture * future)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "bool threadSafeWrapperFutureIsApplied(icThreadSafeWrapperFuture * future)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "bool threadSafeWrapperFutureIsComplete(icThreadSafeWrapperFuture * future)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "void * threadSafeWrapperItemDeref(icThreadSafeWrapperItemRef * ref)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "bool threadSafeWrapperModifyItem(icThreadSafeWrapper * wrapper,ThreadSafeWrapperModificationFunc modificationFunc,void * context)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "bool threadSafeWrapperReadItem(icThreadSafeWrapper * wrapper,ThreadSafeWrapperReadFunc readFunc,void * context)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "void threadSafeWrapperReleaseItem(icThreadSafeWrapper * wrapper)", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["createRef", "destroyRef", "getRef", "applyModifications", "destroyPendingModificationFunc", "linkedListCreate", "linkedListDestroy", "linkedListAppend", "linkedListIteratorCreate", "linkedListIteratorHasNext", "linkedListIteratorGetNext", "linkedListIteratorDestroy", "initTimedWaitCond", "incrementalCondTimedWait"], "search-terms": ["thread safe wrapper", "concurrent modifications", "pending modifications", "auto release", "future signaling", "reference counting", "read-write lock", "multithreaded access", "icLinkedList", "mutex locking"], "state": 2, "file_id": 889, "knowledge_revision": 14047, "git_revision": "", "ctags": [{"_type": "tag", "name": "PendingModificationInfo", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/src/icThreadSafeWrapper.c", "pattern": "/^} PendingModificationInfo;$/", "file": true, "language": "C", "typeref": "struct:__anon9894b3390108", "kind": "typedef"}, {"_type": "tag", "name": "__anon9894b3390108", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/src/icThreadSafeWrapper.c", "pattern": "/^{$/", "file": true, "language": "C", "kind": "struct"}, {"_type": "tag", "name": "alwaysReleaseFunc", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/src/icThreadSafeWrapper.c", "pattern": "/^static bool alwaysReleaseFunc(void *item)$/", "file": true, "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(void * item)"}, {"_type": "tag", "name": "applyModifications", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/src/icThreadSafeWrapper.c", "pattern": "/^static void applyModifications(icThreadSafeWrapperItemRef *ref)$/", "file": true, "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(icThreadSafeWrapperItemRef * ref)"}, {"_type": "tag", "name": "context", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/src/icThreadSafeWrapper.c", "pattern": "/^    void *context;$/", "file": true, "language": "C", "typeref": "typename:void *", "kind": "member", "scope": "__anon9894b3390108", "scopeKind": "struct"}, {"_type": "tag", "name": "createRef", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/src/icThreadSafeWrapper.c", "pattern": "/^static icThreadSafeWrapperItemRef *createRef(void *itemToWrap)$/", "file": true, "language": "C", "typeref": "typename:icThreadSafeWrapperItemRef *", "kind": "function", "signature": "(void * itemToWrap)"}, {"_type": "tag", "name": "destroyContextFunc", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/src/icThreadSafeWrapper.c", "pattern": "/^    ThreadSafeWrapperDestroyContextFunc destroyContextFunc;$/", "file": true, "language": "C", "typeref": "typename:ThreadSafeWrapperDestroyContextFunc", "kind": "member", "scope": "__anon9894b3390108", "scopeKind": "struct"}, {"_type": "tag", "name": "destroyPendingModificationFunc", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/src/icThreadSafeWrapper.c", "pattern": "/^static void destroyPendingModificationFunc(void *item)$/", "file": true, "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(void * item)"}, {"_type": "tag", "name": "destroyRef", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/src/icThreadSafeWrapper.c", "pattern": "/^static void destroyRef(icThreadSafeWrapperItemRef *ref, ThreadSafeWrapperDestroyItemFunc destroy/", "file": true, "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(icThreadSafeWrapperItemRef * ref,ThreadSafeWrapperDestroyItemFunc destroyFunc)"}, {"_type": "tag", "name": "freeModificationContext", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/src/icThreadSafeWrapper.c", "pattern": "/^static void freeModificationContext(void *context, ThreadSafeWrapperDestroyContextFunc destroyCo/", "file": true, "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(void * context,ThreadSafeWrapperDestroyContextFunc destroyContextFunc)"}, {"_type": "tag", "name": "future", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/src/icThreadSafeWrapper.c", "pattern": "/^    icThreadSafeWrapperFuture *future;$/", "file": true, "language": "C", "typeref": "typename:icThreadSafeWrapperFuture *", "kind": "member", "scope": "__anon9894b3390108", "scopeKind": "struct"}, {"_type": "tag", "name": "getRef", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/src/icThreadSafeWrapper.c", "pattern": "/^static icThreadSafeWrapperItemRef *getRef(icThreadSafeWrapper *wrapper)$/", "file": true, "language": "C", "typeref": "typename:icThreadSafeWrapperItemRef *", "kind": "function", "signature": "(icThreadSafeWrapper * wrapper)"}, {"_type": "tag", "name": "icThreadSafeWrapperItemRef_", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/src/icThreadSafeWrapper.c", "pattern": "/^struct icThreadSafeWrapperItemRef_$/", "file": true, "language": "C", "kind": "struct"}, {"_type": "tag", "name": "modificationFunc", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/src/icThreadSafeWrapper.c", "pattern": "/^    ThreadSafeWrapperModificationFunc modificationFunc;$/", "file": true, "language": "C", "typeref": "typename:ThreadSafeWrapperModificationFunc", "kind": "member", "scope": "__anon9894b3390108", "scopeKind": "struct"}, {"_type": "tag", "name": "pendingModifications", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/src/icThreadSafeWrapper.c", "pattern": "/^    icLinkedList *pendingModifications;$/", "file": true, "language": "C", "typeref": "typename:icLinkedList *", "kind": "member", "scope": "icThreadSafeWrapperItemRef_", "scopeKind": "struct"}, {"_type": "tag", "name": "postModificationCheckRelease", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/src/icThreadSafeWrapper.c", "pattern": "/^static void postModificationCheckRelease(icThreadSafeWrapper *wrapper, icThreadSafeWrapperItemRe/", "file": true, "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(icThreadSafeWrapper * wrapper,icThreadSafeWrapperItemRef * ref)"}, {"_type": "tag", "name": "readerCount", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/src/icThreadSafeWrapper.c", "pattern": "/^    uint16_t readerCount;$/", "file": true, "language": "C", "typeref": "typename:uint16_t", "kind": "member", "scope": "icThreadSafeWrapperItemRef_", "scopeKind": "struct"}, {"_type": "tag", "name": "setFutureComplete", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/src/icThreadSafeWrapper.c", "pattern": "/^static void setFutureComplete(PendingModificationInfo *pendingModificationInfo, bool applied)$/", "file": true, "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(PendingModificationInfo * pendingModificationInfo,bool applied)"}, {"_type": "tag", "name": "threadSafeWrapperAssignItem", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/src/icThreadSafeWrapper.c", "pattern": "/^bool threadSafeWrapperAssignItem(icThreadSafeWrapper *wrapper, void *itemToWrap)$/", "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(icThreadSafeWrapper * wrapper,void * itemToWrap)"}, {"_type": "tag", "name": "threadSafeWrapperAssignItemIfReleased", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/src/icThreadSafeWrapper.c", "pattern": "/^bool threadSafeWrapperAssignItemIfReleased(icThreadSafeWrapper *wrapper, ThreadSafeWrapperGetIte/", "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(icThreadSafeWrapper * wrapper,ThreadSafeWrapperGetItemFunc getItemFunc)"}, {"_type": "tag", "name": "threadSafeWrapperConditionalReleaseItem", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/src/icThreadSafeWrapper.c", "pattern": "/^bool threadSafeWrapperConditionalReleaseItem(icThreadSafeWrapper *wrapper, ThreadSafeWrapperRele/", "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(icThreadSafeWrapper * wrapper,ThreadSafeWrapperReleaseCheckFunc releaseCheckFunc)"}, {"_type": "tag", "name": "threadSafeWrapperDoNotFreeContextFunc", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/src/icThreadSafeWrapper.c", "pattern": "/^void threadSafeWrapperDoNotFreeContextFunc(void *context)$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(void * context)"}, {"_type": "tag", "name": "threadSafeWrapperEnqueueModification", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/src/icThreadSafeWrapper.c", "pattern": "/^threadSafeWrapperEnqueueModification(icThreadSafeWrapper *wrapper, ThreadSafeWrapperModification/", "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(icThreadSafeWrapper * wrapper,ThreadSafeWrapperModificationFunc modificationFunc,void * context,ThreadSafeWrapperDestroyContextFunc destroyContextFunc,icThreadSafeWrapperFuture * future)"}, {"_type": "tag", "name": "threadSafeWrapperFutureAwait", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/src/icThreadSafeWrapper.c", "pattern": "/^bool threadSafeWrapperFutureAwait(icThreadSafeWrapperFuture *future, uint32_t timeoutSecs)$/", "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(icThreadSafeWrapperFuture * future,uint32_t timeoutSecs)"}, {"_type": "tag", "name": "threadSafeWrapperFutureDestroy", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/src/icThreadSafeWrapper.c", "pattern": "/^void threadSafeWrapperFutureDestroy(icThreadSafeWrapperFuture *future)$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(icThreadSafeWrapperFuture * future)"}, {"_type": "tag", "name": "threadSafeWrapperFutureInit", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/src/icThreadSafeWrapper.c", "pattern": "/^void threadSafeWrapperFutureInit(icThreadSafeWrapperFuture *future)$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(icThreadSafeWrapperFuture * future)"}, {"_type": "tag", "name": "threadSafeWrapperFutureIsApplied", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/src/icThreadSafeWrapper.c", "pattern": "/^bool threadSafeWrapperFutureIsApplied(icThreadSafeWrapperFuture *future)$/", "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(icThreadSafeWrapperFuture * future)"}, {"_type": "tag", "name": "threadSafeWrapperFutureIsComplete", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/src/icThreadSafeWrapper.c", "pattern": "/^bool threadSafeWrapperFutureIsComplete(icThreadSafeWrapperFuture *future)$/", "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(icThreadSafeWrapperFuture * future)"}, {"_type": "tag", "name": "threadSafeWrapperItemDeref", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/src/icThreadSafeWrapper.c", "pattern": "/^void *threadSafeWrapperItemDeref(icThreadSafeWrapperItemRef *ref)$/", "language": "C", "typeref": "typename:void *", "kind": "function", "signature": "(icThreadSafeWrapperItemRef * ref)"}, {"_type": "tag", "name": "threadSafeWrapperModifyItem", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/src/icThreadSafeWrapper.c", "pattern": "/^threadSafeWrapperModifyItem(icThreadSafeWrapper *wrapper, ThreadSafeWrapperModificationFunc modi/", "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(icThreadSafeWrapper * wrapper,ThreadSafeWrapperModificationFunc modificationFunc,void * context)"}, {"_type": "tag", "name": "threadSafeWrapperReadItem", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/src/icThreadSafeWrapper.c", "pattern": "/^bool threadSafeWrapperReadItem(icThreadSafeWrapper *wrapper, ThreadSafeWrapperReadFunc readFunc,/", "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(icThreadSafeWrapper * wrapper,ThreadSafeWrapperReadFunc readFunc,void * context)"}, {"_type": "tag", "name": "threadSafeWrapperReleaseItem", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/src/icThreadSafeWrapper.c", "pattern": "/^void threadSafeWrapperReleaseItem(icThreadSafeWrapper *wrapper)$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(icThreadSafeWrapper * wrapper)"}, {"_type": "tag", "name": "wrappedItem", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/src/icThreadSafeWrapper.c", "pattern": "/^    void *wrappedItem;$/", "file": true, "language": "C", "typeref": "typename:void *", "kind": "member", "scope": "icThreadSafeWrapperItemRef_", "scopeKind": "struct"}], "hash": "35b902923e063279eb9980e92a90a86e", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "components/opensource/zilker-sdk/source/libs/concurrent/c/src/icThreadSafeWrapper.c", "fields": [{"name": "void * context", "scope": "__anon9894b3390108", "scopeKind": "struct", "description": "unavailable"}, {"name": "ThreadSafeWrapperDestroyContextFunc destroyContextFunc", "scope": "__anon9894b3390108", "scopeKind": "struct", "description": "unavailable"}, {"name": "icThreadSafeWrapperFuture * future", "scope": "__anon9894b3390108", "scopeKind": "struct", "description": "unavailable"}, {"name": "ThreadSafeWrapperModificationFunc modificationFunc", "scope": "__anon9894b3390108", "scopeKind": "struct", "description": "unavailable"}, {"name": "icLinkedList * pendingModifications", "scope": "icThreadSafeWrapperItemRef_", "scopeKind": "struct", "description": "unavailable"}, {"name": "uint16_t readerCount", "scope": "icThreadSafeWrapperItemRef_", "scopeKind": "struct", "description": "unavailable"}, {"name": "void * wrappedItem", "scope": "icThreadSafeWrapperItemRef_", "scopeKind": "struct", "description": "unavailable"}], "revision_history": [{"14047": ""}]}