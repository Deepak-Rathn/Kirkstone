{"is_source_file": true, "format": "Python", "description": "This script performs a system check on a device after reboot to determine if any services have failed. It uses the 'tdklib' library to communicate with the device, reboots it, waits for it to come back online, then runs a system command to check for failed services, and reports the results.", "external_files": ["tdklib"], "external_methods": ["tdklib.TDKScriptingLibrary", "tdklib.TDKScriptingLibrary.configureTestCase", "tdklib.TDKScriptingLibrary.getLoadModuleResult", "tdklib.TDKScriptingLibrary.setLoadModuleStatus", "tdklib.TDKScriptingLibrary.createTestStep", "tdklib.TDKScriptingLibrary.executeTestCase", "tdklib.TDKScriptingLibrary.getResult", "tdklib.TDKScriptingLibrary.getResultDetails", "tdklib.TDKScriptingLibrary.setResultStatus", "tdklib.TDKScriptingLibrary.unloadModule"], "published": ["TS_SANITY_CheckForAnyFailedServices"], "classes": [{"name": "TDKTestObj", "description": "Object used to interact with the test component for executing commands and retrieving results."}], "methods": [{"name": "configureTestCase", "description": "Configures the test case with device IP, port, and test name."}, {"name": "getLoadModuleResult", "description": "Checks if the required module loads successfully on the device."}, {"name": "setLoadModuleStatus", "description": "Sets the status of module load operation."}, {"name": "createTestStep", "description": "Creates a test step to execute a specific command."}, {"name": "executeTestCase", "description": "Executes the test step with the specified expected result."}, {"name": "getResult", "description": "Retrieves the outcome of the executed test step."}, {"name": "getResultDetails", "description": "Fetches detailed output from the executed command."}, {"name": "setResultStatus", "description": "Sets whether the test step passed or failed based on results."}, {"name": "unloadModule", "description": "Unloads the module after testing is complete."}], "calls": ["obj.configureTestCase", "obj.getLoadModuleResult", "obj.setLoadModuleStatus", "obj.initiateReboot", "tdkTestObj.addParameter", "tdkTestObj.executeTestCase", "tdkTestObj.getResult", "tdkTestObj.getResultDetails", "tdkTestObj.setResultStatus", "obj.unloadModule"], "search-terms": ["TS_SANITY_CheckForAnyFailedServices", "systemctl -a --state=failed", "reboot", "failed services", "sysutil", "ExecuteCmd"], "state": 2, "file_id": 4891, "knowledge_revision": 18014, "git_revision": "", "ctags": [{"_type": "tag", "name": "actualresult", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/testscripts/RDKB/component/sysutil/TS_SANITY_CheckForAnyFailedServices.py", "pattern": "/^    actualresult = tdkTestObj.getResult();$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "details", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/testscripts/RDKB/component/sysutil/TS_SANITY_CheckForAnyFailedServices.py", "pattern": "/^    details = tdkTestObj.getResultDetails().strip().replace(\"\\\\\\\\n\",\"\");$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "expectedresult", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/testscripts/RDKB/component/sysutil/TS_SANITY_CheckForAnyFailedServices.py", "pattern": "/^    expectedresult=\"SUCCESS\";$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "ip", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/testscripts/RDKB/component/sysutil/TS_SANITY_CheckForAnyFailedServices.py", "pattern": "/^ip = <ipaddress>$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "loadmodulestatus", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/testscripts/RDKB/component/sysutil/TS_SANITY_CheckForAnyFailedServices.py", "pattern": "/^loadmodulestatus=obj.getLoadModuleResult();$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "obj", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/testscripts/RDKB/component/sysutil/TS_SANITY_CheckForAnyFailedServices.py", "pattern": "/^obj = tdklib.TDKScriptingLibrary(\"sysutil\",\"1\");$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "port", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/testscripts/RDKB/component/sysutil/TS_SANITY_CheckForAnyFailedServices.py", "pattern": "/^port = <port>$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "query", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/testscripts/RDKB/component/sysutil/TS_SANITY_CheckForAnyFailedServices.py", "pattern": "/^    query=\"systemctl -a --state=failed | grep -rin \\\\\"failed\\\\\"\";$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "tdkTestObj", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/testscripts/RDKB/component/sysutil/TS_SANITY_CheckForAnyFailedServices.py", "pattern": "/^    tdkTestObj = obj.createTestStep('ExecuteCmd');$/", "language": "Python", "kind": "variable"}], "hash": "e306e328675c85990a9642f98405bc28", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "rdkb/tools/tdkb/testscripts/RDKB/component/sysutil/TS_SANITY_CheckForAnyFailedServices.py", "fields": [{"name": "actualresult = tdkTestObj.getResult();", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "details = tdkTestObj.getResultDetails().strip().replace(\"\\\\\\\\n\",\"\");", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "expectedresult=\"SUCCESS\";", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "ip = <ipaddress>", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "loadmodulestatus=obj.getLoadModuleResult();", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "obj = tdklib.TDKScriptingLibrary(\"sysutil\",\"1\");", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "port = <port>", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "query=\"systemctl -a --state=failed | grep -rin \\\\\"failed\\\\\"\";", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "tdkTestObj = obj.createTestStep('ExecuteCmd');", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"18014": ""}]}