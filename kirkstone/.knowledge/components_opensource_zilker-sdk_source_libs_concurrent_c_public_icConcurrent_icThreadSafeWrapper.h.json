{"is_source_file": true, "format": "C header file", "description": "This file defines a thread-safe wrapper for objects in C, including data structures and function prototypes for managing concurrent access, modification, and lifecycle of wrapped objects.", "external_files": ["<pthread.h>", "<stdbool.h>", "<stdint.h>"], "external_methods": [], "published": ["threadSafeWrapperAssignItem", "threadSafeWrapperAssignItemIfReleased", "threadSafeWrapperReleaseItem", "threadSafeWrapperConditionalReleaseItem", "threadSafeWrapperReadItem", "threadSafeWrapperEnqueueModification", "threadSafeWrapperModifyItem", "threadSafeWrapperDoNotFreeContextFunc", "threadSafeWrapperFutureInit", "threadSafeWrapperFutureDestroy", "threadSafeWrapperFutureAwait", "threadSafeWrapperFutureIsComplete", "threadSafeWrapperFutureIsApplied"], "classes": [{"name": "icThreadSafeWrapper", "description": "A structure representing a thread-safe wrapper for objects, containing private data for synchronization and management."}, {"name": "icThreadSafeWrapperFuture", "description": "A structure representing a future token for enqueued modifications, used for synchronization."}], "methods": [{"name": "threadSafeWrapperAssignItem", "description": "Manually assign an item to the wrapper."}, {"name": "threadSafeWrapperAssignItemIfReleased", "description": "Atomically assign an item if the current item has been released."}, {"name": "threadSafeWrapperReleaseItem", "description": "Release the currently wrapped item."}, {"name": "threadSafeWrapperConditionalReleaseItem", "description": "Release the wrapped item based on a custom condition, atomically."}, {"name": "threadSafeWrapperReadItem", "description": "Perform a thread-safe read operation on the wrapped item."}, {"name": "threadSafeWrapperEnqueueModification", "description": "Enqueue a modification transaction to be applied when no active readers are present."}, {"name": "threadSafeWrapperModifyItem", "description": "Perform a blocking modification on the wrapped item, waiting for no active readers."}, {"name": "threadSafeWrapperDoNotFreeContextFunc", "description": "Helper function for contexts that require no cleanup."}, {"name": "threadSafeWrapperFutureInit", "description": "Initialize a future object."}, {"name": "threadSafeWrapperFutureDestroy", "description": "Destroy a future object (not for incompletely completed futures)."}, {"name": "threadSafeWrapperFutureAwait", "description": "Wait for a future to complete, with optional timeout."}, {"name": "threadSafeWrapperFutureIsComplete", "description": "Check if a future has completed."}, {"name": "threadSafeWrapperFutureIsApplied", "description": "Check if a future's modification has been applied."}], "calls": ["pthread_mutex_t", "pthread_mutex_init", "pthread_cond_t", "pthread_cond_wait", "pthread_cond_signal", "pthread_mutex_lock", "pthread_mutex_unlock"], "search-terms": ["thread-safe wrapper", "concurrent object management", "IC thread safety", "synchronization in C", "enqueued modifications", "future synchronization", "atomic release", "threaded object access"], "state": 2, "file_id": 892, "knowledge_revision": 26282, "git_revision": "", "ctags": [{"_type": "tag", "name": "THREAD_SAFE_WRAPPER_FUTURE_INIT", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/public/icConcurrent/icThreadSafeWrapper.h", "pattern": "/^#define THREAD_SAFE_WRAPPER_FUTURE_INIT /", "language": "C++", "kind": "macro"}, {"_type": "tag", "name": "THREAD_SAFE_WRAPPER_INIT", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/public/icConcurrent/icThreadSafeWrapper.h", "pattern": "/^#define THREAD_SAFE_WRAPPER_INIT(/", "language": "C++", "kind": "macro", "signature": "(autoAssignFuncArg,autoReleaseCheckFuncArg,destroyItemFuncArg)"}, {"_type": "tag", "name": "ThreadSafeWrapperDestroyContextFunc", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/public/icConcurrent/icThreadSafeWrapper.h", "pattern": "/^typedef void (*ThreadSafeWrapperDestroyContextFunc)(void *context);$/", "language": "C++", "typeref": "typename:void (*)(void * context)", "kind": "typedef"}, {"_type": "tag", "name": "ThreadSafeWrapperDestroyItemFunc", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/public/icConcurrent/icThreadSafeWrapper.h", "pattern": "/^typedef void (*ThreadSafeWrapperDestroyItemFunc)(void *item);$/", "language": "C++", "typeref": "typename:void (*)(void * item)", "kind": "typedef"}, {"_type": "tag", "name": "ThreadSafeWrapperGetItemFunc", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/public/icConcurrent/icThreadSafeWrapper.h", "pattern": "/^typedef void *(*ThreadSafeWrapperGetItemFunc)(void);$/", "language": "C++", "typeref": "typename:void * (*)(void)", "kind": "typedef"}, {"_type": "tag", "name": "ThreadSafeWrapperModificationFunc", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/public/icConcurrent/icThreadSafeWrapper.h", "pattern": "/^typedef void (*ThreadSafeWrapperModificationFunc)(void *item, void *context);$/", "language": "C++", "typeref": "typename:void (*)(void * item,void * context)", "kind": "typedef"}, {"_type": "tag", "name": "ThreadSafeWrapperReadFunc", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/public/icConcurrent/icThreadSafeWrapper.h", "pattern": "/^typedef void (*ThreadSafeWrapperReadFunc)(const void *item, const void *context);$/", "language": "C++", "typeref": "typename:void (*)(const void * item,const void * context)", "kind": "typedef"}, {"_type": "tag", "name": "ThreadSafeWrapperReleaseCheckFunc", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/public/icConcurrent/icThreadSafeWrapper.h", "pattern": "/^typedef bool (*ThreadSafeWrapperReleaseCheckFunc)(void *item);$/", "language": "C++", "typeref": "typename:bool (*)(void * item)", "kind": "typedef"}, {"_type": "tag", "name": "ZILKER_ICTHREADSAFEWRAPPER_H", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/public/icConcurrent/icThreadSafeWrapper.h", "pattern": "/^#define ZILKER_ICTHREADSAFEWRAPPER_H$/", "language": "C++", "kind": "macro"}, {"_type": "tag", "name": "__anon52c8f5730108", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/public/icConcurrent/icThreadSafeWrapper.h", "pattern": "/^{$/", "language": "C++", "kind": "struct"}, {"_type": "tag", "name": "__anon52c8f5730208", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/public/icConcurrent/icThreadSafeWrapper.h", "pattern": "/^    {$/", "language": "C++", "kind": "struct", "scope": "__anon52c8f5730108", "scopeKind": "struct"}, {"_type": "tag", "name": "__anon52c8f5730308", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/public/icConcurrent/icThreadSafeWrapper.h", "pattern": "/^{$/", "language": "C++", "kind": "struct"}, {"_type": "tag", "name": "__anon52c8f5730408", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/public/icConcurrent/icThreadSafeWrapper.h", "pattern": "/^    {$/", "language": "C++", "kind": "struct", "scope": "__anon52c8f5730308", "scopeKind": "struct"}, {"_type": "tag", "name": "applied", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/public/icConcurrent/icThreadSafeWrapper.h", "pattern": "/^        bool applied;$/", "language": "C++", "typeref": "typename:bool", "kind": "member", "scope": "__anon52c8f5730308::__anon52c8f5730408", "scopeKind": "struct"}, {"_type": "tag", "name": "autoAssignFunc", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/public/icConcurrent/icThreadSafeWrapper.h", "pattern": "/^        ThreadSafeWrapperGetItemFunc autoAssignFunc;$/", "language": "C++", "typeref": "typename:ThreadSafeWrapperGetItemFunc", "kind": "member", "scope": "__anon52c8f5730108::__anon52c8f5730208", "scopeKind": "struct"}, {"_type": "tag", "name": "autoReleaseCheckFunc", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/public/icConcurrent/icThreadSafeWrapper.h", "pattern": "/^        ThreadSafeWrapperReleaseCheckFunc autoReleaseCheckFunc;$/", "language": "C++", "typeref": "typename:ThreadSafeWrapperReleaseCheckFunc", "kind": "member", "scope": "__anon52c8f5730108::__anon52c8f5730208", "scopeKind": "struct"}, {"_type": "tag", "name": "complete", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/public/icConcurrent/icThreadSafeWrapper.h", "pattern": "/^        bool complete;$/", "language": "C++", "typeref": "typename:bool", "kind": "member", "scope": "__anon52c8f5730308::__anon52c8f5730408", "scopeKind": "struct"}, {"_type": "tag", "name": "cond", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/public/icConcurrent/icThreadSafeWrapper.h", "pattern": "/^        pthread_cond_t cond;$/", "language": "C++", "typeref": "typename:pthread_cond_t", "kind": "member", "scope": "__anon52c8f5730308::__anon52c8f5730408", "scopeKind": "struct"}, {"_type": "tag", "name": "condInitialized", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/public/icConcurrent/icThreadSafeWrapper.h", "pattern": "/^        bool condInitialized;$/", "language": "C++", "typeref": "typename:bool", "kind": "member", "scope": "__anon52c8f5730308::__anon52c8f5730408", "scopeKind": "struct"}, {"_type": "tag", "name": "destroyItemFunc", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/public/icConcurrent/icThreadSafeWrapper.h", "pattern": "/^        ThreadSafeWrapperDestroyItemFunc destroyItemFunc;$/", "language": "C++", "typeref": "typename:ThreadSafeWrapperDestroyItemFunc", "kind": "member", "scope": "__anon52c8f5730108::__anon52c8f5730208", "scopeKind": "struct"}, {"_type": "tag", "name": "icThreadSafeWrapper", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/public/icConcurrent/icThreadSafeWrapper.h", "pattern": "/^} icThreadSafeWrapper;$/", "language": "C++", "typeref": "struct:__anon52c8f5730108", "kind": "typedef"}, {"_type": "tag", "name": "icThreadSafeWrapperFuture", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/public/icConcurrent/icThreadSafeWrapper.h", "pattern": "/^} icThreadSafeWrapperFuture;$/", "language": "C++", "typeref": "struct:__anon52c8f5730308", "kind": "typedef"}, {"_type": "tag", "name": "icThreadSafeWrapperItemRef", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/public/icConcurrent/icThreadSafeWrapper.h", "pattern": "/^typedef struct icThreadSafeWrapperItemRef_ icThreadSafeWrapperItemRef;$/", "language": "C++", "typeref": "struct:icThreadSafeWrapperItemRef_", "kind": "typedef"}, {"_type": "tag", "name": "mutex", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/public/icConcurrent/icThreadSafeWrapper.h", "pattern": "/^        pthread_mutex_t mutex;$/", "language": "C++", "typeref": "typename:pthread_mutex_t", "kind": "member", "scope": "__anon52c8f5730108::__anon52c8f5730208", "scopeKind": "struct"}, {"_type": "tag", "name": "mutex", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/public/icConcurrent/icThreadSafeWrapper.h", "pattern": "/^        pthread_mutex_t mutex;$/", "language": "C++", "typeref": "typename:pthread_mutex_t", "kind": "member", "scope": "__anon52c8f5730308::__anon52c8f5730408", "scopeKind": "struct"}, {"_type": "tag", "name": "privateData", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/public/icConcurrent/icThreadSafeWrapper.h", "pattern": "/^    } privateData;$/", "language": "C++", "typeref": "struct:__anon52c8f5730108::__anon52c8f5730208", "kind": "member", "scope": "__anon52c8f5730108", "scopeKind": "struct"}, {"_type": "tag", "name": "privateData", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/public/icConcurrent/icThreadSafeWrapper.h", "pattern": "/^    } privateData;$/", "language": "C++", "typeref": "struct:__anon52c8f5730308::__anon52c8f5730408", "kind": "member", "scope": "__anon52c8f5730308", "scopeKind": "struct"}, {"_type": "tag", "name": "ref", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/public/icConcurrent/icThreadSafeWrapper.h", "pattern": "/^        icThreadSafeWrapperItemRef *ref;$/", "language": "C++", "typeref": "typename:icThreadSafeWrapperItemRef *", "kind": "member", "scope": "__anon52c8f5730108::__anon52c8f5730208", "scopeKind": "struct"}], "hash": "cf3c3e27496b35fd07858fd1385ee739", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "components/opensource/zilker-sdk/source/libs/concurrent/c/public/icConcurrent/icThreadSafeWrapper.h", "fields": [{"name": "bool applied", "scope": "__anon52c8f5730308::__anon52c8f5730408", "scopeKind": "struct", "description": "unavailable"}, {"name": "ThreadSafeWrapperGetItemFunc autoAssignFunc", "scope": "__anon52c8f5730108::__anon52c8f5730208", "scopeKind": "struct", "description": "unavailable"}, {"name": "ThreadSafeWrapperReleaseCheckFunc autoReleaseCheckFunc", "scope": "__anon52c8f5730108::__anon52c8f5730208", "scopeKind": "struct", "description": "unavailable"}, {"name": "bool complete", "scope": "__anon52c8f5730308::__anon52c8f5730408", "scopeKind": "struct", "description": "unavailable"}, {"name": "pthread_cond_t cond", "scope": "__anon52c8f5730308::__anon52c8f5730408", "scopeKind": "struct", "description": "unavailable"}, {"name": "bool condInitialized", "scope": "__anon52c8f5730308::__anon52c8f5730408", "scopeKind": "struct", "description": "unavailable"}, {"name": "ThreadSafeWrapperDestroyItemFunc destroyItemFunc", "scope": "__anon52c8f5730108::__anon52c8f5730208", "scopeKind": "struct", "description": "unavailable"}, {"name": "pthread_mutex_t mutex", "scope": "__anon52c8f5730108::__anon52c8f5730208", "scopeKind": "struct", "description": "unavailable"}, {"name": "struct:__anon52c8f5730108::__anon52c8f5730208 privateData", "scope": "__anon52c8f5730108", "scopeKind": "struct", "description": "unavailable"}, {"name": "struct:__anon52c8f5730308::__anon52c8f5730408 privateData", "scope": "__anon52c8f5730308", "scopeKind": "struct", "description": "unavailable"}, {"name": "icThreadSafeWrapperItemRef * ref", "scope": "__anon52c8f5730108::__anon52c8f5730208", "scopeKind": "struct", "description": "unavailable"}], "revision_history": [{"26282": ""}]}