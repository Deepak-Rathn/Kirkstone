{"is_source_file": true, "format": "C", "description": "This source file, `wifi_decoder.c`, contains functions for decoding various JSON-based configuration objects related to Wi-Fi settings, including security, interworking, radius, SSID, country code, operating environment, and VAP configurations. It includes macros for validation and utility functions to parse and validate different Wi-Fi parameters, handling complex nested objects and arrays with detailed validation rules.", "external_files": ["cJSON.h", "wifi_webconfig.h", "wifi_ctrl.h", "wifi_util.h"], "external_methods": ["wifi_util_error_print", "wifi_util_dbg_print", "WiFi_IsValidMacAddr", "convert_vap_name_to_index", "convert_vap_name_to_array_index", "convert_radio_index_to_freq_band", "decode_param_string", "decode_param_integer", "decode_param_bool", "decode_param_object", "decode_param_array", "string_mac_to_uint8_mac", "decode_contry_code", "decode_operating_environment", "decode_ssid_name", "hash_map_create", "cJSON_GetObjectItem", "cJSON_IsString", "cJSON_IsNumber", "cJSON_IsBool", "cJSON_IsArray", "cJSON_IsObject", "cJSON_GetArraySize", "cJSON_GetStringValue", "cJSON_GetArrayItem", "hash_map_get", "hash_map_put", "get_stats_cfg_id", "get_steering_cfg_id", "get_steering_clients_id", "get_vif_neighbor_id", "str_to_mac_bytes", "str_tolower"], "published": ["decode_interworking_object", "decode_radius_object", "decode_security_object", "decode_ssid_name", "decode_contry_code", "decode_operating_environment", "decode_vap_common_object", "decode_wifi_global_config", "decode_gas_config", "decode_config_object", "decode_associated_clients_object", "decode_mesh_sta_object", "decode_wifiapi_vap_object", "decode_hotspot_open_vap_object", "decode_hotspot_secure_vap_object", "decode_lnf_psk_vap_object", "decode_lnf_radius_vap_object", "decode_iot_vap_object", "decode_mesh_backhaul_vap_object", "decode_private_vap_object", "decode_wifi_channel", "decode_radio_setup_object", "decode_radio_object", "decode_scan_params_object"], "classes": [], "methods": [{"name": "bool is_valid_channel(unsigned int channel,bool dfs)", "description": "Checks if a given Wi-Fi channel is valid, considering DFS status.", "scope": "", "scopeKind": ""}, {"name": "webconfig_error_t decode_ipv4_address(char * ip)", "description": "Validates and decodes an IPv4 address string.", "scope": "", "scopeKind": ""}, {"name": "webconfig_error_t decode_anqp_object(const cJSON * anqp,wifi_interworking_t * interworking_info)", "description": "Decodes and populates the ANQP (Access Network Query Protocol) information structure from JSON input.", "scope": "", "scopeKind": ""}, {"name": "webconfig_error_t decode_passpoint_object(const cJSON * passpoint,wifi_interworking_t * interworking_info)", "description": "Decodes Passpoint-related configuration from JSON and populates internal structures.", "scope": "", "scopeKind": ""}, {"name": "webconfig_error_t decode_interworking_common_object(const cJSON * interworking,wifi_interworking_t * interworking_info)", "description": "Decodes common interworking parameters from JSON into the internal data structure.", "scope": "", "scopeKind": ""}, {"name": "webconfig_error_t decode_interworking_object(const cJSON * interworking,wifi_interworking_t * interworking_info)", "description": "Decodes the full interworking configuration, including nested objects for ANQP and Passpoint.", "scope": "", "scopeKind": ""}, {"name": "webconfig_error_t decode_radius_object(const cJSON * radius,wifi_radius_settings_t * radius_info)", "description": "Decodes RADIUS server configuration settings from JSON.", "scope": "", "scopeKind": ""}, {"name": "webconfig_error_t decode_open_radius_object(const cJSON * radius,wifi_radius_settings_t * radius_info)", "description": "Decodes open (non-authenticated) RADIUS configuration settings.", "scope": "", "scopeKind": ""}, {"name": "webconfig_error_t decode_security_object(const cJSON * security,wifi_vap_security_t * security_info,int band)", "description": "Decodes Wi-Fi security settings, including mode, encryption, MFP, and radius parameters.", "scope": "", "scopeKind": ""}, {"name": "webconfig_error_t decode_ssid_name(char * ssid_name)", "description": "Validates the SSID string for proper length and characters.", "scope": "", "scopeKind": ""}, {"name": "webconfig_error_t decode_contry_code(wifi_countrycode_type_t * contry_code,char * contry)", "description": "Maps a country string to the internal country code enumeration.", "scope": "", "scopeKind": ""}, {"name": "webconfig_error_t decode_operating_environment(wifi_operating_env_t * operating_env,char * environment)", "description": "Maps a string describing the operating environment to an internal enum.", "scope": "", "scopeKind": ""}, {"name": "webconfig_error_t decode_vap_common_object(const cJSON * vap,wifi_vap_info_t * vap_info,rdk_wifi_vap_info_t * rdk_vap_info,wifi_platform_property_t * wifi_prop)", "description": "Decodes common VAP parameters like name and index from JSON.", "scope": "", "scopeKind": ""}, {"name": "is_valid_channel", "description": "Checks if a given Wi-Fi channel is valid considering DFS status."}, {"name": "decode_vap_common_object", "description": "Decodes common VAP parameters such as name, index, and various attributes from JSON."}, {"name": "webconfig_error_t decode_hotspot_open_vap_object(const cJSON * vap,wifi_vap_info_t * vap_info,rdk_wifi_vap_info_t * rdk_vap_info,wifi_platform_property_t * wifi_prop)", "description": "Decodes a VAP object for open hotspot configurations, including security and interworking.", "scope": "", "scopeKind": ""}, {"name": "webconfig_error_t decode_hotspot_secure_vap_object(const cJSON * vap,wifi_vap_info_t * vap_info,rdk_wifi_vap_info_t * rdk_vap_info,wifi_platform_property_t * wifi_prop)", "description": "Decodes a secure hotspot VAP object, handling security and interworking parameters.", "scope": "", "scopeKind": ""}, {"name": "webconfig_error_t decode_lnf_psk_vap_object(const cJSON * vap,wifi_vap_info_t * vap_info,rdk_wifi_vap_info_t * rdk_vap_info,wifi_platform_property_t * wifi_prop)", "description": "Decodes a VAP configured with LNF PSK security, and interworking params.", "scope": "", "scopeKind": ""}, {"name": "webconfig_error_t decode_lnf_radius_vap_object(const cJSON * vap,wifi_vap_info_t * vap_info,rdk_wifi_vap_info_t * rdk_vap_info,wifi_platform_property_t * wifi_prop)", "description": "Decodes a VAP configured for Radius security, including security and interworking.", "scope": "", "scopeKind": ""}, {"name": "webconfig_error_t decode_iot_vap_object(const cJSON * vap,wifi_vap_info_t * vap_info,rdk_wifi_vap_info_t * rdk_vap_info,wifi_platform_property_t * wifi_prop)", "description": "Decodes configuration for IoT VAP instances, including security and associated station info.", "scope": "", "scopeKind": ""}, {"name": "webconfig_error_t decode_mesh_backhaul_vap_object(const cJSON * vap,wifi_vap_info_t * vap_info,rdk_wifi_vap_info_t * rdk_vap_info,wifi_platform_property_t * wifi_prop)", "description": "Decodes mesh backhaul VAP configurations, including common and security parameters.", "scope": "", "scopeKind": ""}, {"name": "webconfig_error_t decode_private_vap_object(const cJSON * vap,wifi_vap_info_t * vap_info,rdk_wifi_vap_info_t * rdk_vap_info,wifi_platform_property_t * wifi_prop)", "description": "Decodes a private VAP configuration with common attributes and security parameters.", "scope": "", "scopeKind": ""}, {"name": "webconfig_error_t decode_mesh_vap_object(const cJSON * vap,wifi_vap_info_t * vap_info,rdk_wifi_vap_info_t * rdk_vap_info,wifi_platform_property_t * wifi_prop)", "description": "Alias for decode_private_vap_object, decoding mesh VAPs.", "scope": "", "scopeKind": ""}, {"name": "webconfig_error_t decode_wifiapi_vap_object(const cJSON * vap,wifi_vap_info_t * vap_info,rdk_wifi_vap_info_t * rdk_vap_info,wifi_platform_property_t * wifi_prop)", "description": "Decodes Wi-Fi API VAP configurations, including security and interworking.", "scope": "", "scopeKind": ""}, {"name": "webconfig_error_t decode_scan_params_object(const cJSON * scan_obj,wifi_scan_params_t * scan_info)", "description": "Decodes Wi-Fi scan parameters such as period and channel settings.", "scope": "", "scopeKind": ""}, {"name": "webconfig_error_t decode_wifi_global_config(const cJSON * global_cfg,wifi_global_param_t * global_info)", "description": "Decodes global Wi-Fi configuration parameters including notifications and features.", "scope": "", "scopeKind": ""}, {"name": "webconfig_error_t decode_gas_config(const cJSON * gas,wifi_GASConfiguration_t * gas_info)", "description": "Decodes GAS (Generic Advertisement Service) configuration settings.", "scope": "", "scopeKind": ""}, {"name": "webconfig_error_t decode_wifi_channel(wifi_freq_bands_t wifi_band,UINT * wifi_radio_channel,BOOL dfs_enable,UINT wifi_channel)", "description": "Validates and decodes Wi-Fi channel given band and channel number, considering DFS and regulatory constraints.", "scope": "", "scopeKind": ""}, {"name": "int validate_wifi_hw_variant(wifi_freq_bands_t radio_band,wifi_ieee80211Variant_t wifi_hw_mode)", "description": "Validates Wi-Fi hardware mode based on radio band and hardware variant bits, ensuring compliance.", "scope": "", "scopeKind": ""}, {"name": "webconfig_error_t decode_radio_setup_object(const cJSON * obj_radio_setup,rdk_wifi_vap_map_t * vap_map)", "description": "Decodes radio setup including VAP mapping, channels, frequencies, and hardware modes.", "scope": "", "scopeKind": ""}, {"name": "webconfig_error_t decode_radio_object(const cJSON * obj_radio,rdk_wifi_radio_t * radio)", "description": "Decodes radio configuration including name, band, enabled state, channels, country, and various radio parameters.", "scope": "", "scopeKind": ""}, {"name": "webconfig_error_t decode_config_object(const cJSON * wifi,wifi_global_config_t * wifi_info)", "description": "Decodes top-level Wi-Fi configuration object for GAS, global parameters, and overall setup.", "scope": "", "scopeKind": ""}, {"name": "webconfig_error_t decode_associated_clients_object(webconfig_subdoc_data_t * data,cJSON * obj_vaps,assoclist_type_t assoclist_type)", "description": "Decodes associated client list for each VAP, including connection state, rates, signal strength, and operational parameters.", "scope": "", "scopeKind": ""}, {"name": "webconfig_error_t decode_mac_object(rdk_wifi_vap_info_t * rdk_vap_info,cJSON * obj_array)", "description": "Decodes a MAC filter list JSON array into the rdk_vap_info structure, including MAC addresses, device names, reasons, and expiry times.", "scope": "", "scopeKind": ""}, {"name": "webconfig_error_t decode_levl_object(const cJSON * levl_cfg,levl_config_t * levl_config)", "description": "Decodes level configuration parameters such as client MAC, maximum CSI clients, and duration into levl_config_t structure.", "scope": "", "scopeKind": ""}, {"name": "webconfig_error_t decode_preassoc_cac_object(const cJSON * preassoc,wifi_preassoc_control_t * preassoc_info)", "description": "Decodes pre-association CAC control parameters from JSON into wifi_preassoc_control_t structure, validating ranges for thresholds.", "scope": "", "scopeKind": ""}, {"name": "webconfig_error_t decode_postassoc_cac_object(const cJSON * postassoc,wifi_postassoc_control_t * postassoc_info)", "description": "Decodes post-association CAC control parameters from JSON into wifi_postassoc_control_t structure, validating ranges for thresholds.", "scope": "", "scopeKind": ""}, {"name": "webconfig_error_t decode_cac_object(wifi_vap_info_t * vap_info,cJSON * obj_array)", "description": "Decodes CAC objects for pre and post association deny settings from JSON into a VAP info structure.", "scope": "", "scopeKind": ""}, {"name": "webconfig_error_t decode_blaster_object(const cJSON * blaster_cfg,active_msmt_t * blaster_info)", "description": "Decodes blaster measurement configuration from JSON into active_msmt_t structure, including steps, status, and MQTT topics.", "scope": "", "scopeKind": ""}, {"name": "webconfig_error_t decode_harvester_object(const cJSON * obj,instant_measurement_config_t * harvester)", "description": "Decodes harvester configuration related to instant measurements, including enabling status, MAC address, and reporting periods.", "scope": "", "scopeKind": ""}, {"name": "webconfig_error_t decode_wifivapcap(wifi_interface_name_idex_map_t * interface_map,cJSON * object)", "description": "Decodes Wi-Fi VAP capability information from JSON, including VapName, PHY index, radio index, interface, bridge, VLAN, and index.", "scope": "", "scopeKind": ""}, {"name": "webconfig_error_t decode_wifiradiointerfacecap(radio_interface_mapping_t * radio_interface_map,cJSON * object)", "description": "Decodes radio interface capability data from JSON, including PHY index, radio index, and interface name.", "scope": "", "scopeKind": ""}, {"name": "webconfig_error_t decode_csi_object(queue_t ** csi_queue,cJSON * object)", "description": "Decodes CSI session data, including MAC addresses, session ID, enabled status, and client list MACs.", "scope": "", "scopeKind": ""}, {"name": "webconfig_error_t decode_wifiradiocap(wifi_platform_property_t * wifi_prop,cJSON * obj_wificap)", "description": "Decodes overall Wi-Fi radio capabilities, including supported channels, widths, radio presence, and interface capabilities.", "scope": "", "scopeKind": ""}, {"name": "webconfig_error_t decode_stats_config_object(hash_map_t ** stats_map,cJSON * st_arr_obj)", "description": "Decodes statistics configuration array into a hash map indexed by configuration IDs.", "scope": "", "scopeKind": ""}, {"name": "webconfig_error_t decode_steering_config_object(hash_map_t ** steer_map,cJSON * st_arr_obj)", "description": "Decodes steering configuration settings, including VapNames, channel utilization monitoring parameters, debug flags, thresholds, and reporting intervals, into a hash map.", "scope": "", "scopeKind": ""}, {"name": "webconfig_error_t decode_steering_clients_object(hash_map_t ** steering_client_map,cJSON * st_arr_obj)", "description": "Decodes steering client configurations with MAC addresses and various backoff, rejection, and rejection detection parameters into a hash map.", "scope": "", "scopeKind": ""}, {"name": "webconfig_error_t decode_vif_neighbors_object(hash_map_t ** neighbors_map,cJSON * neighbors_arr_obj)", "description": "Decodes neighbor information for VIFs, including BSSID, interface name, channel, HT mode, and priority into a hash map.", "scope": "", "scopeKind": ""}, {"name": "webconfig_error_t decode_mesh_sta_object(const cJSON * vap,wifi_vap_info_t * vap_info,rdk_wifi_vap_info_t * rdk_vap_info,wifi_platform_property_t * wifi_prop)", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["cJSON_GetObjectItem", "cJSON_IsString", "cJSON_IsNumber", "cJSON_IsBool", "cJSON_IsArray", "cJSON_IsObject", "cJSON_GetArraySize", "cJSON_ArrayForEach", "cJSON_HasObjectItem", "inet_pton", "strcpy", "strcmp", "strlen", "strcasecmp", "strncpy", "memset", "memcpy", "cJSON_GetStringValue", "cJSON_GetArrayItem", "hash_map_create", "hash_map_get", "hash_map_put", "get_stats_cfg_id", "get_steering_cfg_id", "get_steering_clients_id", "get_vif_neighbor_id", "str_to_mac_bytes", "str_tolower"], "search-terms": ["wifi_decoder", "decode_interworking", "decode_radius", "decode_security", "decode_ssid", "decode_country", "decode_operating_env", "decode_vap", "ANQP", "Passpoint", "RadiusSettings", "WIFI_WEBCONFIG", "cJSON", "VapName", "VapMap", "RadioIndex", "Security", "Interworking", "VAP", "Wi-Fi", "json parsing", "WiFi configuration", "Radio setup", "associated clients", "mac filter list", "CSI data decoding", "VAP neighbor info", "radio capabilities", "Wi-Fi configuration", "scanning parameters", "steering configuration", "stats configuration", "CAC object", "blaster measurement", "harvester config", "Wi-Fi CAP", "Channel list", "neighbor info", "VAP index", "Radio interface", "JSON Wi-Fi decoding"], "state": 2, "file_id": 5988, "knowledge_revision": 19105, "git_revision": "", "ctags": [{"_type": "tag", "name": "MASK_BITSET", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/webconfig/wifi_decoder.c", "pattern": "/^    #define MASK_BITSET(/", "file": true, "language": "C", "kind": "macro", "signature": "(x,bit)"}, {"_type": "tag", "name": "ONE_WIFI_CHANGES", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/webconfig/wifi_decoder.c", "pattern": "/^#define ONE_WIFI_CHANGES$/", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "decode_anqp_object", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/webconfig/wifi_decoder.c", "pattern": "/^webconfig_error_t decode_anqp_object(const cJSON *anqp, wifi_interworking_t *interworking_info)$/", "language": "C", "typeref": "typename:webconfig_error_t", "kind": "function", "signature": "(const cJSON * anqp,wifi_interworking_t * interworking_info)"}, {"_type": "tag", "name": "decode_associated_clients_object", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/webconfig/wifi_decoder.c", "pattern": "/^webconfig_error_t decode_associated_clients_object(webconfig_subdoc_data_t *data, cJSON *obj_vap/", "language": "C", "typeref": "typename:webconfig_error_t", "kind": "function", "signature": "(webconfig_subdoc_data_t * data,cJSON * obj_vaps,assoclist_type_t assoclist_type)"}, {"_type": "tag", "name": "decode_blaster_object", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/webconfig/wifi_decoder.c", "pattern": "/^webconfig_error_t decode_blaster_object(const cJSON *blaster_cfg, active_msmt_t *blaster_info)$/", "language": "C", "typeref": "typename:webconfig_error_t", "kind": "function", "signature": "(const cJSON * blaster_cfg,active_msmt_t * blaster_info)"}, {"_type": "tag", "name": "decode_cac_object", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/webconfig/wifi_decoder.c", "pattern": "/^webconfig_error_t decode_cac_object(wifi_vap_info_t *vap_info, cJSON *obj_array )$/", "language": "C", "typeref": "typename:webconfig_error_t", "kind": "function", "signature": "(wifi_vap_info_t * vap_info,cJSON * obj_array)"}, {"_type": "tag", "name": "decode_config_object", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/webconfig/wifi_decoder.c", "pattern": "/^webconfig_error_t decode_config_object(const cJSON *wifi, wifi_global_config_t *wifi_info)$/", "language": "C", "typeref": "typename:webconfig_error_t", "kind": "function", "signature": "(const cJSON * wifi,wifi_global_config_t * wifi_info)"}, {"_type": "tag", "name": "decode_contry_code", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/webconfig/wifi_decoder.c", "pattern": "/^webconfig_error_t decode_contry_code(wifi_countrycode_type_t *contry_code, char *contry)$/", "language": "C", "typeref": "typename:webconfig_error_t", "kind": "function", "signature": "(wifi_countrycode_type_t * contry_code,char * contry)"}, {"_type": "tag", "name": "decode_csi_object", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/webconfig/wifi_decoder.c", "pattern": "/^webconfig_error_t decode_csi_object(queue_t** csi_queue, cJSON *object)$/", "language": "C", "typeref": "typename:webconfig_error_t", "kind": "function", "signature": "(queue_t ** csi_queue,cJSON * object)"}, {"_type": "tag", "name": "decode_gas_config", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/webconfig/wifi_decoder.c", "pattern": "/^webconfig_error_t decode_gas_config(const cJSON *gas, wifi_GASConfiguration_t *gas_info)$/", "language": "C", "typeref": "typename:webconfig_error_t", "kind": "function", "signature": "(const cJSON * gas,wifi_GASConfiguration_t * gas_info)"}, {"_type": "tag", "name": "decode_harvester_object", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/webconfig/wifi_decoder.c", "pattern": "/^webconfig_error_t decode_harvester_object(const cJSON *obj, instant_measurement_config_t *harves/", "language": "C", "typeref": "typename:webconfig_error_t", "kind": "function", "signature": "(const cJSON * obj,instant_measurement_config_t * harvester)"}, {"_type": "tag", "name": "decode_hotspot_open_vap_object", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/webconfig/wifi_decoder.c", "pattern": "/^webconfig_error_t decode_hotspot_open_vap_object(const cJSON *vap, wifi_vap_info_t *vap_info,$/", "language": "C", "typeref": "typename:webconfig_error_t", "kind": "function", "signature": "(const cJSON * vap,wifi_vap_info_t * vap_info,rdk_wifi_vap_info_t * rdk_vap_info,wifi_platform_property_t * wifi_prop)"}, {"_type": "tag", "name": "decode_hotspot_secure_vap_object", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/webconfig/wifi_decoder.c", "pattern": "/^webconfig_error_t decode_hotspot_secure_vap_object(const cJSON *vap, wifi_vap_info_t *vap_info,$/", "language": "C", "typeref": "typename:webconfig_error_t", "kind": "function", "signature": "(const cJSON * vap,wifi_vap_info_t * vap_info,rdk_wifi_vap_info_t * rdk_vap_info,wifi_platform_property_t * wifi_prop)"}, {"_type": "tag", "name": "decode_interworking_common_object", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/webconfig/wifi_decoder.c", "pattern": "/^webconfig_error_t decode_interworking_common_object(const cJSON *interworking, wifi_interworking/", "language": "C", "typeref": "typename:webconfig_error_t", "kind": "function", "signature": "(const cJSON * interworking,wifi_interworking_t * interworking_info)"}, {"_type": "tag", "name": "decode_interworking_object", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/webconfig/wifi_decoder.c", "pattern": "/^webconfig_error_t decode_interworking_object(const cJSON *interworking, wifi_interworking_t *int/", "language": "C", "typeref": "typename:webconfig_error_t", "kind": "function", "signature": "(const cJSON * interworking,wifi_interworking_t * interworking_info)"}, {"_type": "tag", "name": "decode_iot_vap_object", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/webconfig/wifi_decoder.c", "pattern": "/^webconfig_error_t decode_iot_vap_object(const cJSON *vap, wifi_vap_info_t *vap_info,$/", "language": "C", "typeref": "typename:webconfig_error_t", "kind": "function", "signature": "(const cJSON * vap,wifi_vap_info_t * vap_info,rdk_wifi_vap_info_t * rdk_vap_info,wifi_platform_property_t * wifi_prop)"}, {"_type": "tag", "name": "decode_ipv4_address", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/webconfig/wifi_decoder.c", "pattern": "/^webconfig_error_t decode_ipv4_address(char *ip) {$/", "language": "C", "typeref": "typename:webconfig_error_t", "kind": "function", "signature": "(char * ip)"}, {"_type": "tag", "name": "decode_levl_object", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/webconfig/wifi_decoder.c", "pattern": "/^webconfig_error_t decode_levl_object(const cJSON *levl_cfg, levl_config_t *levl_config)$/", "language": "C", "typeref": "typename:webconfig_error_t", "kind": "function", "signature": "(const cJSON * levl_cfg,levl_config_t * levl_config)"}, {"_type": "tag", "name": "decode_lnf_psk_vap_object", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/webconfig/wifi_decoder.c", "pattern": "/^webconfig_error_t decode_lnf_psk_vap_object(const cJSON *vap, wifi_vap_info_t *vap_info,$/", "language": "C", "typeref": "typename:webconfig_error_t", "kind": "function", "signature": "(const cJSON * vap,wifi_vap_info_t * vap_info,rdk_wifi_vap_info_t * rdk_vap_info,wifi_platform_property_t * wifi_prop)"}, {"_type": "tag", "name": "decode_lnf_radius_vap_object", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/webconfig/wifi_decoder.c", "pattern": "/^webconfig_error_t decode_lnf_radius_vap_object(const cJSON *vap, wifi_vap_info_t *vap_info,$/", "language": "C", "typeref": "typename:webconfig_error_t", "kind": "function", "signature": "(const cJSON * vap,wifi_vap_info_t * vap_info,rdk_wifi_vap_info_t * rdk_vap_info,wifi_platform_property_t * wifi_prop)"}, {"_type": "tag", "name": "decode_mac_object", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/webconfig/wifi_decoder.c", "pattern": "/^webconfig_error_t decode_mac_object(rdk_wifi_vap_info_t *rdk_vap_info, cJSON *obj_array )$/", "language": "C", "typeref": "typename:webconfig_error_t", "kind": "function", "signature": "(rdk_wifi_vap_info_t * rdk_vap_info,cJSON * obj_array)"}, {"_type": "tag", "name": "decode_mesh_backhaul_vap_object", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/webconfig/wifi_decoder.c", "pattern": "/^webconfig_error_t decode_mesh_backhaul_vap_object(const cJSON *vap, wifi_vap_info_t *vap_info,$/", "language": "C", "typeref": "typename:webconfig_error_t", "kind": "function", "signature": "(const cJSON * vap,wifi_vap_info_t * vap_info,rdk_wifi_vap_info_t * rdk_vap_info,wifi_platform_property_t * wifi_prop)"}, {"_type": "tag", "name": "decode_mesh_sta_object", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/webconfig/wifi_decoder.c", "pattern": "/^webconfig_error_t decode_mesh_sta_object(const cJSON *vap, wifi_vap_info_t *vap_info,$/", "language": "C", "typeref": "typename:webconfig_error_t", "kind": "function", "signature": "(const cJSON * vap,wifi_vap_info_t * vap_info,rdk_wifi_vap_info_t * rdk_vap_info,wifi_platform_property_t * wifi_prop)"}, {"_type": "tag", "name": "decode_mesh_vap_object", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/webconfig/wifi_decoder.c", "pattern": "/^webconfig_error_t decode_mesh_vap_object(const cJSON *vap, wifi_vap_info_t *vap_info,$/", "language": "C", "typeref": "typename:webconfig_error_t", "kind": "function", "signature": "(const cJSON * vap,wifi_vap_info_t * vap_info,rdk_wifi_vap_info_t * rdk_vap_info,wifi_platform_property_t * wifi_prop)"}, {"_type": "tag", "name": "decode_open_radius_object", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/webconfig/wifi_decoder.c", "pattern": "/^webconfig_error_t decode_open_radius_object(const cJSON *radius, wifi_radius_settings_t *radius_/", "language": "C", "typeref": "typename:webconfig_error_t", "kind": "function", "signature": "(const cJSON * radius,wifi_radius_settings_t * radius_info)"}, {"_type": "tag", "name": "decode_operating_environment", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/webconfig/wifi_decoder.c", "pattern": "/^webconfig_error_t decode_operating_environment(wifi_operating_env_t *operating_env, char *enviro/", "language": "C", "typeref": "typename:webconfig_error_t", "kind": "function", "signature": "(wifi_operating_env_t * operating_env,char * environment)"}, {"_type": "tag", "name": "decode_param_allow_empty_bool", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/webconfig/wifi_decoder.c", "pattern": "/^#define decode_param_allow_empty_bool(/", "file": true, "language": "C", "kind": "macro", "signature": "(json,key,value,connected_building)"}, {"_type": "tag", "name": "decode_param_allow_empty_string", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/webconfig/wifi_decoder.c", "pattern": "/^#define decode_param_allow_empty_string(/", "file": true, "language": "C", "kind": "macro", "signature": "(json,key,value)"}, {"_type": "tag", "name": "decode_param_allow_optional_string", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/webconfig/wifi_decoder.c", "pattern": "/^#define decode_param_allow_optional_string(/", "file": true, "language": "C", "kind": "macro", "signature": "(json,key,value)"}, {"_type": "tag", "name": "decode_param_array", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/webconfig/wifi_decoder.c", "pattern": "/^#define decode_param_array(/", "file": true, "language": "C", "kind": "macro", "signature": "(json,key,value)"}, {"_type": "tag", "name": "decode_param_blaster_mac", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/webconfig/wifi_decoder.c", "pattern": "/^#define decode_param_blaster_mac(/", "file": true, "language": "C", "kind": "macro", "signature": "(json,key,value)"}, {"_type": "tag", "name": "decode_param_blaster_mqtt_topic", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/webconfig/wifi_decoder.c", "pattern": "/^#define decode_param_blaster_mqtt_topic(/", "file": true, "language": "C", "kind": "macro", "signature": "(json,key,value)"}, {"_type": "tag", "name": "decode_param_blaster_trace_info", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/webconfig/wifi_decoder.c", "pattern": "/^#define decode_param_blaster_trace_info(/", "file": true, "language": "C", "kind": "macro", "signature": "(json,key,value)"}, {"_type": "tag", "name": "decode_param_bool", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/webconfig/wifi_decoder.c", "pattern": "/^#define decode_param_bool(/", "file": true, "language": "C", "kind": "macro", "signature": "(json,key,value)"}, {"_type": "tag", "name": "decode_param_integer", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/webconfig/wifi_decoder.c", "pattern": "/^#define decode_param_integer(/", "file": true, "language": "C", "kind": "macro", "signature": "(json,key,value)"}, {"_type": "tag", "name": "decode_param_object", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/webconfig/wifi_decoder.c", "pattern": "/^#define decode_param_object(/", "file": true, "language": "C", "kind": "macro", "signature": "(json,key,value)"}, {"_type": "tag", "name": "decode_param_string", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/webconfig/wifi_decoder.c", "pattern": "/^#define decode_param_string(/", "file": true, "language": "C", "kind": "macro", "signature": "(json,key,value)"}, {"_type": "tag", "name": "decode_passpoint_object", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/webconfig/wifi_decoder.c", "pattern": "/^webconfig_error_t decode_passpoint_object(const cJSON *passpoint, wifi_interworking_t *interwork/", "language": "C", "typeref": "typename:webconfig_error_t", "kind": "function", "signature": "(const cJSON * passpoint,wifi_interworking_t * interworking_info)"}, {"_type": "tag", "name": "decode_postassoc_cac_object", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/webconfig/wifi_decoder.c", "pattern": "/^webconfig_error_t decode_postassoc_cac_object(const cJSON *postassoc, wifi_postassoc_control_t */", "language": "C", "typeref": "typename:webconfig_error_t", "kind": "function", "signature": "(const cJSON * postassoc,wifi_postassoc_control_t * postassoc_info)"}, {"_type": "tag", "name": "decode_preassoc_cac_object", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/webconfig/wifi_decoder.c", "pattern": "/^webconfig_error_t decode_preassoc_cac_object(const cJSON *preassoc, wifi_preassoc_control_t *pre/", "language": "C", "typeref": "typename:webconfig_error_t", "kind": "function", "signature": "(const cJSON * preassoc,wifi_preassoc_control_t * preassoc_info)"}, {"_type": "tag", "name": "decode_private_vap_object", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/webconfig/wifi_decoder.c", "pattern": "/^webconfig_error_t decode_private_vap_object(const cJSON *vap, wifi_vap_info_t *vap_info,$/", "language": "C", "typeref": "typename:webconfig_error_t", "kind": "function", "signature": "(const cJSON * vap,wifi_vap_info_t * vap_info,rdk_wifi_vap_info_t * rdk_vap_info,wifi_platform_property_t * wifi_prop)"}, {"_type": "tag", "name": "decode_radio_object", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/webconfig/wifi_decoder.c", "pattern": "/^webconfig_error_t decode_radio_object(const cJSON *obj_radio, rdk_wifi_radio_t *radio)$/", "language": "C", "typeref": "typename:webconfig_error_t", "kind": "function", "signature": "(const cJSON * obj_radio,rdk_wifi_radio_t * radio)"}, {"_type": "tag", "name": "decode_radio_setup_object", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/webconfig/wifi_decoder.c", "pattern": "/^webconfig_error_t decode_radio_setup_object(const cJSON *obj_radio_setup, rdk_wifi_vap_map_t *va/", "language": "C", "typeref": "typename:webconfig_error_t", "kind": "function", "signature": "(const cJSON * obj_radio_setup,rdk_wifi_vap_map_t * vap_map)"}, {"_type": "tag", "name": "decode_radius_object", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/webconfig/wifi_decoder.c", "pattern": "/^webconfig_error_t decode_radius_object(const cJSON *radius, wifi_radius_settings_t *radius_info)$/", "language": "C", "typeref": "typename:webconfig_error_t", "kind": "function", "signature": "(const cJSON * radius,wifi_radius_settings_t * radius_info)"}, {"_type": "tag", "name": "decode_scan_params_object", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/webconfig/wifi_decoder.c", "pattern": "/^webconfig_error_t decode_scan_params_object(const cJSON *scan_obj, wifi_scan_params_t *scan_info/", "language": "C", "typeref": "typename:webconfig_error_t", "kind": "function", "signature": "(const cJSON * scan_obj,wifi_scan_params_t * scan_info)"}, {"_type": "tag", "name": "decode_security_object", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/webconfig/wifi_decoder.c", "pattern": "/^webconfig_error_t decode_security_object(const cJSON *security, wifi_vap_security_t *security_in/", "language": "C", "typeref": "typename:webconfig_error_t", "kind": "function", "signature": "(const cJSON * security,wifi_vap_security_t * security_info,int band)"}, {"_type": "tag", "name": "decode_ssid_name", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/webconfig/wifi_decoder.c", "pattern": "/^webconfig_error_t decode_ssid_name(char *ssid_name)$/", "language": "C", "typeref": "typename:webconfig_error_t", "kind": "function", "signature": "(char * ssid_name)"}, {"_type": "tag", "name": "decode_stats_config_object", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/webconfig/wifi_decoder.c", "pattern": "/^webconfig_error_t decode_stats_config_object(hash_map_t **stats_map, cJSON *st_arr_obj)$/", "language": "C", "typeref": "typename:webconfig_error_t", "kind": "function", "signature": "(hash_map_t ** stats_map,cJSON * st_arr_obj)"}, {"_type": "tag", "name": "decode_steering_clients_object", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/webconfig/wifi_decoder.c", "pattern": "/^webconfig_error_t decode_steering_clients_object(hash_map_t **steering_client_map, cJSON *st_arr/", "language": "C", "typeref": "typename:webconfig_error_t", "kind": "function", "signature": "(hash_map_t ** steering_client_map,cJSON * st_arr_obj)"}, {"_type": "tag", "name": "decode_steering_config_object", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/webconfig/wifi_decoder.c", "pattern": "/^webconfig_error_t decode_steering_config_object(hash_map_t **steer_map, cJSON *st_arr_obj)$/", "language": "C", "typeref": "typename:webconfig_error_t", "kind": "function", "signature": "(hash_map_t ** steer_map,cJSON * st_arr_obj)"}, {"_type": "tag", "name": "decode_vap_common_object", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/webconfig/wifi_decoder.c", "pattern": "/^webconfig_error_t decode_vap_common_object(const cJSON *vap, wifi_vap_info_t *vap_info,$/", "language": "C", "typeref": "typename:webconfig_error_t", "kind": "function", "signature": "(const cJSON * vap,wifi_vap_info_t * vap_info,rdk_wifi_vap_info_t * rdk_vap_info,wifi_platform_property_t * wifi_prop)"}, {"_type": "tag", "name": "decode_vif_neighbors_object", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/webconfig/wifi_decoder.c", "pattern": "/^webconfig_error_t decode_vif_neighbors_object(hash_map_t **neighbors_map, cJSON *neighbors_arr_o/", "language": "C", "typeref": "typename:webconfig_error_t", "kind": "function", "signature": "(hash_map_t ** neighbors_map,cJSON * neighbors_arr_obj)"}, {"_type": "tag", "name": "decode_wifi_channel", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/webconfig/wifi_decoder.c", "pattern": "/^webconfig_error_t decode_wifi_channel(wifi_freq_bands_t wifi_band, UINT *wifi_radio_channel, BOO/", "language": "C", "typeref": "typename:webconfig_error_t", "kind": "function", "signature": "(wifi_freq_bands_t wifi_band,UINT * wifi_radio_channel,BOOL dfs_enable,UINT wifi_channel)"}, {"_type": "tag", "name": "decode_wifi_global_config", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/webconfig/wifi_decoder.c", "pattern": "/^webconfig_error_t decode_wifi_global_config(const cJSON *global_cfg, wifi_global_param_t *global/", "language": "C", "typeref": "typename:webconfig_error_t", "kind": "function", "signature": "(const cJSON * global_cfg,wifi_global_param_t * global_info)"}, {"_type": "tag", "name": "decode_wifiapi_vap_object", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/webconfig/wifi_decoder.c", "pattern": "/^webconfig_error_t decode_wifiapi_vap_object(const cJSON *vap, wifi_vap_info_t *vap_info,$/", "language": "C", "typeref": "typename:webconfig_error_t", "kind": "function", "signature": "(const cJSON * vap,wifi_vap_info_t * vap_info,rdk_wifi_vap_info_t * rdk_vap_info,wifi_platform_property_t * wifi_prop)"}, {"_type": "tag", "name": "decode_wifiradiocap", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/webconfig/wifi_decoder.c", "pattern": "/^webconfig_error_t decode_wifiradiocap(wifi_platform_property_t *wifi_prop, cJSON *obj_wificap)$/", "language": "C", "typeref": "typename:webconfig_error_t", "kind": "function", "signature": "(wifi_platform_property_t * wifi_prop,cJSON * obj_wificap)"}, {"_type": "tag", "name": "decode_wifiradiointerfacecap", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/webconfig/wifi_decoder.c", "pattern": "/^webconfig_error_t decode_wifiradiointerfacecap(radio_interface_mapping_t *radio_interface_map, c/", "language": "C", "typeref": "typename:webconfig_error_t", "kind": "function", "signature": "(radio_interface_mapping_t * radio_interface_map,cJSON * object)"}, {"_type": "tag", "name": "decode_wifivapcap", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/webconfig/wifi_decoder.c", "pattern": "/^webconfig_error_t decode_wifivapcap(wifi_interface_name_idex_map_t *interface_map, cJSON *object/", "language": "C", "typeref": "typename:webconfig_error_t", "kind": "function", "signature": "(wifi_interface_name_idex_map_t * interface_map,cJSON * object)"}, {"_type": "tag", "name": "is_valid_channel", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/webconfig/wifi_decoder.c", "pattern": "/^bool is_valid_channel(unsigned int channel, bool dfs)$/", "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(unsigned int channel,bool dfs)"}, {"_type": "tag", "name": "validate_wifi_hw_variant", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/webconfig/wifi_decoder.c", "pattern": "/^int validate_wifi_hw_variant(wifi_freq_bands_t radio_band, wifi_ieee80211Variant_t wifi_hw_mode)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(wifi_freq_bands_t radio_band,wifi_ieee80211Variant_t wifi_hw_mode)"}], "hash": "4f0bfd4ee587957b5c703ada2b537f41", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "rdkb/components/opensource/ccsp/OneWifi/source/webconfig/wifi_decoder.c", "revision_history": [{"19105": ""}]}