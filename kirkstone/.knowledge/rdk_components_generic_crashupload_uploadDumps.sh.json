{"is_source_file": true, "format": "shell script / bash", "description": "This is a shell script (`uploadDumps.sh`) responsible for uploading core dumps and minidumps to crash reporting and cloud storage services. It manages crash dump collection, packaging, and upload, with built-in rate limiting, blacklist management, and support for various configurations and device types.", "external_files": ["/lib/rdk/t2Shared_api.sh", "/etc/device.properties", "/etc/include.properties", "$RDK_PATH/exec_curl_mtls.sh", "/lib/rdk/getSecureDumpStatus.sh", "/lib/rdk/uploadDumpsUtils.sh", "/lib/rdk/uploadDumpsUtilsDevice.sh", "$RDK_PATH/utils.sh", "$RDK_PATH/commonUtils.sh", "/nvram/coredump.properties", "/opt/coredump.properties", "/etc/ssl/certs/cpe-clnt.xcal.tv.cert.pem", "/etc/blacklist.txt", "/etc/waninfo.sh", "/lib/rdk/getpartnerid.sh", "/etc/version.txt", "/version.txt"], "external_methods": ["source", "getMacAddressOnly", "getSHA1", "getLastModifiedTimeOfFile", "tr181Set", "tr181", "syscfg get", "rpcclient", "dmcli eRT getv", "get_interface_value", "exec_curl_mtls", "t2CountNotify", "t2ValNotify"], "published": ["uploadDumps.sh"], "classes": [], "methods": [{"name": "getOptOutStatus", "description": "Checks RFC feature flag and optional file to determine if telemetry opt-out is enabled."}, {"name": "setLogFile", "description": "Constructs a log file name based on input parameters, avoiding duplicate processing."}, {"name": "logStdout", "description": "Logs each line from stdin to system log."}, {"name": "create_lock_or_exit", "description": "Creates a lock directory or exits if lock exists to prevent concurrent script runs."}, {"name": "create_lock_or_wait", "description": "Creates a lock directory or waits until it can be created."}, {"name": "remove_lock", "description": "Removes a lock directory."}, {"name": "logMessage", "description": "Logs messages with timestamp and process ID."}, {"name": "tlsLog", "description": "Logs TLS-related errors."}, {"name": "sanitize", "description": "Sanitizes parameter strings to be shell-safe."}, {"name": "IsDirectBlocked", "description": "Checks if direct upload is temporarily blocked based on last failure."}, {"name": "IsCodeBigBlocked", "description": "Checks if codebig upload is temporarily blocked based on last failure."}, {"name": "checkParameter", "description": "Validates and sets default values for parameters like sha1, modNum, and timestamp."}, {"name": "checkMAC", "description": "Ensures MAC address is obtained and formatted correctly."}, {"name": "deleteAllButTheMostRecentFile", "description": "Deletes older dump files leaving only the most recent ones."}, {"name": "cleanup", "description": "Cleans up old log and dump files before uploading."}, {"name": "finalize", "description": "Performs cleanup and unlocks lock directories."}, {"name": "sigkill_function", "description": "Handles SIGKILL signal cleanup."}, {"name": "sigterm_function", "description": "Handles SIGTERM signal cleanup."}, {"name": "logUploadTimestamp", "description": "Applies timestamp after successful upload for rate limiting."}, {"name": "truncateTimeStampFile", "description": "Keeps only last 10 timestamps for crash rate limiting."}, {"name": "isUploadLimitReached", "description": "Checks if upload frequency exceeds rate limit."}, {"name": "setRecoveryTime", "description": "Sets a recovery timestamp to delay further uploads after failure."}, {"name": "isRecoveryTimeReached", "description": "Checks if recovery timestamp has passed."}, {"name": "removePendingDumps", "description": "Removes queued dump files in case of limits or blacklist."}, {"name": "markAsCrashLoopedAndUpload", "description": "Tags dump as crash-looped and uploads it."}, {"name": "downloadBlacklist", "description": "Downloads blacklist of versions to prevent blacklisted builds."}, {"name": "isBuildBlacklisted", "description": "Checks if current build is blacklisted."}, {"name": "saveDump", "description": "Limits the number of stored minidumps."}, {"name": "uploadToS3", "description": "Handles the multipart process of signed URL request and upload to S3."}, {"name": "codebigUpload", "description": "Handles crash dump upload via Codebig URL."}], "search-terms": ["crashupload", "uploadDumps", "core dump", "minidump", "blacklist", "RateLimit", "CrashLoop", "S3 Upload", "Shell script", "crash upload", "crash report", "upload minidump", "upload core"], "state": 2, "file_id": 12793, "knowledge_revision": 25691, "git_revision": "", "hash": "876c3b97444f8d3c424592961c0c5378", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "rdk/components/generic/crashupload/uploadDumps.sh", "revision_history": [{"25691": ""}]}