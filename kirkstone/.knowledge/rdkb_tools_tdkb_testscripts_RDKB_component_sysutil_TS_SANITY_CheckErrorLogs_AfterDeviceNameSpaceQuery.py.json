{"is_source_file": true, "format": "Python", "description": "This Python script is a test automation script that uses the TDK library to validate the absence of specific error logs after querying device namespace parameters on a device under test. It loads required modules, retrieves a list of parameters, queries each parameter, searches logs for failure messages, and reports success or failure accordingly.", "external_files": ["/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdk_utility.sh", "/rdklogs/logs/"], "external_methods": ["tdklib.TDKScriptingLibrary", "tdklib.TDKScriptingLibrary.configureTestCase", "tdklib.TDKScriptingLibrary.getLoadModuleResult", "tdklib.TDKScriptingLibrary.createTestStep", "tdklib.TDKScriptingLibrary.executeTestCase", "tdklib.TDKScriptingLibrary.getResult", "tdklib.TDKScriptingLibrary.getResultDetails", "tdklib.TDKScriptingLibrary.setLoadModuleStatus", "tdklib.TDKScriptingLibrary.unloadModule"], "published": ["TS_SANITY_CheckErrorLogs_AfterDeviceNameSpaceQuery", "TC_SYSUTIL_37"], "classes": [], "methods": [], "calls": ["obj.getLoadModuleResult()", "obj.configureTestCase(ip,port,'TS_SANITY_CheckErrorLogs_AfterDeviceNameSpaceQuery')", "obj1.configureTestCase(ip,port,'TS_SANITY_CheckErrorLogs_AfterDeviceNameSpaceQuery')", "obj.setLoadModuleStatus(\"SUCCESS\")", "obj1.setLoadModuleStatus(\"SUCCESS\")", "tdkTestObj = obj.createTestStep('ExecuteCmd')", "tdkTestObj.addParameter('command', Namespaces)", "tdkTestObj.executeTestCase(expectedresult)", "tdkTestObj.getResult()", "tdkTestObj.getResultDetails()", "tdkTestObj.setResultStatus(\"SUCCESS\" or \"FAILURE\")", "obj.unloadModule(\"sysutil\")", "obj1.unloadModule(\"tdkbtr181\")", "tdkTestObj = obj1.createTestStep('TDKB_TR181Stub_Get')", "tdkTestObj.addParameter('ParamName', 'Device.%s.' %item)", "logMsg = \"Failed to get parameter value\"", "query = \"grep -rin \\\"%s\\\" \\\"%s\\\"\" % (logMsg, logFile)"], "search-terms": ["TS_SANITY_CheckErrorLogs_AfterDeviceNameSpaceQuery", "ParseConfigFile NAMESPACES", "Device Namespace", "Log message 'Failed to get parameter value'", "RDK logs", "TR-181 parameters", "Log pattern search"], "state": 2, "file_id": 4935, "knowledge_revision": 18056, "git_revision": "", "ctags": [{"_type": "tag", "name": "Namespaces", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/testscripts/RDKB/component/sysutil/TS_SANITY_CheckErrorLogs_AfterDeviceNameSpaceQuery.py", "pattern": "/^    Namespaces = \"sh %s\\/tdk_utility.sh parseConfigFile NAMESPACES\" %TDK_PATH;$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "actualresult", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/testscripts/RDKB/component/sysutil/TS_SANITY_CheckErrorLogs_AfterDeviceNameSpaceQuery.py", "pattern": "/^            actualresult = tdkTestObj.getResult();$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "actualresult", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/testscripts/RDKB/component/sysutil/TS_SANITY_CheckErrorLogs_AfterDeviceNameSpaceQuery.py", "pattern": "/^        actualresult = tdkTestObj.getResult();$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "actualresult", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/testscripts/RDKB/component/sysutil/TS_SANITY_CheckErrorLogs_AfterDeviceNameSpaceQuery.py", "pattern": "/^    actualresult = tdkTestObj.getResult();$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "details", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/testscripts/RDKB/component/sysutil/TS_SANITY_CheckErrorLogs_AfterDeviceNameSpaceQuery.py", "pattern": "/^        details = tdkTestObj.getResultDetails().strip().replace(\"\\\\\\\\n\",\"\");$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "expectedresult", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/testscripts/RDKB/component/sysutil/TS_SANITY_CheckErrorLogs_AfterDeviceNameSpaceQuery.py", "pattern": "/^            expectedresult=\"SUCCESS\";$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "expectedresult", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/testscripts/RDKB/component/sysutil/TS_SANITY_CheckErrorLogs_AfterDeviceNameSpaceQuery.py", "pattern": "/^        expectedresult=\"SUCCESS\";$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "expectedresult", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/testscripts/RDKB/component/sysutil/TS_SANITY_CheckErrorLogs_AfterDeviceNameSpaceQuery.py", "pattern": "/^    expectedresult=\"SUCCESS\";$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "getFailure", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/testscripts/RDKB/component/sysutil/TS_SANITY_CheckErrorLogs_AfterDeviceNameSpaceQuery.py", "pattern": "/^                getFailure =1;$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "getFailure", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/testscripts/RDKB/component/sysutil/TS_SANITY_CheckErrorLogs_AfterDeviceNameSpaceQuery.py", "pattern": "/^        getFailure =0;$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "getresult", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/testscripts/RDKB/component/sysutil/TS_SANITY_CheckErrorLogs_AfterDeviceNameSpaceQuery.py", "pattern": "/^        getresult = [];$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "ip", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/testscripts/RDKB/component/sysutil/TS_SANITY_CheckErrorLogs_AfterDeviceNameSpaceQuery.py", "pattern": "/^ip = <ipaddress>$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "loadmodulestatus", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/testscripts/RDKB/component/sysutil/TS_SANITY_CheckErrorLogs_AfterDeviceNameSpaceQuery.py", "pattern": "/^loadmodulestatus =obj.getLoadModuleResult();$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "loadmodulestatus1", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/testscripts/RDKB/component/sysutil/TS_SANITY_CheckErrorLogs_AfterDeviceNameSpaceQuery.py", "pattern": "/^loadmodulestatus1 =obj1.getLoadModuleResult();$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "logFile", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/testscripts/RDKB/component/sysutil/TS_SANITY_CheckErrorLogs_AfterDeviceNameSpaceQuery.py", "pattern": "/^        logFile = \"\\/rdklogs\\/logs\\/\";$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "logMsg", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/testscripts/RDKB/component/sysutil/TS_SANITY_CheckErrorLogs_AfterDeviceNameSpaceQuery.py", "pattern": "/^        logMsg = \"Failed to get parameter value\";$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "logresult", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/testscripts/RDKB/component/sysutil/TS_SANITY_CheckErrorLogs_AfterDeviceNameSpaceQuery.py", "pattern": "/^        logresult = []$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "obj", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/testscripts/RDKB/component/sysutil/TS_SANITY_CheckErrorLogs_AfterDeviceNameSpaceQuery.py", "pattern": "/^obj = tdklib.TDKScriptingLibrary(\"sysutil\",\"1\");$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "obj1", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/testscripts/RDKB/component/sysutil/TS_SANITY_CheckErrorLogs_AfterDeviceNameSpaceQuery.py", "pattern": "/^obj1= tdklib.TDKScriptingLibrary(\"tdkbtr181\",\"1\");$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "paramList", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/testscripts/RDKB/component/sysutil/TS_SANITY_CheckErrorLogs_AfterDeviceNameSpaceQuery.py", "pattern": "/^    paramList = paramList.replace(\"\\\\\\\\n\", \"\");$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "paramList", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/testscripts/RDKB/component/sysutil/TS_SANITY_CheckErrorLogs_AfterDeviceNameSpaceQuery.py", "pattern": "/^    paramList = paramList.split(\",\");$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "paramList", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/testscripts/RDKB/component/sysutil/TS_SANITY_CheckErrorLogs_AfterDeviceNameSpaceQuery.py", "pattern": "/^    paramList = tdkTestObj.getResultDetails().strip();$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "patternFound", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/testscripts/RDKB/component/sysutil/TS_SANITY_CheckErrorLogs_AfterDeviceNameSpaceQuery.py", "pattern": "/^            patternFound = 1;$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "patternFound", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/testscripts/RDKB/component/sysutil/TS_SANITY_CheckErrorLogs_AfterDeviceNameSpaceQuery.py", "pattern": "/^        patternFound =0;$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "port", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/testscripts/RDKB/component/sysutil/TS_SANITY_CheckErrorLogs_AfterDeviceNameSpaceQuery.py", "pattern": "/^port = <port>$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "query", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/testscripts/RDKB/component/sysutil/TS_SANITY_CheckErrorLogs_AfterDeviceNameSpaceQuery.py", "pattern": "/^        query=\"grep -rin \\\\\"%s\\\\\" \\\\\"%s\\\\\"\" %(logMsg,logFile);$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "tdkTestObj", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/testscripts/RDKB/component/sysutil/TS_SANITY_CheckErrorLogs_AfterDeviceNameSpaceQuery.py", "pattern": "/^            tdkTestObj= obj1.createTestStep('TDKB_TR181Stub_Get');$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "tdkTestObj", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/testscripts/RDKB/component/sysutil/TS_SANITY_CheckErrorLogs_AfterDeviceNameSpaceQuery.py", "pattern": "/^        tdkTestObj = obj.createTestStep('ExecuteCmd');$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "tdkTestObj", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/testscripts/RDKB/component/sysutil/TS_SANITY_CheckErrorLogs_AfterDeviceNameSpaceQuery.py", "pattern": "/^    tdkTestObj = obj.createTestStep('ExecuteCmd');$/", "language": "Python", "kind": "variable"}], "hash": "3d18dbb5cf9af0a22ce0f5664dffef63", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "rdkb/tools/tdkb/testscripts/RDKB/component/sysutil/TS_SANITY_CheckErrorLogs_AfterDeviceNameSpaceQuery.py", "fields": [{"name": "Namespaces = \"sh %s\\/tdk_utility.sh parseConfigFile NAMESPACES\" %TDK_PATH;", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "actualresult = tdkTestObj.getResult();", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "details = tdkTestObj.getResultDetails().strip().replace(\"\\\\\\\\n\",\"\");", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "expectedresult=\"SUCCESS\";", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "getFailure =1;", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "getFailure =0;", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "getresult = [];", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "ip = <ipaddress>", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "loadmodulestatus =obj.getLoadModuleResult();", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "loadmodulestatus1 =obj1.getLoadModuleResult();", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "logFile = \"\\/rdklogs\\/logs\\/\";", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "logMsg = \"Failed to get parameter value\";", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "logresult = []", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "obj = tdklib.TDKScriptingLibrary(\"sysutil\",\"1\");", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "obj1= tdklib.TDKScriptingLibrary(\"tdkbtr181\",\"1\");", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "paramList = paramList.replace(\"\\\\\\\\n\", \"\");", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "paramList = paramList.split(\",\");", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "paramList = tdkTestObj.getResultDetails().strip();", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "patternFound = 1;", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "patternFound =0;", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "port = <port>", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "query=\"grep -rin \\\\\"%s\\\\\" \\\\\"%s\\\\\"\" %(logMsg,logFile);", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "tdkTestObj= obj1.createTestStep('TDKB_TR181Stub_Get');", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "tdkTestObj = obj.createTestStep('ExecuteCmd');", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"18056": ""}]}