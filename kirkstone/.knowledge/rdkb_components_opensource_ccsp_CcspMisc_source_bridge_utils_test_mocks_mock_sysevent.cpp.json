{"is_source_file": true, "format": "C++", "description": "This file is a test mock implementation for sysevent functions, including external C functions for open, close, get, and set operations related to system events. It sets up external references to a mock object and forwards calls to it.", "external_files": ["mocks/mock_sysevent.h"], "external_methods": ["SyseventMock::sysevent_open", "SyseventMock::sysevent_close", "SyseventMock::sysevent_get", "SyseventMock::sysevent_set"], "published": [], "classes": [], "methods": [{"name": "int sysevent_open(char * ip,unsigned short port,int version,char * id,token_t * token)", "description": "C function that opens a system event connection, delegated to the mock object.", "scope": "", "scopeKind": ""}, {"name": "int sysevent_close(const int fd,const token_t token)", "description": "C function that closes a system event connection, delegated to the mock object.", "scope": "", "scopeKind": ""}, {"name": "int sysevent_get(const int fd,const token_t token,const char * inbuf,char * outbuf,int outbytes)", "description": "C function that retrieves system event data, delegated to the mock object.", "scope": "", "scopeKind": ""}, {"name": "int sysevent_set(const int fd,const token_t token,const char * name,const char * value,int conf_req)", "description": "C function that sets system event data, delegated to the mock object.", "scope": "", "scopeKind": ""}], "calls": ["g_syseventMock->sysevent_open", "g_syseventMock->sysevent_close", "g_syseventMock->sysevent_get", "g_syseventMock->sysevent_set"], "search-terms": ["mock_sysevent", "sysevent_open", "sysevent_close", "sysevent_get", "sysevent_set", "mock"], "state": 2, "file_id": 9848, "knowledge_revision": 22852, "git_revision": "", "ctags": [{"_type": "tag", "name": "sysevent_close", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspMisc/source/bridge_utils/test/mocks/mock_sysevent.cpp", "pattern": "/^extern \"C\" int sysevent_close(const int fd, const token_t token)$/", "language": "C++", "typeref": "typename:int", "kind": "function", "signature": "(const int fd,const token_t token)"}, {"_type": "tag", "name": "sysevent_get", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspMisc/source/bridge_utils/test/mocks/mock_sysevent.cpp", "pattern": "/^extern \"C\" int sysevent_get(const int fd, const token_t token, const char *inbuf, char *outbuf, /", "language": "C++", "typeref": "typename:int", "kind": "function", "signature": "(const int fd,const token_t token,const char * inbuf,char * outbuf,int outbytes)"}, {"_type": "tag", "name": "sysevent_open", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspMisc/source/bridge_utils/test/mocks/mock_sysevent.cpp", "pattern": "/^extern \"C\" int sysevent_open(char *ip, unsigned short port, int version, char *id, token_t *toke/", "language": "C++", "typeref": "typename:int", "kind": "function", "signature": "(char * ip,unsigned short port,int version,char * id,token_t * token)"}, {"_type": "tag", "name": "sysevent_set", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspMisc/source/bridge_utils/test/mocks/mock_sysevent.cpp", "pattern": "/^extern \"C\" int sysevent_set(const int fd, const token_t token, const char *name, const char *val/", "language": "C++", "typeref": "typename:int", "kind": "function", "signature": "(const int fd,const token_t token,const char * name,const char * value,int conf_req)"}], "hash": "124a5dd6eed61879674d9da194dfd741", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "rdkb/components/opensource/ccsp/CcspMisc/source/bridge_utils/test/mocks/mock_sysevent.cpp", "revision_history": [{"22852": ""}]}