{"is_source_file": true, "format": "C++ header file", "description": "This file defines a mock class `CellularAPIMock` implementing the `CellularAPIInterface` interface for unit testing purposes. It includes virtual method declarations for various cellular API functions, mock method implementations, and external includes such as gtest and gmock frameworks.", "external_files": ["<gtest/gtest.h>", "<gmock/gmock.h>", "<pthread.h>", "<rbus.h>", "cellular_hal.h", "cellularmgr_bus_utils.h", "cellularmgr_sm.h", "cellularmgr_rbus_events.h"], "external_methods": ["gtest/gtest.h", "gmock/gmock.h", "pthread_create", "rbus.h", "cellular_hal.h", "cellularmgr_bus_utils.h", "cellularmgr_sm.h", "cellularmgr_rbus_events.h"], "published": ["CellularAPIInterface", "CellularAPIMock", "cellular_hal_get_cell_location_info", "cellular_hal_get_device_imei", "cellular_hal_IsModemControlInterfaceOpened", "CellularMgr_RdkBus_GetParamValuesFromDB", "pthread_create", "CellularMgr_RdkBus_GetParamValue", "CellularMgr_RdkBus_SetParamValue", "cellular_hal_get_profile_list", "cellular_hal_profile_create", "cellular_hal_profile_delete", "cellular_hal_profile_modify", "cellular_hal_get_signal_info", "cellular_hal_modem_factory_reset", "cellular_hal_modem_reset", "cellular_get_serving_info", "CellularMgrSMGetCellularEnable", "cellular_hal_set_modem_operating_configuration", "cellular_hal_get_device_imei_sv", "cellular_hal_get_modem_current_iccid", "CellularMgrSMGetCurrentState", "cellular_hal_get_packet_statistics", "cellular_hal_get_current_modem_interface_status", "cellular_hal_set_modem_network_attach", "cellular_hal_set_modem_network_detach", "cellular_hal_sim_power_enable", "cellular_hal_get_total_no_of_uicc_slots", "cellular_hal_get_uicc_slot_info", "cellular_hal_get_active_card_status", "cellular_hal_get_modem_firmware_version", "cellular_hal_get_current_plmn_information", "cellular_hal_get_available_networks_information", "cellular_hal_get_modem_supported_radio_technology", "cellular_hal_get_modem_preferred_radio_technology", "cellular_hal_set_modem_preferred_radio_technology", "cellular_hal_get_modem_current_radio_technology"], "classes": [{"name": "CellularAPIInterface", "description": "An abstract interface class defining cellular API functions for mocking purposes."}, {"name": "CellularAPIMock", "description": "A mock implementation of the `CellularAPIInterface` using Google Mock to facilitate unit testing of components that depend on cellular API functions."}], "methods": [{"name": "cellular_hal_get_cell_location_info", "description": "Retrieves cellular location information."}, {"name": "cellular_hal_get_device_imei", "description": "Retrieves the device IMEI."}, {"name": "cellular_hal_IsModemControlInterfaceOpened", "description": "Checks if the modem control interface is open."}, {"name": "CellularMgr_RdkBus_GetParamValuesFromDB", "description": "Gets parameter values from the database."}, {"name": "pthread_create", "description": "Creates a new thread."}, {"name": "CellularMgr_RdkBus_GetParamValue", "description": "Retrieves a parameter value."}, {"name": "CellularMgr_RdkBus_SetParamValue", "description": "Sets a parameter value."}, {"name": "cellular_hal_get_profile_list", "description": "Gets list of cellular profiles."}, {"name": "cellular_hal_profile_create", "description": "Creates a cellular profile."}, {"name": "cellular_hal_profile_delete", "description": "Deletes a cellular profile."}, {"name": "cellular_hal_profile_modify", "description": "Modifies a cellular profile."}, {"name": "cellular_hal_get_signal_info", "description": "Retrieves cellular signal information."}, {"name": "cellular_hal_modem_factory_reset", "description": "Performs a factory reset of the modem."}, {"name": "cellular_hal_modem_reset", "description": "Resets the modem."}, {"name": "cellular_get_serving_info", "description": "Gets serving cell information."}, {"name": "CellularMgrSMGetCellularEnable", "description": "Checks if cellular is enabled."}, {"name": "cellular_hal_set_modem_operating_configuration", "description": "Sets modem operating configuration."}, {"name": "cellular_hal_get_device_imei_sv", "description": "Retrieves device IMEI sub-version."}, {"name": "cellular_hal_get_modem_current_iccid", "description": "Retrieves ICCID of the modem."}, {"name": "CellularMgrSMGetCurrentState", "description": "Gets the current state of the cellular state machine."}, {"name": "cellular_hal_get_packet_statistics", "description": "Retrieves packet statistics."}, {"name": "cellular_hal_get_current_modem_interface_status", "description": "Gets current modem interface status."}, {"name": "cellular_hal_set_modem_network_attach", "description": "Attaches modem to network."}, {"name": "cellular_hal_set_modem_network_detach", "description": "Detaches modem from network."}, {"name": "cellular_hal_sim_power_enable", "description": "Enables or disables SIM power."}, {"name": "cellular_hal_get_total_no_of_uicc_slots", "description": "Gets total number of UICC slots."}, {"name": "cellular_hal_get_uicc_slot_info", "description": "Gets information about a specific UICC slot."}, {"name": "cellular_hal_get_active_card_status", "description": "Retrieves active card status."}, {"name": "cellular_hal_get_modem_firmware_version", "description": "Gets firmware version of the modem."}, {"name": "cellular_hal_get_current_plmn_information", "description": "Retrieves current PLMN information."}, {"name": "cellular_hal_get_available_networks_information", "description": "Gets available network information."}, {"name": "cellular_hal_get_modem_supported_radio_technology", "description": "Retrieves supported radio technologies."}, {"name": "cellular_hal_get_modem_preferred_radio_technology", "description": "Retrieves preferred radio technology."}, {"name": "cellular_hal_set_modem_preferred_radio_technology", "description": "Sets preferred radio technology."}, {"name": "cellular_hal_get_modem_current_radio_technology", "description": "Gets current radio technology."}, {"name": "~CellularAPIInterface()", "scope": "CellularAPIInterface", "scopeKind": "class", "description": "unavailable"}, {"name": "~CellularAPIMock()", "scope": "CellularAPIMock", "scopeKind": "class", "description": "unavailable"}], "calls": ["gtest/gtest.h", "gmock/gmock.h", "pthread_create", "rbus.h", "cellular_hal.h", "cellularmgr_bus_utils.h", "cellularmgr_sm.h", "cellularmgr_rbus_events.h"], "search-terms": ["CellularAPIMock", "cellular_hal", "mock class", "gmock", "cellular_api"], "state": 2, "file_id": 6956, "knowledge_revision": 20038, "git_revision": "", "ctags": [{"_type": "tag", "name": "CellularAPIInterface", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/RdkCellularManager/source/test/mocks/cellular_api_mock.h", "pattern": "/^class CellularAPIInterface {$/", "language": "C++", "kind": "class"}, {"_type": "tag", "name": "CellularAPIMock", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/RdkCellularManager/source/test/mocks/cellular_api_mock.h", "pattern": "/^class CellularAPIMock: public CellularAPIInterface {$/", "language": "C++", "kind": "class"}, {"_type": "tag", "name": "MOCK_CELL_API_H", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/RdkCellularManager/source/test/mocks/cellular_api_mock.h", "pattern": "/^#define MOCK_CELL_API_H$/", "language": "C++", "kind": "macro"}, {"_type": "tag", "name": "~CellularAPIInterface", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/RdkCellularManager/source/test/mocks/cellular_api_mock.h", "pattern": "/^        virtual ~CellularAPIInterface() {}$/", "language": "C++", "kind": "function", "signature": "()", "scope": "CellularAPIInterface", "scopeKind": "class"}, {"_type": "tag", "name": "~CellularAPIMock", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/RdkCellularManager/source/test/mocks/cellular_api_mock.h", "pattern": "/^        virtual ~CellularAPIMock() {}$/", "language": "C++", "kind": "function", "signature": "()", "scope": "CellularAPIMock", "scopeKind": "class"}], "hash": "da534582b5304168122c454335f8f031", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "rdkb/components/opensource/ccsp/RdkCellularManager/source/test/mocks/cellular_api_mock.h", "revision_history": [{"20038": ""}]}