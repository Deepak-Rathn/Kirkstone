{"is_source_file": true, "format": "C", "description": "This file provides a stub implementation of Ethernet Switch control and management functions for a CCSP component on a platform-dependent environment. It includes functions to initialize the Ethernet switch, get/set port status and configuration, manage port admin status, retrieve connected device information, and handle Ethernet WAN settings. Additionally, it contains platform-specific code for Raspberry Pi interfaces and network status detection.", "external_files": ["ccsp_hal_ethsw.h"], "external_methods": ["printf", "access", "popen", "fgets", "pclose", "system", "is_interface_exists", "rpiNet_isInterfaceLinkUp"], "published": ["INT", "CCSP_HAL_ETHSW_ADMIN_STATUS", "CCSP_HAL_ETHSW_PORT", "CCSP_HAL_ETHSW_LINK_RATE", "CCSP_HAL_ETHSW_DUPLEX_MODE", "CCSP_HAL_ETHSW_LINK_STATUS", "BOOLEAN", "UINT", "eth_device_t"], "classes": [], "methods": [{"name": "int is_interface_exists(const char * fname)", "description": "Checks if a specified network interface exists by testing accessibility.", "scope": "", "scopeKind": ""}, {"name": "INT CcspHalEthSwInit(void)", "description": "Initializes the Ethernet switch subsystem, starts background threads if platform supports.", "scope": "", "scopeKind": ""}, {"name": "INT CcspHalEthSwGetPortStatus(CCSP_HAL_ETHSW_PORT PortId,PCCSP_HAL_ETHSW_LINK_RATE pLinkRate,PCCSP_HAL_ETHSW_DUPLEX_MODE pDuplexMode,PCCSP_HAL_ETHSW_LINK_STATUS pStatus)", "description": "Retrieves current port status including link rate, duplex mode, and link status.", "scope": "", "scopeKind": ""}, {"name": "INT CcspHalEthSwGetPortCfg(CCSP_HAL_ETHSW_PORT PortId,PCCSP_HAL_ETHSW_LINK_RATE pLinkRate,PCCSP_HAL_ETHSW_DUPLEX_MODE pDuplexMode)", "description": "Retrieves current port configuration settings.", "scope": "", "scopeKind": ""}, {"name": "INT CcspHalEthSwSetPortCfg(CCSP_HAL_ETHSW_PORT PortId,CCSP_HAL_ETHSW_LINK_RATE LinkRate,CCSP_HAL_ETHSW_DUPLEX_MODE DuplexMode)", "description": "Sets port configuration such as link speed and duplex mode.", "scope": "", "scopeKind": ""}, {"name": "INT CcspHalEthSwGetPortAdminStatus(CCSP_HAL_ETHSW_PORT PortId,PCCSP_HAL_ETHSW_ADMIN_STATUS pAdminStatus)", "description": "Retrieves administrative status of a port.", "scope": "", "scopeKind": ""}, {"name": "INT CcspHalEthSwSetPortAdminStatus(CCSP_HAL_ETHSW_PORT PortId,CCSP_HAL_ETHSW_ADMIN_STATUS AdminStatus)", "description": "Sets administrative status (enable/disable) for a port.", "scope": "", "scopeKind": ""}, {"name": "INT CcspHalEthSwSetAgingSpeed(CCSP_HAL_ETHSW_PORT PortId,INT AgingSpeed)", "description": "Configures port aging speed (stub implementation).", "scope": "", "scopeKind": ""}, {"name": "INT CcspHalEthSwLocatePortByMacAddress(unsigned char * pMacAddr,INT * pPortId)", "description": "Finds the port associated with a given MAC address.", "scope": "", "scopeKind": ""}, {"name": "void GetInterfaceName(char * interface_name,char * conf_file)", "description": "Parses configuration file to retrieve interface name.", "scope": "", "scopeKind": ""}, {"name": "INT CcspHalExtSw_getAssociatedDevice(ULONG * output_array_size,eth_device_t ** output_struct)", "description": "Gathers information about connected wired devices.", "scope": "", "scopeKind": ""}, {"name": "INT CcspHalExtSw_getEthWanEnable(BOOLEAN * enable)", "description": "Returns the status of Ethernet WAN enable (stub as always enabled).", "scope": "", "scopeKind": ""}, {"name": "INT CcspHalExtSw_getEthWanPort(UINT * Port)", "description": "Returns the ETH WAN port number (stub).", "scope": "", "scopeKind": ""}, {"name": "INT CcspHalExtSw_setEthWanEnable(BOOLEAN enable)", "description": "Sets ETH WAN enable status (stub).", "scope": "", "scopeKind": ""}, {"name": "INT CcspHalExtSw_setEthWanPort(UINT Port)", "description": "Configures ETH WAN port (stub).", "scope": "", "scopeKind": ""}, {"name": "bool rpiNet_isInterfaceLinkUp(const char * ifname)", "description": "Checks if a Raspberry Pi network interface link is active.", "scope": "", "scopeKind": ""}, {"name": "INT GWP_GetEthWanLinkStatus()", "description": "Retrieves the current status of the ETH WAN link on Raspberry Pi.", "scope": "", "scopeKind": ""}, {"name": "INT GWP_GetEthWanInterfaceName(unsigned char * Interface,ULONG maxSize)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "void GWP_RegisterEthWan_Callback(appCallBack * obj)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "void * ethsw_thread_main(void * context)", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["printf", "access", "popen", "fgets", "pclose", "system", "socket", "ioctl", "close", "strchr", "strtok", "strtok_r", "strstr", "sscanf", "strncmp", "memcpy", "calloc", "remove", "system", "WEXITSTATUS"], "search-terms": ["ccsp_ethsw", "Ethernet Port Status", "Port Admin Control", "MAC Address to Port", "Raspberry Pi network interface", "Ethernet WAN management", "CCSP_HAL_ETHSW", "Network interface check", "Ethernet port configuration", "Ethernet switch stub"], "state": 2, "file_id": 7015, "knowledge_revision": 20100, "git_revision": "", "ctags": [{"_type": "tag", "name": "CcspHalEthSwGetPortAdminStatus", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/hal/source/bridgeutil/devices_rpi/source/hal-ethsw/ccsp_hal_ethsw.c", "pattern": "/^CcspHalEthSwGetPortAdminStatus$/", "language": "C", "typeref": "typename:INT", "kind": "function", "signature": "(CCSP_HAL_ETHSW_PORT PortId,PCCSP_HAL_ETHSW_ADMIN_STATUS pAdminStatus)"}, {"_type": "tag", "name": "CcspHalEthSwGetPortCfg", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/hal/source/bridgeutil/devices_rpi/source/hal-ethsw/ccsp_hal_ethsw.c", "pattern": "/^CcspHalEthSwGetPortCfg$/", "language": "C", "typeref": "typename:INT", "kind": "function", "signature": "(CCSP_HAL_ETHSW_PORT PortId,PCCSP_HAL_ETHSW_LINK_RATE pLinkRate,PCCSP_HAL_ETHSW_DUPLEX_MODE pDuplexMode)"}, {"_type": "tag", "name": "CcspHalEthSwGetPortStatus", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/hal/source/bridgeutil/devices_rpi/source/hal-ethsw/ccsp_hal_ethsw.c", "pattern": "/^CcspHalEthSwGetPortStatus$/", "language": "C", "typeref": "typename:INT", "kind": "function", "signature": "(CCSP_HAL_ETHSW_PORT PortId,PCCSP_HAL_ETHSW_LINK_RATE pLinkRate,PCCSP_HAL_ETHSW_DUPLEX_MODE pDuplexMode,PCCSP_HAL_ETHSW_LINK_STATUS pStatus)"}, {"_type": "tag", "name": "CcspHalEthSwInit", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/hal/source/bridgeutil/devices_rpi/source/hal-ethsw/ccsp_hal_ethsw.c", "pattern": "/^CcspHalEthSwInit$/", "language": "C", "typeref": "typename:INT", "kind": "function", "signature": "(void)"}, {"_type": "tag", "name": "CcspHalEthSwLocatePortByMacAddress", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/hal/source/bridgeutil/devices_rpi/source/hal-ethsw/ccsp_hal_ethsw.c", "pattern": "/^CcspHalEthSwLocatePortByMacAddress$/", "language": "C", "typeref": "typename:INT", "kind": "function", "signature": "(unsigned char * pMacAddr,INT * pPortId)"}, {"_type": "tag", "name": "CcspHalEthSwSetAgingSpeed", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/hal/source/bridgeutil/devices_rpi/source/hal-ethsw/ccsp_hal_ethsw.c", "pattern": "/^CcspHalEthSwSetAgingSpeed$/", "language": "C", "typeref": "typename:INT", "kind": "function", "signature": "(CCSP_HAL_ETHSW_PORT PortId,INT AgingSpeed)"}, {"_type": "tag", "name": "CcspHalEthSwSetPortAdminStatus", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/hal/source/bridgeutil/devices_rpi/source/hal-ethsw/ccsp_hal_ethsw.c", "pattern": "/^CcspHalEthSwSetPortAdminStatus$/", "language": "C", "typeref": "typename:INT", "kind": "function", "signature": "(CCSP_HAL_ETHSW_PORT PortId,CCSP_HAL_ETHSW_ADMIN_STATUS AdminStatus)"}, {"_type": "tag", "name": "CcspHalEthSwSetPortCfg", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/hal/source/bridgeutil/devices_rpi/source/hal-ethsw/ccsp_hal_ethsw.c", "pattern": "/^CcspHalEthSwSetPortCfg$/", "language": "C", "typeref": "typename:INT", "kind": "function", "signature": "(CCSP_HAL_ETHSW_PORT PortId,CCSP_HAL_ETHSW_LINK_RATE LinkRate,CCSP_HAL_ETHSW_DUPLEX_MODE DuplexMode)"}, {"_type": "tag", "name": "CcspHalEthSwTrace", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/hal/source/bridgeutil/devices_rpi/source/hal-ethsw/ccsp_hal_ethsw.c", "pattern": "/^#define  CcspHalEthSwTrace(/", "file": true, "language": "C", "kind": "macro", "signature": "(msg)"}, {"_type": "tag", "name": "CcspHalExtSw_getAssociatedDevice", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/hal/source/bridgeutil/devices_rpi/source/hal-ethsw/ccsp_hal_ethsw.c", "pattern": "/^INT CcspHalExtSw_getAssociatedDevice(ULONG *output_array_size, eth_device_t **output_struct)$/", "language": "C", "typeref": "typename:INT", "kind": "function", "signature": "(ULONG * output_array_size,eth_device_t ** output_struct)"}, {"_type": "tag", "name": "CcspHalExtSw_getEthWanEnable", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/hal/source/bridgeutil/devices_rpi/source/hal-ethsw/ccsp_hal_ethsw.c", "pattern": "/^INT CcspHalExtSw_getEthWanEnable(BOOLEAN *enable)$/", "language": "C", "typeref": "typename:INT", "kind": "function", "signature": "(BOOLEAN * enable)"}, {"_type": "tag", "name": "CcspHalExtSw_getEthWanPort", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/hal/source/bridgeutil/devices_rpi/source/hal-ethsw/ccsp_hal_ethsw.c", "pattern": "/^INT CcspHalExtSw_getEthWanPort(UINT *Port)$/", "language": "C", "typeref": "typename:INT", "kind": "function", "signature": "(UINT * Port)"}, {"_type": "tag", "name": "CcspHalExtSw_setEthWanEnable", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/hal/source/bridgeutil/devices_rpi/source/hal-ethsw/ccsp_hal_ethsw.c", "pattern": "/^INT CcspHalExtSw_setEthWanEnable(BOOLEAN enable)$/", "language": "C", "typeref": "typename:INT", "kind": "function", "signature": "(BOOLEAN enable)"}, {"_type": "tag", "name": "CcspHalExtSw_setEthWanPort", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/hal/source/bridgeutil/devices_rpi/source/hal-ethsw/ccsp_hal_ethsw.c", "pattern": "/^INT CcspHalExtSw_setEthWanPort(UINT Port)$/", "language": "C", "typeref": "typename:INT", "kind": "function", "signature": "(UINT Port)"}, {"_type": "tag", "name": "ETH_INITIALIZE", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/hal/source/bridgeutil/devices_rpi/source/hal-ethsw/ccsp_hal_ethsw.c", "pattern": "/^#define  ETH_INITIALIZE /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "ETH_WAN_IFNAME", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/hal/source/bridgeutil/devices_rpi/source/hal-ethsw/ccsp_hal_ethsw.c", "pattern": "/^#define  ETH_WAN_IFNAME /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "ETH_WAN_INTERFACE", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/hal/source/bridgeutil/devices_rpi/source/hal-ethsw/ccsp_hal_ethsw.c", "pattern": "/^#define ETH_WAN_INTERFACE /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "GWP_GetEthWanInterfaceName", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/hal/source/bridgeutil/devices_rpi/source/hal-ethsw/ccsp_hal_ethsw.c", "pattern": "/^    GWP_GetEthWanInterfaceName$/", "language": "C", "typeref": "typename:INT", "kind": "function", "signature": "(unsigned char * Interface,ULONG maxSize)"}, {"_type": "tag", "name": "GWP_GetEthWanLinkStatus", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/hal/source/bridgeutil/devices_rpi/source/hal-ethsw/ccsp_hal_ethsw.c", "pattern": "/^INT GWP_GetEthWanLinkStatus()$/", "language": "C", "typeref": "typename:INT", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "GWP_RegisterEthWan_Callback", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/hal/source/bridgeutil/devices_rpi/source/hal-ethsw/ccsp_hal_ethsw.c", "pattern": "/^void GWP_RegisterEthWan_Callback(appCallBack *obj)$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(appCallBack * obj)"}, {"_type": "tag", "name": "GetInterfaceName", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/hal/source/bridgeutil/devices_rpi/source/hal-ethsw/ccsp_hal_ethsw.c", "pattern": "/^void GetInterfaceName(char *interface_name, char *conf_file)$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(char * interface_name,char * conf_file)"}, {"_type": "tag", "name": "LINK_VALUE_SIZE", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/hal/source/bridgeutil/devices_rpi/source/hal-ethsw/ccsp_hal_ethsw.c", "pattern": "/^#define  LINK_VALUE_SIZE /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "LM_ARP_ENTRY_FORMAT", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/hal/source/bridgeutil/devices_rpi/source/hal-ethsw/ccsp_hal_ethsw.c", "pattern": "/^#define LM_ARP_ENTRY_FORMAT /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "MACADDRESS_SIZE", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/hal/source/bridgeutil/devices_rpi/source/hal-ethsw/ccsp_hal_ethsw.c", "pattern": "/^#define MACADDRESS_SIZE /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "MAX_BUF_SIZE", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/hal/source/bridgeutil/devices_rpi/source/hal-ethsw/ccsp_hal_ethsw.c", "pattern": "/^#define MAX_BUF_SIZE /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "admin_status", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/hal/source/bridgeutil/devices_rpi/source/hal-ethsw/ccsp_hal_ethsw.c", "pattern": "/^CCSP_HAL_ETHSW_ADMIN_STATUS admin_status;$/", "language": "C", "typeref": "typename:CCSP_HAL_ETHSW_ADMIN_STATUS", "kind": "variable"}, {"_type": "tag", "name": "ethWanCallbacks", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/hal/source/bridgeutil/devices_rpi/source/hal-ethsw/ccsp_hal_ethsw.c", "pattern": "/^appCallBack ethWanCallbacks;$/", "language": "C", "typeref": "typename:appCallBack", "kind": "variable"}, {"_type": "tag", "name": "ethsw_thread_main", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/hal/source/bridgeutil/devices_rpi/source/hal-ethsw/ccsp_hal_ethsw.c", "pattern": "/^void *ethsw_thread_main(void *context __attribute__((unused)))$/", "language": "C", "typeref": "typename:void *", "kind": "function", "signature": "(void * context)"}, {"_type": "tag", "name": "ethsw_tid", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/hal/source/bridgeutil/devices_rpi/source/hal-ethsw/ccsp_hal_ethsw.c", "pattern": "/^static pthread_t ethsw_tid;$/", "file": true, "language": "C", "typeref": "typename:pthread_t", "kind": "variable"}, {"_type": "tag", "name": "hal_init_done", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/hal/source/bridgeutil/devices_rpi/source/hal-ethsw/ccsp_hal_ethsw.c", "pattern": "/^static int hal_init_done = 0;$/", "file": true, "language": "C", "typeref": "typename:int", "kind": "variable"}, {"_type": "tag", "name": "is_interface_exists", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/hal/source/bridgeutil/devices_rpi/source/hal-ethsw/ccsp_hal_ethsw.c", "pattern": "/^int is_interface_exists(const char *fname)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(const char * fname)"}, {"_type": "tag", "name": "rpiNet_isInterfaceLinkUp", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/hal/source/bridgeutil/devices_rpi/source/hal-ethsw/ccsp_hal_ethsw.c", "pattern": "/^bool rpiNet_isInterfaceLinkUp(const char *ifname)$/", "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(const char * ifname)"}], "hash": "5f3e5b00d69373b14db7279c139584cf", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "rdkb/components/opensource/ccsp/hal/source/bridgeutil/devices_rpi/source/hal-ethsw/ccsp_hal_ethsw.c", "fields": [{"name": "CCSP_HAL_ETHSW_ADMIN_STATUS admin_status", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "appCallBack ethWanCallbacks", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "pthread_t ethsw_tid", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int hal_init_done", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"20100": ""}]}