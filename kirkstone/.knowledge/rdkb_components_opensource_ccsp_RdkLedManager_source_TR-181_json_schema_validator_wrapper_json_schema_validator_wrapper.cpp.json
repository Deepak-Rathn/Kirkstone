{"is_source_file": true, "format": "C++", "description": "This file implements a JSON schema validator wrapper using the nlohmann/json-schema library. It defines functions for initializing, terminating, and validating JSON data against a schema, including schema loading and error handling. The code includes a custom error handler class and manages a global validator object.", "external_files": ["json_schema_validator_wrapper.h", "<nlohmann/json-schema.hpp>", "<fstream>", "<iostream>", "<iomanip>"], "external_methods": ["nlohmann::json::parse", "nlohmann::json_schema::json_validator::validate", "nlohmann::json_schema::json_validator::set_root_schema"], "published": ["json_validator_init", "json_validator_terminate", "json_validator_validate_request"], "classes": [{"name": "custom_error_handler", "description": "A subclass of nlohmann::json_schema::basic_error_handler that overrides the error method to output error details to standard error."}], "methods": [{"name": "int json_validator_init(const char * json_schema_path)", "description": "Initializes the JSON validator by allocating the validator object and loading the schema from the specified path.", "scope": "", "scopeKind": ""}, {"name": "int json_validator_terminate()", "description": "Releases the validator object and cleans up resources.", "scope": "", "scopeKind": ""}, {"name": "int json_validator_validate_request(const char * json_string)", "description": "Validates a JSON string against the loaded schema, returning success or error codes.", "scope": "", "scopeKind": ""}, {"name": "int json_validator_populate_schema(const char * json_schema_path)", "description": "Loads and sets the JSON schema from a file path into the validator object.", "scope": "", "scopeKind": ""}, {"name": "void error(const nlohmann::json::json_pointer & ptr,const json & instance,const std::string & message)", "scope": "custom_error_handler", "scopeKind": "class", "description": "unavailable"}], "calls": ["json_validator_populate_schema", "validator->set_root_schema", "validator->validate"], "search-terms": ["json_schema_validator_wrapper.cpp", "json_validator", "schema validation", "nlohmann json schema", "error handler", "C++ JSON schema validation"], "state": 2, "file_id": 6584, "knowledge_revision": 19681, "git_revision": "", "ctags": [{"_type": "tag", "name": "custom_error_handler", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/RdkLedManager/source/TR-181/json_schema_validator_wrapper/json_schema_validator_wrapper.cpp", "pattern": "/^    class custom_error_handler : public nlohmann::json_schema::basic_error_handler$/", "file": true, "language": "C++", "kind": "class"}, {"_type": "tag", "name": "error", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/RdkLedManager/source/TR-181/json_schema_validator_wrapper/json_schema_validator_wrapper.cpp", "pattern": "/^        void error(const nlohmann::json::json_pointer &ptr, const json &instance, const std::str/", "file": true, "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(const nlohmann::json::json_pointer & ptr,const json & instance,const std::string & message)", "scope": "custom_error_handler", "scopeKind": "class"}, {"_type": "tag", "name": "json_validator_init", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/RdkLedManager/source/TR-181/json_schema_validator_wrapper/json_schema_validator_wrapper.cpp", "pattern": "/^    int json_validator_init(const char* json_schema_path)$/", "language": "C++", "typeref": "typename:int", "kind": "function", "signature": "(const char * json_schema_path)"}, {"_type": "tag", "name": "json_validator_populate_schema", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/RdkLedManager/source/TR-181/json_schema_validator_wrapper/json_schema_validator_wrapper.cpp", "pattern": "/^    static int json_validator_populate_schema(const char *json_schema_path)$/", "file": true, "language": "C++", "typeref": "typename:int", "kind": "function", "signature": "(const char * json_schema_path)"}, {"_type": "tag", "name": "json_validator_terminate", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/RdkLedManager/source/TR-181/json_schema_validator_wrapper/json_schema_validator_wrapper.cpp", "pattern": "/^    int json_validator_terminate()$/", "language": "C++", "typeref": "typename:int", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "json_validator_validate_request", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/RdkLedManager/source/TR-181/json_schema_validator_wrapper/json_schema_validator_wrapper.cpp", "pattern": "/^    int json_validator_validate_request(const char *json_string)$/", "language": "C++", "typeref": "typename:int", "kind": "function", "signature": "(const char * json_string)"}, {"_type": "tag", "name": "validator", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/RdkLedManager/source/TR-181/json_schema_validator_wrapper/json_schema_validator_wrapper.cpp", "pattern": "/^    json_validator *validator = NULL;$/", "language": "C++", "typeref": "typename:json_validator *", "kind": "variable"}], "hash": "221ba59b084dcf9598cb86f04a84ff74", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "rdkb/components/opensource/ccsp/RdkLedManager/source/TR-181/json_schema_validator_wrapper/json_schema_validator_wrapper.cpp", "fields": [{"name": "json_validator * validator", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"19681": ""}]}