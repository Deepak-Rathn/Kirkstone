{"is_source_file": true, "format": "C", "description": "This file contains helper functions for constructing URIs, reading and writing device resources, endpoints, and metadata via IPC calls, and extracting identifiers from URIs. It is part of a device SDK and includes functions for device and endpoint URI creation, resource access, and endpoint management.", "external_files": ["deviceHelper.h", "deviceService/deviceService_ipc.h", "icUtil/stringUtils.h", "icLog/logging.h", "commonDeviceDefs.h"], "external_methods": ["deviceService_request_READ_RESOURCE_timeout", "deviceService_request_GET_RESOURCE_timeout", "deviceService_request_READ_METADATA", "deviceService_request_WRITE_METADATA", "deviceService_request_READ_RESOURCE", "deviceService_request_WRITE_RESOURCE", "deviceService_request_GET_RESOURCE_timeout"], "published": ["createDeviceUri", "createEndpointUri", "createDeviceResourceUri", "createDeviceMetadataUri", "createEndpointResourceUri", "createEndpointMetadataUri", "deviceHelperReadEndpointResource", "deviceHelperWriteEndpointResource", "deviceHelperReadDeviceResource", "deviceHelperReadResourceByUri", "deviceHelperGetResourceByUri", "deviceHelperReadMetadataByUri", "deviceHelperWriteMetadataByUri", "deviceHelperReadMetadataByOwner", "deviceHelperWriteMetadataByOwner", "getDeviceUuidFromUri", "getEndpointIdFromUri", "deviceHelperGetDeviceResourceValue", "deviceHelperGetEndpointResourceValue", "deviceHelperGetEndpointByProfile", "deviceHelperIsMultiEndpointCapable"], "classes": [], "methods": [{"name": "char * createDeviceUri(const char * uuid)", "description": "Constructs a URI for a device using UUID.", "scope": "", "scopeKind": ""}, {"name": "char * createEndpointUri(const char * uuid,const char * endpointId)", "description": "Constructs a URI for an endpoint using UUID and endpointId.", "scope": "", "scopeKind": ""}, {"name": "char * createDeviceResourceUri(const char * uuid,const char * resourceId)", "description": "Constructs a URI for a device resource using UUID and resourceId.", "scope": "", "scopeKind": ""}, {"name": "char * createDeviceMetadataUri(const char * uuid,const char * metadataId)", "description": "Constructs a URI for device metadata using UUID and metadataId.", "scope": "", "scopeKind": ""}, {"name": "char * createEndpointResourceUri(const char * uuid,const char * endpointId,const char * resourceId)", "description": "Constructs a URI for an endpoint resource combining endpoint URI and resourceId.", "scope": "", "scopeKind": ""}, {"name": "char * createEndpointMetadataUri(const char * uuid,const char * endpointId,const char * metadataId)", "description": "Constructs a URI for endpoint metadata combining endpoint URI and metadataId.", "scope": "", "scopeKind": ""}, {"name": "bool deviceHelperReadEndpointResource(const char * uuid,const char * endpointId,const char * resourceId,char ** value)", "description": "Reads a resource from a device's endpoint, returning success or failure.", "scope": "", "scopeKind": ""}, {"name": "bool deviceHelperWriteEndpointResource(const char * uuid,const char * endpointId,const char * resourceId,char * value)", "description": "Writes a resource value to a device's endpoint.", "scope": "", "scopeKind": ""}, {"name": "bool deviceHelperReadDeviceResource(const char * uuid,const char * resourceId,char ** value)", "description": "Reads a resource from a device, returning success or failure.", "scope": "", "scopeKind": ""}, {"name": "bool deviceHelperReadResourceByUri(const char * uri,char ** value)", "description": "Reads a resource directly by URI, returning the resource value.", "scope": "", "scopeKind": ""}, {"name": "bool deviceHelperGetResourceByUri(const char * uri,DSResource * resource)", "description": "Fetches resource details for a given URI.", "scope": "", "scopeKind": ""}, {"name": "bool deviceHelperReadMetadataByUri(const char * uri,char ** value)", "description": "Reads metadata value by URI.", "scope": "", "scopeKind": ""}, {"name": "bool deviceHelperWriteMetadataByUri(const char * uri,const char * value)", "description": "Writes metadata value by URI.", "scope": "", "scopeKind": ""}, {"name": "bool deviceHelperReadMetadataByOwner(const char * ownerUri,const char * metadataId,char ** value)", "description": "Reads metadata value specified by owner URI and metadataId.", "scope": "", "scopeKind": ""}, {"name": "bool deviceHelperWriteMetadataByOwner(const char * ownerUri,const char * metadataId,const char * value)", "description": "Writes metadata value specified by owner URI and metadataId.", "scope": "", "scopeKind": ""}, {"name": "bool fetchResource(char * uri,char ** value)", "description": "Helper function to fetch resource content via IPC.", "scope": "", "scopeKind": ""}, {"name": "bool writeResource(char * uri,char * value)", "description": "Helper function to write resource content via IPC.", "scope": "", "scopeKind": ""}, {"name": "char * createResourceUri(const char * ownerUri,const char * resourceId)", "description": "Creates a resource URI given an owner URI and resourceId.", "scope": "", "scopeKind": ""}, {"name": "char * getDeviceUuidFromUri(const char * uri)", "description": "Extracts UUID from device URI.", "scope": "", "scopeKind": ""}, {"name": "char * getEndpointIdFromUri(const char * uri)", "description": "Extracts endpoint ID from endpoint URI.", "scope": "", "scopeKind": ""}, {"name": "const char * deviceHelperGetDeviceResourceValue(DSDevice * device,const char * resourceId,const char * defaultValue)", "description": "Retrieves the resource value from device, defaults if unavailable.", "scope": "", "scopeKind": ""}, {"name": "const char * deviceHelperGetEndpointResourceValue(DSEndpoint * endpoint,const char * resourceId,const char * defaultValue)", "description": "Retrieves the resource value from endpoint, defaults if unavailable.", "scope": "", "scopeKind": ""}, {"name": "DSEndpoint * deviceHelperGetEndpointByProfile(DSDevice * device,const char * endpointProfile)", "description": "Finds first endpoint matching the profile within a device.", "scope": "", "scopeKind": ""}, {"name": "bool deviceHelperIsMultiEndpointCapable(const DSDevice * device)", "description": "Checks if device supports multiple endpoints.", "scope": "", "scopeKind": ""}], "search-terms": ["device resource URI", "endpoint URI", "metadata URI", "resource read/write", "URI construction", "device UUID extraction", "endpoint ID extraction", "IPC resource request", "device helper functions"], "state": 2, "file_id": 613, "knowledge_revision": 13780, "git_revision": "", "ctags": [{"_type": "tag", "name": "LOG_TAG", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/device/helper/c/src/deviceHelper.c", "pattern": "/^#define LOG_TAG /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "READ_RESOURCE_TIMEOUT_SECONDS", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/device/helper/c/src/deviceHelper.c", "pattern": "/^#define READ_RESOURCE_TIMEOUT_SECONDS /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "createDeviceMetadataUri", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/device/helper/c/src/deviceHelper.c", "pattern": "/^char *createDeviceMetadataUri(const char *uuid, const char *metadataId)$/", "language": "C", "typeref": "typename:char *", "kind": "function", "signature": "(const char * uuid,const char * metadataId)"}, {"_type": "tag", "name": "createDeviceResourceUri", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/device/helper/c/src/deviceHelper.c", "pattern": "/^char* createDeviceResourceUri(const char *uuid, const char *resourceId)$/", "language": "C", "typeref": "typename:char *", "kind": "function", "signature": "(const char * uuid,const char * resourceId)"}, {"_type": "tag", "name": "createDeviceUri", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/device/helper/c/src/deviceHelper.c", "pattern": "/^char* createDeviceUri(const char *uuid)$/", "language": "C", "typeref": "typename:char *", "kind": "function", "signature": "(const char * uuid)"}, {"_type": "tag", "name": "createEndpointMetadataUri", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/device/helper/c/src/deviceHelper.c", "pattern": "/^char* createEndpointMetadataUri(const char *uuid, const char *endpointId, const char *metadataId/", "language": "C", "typeref": "typename:char *", "kind": "function", "signature": "(const char * uuid,const char * endpointId,const char * metadataId)"}, {"_type": "tag", "name": "createEndpointResourceUri", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/device/helper/c/src/deviceHelper.c", "pattern": "/^char* createEndpointResourceUri(const char *uuid, const char *endpointId, const char *resourceId/", "language": "C", "typeref": "typename:char *", "kind": "function", "signature": "(const char * uuid,const char * endpointId,const char * resourceId)"}, {"_type": "tag", "name": "createEndpointUri", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/device/helper/c/src/deviceHelper.c", "pattern": "/^char* createEndpointUri(const char *uuid, const char *endpointId)$/", "language": "C", "typeref": "typename:char *", "kind": "function", "signature": "(const char * uuid,const char * endpointId)"}, {"_type": "tag", "name": "createResourceUri", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/device/helper/c/src/deviceHelper.c", "pattern": "/^char* createResourceUri(const char *ownerUri, const char *resourceId)$/", "language": "C", "typeref": "typename:char *", "kind": "function", "signature": "(const char * ownerUri,const char * resourceId)"}, {"_type": "tag", "name": "deviceHelperGetDeviceResourceValue", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/device/helper/c/src/deviceHelper.c", "pattern": "/^const char *deviceHelperGetDeviceResourceValue(DSDevice *device, const char *resourceId, const c/", "language": "C", "typeref": "typename:const char *", "kind": "function", "signature": "(DSDevice * device,const char * resourceId,const char * defaultValue)"}, {"_type": "tag", "name": "deviceHelperGetEndpointByProfile", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/device/helper/c/src/deviceHelper.c", "pattern": "/^DSEndpoint *deviceHelperGetEndpointByProfile(DSDevice *device, const char *endpointProfile)$/", "language": "C", "typeref": "typename:DSEndpoint *", "kind": "function", "signature": "(DSDevice * device,const char * endpointProfile)"}, {"_type": "tag", "name": "deviceHelperGetEndpointResourceValue", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/device/helper/c/src/deviceHelper.c", "pattern": "/^const char *deviceHelperGetEndpointResourceValue(DSEndpoint *endpoint, const char *resourceId, c/", "language": "C", "typeref": "typename:const char *", "kind": "function", "signature": "(DSEndpoint * endpoint,const char * resourceId,const char * defaultValue)"}, {"_type": "tag", "name": "deviceHelperGetResourceByUri", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/device/helper/c/src/deviceHelper.c", "pattern": "/^bool deviceHelperGetResourceByUri(const char *uri,$/", "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(const char * uri,DSResource * resource)"}, {"_type": "tag", "name": "deviceHelperIsMultiEndpointCapable", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/device/helper/c/src/deviceHelper.c", "pattern": "/^bool deviceHelperIsMultiEndpointCapable(const DSDevice *device)$/", "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(const DSDevice * device)"}, {"_type": "tag", "name": "deviceHelperReadDeviceResource", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/device/helper/c/src/deviceHelper.c", "pattern": "/^bool deviceHelperReadDeviceResource(const char *uuid,$/", "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(const char * uuid,const char * resourceId,char ** value)"}, {"_type": "tag", "name": "deviceHelperReadEndpointResource", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/device/helper/c/src/deviceHelper.c", "pattern": "/^bool deviceHelperReadEndpointResource(const char *uuid,$/", "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(const char * uuid,const char * endpointId,const char * resourceId,char ** value)"}, {"_type": "tag", "name": "deviceHelperReadMetadataByOwner", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/device/helper/c/src/deviceHelper.c", "pattern": "/^bool deviceHelperReadMetadataByOwner(const char *ownerUri,$/", "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(const char * ownerUri,const char * metadataId,char ** value)"}, {"_type": "tag", "name": "deviceHelperReadMetadataByUri", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/device/helper/c/src/deviceHelper.c", "pattern": "/^bool deviceHelperReadMetadataByUri(const char *uri,$/", "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(const char * uri,char ** value)"}, {"_type": "tag", "name": "deviceHelperReadResourceByUri", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/device/helper/c/src/deviceHelper.c", "pattern": "/^bool deviceHelperReadResourceByUri(const char *uri,$/", "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(const char * uri,char ** value)"}, {"_type": "tag", "name": "deviceHelperWriteEndpointResource", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/device/helper/c/src/deviceHelper.c", "pattern": "/^bool deviceHelperWriteEndpointResource(const char *uuid,$/", "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(const char * uuid,const char * endpointId,const char * resourceId,char * value)"}, {"_type": "tag", "name": "deviceHelperWriteMetadataByOwner", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/device/helper/c/src/deviceHelper.c", "pattern": "/^bool deviceHelperWriteMetadataByOwner(const char *ownerUri,$/", "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(const char * ownerUri,const char * metadataId,const char * value)"}, {"_type": "tag", "name": "deviceHelperWriteMetadataByUri", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/device/helper/c/src/deviceHelper.c", "pattern": "/^bool deviceHelperWriteMetadataByUri(const char *uri,$/", "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(const char * uri,const char * value)"}, {"_type": "tag", "name": "fetchResource", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/device/helper/c/src/deviceHelper.c", "pattern": "/^static bool fetchResource(char *uri, char **value)$/", "file": true, "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(char * uri,char ** value)"}, {"_type": "tag", "name": "getDeviceUuidFromUri", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/device/helper/c/src/deviceHelper.c", "pattern": "/^char* getDeviceUuidFromUri(const char *uri)$/", "language": "C", "typeref": "typename:char *", "kind": "function", "signature": "(const char * uri)"}, {"_type": "tag", "name": "getEndpointIdFromUri", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/device/helper/c/src/deviceHelper.c", "pattern": "/^char* getEndpointIdFromUri(const char *uri)$/", "language": "C", "typeref": "typename:char *", "kind": "function", "signature": "(const char * uri)"}, {"_type": "tag", "name": "writeResource", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/device/helper/c/src/deviceHelper.c", "pattern": "/^static bool writeResource(char *uri, char *value)$/", "file": true, "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(char * uri,char * value)"}], "hash": "f7b47baab2ae329c4c90054b3fd05636", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "components/opensource/zilker-sdk/source/libs/device/helper/c/src/deviceHelper.c", "revision_history": [{"13780": ""}]}