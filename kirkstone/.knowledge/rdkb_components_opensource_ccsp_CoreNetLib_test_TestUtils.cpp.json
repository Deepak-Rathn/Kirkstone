{"is_source_file": true, "file_id": 5840, "git_revision": "", "state": 1, "description": "", "external_files": [], "external_methods": [], "published": [], "classes": [], "methods": [], "calls": [], "search-terms": [], "ctags": [{"_type": "tag", "name": "addIpAddrSystemCommand", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CoreNetLib/test/TestUtils.cpp", "pattern": "/^bool addIpAddrSystemCommand(const std::string& ipAddr,$/", "language": "C++", "typeref": "typename:bool", "kind": "function", "signature": "(const std::string & ipAddr,int cidr,const std::string & deviceName)"}, {"_type": "tag", "name": "addIpRouteSystemCommand", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CoreNetLib/test/TestUtils.cpp", "pattern": "/^bool addIpRouteSystemCommand(const std::string& dstPrefix,$/", "language": "C++", "typeref": "typename:bool", "kind": "function", "signature": "(const std::string & dstPrefix,const std::string & nextHopAddr,const std::string & deviceName)"}, {"_type": "tag", "name": "addIpRouteSystemCommand", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CoreNetLib/test/TestUtils.cpp", "pattern": "/^bool addIpRouteSystemCommand(const std::string& dstPrefix,$/", "language": "C++", "typeref": "typename:bool", "kind": "function", "signature": "(const std::string & dstPrefix,const std::string & nextHopAddr,const std::string & deviceName,const int metric)"}, {"_type": "tag", "name": "addIpRuleSystemCommand", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CoreNetLib/test/TestUtils.cpp", "pattern": "/^bool addIpRuleSystemCommand(const std::string& fromPrefix,$/", "language": "C++", "typeref": "typename:bool", "kind": "function", "signature": "(const std::string & fromPrefix,const std::string & toPrefix,const std::string & tableName)"}, {"_type": "tag", "name": "addIpTunnelSystemCommand", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CoreNetLib/test/TestUtils.cpp", "pattern": "/^bool addIpTunnelSystemCommand(const std::string& tunnelName,$/", "language": "C++", "typeref": "typename:bool", "kind": "function", "signature": "(const std::string & tunnelName,const std::string & tunnelMode,const std::string & deviceName,const std::string & localV6Addr,const std::string & remoteV6Addr,const int encapLimit)"}, {"_type": "tag", "name": "addIpTunnelSystemCommand", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CoreNetLib/test/TestUtils.cpp", "pattern": "/^bool addIpTunnelSystemCommand(const std::string& tunnelName,$/", "language": "C++", "typeref": "typename:bool", "kind": "function", "signature": "(const std::string & tunnelName,const std::string & tunnelMode,const std::string & localV6Addr,const std::string & remoteV6Addr,const int encapLimit)"}, {"_type": "tag", "name": "addNeighbourSystemCommand", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CoreNetLib/test/TestUtils.cpp", "pattern": "/^bool addNeighbourSystemCommand(const std::string& address,$/", "language": "C++", "typeref": "typename:bool", "kind": "function", "signature": "(const std::string & address,const std::string & deviceName)"}, {"_type": "tag", "name": "addNeighbourSystemCommand", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CoreNetLib/test/TestUtils.cpp", "pattern": "/^bool addNeighbourSystemCommand(const std::string& address,$/", "language": "C++", "typeref": "typename:bool", "kind": "function", "signature": "(const std::string & address,const std::string & llAddr,const std::string & deviceName)"}, {"_type": "tag", "name": "cleanupNeighboursList", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CoreNetLib/test/TestUtils.cpp", "pattern": "/^void cleanupNeighboursList(std::vector<TestNeighbourInfo *>& neighbours)$/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(std::vector<TestNeighbourInfo * > & neighbours)"}, {"_type": "tag", "name": "createBridgeSystemCommand", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CoreNetLib/test/TestUtils.cpp", "pattern": "/^bool createBridgeSystemCommand(const std::string& bridgeName)$/", "language": "C++", "typeref": "typename:bool", "kind": "function", "signature": "(const std::string & bridgeName)"}, {"_type": "tag", "name": "createInterfaceSystemCommand", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CoreNetLib/test/TestUtils.cpp", "pattern": "/^bool createInterfaceSystemCommand(const std::string& interfaceName, const std::string& interface/", "language": "C++", "typeref": "typename:bool", "kind": "function", "signature": "(const std::string & interfaceName,const std::string & interfaceType)"}, {"_type": "tag", "name": "createInterfaceSystemCommand", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CoreNetLib/test/TestUtils.cpp", "pattern": "/^bool createInterfaceSystemCommand(const std::string& interfaceName, const std::string& interface/", "language": "C++", "typeref": "typename:bool", "kind": "function", "signature": "(const std::string & interfaceName,const std::string & interfaceType,const std::string & ipAddress)"}, {"_type": "tag", "name": "createVlanSystemCommand", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CoreNetLib/test/TestUtils.cpp", "pattern": "/^bool createVlanSystemCommand(const std::string& interfaceName, const int vlanId)$/", "language": "C++", "typeref": "typename:bool", "kind": "function", "signature": "(const std::string & interfaceName,const int vlanId)"}, {"_type": "tag", "name": "deleteBridgeSystemCommand", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CoreNetLib/test/TestUtils.cpp", "pattern": "/^bool deleteBridgeSystemCommand(const std::string& bridgeName)$/", "language": "C++", "typeref": "typename:bool", "kind": "function", "signature": "(const std::string & bridgeName)"}, {"_type": "tag", "name": "deleteInterfaceSystemCommand", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CoreNetLib/test/TestUtils.cpp", "pattern": "/^bool deleteInterfaceSystemCommand(const std::string& interfaceName)$/", "language": "C++", "typeref": "typename:bool", "kind": "function", "signature": "(const std::string & interfaceName)"}, {"_type": "tag", "name": "deleteIpAddrSystemCommand", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CoreNetLib/test/TestUtils.cpp", "pattern": "/^bool deleteIpAddrSystemCommand(const std::string& ipAddr,$/", "language": "C++", "typeref": "typename:bool", "kind": "function", "signature": "(const std::string & ipAddr,int cidr,const std::string & deviceName)"}, {"_type": "tag", "name": "deleteIpTunnelSystemCommand", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CoreNetLib/test/TestUtils.cpp", "pattern": "/^bool deleteIpTunnelSystemCommand(const std::string& tunnelName)$/", "language": "C++", "typeref": "typename:bool", "kind": "function", "signature": "(const std::string & tunnelName)"}, {"_type": "tag", "name": "deleteNeighbourSystemCommand", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CoreNetLib/test/TestUtils.cpp", "pattern": "/^bool deleteNeighbourSystemCommand(const std::string& address,$/", "language": "C++", "typeref": "typename:bool", "kind": "function", "signature": "(const std::string & address,const std::string & deviceName)"}, {"_type": "tag", "name": "deleteNeighbourSystemCommand", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CoreNetLib/test/TestUtils.cpp", "pattern": "/^bool deleteNeighbourSystemCommand(const std::string& address,$/", "language": "C++", "typeref": "typename:bool", "kind": "function", "signature": "(const std::string & address,const std::string & llAddr,const std::string & deviceName)"}, {"_type": "tag", "name": "deleteVlanSystemCommand", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CoreNetLib/test/TestUtils.cpp", "pattern": "/^bool deleteVlanSystemCommand(const std::string& vlanName)$/", "language": "C++", "typeref": "typename:bool", "kind": "function", "signature": "(const std::string & vlanName)"}, {"_type": "tag", "name": "executeSystemCommand", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CoreNetLib/test/TestUtils.cpp", "pattern": "/^std::string executeSystemCommand(char *cmd, int *status)$/", "language": "C++", "typeref": "typename:std::string", "kind": "function", "signature": "(char * cmd,int * status)"}, {"_type": "tag", "name": "executeSystemCommand", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CoreNetLib/test/TestUtils.cpp", "pattern": "/^std::string executeSystemCommand(const std::string& cmd, const std::string& logFile, int *status/", "language": "C++", "typeref": "typename:std::string", "kind": "function", "signature": "(const std::string & cmd,const std::string & logFile,int * status)"}, {"_type": "tag", "name": "executeSystemCommand", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CoreNetLib/test/TestUtils.cpp", "pattern": "/^std::string executeSystemCommand(const std::string& cmd, int *status)$/", "language": "C++", "typeref": "typename:std::string", "kind": "function", "signature": "(const std::string & cmd,int * status)"}, {"_type": "tag", "name": "fileExists", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CoreNetLib/test/TestUtils.cpp", "pattern": "/^bool fileExists(const std::string& filePath)$/", "language": "C++", "typeref": "typename:bool", "kind": "function", "signature": "(const std::string & filePath)"}, {"_type": "tag", "name": "findStringWithOccurrences", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CoreNetLib/test/TestUtils.cpp", "pattern": "/^bool findStringWithOccurrences(const std::string& haystack, const std::string& needle, int numOc/", "language": "C++", "typeref": "typename:bool", "kind": "function", "signature": "(const std::string & haystack,const std::string & needle,int numOccurrences)"}, {"_type": "tag", "name": "getBridgeSTPStateSystemCommand", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CoreNetLib/test/TestUtils.cpp", "pattern": "/^int getBridgeSTPStateSystemCommand(const std::string& bridgeName)$/", "language": "C++", "typeref": "typename:int", "kind": "function", "signature": "(const std::string & bridgeName)"}, {"_type": "tag", "name": "getCIDRFromNetMask", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CoreNetLib/test/TestUtils.cpp", "pattern": "/^int getCIDRFromNetMask(const std::string& netMask)$/", "language": "C++", "typeref": "typename:int", "kind": "function", "signature": "(const std::string & netMask)"}, {"_type": "tag", "name": "getLinkStateSystemCommand", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CoreNetLib/test/TestUtils.cpp", "pattern": "/^std::string getLinkStateSystemCommand(const std::string& interfaceName)$/", "language": "C++", "typeref": "typename:std::string", "kind": "function", "signature": "(const std::string & interfaceName)"}, {"_type": "tag", "name": "getNeighboursSystemCommand", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CoreNetLib/test/TestUtils.cpp", "pattern": "/^bool getNeighboursSystemCommand(std::vector<TestNeighbourInfo *>& neighbours)$/", "language": "C++", "typeref": "typename:bool", "kind": "function", "signature": "(std::vector<TestNeighbourInfo * > & neighbours)"}, {"_type": "tag", "name": "getNetMaskFromCIDRAddress", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CoreNetLib/test/TestUtils.cpp", "pattern": "/^std::string getNetMaskFromCIDRAddress(const std::string& CIDRAddress)$/", "language": "C++", "typeref": "typename:std::string", "kind": "function", "signature": "(const std::string & CIDRAddress)"}, {"_type": "tag", "name": "getVlanName", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CoreNetLib/test/TestUtils.cpp", "pattern": "/^std::string getVlanName(const std::string& interfaceName, const int vlanId)$/", "language": "C++", "typeref": "typename:std::string", "kind": "function", "signature": "(const std::string & interfaceName,const int vlanId)"}, {"_type": "tag", "name": "interfaceAddToBridgeSystemCommand", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CoreNetLib/test/TestUtils.cpp", "pattern": "/^bool interfaceAddToBridgeSystemCommand(const std::string& interfaceName, const std::string& brid/", "language": "C++", "typeref": "typename:bool", "kind": "function", "signature": "(const std::string & interfaceName,const std::string & bridgeName)"}, {"_type": "tag", "name": "interfaceExistsSystemCommand", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CoreNetLib/test/TestUtils.cpp", "pattern": "/^bool interfaceExistsSystemCommand(const std::string& interfaceName)$/", "language": "C++", "typeref": "typename:bool", "kind": "function", "signature": "(const std::string & interfaceName)"}, {"_type": "tag", "name": "interfaceGetIpSystemCommand", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CoreNetLib/test/TestUtils.cpp", "pattern": "/^std::string interfaceGetIpSystemCommand(const std::string& interfaceName)$/", "language": "C++", "typeref": "typename:std::string", "kind": "function", "signature": "(const std::string & interfaceName)"}, {"_type": "tag", "name": "interfaceGetMTUSystemCommand", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CoreNetLib/test/TestUtils.cpp", "pattern": "/^int interfaceGetMTUSystemCommand(const std::string& interfaceName)$/", "language": "C++", "typeref": "typename:int", "kind": "function", "signature": "(const std::string & interfaceName)"}, {"_type": "tag", "name": "interfaceGetMacSystemCommand", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CoreNetLib/test/TestUtils.cpp", "pattern": "/^std::string interfaceGetMacSystemCommand(const std::string& interfaceName)$/", "language": "C++", "typeref": "typename:std::string", "kind": "function", "signature": "(const std::string & interfaceName)"}, {"_type": "tag", "name": "interfaceGetNetmaskSystemCommand", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CoreNetLib/test/TestUtils.cpp", "pattern": "/^std::string interfaceGetNetmaskSystemCommand(const std::string& interfaceName)$/", "language": "C++", "typeref": "typename:std::string", "kind": "function", "signature": "(const std::string & interfaceName)"}, {"_type": "tag", "name": "interfaceRemoveFromBridgeSystemCommand", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CoreNetLib/test/TestUtils.cpp", "pattern": "/^bool interfaceRemoveFromBridgeSystemCommand(const std::string& interfaceName, const std::string&/", "language": "C++", "typeref": "typename:bool", "kind": "function", "signature": "(const std::string & interfaceName,const std::string & bridgeName)"}, {"_type": "tag", "name": "interfaceSetMacSystemCommand", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CoreNetLib/test/TestUtils.cpp", "pattern": "/^bool interfaceSetMacSystemCommand(const std::string& interfaceName, const std::string& macAddres/", "language": "C++", "typeref": "typename:bool", "kind": "function", "signature": "(const std::string & interfaceName,const std::string & macAddress)"}, {"_type": "tag", "name": "interfaceSetNetmaskSystemCommand", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CoreNetLib/test/TestUtils.cpp", "pattern": "/^bool interfaceSetNetmaskSystemCommand(const std::string& interfaceName, const std::string& inter/", "language": "C++", "typeref": "typename:bool", "kind": "function", "signature": "(const std::string & interfaceName,const std::string & interfaceType,const std::string & netmask)"}, {"_type": "tag", "name": "linkStatusUpOrDownSystemCommand", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CoreNetLib/test/TestUtils.cpp", "pattern": "/^int linkStatusUpOrDownSystemCommand(const std::string& interfaceName)$/", "language": "C++", "typeref": "typename:int", "kind": "function", "signature": "(const std::string & interfaceName)"}, {"_type": "tag", "name": "listDirectoryFiles", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CoreNetLib/test/TestUtils.cpp", "pattern": "/^std::vector<std::string> listDirectoryFiles(const std::string& path)$/", "language": "C++", "typeref": "typename:std::vector<std::string>", "kind": "function", "signature": "(const std::string & path)"}, {"_type": "tag", "name": "msleep", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CoreNetLib/test/TestUtils.cpp", "pattern": "/^void msleep(long msec)$/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(long msec)"}, {"_type": "tag", "name": "removeIpRouteSystemCommand", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CoreNetLib/test/TestUtils.cpp", "pattern": "/^bool removeIpRouteSystemCommand(const std::string& dstPrefix,$/", "language": "C++", "typeref": "typename:bool", "kind": "function", "signature": "(const std::string & dstPrefix,const std::string & nextHopAddr,const std::string & deviceName)"}, {"_type": "tag", "name": "removeIpRuleSystemCommand", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CoreNetLib/test/TestUtils.cpp", "pattern": "/^bool removeIpRuleSystemCommand(const std::string& fromPrefix,$/", "language": "C++", "typeref": "typename:bool", "kind": "function", "signature": "(const std::string & fromPrefix,const std::string & toPrefix,const std::string & tableName)"}, {"_type": "tag", "name": "setBridgeSTPStateSystemCommand", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CoreNetLib/test/TestUtils.cpp", "pattern": "/^bool setBridgeSTPStateSystemCommand(const std::string& bridgeName, bool onOrOff)$/", "language": "C++", "typeref": "typename:bool", "kind": "function", "signature": "(const std::string & bridgeName,bool onOrOff)"}, {"_type": "tag", "name": "setInterfaceDownSystemCommand", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CoreNetLib/test/TestUtils.cpp", "pattern": "/^bool setInterfaceDownSystemCommand(const std::string& interfaceName)$/", "language": "C++", "typeref": "typename:bool", "kind": "function", "signature": "(const std::string & interfaceName)"}, {"_type": "tag", "name": "setInterfaceUpSystemCommand", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CoreNetLib/test/TestUtils.cpp", "pattern": "/^bool setInterfaceUpSystemCommand(const std::string& interfaceName)$/", "language": "C++", "typeref": "typename:bool", "kind": "function", "signature": "(const std::string & interfaceName)"}, {"_type": "tag", "name": "splitString", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CoreNetLib/test/TestUtils.cpp", "pattern": "/^std::vector<std::string> splitString(const std::string& input, const char delim)$/", "language": "C++", "typeref": "typename:std::vector<std::string>", "kind": "function", "signature": "(const std::string & input,const char delim)"}], "format": "C++", "hash": "6ee6956255df04f8e3a84f22f6ffb7f8", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "rdkb/components/opensource/ccsp/CoreNetLib/test/TestUtils.cpp", "knowledge_revision": 5842}