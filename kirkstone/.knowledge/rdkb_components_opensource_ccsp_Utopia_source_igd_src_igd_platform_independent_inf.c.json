{"is_source_file": true, "format": "C", "description": "This file contains implementation for product-related functions of a UPnP IGD (Internet Gateway Device) stack. It provides functions to retrieve device UUID, serial number, network status, port mappings, and other network interface properties. The code interacts with Utopia configuration API to manage network settings and uses various predefined data structures and constants relevant to network configuration and UPnP.", "external_files": ["igd_platform_independent_inf.h", "utctx/utctx_api.h", "utapi/utapi.h", "ccsp_syslog.h", "syscfg/syscfg.h"], "external_methods": ["Utopia_Init", "Utopia_Free", "Utopia_RawGet", "Utopia_GetWANConnectionStatus", "Utopia_GetRouteNAT", "Utopia_WANConnectionTerminate", "Utopia_GetDynPortMappingCount", "Utopia_FindDynPortMapping", "Utopia_AddDynPortMapping", "Utopia_UpdateDynPortMapping", "Utopia_IGDInternetDisbleAllowed", "Utopia_WANConnectionTerminate"], "published": ["IGD_pii_get_serial_number", "IGD_pii_get_uuid", "IGD_pii_get_wan_device_number", "IGD_pii_get_wan_connection_device_number", "IGD_pii_get_wan_ppp_service_number", "IGD_pii_get_wan_ip_service_number", "IGD_pii_get_possible_connection_types", "IGD_pii_get_connection_status", "IGD_pii_get_connection_type", "IGD_pii_set_connection_type", "IGD_pii_request_connection", "IGD_pii_force_termination", "IGD_pii_get_external_ip", "IGD_pii_get_link_layer_max_bitrate", "IGD_pii_get_up_time", "IGD_pii_get_NAT_RSIP_status", "IGD_pii_add_portmapping_entry", "IGD_pii_del_portmapping_entry", "IGD_pii_get_portmapping_entry_num", "IGD_pii_get_portmapping_entry_generic", "IGD_pii_get_portmapping_entry_specific", "IGD_pii_get_ethernet_link_status", "IGD_pii_get_common_link_properties", "IGD_pii_get_traffic_stats", "IGD_pii_get_lan_dhcpserver_configurable", "IGD_pii_get_lan_dhcp_relay_status", "IGD_pii_get_lan_info", "IGD_pii_get_lan_dns_servers", "IGD_pii_get_lan_addr_range", "IGD_pii_get_lan_reserved_addr_list"], "classes": [], "methods": [{"name": "INT32 IGD_pii_add_portmapping_entry(IN INT32 WanDeviceIndex,IN INT32 WanConnectionDeviceIndex,IN INT32 WanConnectionServiceIndex,IN INT32 ServiceType,IN PIGD_PortMapping_Entry portmapEntry)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "INT32 IGD_pii_del_portmapping_entry(IN INT32 WanDeviceIndex,IN INT32 WanConnectionDeviceIndex,IN INT32 WanConnectionServiceIndex,IN INT32 ServiceType,IN CHAR * RemoteHost,IN UINT16 ExternalPort,IN CHAR * Protocol)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "INT32 IGD_pii_force_termination(IN INT32 WanDeviceIndex,IN INT32 WanConnectionDeviceIndex,IN INT32 WanConnectionServiceIndex,IN INT32 ServiceType)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "INT32 IGD_pii_get_NAT_RSIP_status(IN INT32 WanDeviceIndex,IN INT32 WanConnectionDeviceIndex,IN INT32 WanConnectionServiceIndex,IN INT32 ServiceType,OUT BOOL * natStatus,OUT BOOL * rsipStatus)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "INT32 IGD_pii_get_common_link_properties(IN INT32 WanDeviceIndex,OUT CHAR * WanAccessType,OUT CHAR * Layer1UpstreamMaxBitRate,OUT CHAR * Layer1DownstreamMaxBitRate,OUT CHAR * PhyscialLinkStatus)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "INT32 IGD_pii_get_connection_status(IN INT32 WanDeviceIndex,IN INT32 WanConnectionDeviceIndex,IN INT32 WanConnectionServiceIndex,IN INT32 ServiceType,OUT CHAR * ConnectionStatus)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "INT32 IGD_pii_get_connection_type(IN INT32 WanDeviceIndex,IN INT32 WanConnectionDeviceIndex,IN INT32 WanConnectionServiceIndex,IN INT32 ServiceType,OUT CHAR * ConnectionType)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "INT32 IGD_pii_get_ethernet_link_status(IN INT32 WanDeviceIndex,IN INT32 WanConnectionDeviceIndex,OUT CHAR * EthernetLinkStatus)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "INT32 IGD_pii_get_external_ip(IN INT32 WanDeviceIndex,IN INT32 WanConnectionDeviceIndex,IN INT32 WanConnectionServiceIndex,IN INT32 ServiceType,OUT CHAR * ExternalIp)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "INT32 IGD_pii_get_lan_addr_range(IN INT32 LanDeviceIndex,IN INT32 buf_sz,OUT CHAR * min_address,OUT CHAR * max_address)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "INT32 IGD_pii_get_lan_device_number(VOID)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "INT32 IGD_pii_get_lan_dhcp_relay_status(IN INT32 LanDeviceIndex,OUT CHAR * status)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "INT32 IGD_pii_get_lan_dhcpserver_configurable(IN INT32 LanDeviceIndex,OUT CHAR * status)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "INT32 IGD_pii_get_lan_dns_servers(IN INT32 LanDeviceIndex,OUT CHAR * dns_servers,IN INT32 max_list_sz)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "INT32 IGD_pii_get_lan_info(IN INT32 LanDeviceIndex,IN INT32 bufsz,OUT CHAR * ipaddr,OUT CHAR * subnet_mask,OUT CHAR * domain_name)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "INT32 IGD_pii_get_lan_reserved_addr_list(IN INT32 LanDeviceIndex,OUT CHAR * reserved_list,IN INT32 max_list_sz)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "INT32 IGD_pii_get_link_layer_max_bitrate(IN INT32 WanDeviceIndex,IN INT32 WanConnectionDeviceIndex,IN INT32 WanConnectionServiceIndex,IN INT32 ServiceType,OUT CHAR * UpRate,OUT CHAR * DownRate)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "INT32 IGD_pii_get_portmapping_entry_generic(IN INT32 WanDeviceIndex,IN INT32 WanConnectionDeviceIndex,IN INT32 WanConnectionServiceIndex,IN INT32 ServiceType,IN INT32 PortmappingIndex,OUT PIGD_PortMapping_Entry PortmappingEntry)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "INT32 IGD_pii_get_portmapping_entry_num(IN INT32 WanDeviceIndex,IN INT32 WanConnectionDeviceIndex,IN INT32 WanConnectionServiceIndex,IN INT32 ServiceType,OUT INT32 * PortmappingEntryNum)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "INT32 IGD_pii_get_portmapping_entry_specific(IN INT32 WanDeviceIndex,IN INT32 WanConnectionDeviceIndex,IN INT32 WanConnectionServiceIndex,IN INT32 ServiceType,INOUT PIGD_PortMapping_Entry PortmappingEntry)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "INT32 IGD_pii_get_possible_connection_types(IN INT32 WanDeviceIndex,IN INT32 WanConnectionDeviceIndex,IN INT32 WanConnectionServiceIndex,IN INT32 ServiceType,OUT CHAR * ConnectionTypesList)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "CHAR * IGD_pii_get_serial_number(VOID)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "INT32 IGD_pii_get_traffic_stats(IN INT32 WanDeviceIndex,IN INT32 bufsz,OUT CHAR * TotalBytesSent,OUT CHAR * TotalBytesReceived,OUT CHAR * TotalPacketsSent,OUT CHAR * TotalPacketsReceived)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "INT32 IGD_pii_get_up_time(IN INT32 WanDeviceIndex,IN INT32 WanConnectionDeviceIndex,IN INT32 WanConnectionServiceIndex,IN INT32 ServiceType,OUT CHAR * UpTime)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "INT32 IGD_pii_get_uuid(INOUT CHAR * uuid)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "INT32 IGD_pii_get_wan_connection_device_number(IN INT32 wan_device_index)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "INT32 IGD_pii_get_wan_device_number(VOID)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "INT32 IGD_pii_get_wan_ip_service_number(IN INT32 WanDeviceIndex,IN INT32 WanConnectionDeviceIndex)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "INT32 IGD_pii_get_wan_ppp_service_number(IN INT32 WanDeviceIndex,IN INT32 WanConnectionDeviceIndex)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "INT32 IGD_pii_request_connection(IN INT32 WanDeviceIndex,IN INT32 WanConnectionDeviceIndex,IN INT32 WanConnectionServiceIndex,IN INT32 ServiceType)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "INT32 IGD_pii_set_connection_type(IN INT32 WanDeviceIndex,IN INT32 WanConnectionDeviceIndex,IN INT32 WanConnectionServiceIndex,IN INT32 ServiceType,IN CHAR * ConnType)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "LOCAL INT32 _pii_get_if_MacAddress(IN const CHAR * ifName,INOUT CHAR MacAddress[PII_MAC_ADDRESS_LEN])", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["Utopia_Init", "Utopia_Free", "Utopia_RawGet", "Utopia_GetWANConnectionStatus", "Utopia_GetRouteNAT", "Utopia_WANConnectionTerminate", "Utopia_GetDynPortMappingCount", "Utopia_FindDynPortMapping", "Utopia_AddDynPortMapping", "Utopia_UpdateDynPortMapping", "Utopia_IGDInternetDisbleAllowed", "Utopia_WANConnectionTerminate", "Utopia_GetWANTrafficInfo", "Utopia_GetLanSettings", "Utopia_GetDHCPServerSettings", "Utopia_GetDHCPServerStaticHosts"], "search-terms": ["igd_platform_independent_inf", "UUID", "PortMapping", "Utopia", "WAN", "LAN", "PortMappingEntry", "get_wan", "dhcp_static_hosts", "lan ipaddr", "dhcp_static_hosts_count"], "state": 2, "file_id": 7718, "knowledge_revision": 20790, "git_revision": "", "ctags": [{"_type": "tag", "name": "IGD_pii_add_portmapping_entry", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/igd/src/igd_platform_independent_inf.c", "pattern": "/^INT32 IGD_pii_add_portmapping_entry( IN INT32 WanDeviceIndex,$/", "language": "C", "typeref": "typename:INT32", "kind": "function", "signature": "(IN INT32 WanDeviceIndex,IN INT32 WanConnectionDeviceIndex,IN INT32 WanConnectionServiceIndex,IN INT32 ServiceType,IN PIGD_PortMapping_Entry portmapEntry)"}, {"_type": "tag", "name": "IGD_pii_del_portmapping_entry", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/igd/src/igd_platform_independent_inf.c", "pattern": "/^INT32 IGD_pii_del_portmapping_entry( IN INT32 WanDeviceIndex,$/", "language": "C", "typeref": "typename:INT32", "kind": "function", "signature": "(IN INT32 WanDeviceIndex,IN INT32 WanConnectionDeviceIndex,IN INT32 WanConnectionServiceIndex,IN INT32 ServiceType,IN CHAR * RemoteHost,IN UINT16 ExternalPort,IN CHAR * Protocol)"}, {"_type": "tag", "name": "IGD_pii_force_termination", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/igd/src/igd_platform_independent_inf.c", "pattern": "/^INT32 IGD_pii_force_termination(IN INT32 WanDeviceIndex,$/", "language": "C", "typeref": "typename:INT32", "kind": "function", "signature": "(IN INT32 WanDeviceIndex,IN INT32 WanConnectionDeviceIndex,IN INT32 WanConnectionServiceIndex,IN INT32 ServiceType)"}, {"_type": "tag", "name": "IGD_pii_get_NAT_RSIP_status", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/igd/src/igd_platform_independent_inf.c", "pattern": "/^IGD_pii_get_NAT_RSIP_status( IN INT32 WanDeviceIndex,$/", "language": "C", "typeref": "typename:INT32", "kind": "function", "signature": "(IN INT32 WanDeviceIndex,IN INT32 WanConnectionDeviceIndex,IN INT32 WanConnectionServiceIndex,IN INT32 ServiceType,OUT BOOL * natStatus,OUT BOOL * rsipStatus)"}, {"_type": "tag", "name": "IGD_pii_get_common_link_properties", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/igd/src/igd_platform_independent_inf.c", "pattern": "/^INT32 IGD_pii_get_common_link_properties(IN INT32 WanDeviceIndex,$/", "language": "C", "typeref": "typename:INT32", "kind": "function", "signature": "(IN INT32 WanDeviceIndex,OUT CHAR * WanAccessType,OUT CHAR * Layer1UpstreamMaxBitRate,OUT CHAR * Layer1DownstreamMaxBitRate,OUT CHAR * PhyscialLinkStatus)"}, {"_type": "tag", "name": "IGD_pii_get_connection_status", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/igd/src/igd_platform_independent_inf.c", "pattern": "/^INT32 IGD_pii_get_connection_status(IN INT32 WanDeviceIndex,$/", "language": "C", "typeref": "typename:INT32", "kind": "function", "signature": "(IN INT32 WanDeviceIndex,IN INT32 WanConnectionDeviceIndex,IN INT32 WanConnectionServiceIndex,IN INT32 ServiceType,OUT CHAR * ConnectionStatus)"}, {"_type": "tag", "name": "IGD_pii_get_connection_type", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/igd/src/igd_platform_independent_inf.c", "pattern": "/^INT32 IGD_pii_get_connection_type(IN INT32 WanDeviceIndex,$/", "language": "C", "typeref": "typename:INT32", "kind": "function", "signature": "(IN INT32 WanDeviceIndex,IN INT32 WanConnectionDeviceIndex,IN INT32 WanConnectionServiceIndex,IN INT32 ServiceType,OUT CHAR * ConnectionType)"}, {"_type": "tag", "name": "IGD_pii_get_ethernet_link_status", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/igd/src/igd_platform_independent_inf.c", "pattern": "/^INT32 IGD_pii_get_ethernet_link_status(IN INT32 WanDeviceIndex,$/", "language": "C", "typeref": "typename:INT32", "kind": "function", "signature": "(IN INT32 WanDeviceIndex,IN INT32 WanConnectionDeviceIndex,OUT CHAR * EthernetLinkStatus)"}, {"_type": "tag", "name": "IGD_pii_get_external_ip", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/igd/src/igd_platform_independent_inf.c", "pattern": "/^INT32 IGD_pii_get_external_ip(IN INT32 WanDeviceIndex,$/", "language": "C", "typeref": "typename:INT32", "kind": "function", "signature": "(IN INT32 WanDeviceIndex,IN INT32 WanConnectionDeviceIndex,IN INT32 WanConnectionServiceIndex,IN INT32 ServiceType,OUT CHAR * ExternalIp)"}, {"_type": "tag", "name": "IGD_pii_get_lan_addr_range", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/igd/src/igd_platform_independent_inf.c", "pattern": "/^INT32 IGD_pii_get_lan_addr_range(IN INT32 LanDeviceIndex, IN INT32 buf_sz, OUT CHAR *min_address/", "language": "C", "typeref": "typename:INT32", "kind": "function", "signature": "(IN INT32 LanDeviceIndex,IN INT32 buf_sz,OUT CHAR * min_address,OUT CHAR * max_address)"}, {"_type": "tag", "name": "IGD_pii_get_lan_device_number", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/igd/src/igd_platform_independent_inf.c", "pattern": "/^INT32 IGD_pii_get_lan_device_number(VOID)$/", "language": "C", "typeref": "typename:INT32", "kind": "function", "signature": "(VOID)"}, {"_type": "tag", "name": "IGD_pii_get_lan_dhcp_relay_status", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/igd/src/igd_platform_independent_inf.c", "pattern": "/^INT32 IGD_pii_get_lan_dhcp_relay_status(IN INT32 LanDeviceIndex, OUT CHAR *status)$/", "language": "C", "typeref": "typename:INT32", "kind": "function", "signature": "(IN INT32 LanDeviceIndex,OUT CHAR * status)"}, {"_type": "tag", "name": "IGD_pii_get_lan_dhcpserver_configurable", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/igd/src/igd_platform_independent_inf.c", "pattern": "/^INT32 IGD_pii_get_lan_dhcpserver_configurable(IN INT32 LanDeviceIndex, OUT CHAR *status)$/", "language": "C", "typeref": "typename:INT32", "kind": "function", "signature": "(IN INT32 LanDeviceIndex,OUT CHAR * status)"}, {"_type": "tag", "name": "IGD_pii_get_lan_dns_servers", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/igd/src/igd_platform_independent_inf.c", "pattern": "/^INT32 IGD_pii_get_lan_dns_servers(IN INT32 LanDeviceIndex, OUT CHAR *dns_servers, IN INT32 max_l/", "language": "C", "typeref": "typename:INT32", "kind": "function", "signature": "(IN INT32 LanDeviceIndex,OUT CHAR * dns_servers,IN INT32 max_list_sz)"}, {"_type": "tag", "name": "IGD_pii_get_lan_info", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/igd/src/igd_platform_independent_inf.c", "pattern": "/^INT32 IGD_pii_get_lan_info(IN INT32 LanDeviceIndex, IN INT32 bufsz, OUT CHAR *ipaddr, OUT CHAR */", "language": "C", "typeref": "typename:INT32", "kind": "function", "signature": "(IN INT32 LanDeviceIndex,IN INT32 bufsz,OUT CHAR * ipaddr,OUT CHAR * subnet_mask,OUT CHAR * domain_name)"}, {"_type": "tag", "name": "IGD_pii_get_lan_reserved_addr_list", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/igd/src/igd_platform_independent_inf.c", "pattern": "/^INT32 IGD_pii_get_lan_reserved_addr_list(IN INT32 LanDeviceIndex, OUT CHAR *reserved_list, IN IN/", "language": "C", "typeref": "typename:INT32", "kind": "function", "signature": "(IN INT32 LanDeviceIndex,OUT CHAR * reserved_list,IN INT32 max_list_sz)"}, {"_type": "tag", "name": "IGD_pii_get_link_layer_max_bitrate", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/igd/src/igd_platform_independent_inf.c", "pattern": "/^INT32 IGD_pii_get_link_layer_max_bitrate(IN INT32 WanDeviceIndex,$/", "language": "C", "typeref": "typename:INT32", "kind": "function", "signature": "(IN INT32 WanDeviceIndex,IN INT32 WanConnectionDeviceIndex,IN INT32 WanConnectionServiceIndex,IN INT32 ServiceType,OUT CHAR * UpRate,OUT CHAR * DownRate)"}, {"_type": "tag", "name": "IGD_pii_get_portmapping_entry_generic", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/igd/src/igd_platform_independent_inf.c", "pattern": "/^INT32 IGD_pii_get_portmapping_entry_generic( IN INT32 WanDeviceIndex,$/", "language": "C", "typeref": "typename:INT32", "kind": "function", "signature": "(IN INT32 WanDeviceIndex,IN INT32 WanConnectionDeviceIndex,IN INT32 WanConnectionServiceIndex,IN INT32 ServiceType,IN INT32 PortmappingIndex,OUT PIGD_PortMapping_Entry PortmappingEntry)"}, {"_type": "tag", "name": "IGD_pii_get_portmapping_entry_num", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/igd/src/igd_platform_independent_inf.c", "pattern": "/^INT32 IGD_pii_get_portmapping_entry_num(IN INT32 WanDeviceIndex,$/", "language": "C", "typeref": "typename:INT32", "kind": "function", "signature": "(IN INT32 WanDeviceIndex,IN INT32 WanConnectionDeviceIndex,IN INT32 WanConnectionServiceIndex,IN INT32 ServiceType,OUT INT32 * PortmappingEntryNum)"}, {"_type": "tag", "name": "IGD_pii_get_portmapping_entry_specific", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/igd/src/igd_platform_independent_inf.c", "pattern": "/^INT32 IGD_pii_get_portmapping_entry_specific( IN INT32 WanDeviceIndex,$/", "language": "C", "typeref": "typename:INT32", "kind": "function", "signature": "(IN INT32 WanDeviceIndex,IN INT32 WanConnectionDeviceIndex,IN INT32 WanConnectionServiceIndex,IN INT32 ServiceType,INOUT PIGD_PortMapping_Entry PortmappingEntry)"}, {"_type": "tag", "name": "IGD_pii_get_possible_connection_types", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/igd/src/igd_platform_independent_inf.c", "pattern": "/^INT32 IGD_pii_get_possible_connection_types(IN INT32 WanDeviceIndex,$/", "language": "C", "typeref": "typename:INT32", "kind": "function", "signature": "(IN INT32 WanDeviceIndex,IN INT32 WanConnectionDeviceIndex,IN INT32 WanConnectionServiceIndex,IN INT32 ServiceType,OUT CHAR * ConnectionTypesList)"}, {"_type": "tag", "name": "IGD_pii_get_serial_number", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/igd/src/igd_platform_independent_inf.c", "pattern": "/^CHAR* IGD_pii_get_serial_number(VOID)$/", "language": "C", "typeref": "typename:CHAR *", "kind": "function", "signature": "(VOID)"}, {"_type": "tag", "name": "IGD_pii_get_traffic_stats", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/igd/src/igd_platform_independent_inf.c", "pattern": "/^INT32 IGD_pii_get_traffic_stats(IN INT32 WanDeviceIndex,$/", "language": "C", "typeref": "typename:INT32", "kind": "function", "signature": "(IN INT32 WanDeviceIndex,IN INT32 bufsz,OUT CHAR * TotalBytesSent,OUT CHAR * TotalBytesReceived,OUT CHAR * TotalPacketsSent,OUT CHAR * TotalPacketsReceived)"}, {"_type": "tag", "name": "IGD_pii_get_up_time", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/igd/src/igd_platform_independent_inf.c", "pattern": "/^INT32 IGD_pii_get_up_time(IN INT32 WanDeviceIndex,$/", "language": "C", "typeref": "typename:INT32", "kind": "function", "signature": "(IN INT32 WanDeviceIndex,IN INT32 WanConnectionDeviceIndex,IN INT32 WanConnectionServiceIndex,IN INT32 ServiceType,OUT CHAR * UpTime)"}, {"_type": "tag", "name": "IGD_pii_get_uuid", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/igd/src/igd_platform_independent_inf.c", "pattern": "/^INT32 IGD_pii_get_uuid(INOUT CHAR *uuid)$/", "language": "C", "typeref": "typename:INT32", "kind": "function", "signature": "(INOUT CHAR * uuid)"}, {"_type": "tag", "name": "IGD_pii_get_wan_connection_device_number", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/igd/src/igd_platform_independent_inf.c", "pattern": "/^INT32 IGD_pii_get_wan_connection_device_number(IN INT32 wan_device_index)$/", "language": "C", "typeref": "typename:INT32", "kind": "function", "signature": "(IN INT32 wan_device_index)"}, {"_type": "tag", "name": "IGD_pii_get_wan_device_number", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/igd/src/igd_platform_independent_inf.c", "pattern": "/^INT32 IGD_pii_get_wan_device_number(VOID)$/", "language": "C", "typeref": "typename:INT32", "kind": "function", "signature": "(VOID)"}, {"_type": "tag", "name": "IGD_pii_get_wan_ip_service_number", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/igd/src/igd_platform_independent_inf.c", "pattern": "/^INT32 IGD_pii_get_wan_ip_service_number(IN INT32 WanDeviceIndex,$/", "language": "C", "typeref": "typename:INT32", "kind": "function", "signature": "(IN INT32 WanDeviceIndex,IN INT32 WanConnectionDeviceIndex)"}, {"_type": "tag", "name": "IGD_pii_get_wan_ppp_service_number", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/igd/src/igd_platform_independent_inf.c", "pattern": "/^INT32 IGD_pii_get_wan_ppp_service_number(IN INT32 WanDeviceIndex,$/", "language": "C", "typeref": "typename:INT32", "kind": "function", "signature": "(IN INT32 WanDeviceIndex,IN INT32 WanConnectionDeviceIndex)"}, {"_type": "tag", "name": "IGD_pii_request_connection", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/igd/src/igd_platform_independent_inf.c", "pattern": "/^INT32 IGD_pii_request_connection(IN INT32 WanDeviceIndex,$/", "language": "C", "typeref": "typename:INT32", "kind": "function", "signature": "(IN INT32 WanDeviceIndex,IN INT32 WanConnectionDeviceIndex,IN INT32 WanConnectionServiceIndex,IN INT32 ServiceType)"}, {"_type": "tag", "name": "IGD_pii_set_connection_type", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/igd/src/igd_platform_independent_inf.c", "pattern": "/^INT32 IGD_pii_set_connection_type(IN INT32 WanDeviceIndex,$/", "language": "C", "typeref": "typename:INT32", "kind": "function", "signature": "(IN INT32 WanDeviceIndex,IN INT32 WanConnectionDeviceIndex,IN INT32 WanConnectionServiceIndex,IN INT32 ServiceType,IN CHAR * ConnType)"}, {"_type": "tag", "name": "IPCONNTYPELIST", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/igd/src/igd_platform_independent_inf.c", "pattern": "/^#define IPCONNTYPELIST /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "PII_IF_NAME_LEN", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/igd/src/igd_platform_independent_inf.c", "pattern": "/^#define PII_IF_NAME_LEN\t/", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "PII_MAC_ADDRESS_LEN", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/igd/src/igd_platform_independent_inf.c", "pattern": "/^#define PII_MAC_ADDRESS_LEN\t/", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "UPNP_LINE_SIZE", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/igd/src/igd_platform_independent_inf.c", "pattern": "/^#define UPNP_LINE_SIZE /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "WAN_UUID_INDEX_NUM", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/igd/src/igd_platform_independent_inf.c", "pattern": "/^#define WAN_UUID_INDEX_NUM /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "_pii_get_if_MacAddress", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/igd/src/igd_platform_independent_inf.c", "pattern": "/^LOCAL INT32 _pii_get_if_MacAddress(IN const CHAR *ifName, INOUT CHAR MacAddress[PII_MAC_ADDRESS_/", "language": "C", "typeref": "typename:LOCAL INT32", "kind": "function", "signature": "(IN const CHAR * ifName,INOUT CHAR MacAddress[PII_MAC_ADDRESS_LEN])"}, {"_type": "tag", "name": "ipconntype", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/igd/src/igd_platform_independent_inf.c", "pattern": "/^LOCAL CHAR ipconntype[32] = {0};$/", "language": "C", "typeref": "typename:LOCAL CHAR[32]", "kind": "variable"}], "hash": "da3b53dca33b98eedf1b65206091382b", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "rdkb/components/opensource/ccsp/Utopia/source/igd/src/igd_platform_independent_inf.c", "fields": [{"name": "LOCAL CHAR[32] ipconntype", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"20790": ""}]}