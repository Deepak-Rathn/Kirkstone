{"is_source_file": true, "format": "C", "description": "This file implements a set of functions for managing transcoders and factories within the 'cslt' namespace, including initialization, retrieval, registration, and transcoding operations. It interacts with hash maps, uses mutexes for thread safety, and supports schema-based and named transcoding, primarily for handling different encoding/decoding schemes.", "external_files": ["<icTypes/icHashMap.h>", "<string.h>", "<errno.h>", "<cslt/cslt.h>", "<cslt/sheens.h>", "<cslt/icrules.h>", "<icTypes/icLinkedList.h>", "cslt_internal.h", "sheens/sheens_transcoders.h", "icrule/icrule_transcoders.h"], "external_methods": ["hashMapCreate", "hashMapGet", "hashMapPut", "hashMapIteratorCreate", "hashMapIteratorHasNext", "hashMapIteratorGetNext", "hashMapIteratorDestroy", "sheens_transcoder_init", "icrule_transcoder_init", "FACTORY_HASHMAP_KEYLEN"], "published": ["cslt_init", "cslt_get_transcode_factory", "cslt_get_transcoder_by_name", "cslt_get_transcoder", "cslt_transcode_preallocated", "cslt_transcode", "cslt_transcode_by_name", "cslt_transcode_by_name_preallocated", "cslt_transcode_by_schema", "cslt_transcode_by_schema_preallocated", "cslt_register_factory", "cslt_register_transcoder"], "classes": [], "methods": [{"name": "void cslt_init(icHashMap * transcoder_settings)", "description": "Initializes the transcoder system, sets up mutexes, and supports optional transcoder settings to initialize supported transcoders.", "scope": "", "scopeKind": ""}, {"name": "const cslt_factory_t * cslt_get_transcode_factory(const char * encoder)", "description": "Retrieves a factory object associated with a given encoder name from the factory map.", "scope": "", "scopeKind": ""}, {"name": "const cslt_transcoder_t * cslt_get_transcoder_by_name(const char * decoder,const char * encoder)", "description": "Fetches a transcoder object based on decoder and encoder name pair.", "scope": "", "scopeKind": ""}, {"name": "const cslt_transcoder_t * cslt_get_transcoder(const cslt_factory_t * factory,const char * schema)", "description": "Finds a valid transcoder from a factory matching a provided schema.", "scope": "", "scopeKind": ""}, {"name": "int cslt_transcode_internal(const cslt_transcoder_t * transcoder,const char * src,char ** dst,size_t size)", "description": "Internal function performing the actual transcode operation with validation and error handling.", "scope": "", "scopeKind": ""}, {"name": "int cslt_transcode_preallocated(const cslt_transcoder_t * transcoder,const char * src,char * dst,size_t size)", "description": "Transcodes using preallocated output buffer.", "scope": "", "scopeKind": ""}, {"name": "int cslt_transcode(const cslt_transcoder_t * transcoder,const char * src,char ** dst)", "description": "Transcodes by allocating output buffer internally.", "scope": "", "scopeKind": ""}, {"name": "int cslt_transcode_by_name_internal(const char * decoder,const char * encoder,const char * src,char ** dst,size_t size)", "description": "Performs transcode based on decoder and encoder names.", "scope": "", "scopeKind": ""}, {"name": "int cslt_transcode_by_name(const char * decoder,const char * encoder,const char * src,char ** dst)", "description": "Transcodes using decoder and encoder names with internal buffer management.", "scope": "", "scopeKind": ""}, {"name": "int cslt_transcode_by_name_preallocated(const char * decoder,const char * encoder,const char * src,char * dst,size_t size)", "description": "Transcodes by decoder and encoder names with externally provided buffer.", "scope": "", "scopeKind": ""}, {"name": "int cslt_transcode_by_schema_internal(const char * encoder,const char * src,char ** dst,size_t size)", "description": "Performs transcode based on schema by retrieving appropriate factory and transcoder.", "scope": "", "scopeKind": ""}, {"name": "int cslt_transcode_by_schema(const char * encoder,const char * src,char ** dst)", "description": "Transcodes based on schema with internal buffer.", "scope": "", "scopeKind": ""}, {"name": "int cslt_transcode_by_schema_preallocated(const char * encoder,const char * src,char * dst,size_t size)", "description": "Transcodes based on schema with external buffer.", "scope": "", "scopeKind": ""}, {"name": "void cslt_register_factory(cslt_factory_t * factory)", "description": "Registers a new factory into the factory map, creating its internal transcode map.", "scope": "", "scopeKind": ""}, {"name": "void cslt_register_transcoder(const cslt_transcoder_t * transcoder)", "description": "Registers a transcoder into an existing factory based on its encoder and decoder identifiers.", "scope": "", "scopeKind": ""}], "calls": ["hashMapCreate", "hashMapGet", "hashMapPut", "hashMapIteratorCreate", "hashMapIteratorHasNext", "hashMapIteratorGetNext", "hashMapIteratorDestroy", "sheens_transcoder_init", "icrule_transcoder_init", "hashMapGet(factory_map, ...)", "hashMapGet(factory->transcode_map, ...)", "hashMapIteratorCreate(factory->transcode_map)", "hashMapIteratorHasNext(iterator)", "hashMapIteratorGetNext(iterator, ...)", "hashMapIteratorDestroy(iterator)", "hashMapCreate()", "hashMapPut()", "hashMapGet()"], "search-terms": ["cslt", "transcode", "factory", "transcoder", "schema", "impls", "register", "get_transcoder", "transcode_by_name", "transcode_by_schema"], "state": 2, "file_id": 807, "knowledge_revision": 13971, "git_revision": "", "ctags": [{"_type": "tag", "name": "cslt_get_transcode_factory", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/cslt/src/cslt.c", "pattern": "/^const cslt_factory_t* cslt_get_transcode_factory(const char* encoder)$/", "language": "C", "typeref": "typename:const cslt_factory_t *", "kind": "function", "signature": "(const char * encoder)"}, {"_type": "tag", "name": "cslt_get_transcoder", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/cslt/src/cslt.c", "pattern": "/^const cslt_transcoder_t* cslt_get_transcoder(const cslt_factory_t* factory,$/", "language": "C", "typeref": "typename:const cslt_transcoder_t *", "kind": "function", "signature": "(const cslt_factory_t * factory,const char * schema)"}, {"_type": "tag", "name": "cslt_get_transcoder_by_name", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/cslt/src/cslt.c", "pattern": "/^const cslt_transcoder_t* cslt_get_transcoder_by_name(const char* decoder,$/", "language": "C", "typeref": "typename:const cslt_transcoder_t *", "kind": "function", "signature": "(const char * decoder,const char * encoder)"}, {"_type": "tag", "name": "cslt_init", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/cslt/src/cslt.c", "pattern": "/^void cslt_init(icHashMap* transcoder_settings)$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(icHashMap * transcoder_settings)"}, {"_type": "tag", "name": "cslt_register_factory", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/cslt/src/cslt.c", "pattern": "/^void cslt_register_factory(cslt_factory_t* factory)$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(cslt_factory_t * factory)"}, {"_type": "tag", "name": "cslt_register_transcoder", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/cslt/src/cslt.c", "pattern": "/^void cslt_register_transcoder(const cslt_transcoder_t* transcoder)$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(const cslt_transcoder_t * transcoder)"}, {"_type": "tag", "name": "cslt_transcode", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/cslt/src/cslt.c", "pattern": "/^int cslt_transcode(const cslt_transcoder_t* transcoder,$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(const cslt_transcoder_t * transcoder,const char * src,char ** dst)"}, {"_type": "tag", "name": "cslt_transcode_by_name", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/cslt/src/cslt.c", "pattern": "/^int cslt_transcode_by_name(const char* decoder,$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(const char * decoder,const char * encoder,const char * src,char ** dst)"}, {"_type": "tag", "name": "cslt_transcode_by_name_internal", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/cslt/src/cslt.c", "pattern": "/^static int cslt_transcode_by_name_internal(const char* decoder,$/", "file": true, "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(const char * decoder,const char * encoder,const char * src,char ** dst,size_t size)"}, {"_type": "tag", "name": "cslt_transcode_by_name_preallocated", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/cslt/src/cslt.c", "pattern": "/^int cslt_transcode_by_name_preallocated(const char* decoder,$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(const char * decoder,const char * encoder,const char * src,char * dst,size_t size)"}, {"_type": "tag", "name": "cslt_transcode_by_schema", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/cslt/src/cslt.c", "pattern": "/^int cslt_transcode_by_schema(const char* encoder,$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(const char * encoder,const char * src,char ** dst)"}, {"_type": "tag", "name": "cslt_transcode_by_schema_internal", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/cslt/src/cslt.c", "pattern": "/^static int cslt_transcode_by_schema_internal(const char* encoder,$/", "file": true, "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(const char * encoder,const char * src,char ** dst,size_t size)"}, {"_type": "tag", "name": "cslt_transcode_by_schema_preallocated", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/cslt/src/cslt.c", "pattern": "/^int cslt_transcode_by_schema_preallocated(const char* encoder,$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(const char * encoder,const char * src,char * dst,size_t size)"}, {"_type": "tag", "name": "cslt_transcode_internal", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/cslt/src/cslt.c", "pattern": "/^static int cslt_transcode_internal(const cslt_transcoder_t* transcoder,$/", "file": true, "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(const cslt_transcoder_t * transcoder,const char * src,char ** dst,size_t size)"}, {"_type": "tag", "name": "cslt_transcode_preallocated", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/cslt/src/cslt.c", "pattern": "/^int cslt_transcode_preallocated(const cslt_transcoder_t* transcoder,$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(const cslt_transcoder_t * transcoder,const char * src,char * dst,size_t size)"}, {"_type": "tag", "name": "factory_map", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/cslt/src/cslt.c", "pattern": "/^static icHashMap* factory_map = NULL;$/", "file": true, "language": "C", "typeref": "typename:icHashMap *", "kind": "variable"}, {"_type": "tag", "name": "mutex", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/cslt/src/cslt.c", "pattern": "/^static pthread_mutex_t mutex;$/", "file": true, "language": "C", "typeref": "typename:pthread_mutex_t", "kind": "variable"}], "hash": "e04fdd8b89dd59163bbeb9cb80ef6635", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "components/opensource/zilker-sdk/source/libs/cslt/src/cslt.c", "fields": [{"name": "icHashMap * factory_map", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "pthread_mutex_t mutex", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"13971": ""}]}