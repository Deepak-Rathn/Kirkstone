{"is_source_file": true, "format": "C", "description": "This file contains utility functions for network interface management and system command execution, including functionalities like setting interface parameters, retrieving hardware and IP addresses, PID lookup, service status checks, and optional PSM parameter handling, primarily used within a network management context.", "external_files": ["util.h", "errno.h", "ccsp_psm_helper.h"], "external_methods": ["sysevent_get"], "published": ["vsystem", "sysctl_iface_set", "iface_get_hwaddr", "iface_get_ipv4addr", "is_iface_present", "pid_of", "serv_can_start", "serv_can_stop", "psmGet", "updateDhcpPoolData"], "classes": [], "methods": [{"name": "int vsystem(const char * fmt,...)", "description": "Executes a system command formatted with variable arguments, logs the command, and returns the system call's result.", "scope": "", "scopeKind": ""}, {"name": "int sysctl_iface_set(const char * path,const char * ifname,const char * content)", "description": "Writes content to a specified sysctl interface file, with optional interface name substitution.", "scope": "", "scopeKind": ""}, {"name": "int iface_get_hwaddr(const char * ifname,char * mac,size_t size)", "description": "Retrieves the hardware (MAC) address of the specified network interface.", "scope": "", "scopeKind": ""}, {"name": "int iface_get_ipv4addr(const char * ifname,char * ipv4Addr,size_t size)", "description": "Obtains the IPv4 address assigned to a specified network interface.", "scope": "", "scopeKind": ""}, {"name": "int is_iface_present(const char * ifname)", "description": "Checks presence of a network interface by attempting to retrieve its IPv4 address.", "scope": "", "scopeKind": ""}, {"name": "int pid_of(const char * name,const char * keyword)", "description": "Finds the process ID of a running process by name and optional keyword match.", "scope": "", "scopeKind": ""}, {"name": "int serv_can_start(int sefd,token_t setok,const char * servname)", "description": "Determines if a service can be started based on its current sysevent status.", "scope": "", "scopeKind": ""}, {"name": "int serv_can_stop(int sefd,token_t setok,const char * servname)", "description": "Determines if a service can be stopped based on its current sysevent status.", "scope": "", "scopeKind": ""}, {"name": "void psmGet(void * bus_handle,char * pParamName,char * pParamValue,size_t len)", "description": "Retrieves a parameter value from the PSM database via CCSP message bus.", "scope": "", "scopeKind": ""}, {"name": "void updateDhcpPoolData(void * bus_handle,char * pIndex,FILE * pFile)", "description": "Updates DHCP pool configuration data by reading parameters from the PSM database.", "scope": "", "scopeKind": ""}], "calls": ["system", "open", "close", "write", "perror", "snprintf", "ioctl", "inet_ntoa", "fgets", "fread", "strcasecmp", "strstr", "strrchr"], "search-terms": ["network interface utility", "MAC address retrieval", "IPv4 address", "service status check", "PID lookup", "system command execution", "PSM parameter handling", "DHCP pool configuration"], "state": 2, "file_id": 7662, "knowledge_revision": 20735, "git_revision": "", "ctags": [{"_type": "tag", "name": "CCSP_SUBSYS", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/util/utils/util.c", "pattern": "/^#define CCSP_SUBSYS /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "iface_get_hwaddr", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/util/utils/util.c", "pattern": "/^int iface_get_hwaddr(const char *ifname, char *mac, size_t size)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(const char * ifname,char * mac,size_t size)"}, {"_type": "tag", "name": "iface_get_ipv4addr", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/util/utils/util.c", "pattern": "/^int iface_get_ipv4addr (const char *ifname, char *ipv4Addr, size_t size)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(const char * ifname,char * ipv4Addr,size_t size)"}, {"_type": "tag", "name": "is_iface_present", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/util/utils/util.c", "pattern": "/^int is_iface_present(const char *ifname)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(const char * ifname)"}, {"_type": "tag", "name": "pid_of", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/util/utils/util.c", "pattern": "/^int pid_of(const char *name, const char *keyword)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(const char * name,const char * keyword)"}, {"_type": "tag", "name": "psmGet", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/util/utils/util.c", "pattern": "/^void psmGet(void *bus_handle, char *pParamName, char *pParamValue, size_t len)$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(void * bus_handle,char * pParamName,char * pParamValue,size_t len)"}, {"_type": "tag", "name": "serv_can_start", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/util/utils/util.c", "pattern": "/^int serv_can_start(int sefd, token_t setok, const char *servname)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(int sefd,token_t setok,const char * servname)"}, {"_type": "tag", "name": "serv_can_stop", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/util/utils/util.c", "pattern": "/^int serv_can_stop(int sefd, token_t setok, const char *servname)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(int sefd,token_t setok,const char * servname)"}, {"_type": "tag", "name": "sysctl_iface_set", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/util/utils/util.c", "pattern": "/^int sysctl_iface_set(const char *path, const char *ifname, const char *content)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(const char * path,const char * ifname,const char * content)"}, {"_type": "tag", "name": "updateDhcpPoolData", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/util/utils/util.c", "pattern": "/^void updateDhcpPoolData(void * bus_handle, char * pIndex, FILE * pFile)$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(void * bus_handle,char * pIndex,FILE * pFile)"}, {"_type": "tag", "name": "vsystem", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/util/utils/util.c", "pattern": "/^int vsystem(const char *fmt, ...)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(const char * fmt,...)"}], "hash": "508b3a6f511182c63fbe0cc4c2b07af7", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "rdkb/components/opensource/ccsp/Utopia/source/util/utils/util.c", "revision_history": [{"20735": ""}]}