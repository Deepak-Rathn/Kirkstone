{"is_source_file": true, "format": "Python", "description": "This file provides a set of functions and command entry points for manipulating recipes and source trees within the devtool framework of a Yocto-based build system. It includes commands for adding, extracting, synchronizing, modifying, and renaming recipes, along with auxiliary functions for handling patches, source extraction, and source control operations.", "external_files": ["bb", "oe.recipeutils", "oe.patch", "oe.path", "bb.process", "bb.utils", "scriptutils", "recipe_to_append", "setup_tinfoil", "check_workspace_recipe", "use_external_build", "setup_git_repo", "get_bbclassextend_targets", "update_unlockedsigs", "check_prerelease_version", "check_git_repo_dirty", "check_git_repo_op", "DevtoolError", "argparse_oe"], "external_methods": ["exec_build_env_command", "parse_recipe", "move", "rename", "md5_file", "build_targets", "is_src_url", "validate_pn", "get_default_srctree", "inherit", "get_recipe_local_files", "copyhardlinktree", "variable", "setVar", "getVar", "getVarFlags", "build_targets", "get_recipe_patches", "copy", "run", "remove", "commit", "checkout", "branch", "rev-parse", "rev-list", "git", "symlink", "is_link", "move", "os", "shutil", "glob", "logging", "errno"], "published": ["add", "extract", "sync", "modify", "rename"], "classes": [], "methods": [{"name": "add(args, config, basepath, workspace)", "description": "Handles the 'add' subcommand: creates a new recipe based on a source URL or file, initializes source tree, and sets up build environment integration.", "scope": "", "scopeKind": ""}, {"name": "_check_compatible_recipe(pn, d)", "description": "Validates whether a recipe is supported by devtool based on its class or type.", "scope": "", "scopeKind": ""}, {"name": "_dry_run_copy(src, dst, dry_run_outdir, base_outdir)", "description": "Copies a file to a dry-run output directory without overwriting existing files.", "scope": "", "scopeKind": ""}, {"name": "_move_file(src, dst, dry_run_outdir=None, base_outdir=None)", "description": "Moves or copies a file, creating destination directories as needed, optionally in dry-run mode.", "scope": "", "scopeKind": ""}, {"name": "_copy_file(src, dst, dry_run_outdir=None, base_outdir=None)", "description": "Copies a file, creating necessary directories, with dry-run support.", "scope": "", "scopeKind": ""}, {"name": "_git_ls_tree(repodir, treeish='HEAD', recursive=False)", "description": "Lists files in a git treeish, returning a dict mapping filenames to their object IDs.", "scope": "", "scopeKind": ""}, {"name": "_git_exclude_path(srctree, path)", "description": "Returns a list of pathspecs excluding a specific path in a git repository.", "scope": "", "scopeKind": ""}, {"name": "_ls_tree(directory)", "description": "Recursively lists all files in a directory.", "scope": "", "scopeKind": ""}, {"name": "extract(args, config, basepath, workspace)", "description": "Handles the 'extract' subcommand: sets up environment and sources for a recipe, optionally extracting source code.", "scope": "", "scopeKind": ""}, {"name": "sync(args, config, basepath, workspace)", "description": "Handles the 'sync' subcommand: synchronizes source trees for a recipe, ensuring local files are consistent with upstream.", "scope": "", "scopeKind": ""}, {"name": "symlink_oelocal_files_srctree(rd,srctree)", "description": "Creates symlinks for local oe-local-files into the source tree.", "scope": "", "scopeKind": ""}, {"name": "_extract_source(srctree, keep_temp, devbranch, sync, config, basepath, workspace, fixed_setup, d, tinfoil, no_overrides=False)", "description": "Extracts sources of a recipe, handles unpacking, patching, symlinks, and source control.", "scope": "", "scopeKind": ""}, {"name": "_add_md5(config, recipename, filename)", "description": "Records the MD5 checksum of files for tracking changes.", "scope": "", "scopeKind": ""}, {"name": "_check_preserve(config, recipename)", "description": "Checks if files were manually modified and preserves them.", "scope": "", "scopeKind": ""}, {"name": "get_staging_kver(srcdir)", "description": "Retrieves the kernel version from a staging directory.", "scope": "", "scopeKind": ""}, {"name": "get_staging_kbranch(srcdir)", "description": "Retrieves the kernel branch from a staging directory.", "scope": "", "scopeKind": ""}, {"name": "modify(args, config, basepath, workspace)", "description": "Handles the 'modify' subcommand: allows editing existing recipes, possibly copying local files, and setting source trees.", "scope": "", "scopeKind": ""}, {"name": "rename(args, config, basepath, workspace)", "description": "Handles the 'rename' subcommand: renames recipes, updates references, and maintains consistency in workspace metadata.", "scope": "", "scopeKind": ""}, {"name": "_get_patchset_revs(srctree, recipe_path, initial_rev=None, force_patch_refresh=False)", "description": "Gets initial and update revisions of a patchset for a recipe, considering branch and commit history.", "scope": "", "scopeKind": ""}, {"name": "_remove_file_entries(srcuri, filelist)", "description": "Removes specific file entries from srcuri and file list.", "scope": "", "scopeKind": ""}, {"name": "_replace_srcuri_entry(srcuri, filename, newentry)", "description": "Replaces a source URI entry with a new one based on filename.", "scope": "", "scopeKind": ""}, {"name": "_remove_source_files(append, files, destpath, no_report_remove=False, dry_run=False)", "description": "Unlinks (deletes) source files, optionally in dry-run mode.", "scope": "", "scopeKind": ""}, {"name": "_export_patches(srctree, rd, start_rev, destdir, changed_revs=None)", "description": "Exports patches from a source directory, handling updates, additions, and removals.", "scope": "", "scopeKind": ""}, {"name": "_create_kconfig_diff(srctree, rd, outfile)", "description": "Creates a diff fragment for kernel configuration changes.", "scope": "", "scopeKind": ""}, {"name": "_export_local_files(srctree, rd, destdir, srctreebase)", "description": "Copies local source files into a destination directory, handling git and filesystem sources.", "scope": "", "scopeKind": ""}, {"name": "_determine_files_dir(rd)", "description": "Determine the appropriate files directory for a recipe.", "scope": "", "scopeKind": ""}, {"name": "_update_recipe_srcrev(recipename, workspace, srctree, rd, appendlayerdir, wildcard_version, no_remove, no_report_remove, dry_run_outdir=None)", "description": "Implement the 'srcrev' mode of update-recipe, updating SRCREV, patches, and local files.", "scope": "", "scopeKind": ""}, {"name": "_update_recipe_patch(recipename, workspace, srctree, rd, appendlayerdir, wildcard_version, no_remove, no_report_remove, initial_rev, dry_run_outdir=None, force_patch_refresh=False)", "description": "Implement the 'patch' mode of update-recipe, handling patch updates, srcuri adjustments, and recipe modifications.", "scope": "", "scopeKind": ""}, {"name": "_guess_recipe_update_mode(srctree, rdata)", "description": "Guesses whether to update recipe in 'patch' or 'srcrev' mode based on remote repository status.", "scope": "", "scopeKind": ""}, {"name": "_update_recipe(recipename, workspace, rd, mode, appendlayerdir, wildcard_version, no_remove, initial_rev, no_report_remove=False, dry_run_outdir=None, no_overrides=False, force_patch_refresh=False)", "description": "Main function to update recipes based on mode ('patch', 'srcrev', 'auto'), handling branch overrides, source updates, and applying patches.", "scope": "", "scopeKind": ""}, {"name": "update_recipe(args, config, basepath, workspace)", "description": "Entry point for the devtool 'update-recipe' subcommand: parses args, prepares environment, and calls _update_recipe.", "scope": "", "scopeKind": ""}, {"name": "status(args, config, basepath, workspace)", "description": "Entry point for the devtool 'status' subcommand: lists current recipes in workspace and their source trees.", "scope": "", "scopeKind": ""}, {"name": "_reset(recipes, no_clean, remove_work, config, basepath, workspace)", "description": "Resets one or more recipes, cleaning sysroot, resetting source trees, handling preserved files and layer configurations.", "scope": "", "scopeKind": ""}, {"name": "reset(args, config, basepath, workspace)", "description": "Entry point for the devtool 'reset' subcommand: processes args and calls _reset.", "scope": "", "scopeKind": ""}, {"name": "_get_layer(layername, d)", "description": "Determines the base path for a specified layer name or path.", "scope": "", "scopeKind": ""}, {"name": "finish(args, config, basepath, workspace)", "description": "Entry point for the devtool 'finish' subcommand: finalizes work on a recipe, moving it into a target layer, handling git operations, and cleaning workspace.", "scope": "", "scopeKind": ""}, {"name": "get_default_srctree(config, recipename='')", "description": "Gets default source tree path based on configuration and recipe name.", "scope": "", "scopeKind": ""}, {"name": "register_commands(subparsers, context)", "description": "Registers devtool subcommands and their argument parsers.", "scope": "", "scopeKind": ""}, {"name": "addfile(fn)", "scope": "_add_md5", "scopeKind": "function", "description": "unavailable"}, {"name": "clean_preferred_provider(pn, layerconf_path)", "scope": "_reset", "scopeKind": "function", "description": "unavailable"}, {"name": "preservedir(origdir)", "scope": "_reset", "scopeKind": "function", "description": "unavailable"}, {"name": "srcuri_entry(fname)", "scope": "_update_recipe_patch", "scopeKind": "function", "description": "unavailable"}], "search-terms": ["devtool", "recipeutils", "scm", "patch", "extract", "sync", "modify", "rename", "add", "source extraction", "recipe management", "yocto", "bitbake", "source trees"], "calls": ["os.path.exists", "shutil.copy2", "os.path.isdir", "shutil.copy2", "filecmp.cmp", "os.path.join", "os.path.relpath", "os.path.basename", "os.path.isdir", "shutil.rmtree", "shutil.move", "bb.process.run", "bb.process.ExecutionError", "shutil.rmtree", "oe.recipeutils.bbappend_recipe", "oe.recipeutils.patch_recipe", "oe.recipeutils.find_layerdir", "oe.recipeutils.get_bbfile_path", "oe.recipeutils.get_bbfile_path", "oe.recipeutils.find_layerdir", "oe.recipeutils.get_bbfile_path", "bb.process.run", "logging.info", "logging.warning", "os.remove", "os.listdir", "os.walk", "diff", "os.path.relpath", "os.path.abspath", "os.path.join"], "state": 2, "file_id": 1475, "knowledge_revision": 26122, "git_revision": "", "ctags": [{"_type": "tag", "name": "_add_md5", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/devtool/standard.py", "pattern": "/^def _add_md5(config, recipename, filename):$/", "language": "Python", "kind": "function", "signature": "(config, recipename, filename)"}, {"_type": "tag", "name": "_check_compatible_recipe", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/devtool/standard.py", "pattern": "/^def _check_compatible_recipe(pn, d):$/", "language": "Python", "kind": "function", "signature": "(pn, d)"}, {"_type": "tag", "name": "_check_preserve", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/devtool/standard.py", "pattern": "/^def _check_preserve(config, recipename):$/", "language": "Python", "kind": "function", "signature": "(config, recipename)"}, {"_type": "tag", "name": "_copy_file", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/devtool/standard.py", "pattern": "/^def _copy_file(src, dst, dry_run_outdir=None, base_outdir=None):$/", "language": "Python", "kind": "function", "signature": "(src, dst, dry_run_outdir=None, base_outdir=None)"}, {"_type": "tag", "name": "_create_kconfig_diff", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/devtool/standard.py", "pattern": "/^def _create_kconfig_diff(srctree, rd, outfile):$/", "language": "Python", "kind": "function", "signature": "(srctree, rd, outfile)"}, {"_type": "tag", "name": "_determine_files_dir", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/devtool/standard.py", "pattern": "/^def _determine_files_dir(rd):$/", "language": "Python", "kind": "function", "signature": "(rd)"}, {"_type": "tag", "name": "_dry_run_copy", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/devtool/standard.py", "pattern": "/^def _dry_run_copy(src, dst, dry_run_outdir, base_outdir):$/", "language": "Python", "kind": "function", "signature": "(src, dst, dry_run_outdir, base_outdir)"}, {"_type": "tag", "name": "_export_local_files", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/devtool/standard.py", "pattern": "/^def _export_local_files(srctree, rd, destdir, srctreebase):$/", "language": "Python", "kind": "function", "signature": "(srctree, rd, destdir, srctreebase)"}, {"_type": "tag", "name": "_export_patches", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/devtool/standard.py", "pattern": "/^def _export_patches(srctree, rd, start_rev, destdir, changed_revs=None):$/", "language": "Python", "kind": "function", "signature": "(srctree, rd, start_rev, destdir, changed_revs=None)"}, {"_type": "tag", "name": "_extract_source", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/devtool/standard.py", "pattern": "/^def _extract_source(srctree, keep_temp, devbranch, sync, config, basepath, workspace, fixed_setu/", "language": "Python", "kind": "function", "signature": "(srctree, keep_temp, devbranch, sync, config, basepath, workspace, fixed_setup, d, tinfoil, no_overrides=False)"}, {"_type": "tag", "name": "_get_layer", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/devtool/standard.py", "pattern": "/^def _get_layer(layername, d):$/", "language": "Python", "kind": "function", "signature": "(layername, d)"}, {"_type": "tag", "name": "_get_patchset_revs", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/devtool/standard.py", "pattern": "/^def _get_patchset_revs(srctree, recipe_path, initial_rev=None, force_patch_refresh=False):$/", "language": "Python", "kind": "function", "signature": "(srctree, recipe_path, initial_rev=None, force_patch_refresh=False)"}, {"_type": "tag", "name": "_git_exclude_path", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/devtool/standard.py", "pattern": "/^def _git_exclude_path(srctree, path):$/", "language": "Python", "kind": "function", "signature": "(srctree, path)"}, {"_type": "tag", "name": "_git_ls_tree", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/devtool/standard.py", "pattern": "/^def _git_ls_tree(repodir, treeish='HEAD', recursive=False):$/", "language": "Python", "kind": "function", "signature": "(repodir, treeish='HEAD', recursive=False)"}, {"_type": "tag", "name": "_guess_recipe_update_mode", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/devtool/standard.py", "pattern": "/^def _guess_recipe_update_mode(srctree, rdata):$/", "language": "Python", "kind": "function", "signature": "(srctree, rdata)"}, {"_type": "tag", "name": "_ls_tree", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/devtool/standard.py", "pattern": "/^def _ls_tree(directory):$/", "language": "Python", "kind": "function", "signature": "(directory)"}, {"_type": "tag", "name": "_move_file", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/devtool/standard.py", "pattern": "/^def _move_file(src, dst, dry_run_outdir=None, base_outdir=None):$/", "language": "Python", "kind": "function", "signature": "(src, dst, dry_run_outdir=None, base_outdir=None)"}, {"_type": "tag", "name": "_remove_file_entries", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/devtool/standard.py", "pattern": "/^def _remove_file_entries(srcuri, filelist):$/", "language": "Python", "kind": "function", "signature": "(srcuri, filelist)"}, {"_type": "tag", "name": "_remove_source_files", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/devtool/standard.py", "pattern": "/^def _remove_source_files(append, files, destpath, no_report_remove=False, dry_run=False):$/", "language": "Python", "kind": "function", "signature": "(append, files, destpath, no_report_remove=False, dry_run=False)"}, {"_type": "tag", "name": "_replace_srcuri_entry", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/devtool/standard.py", "pattern": "/^def _replace_srcuri_entry(srcuri, filename, newentry):$/", "language": "Python", "kind": "function", "signature": "(srcuri, filename, newentry)"}, {"_type": "tag", "name": "_reset", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/devtool/standard.py", "pattern": "/^def _reset(recipes, no_clean, remove_work, config, basepath, workspace):$/", "language": "Python", "kind": "function", "signature": "(recipes, no_clean, remove_work, config, basepath, workspace)"}, {"_type": "tag", "name": "_update_recipe", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/devtool/standard.py", "pattern": "/^def _update_recipe(recipename, workspace, rd, mode, appendlayerdir, wildcard_version, no_remove,/", "language": "Python", "kind": "function", "signature": "(recipename, workspace, rd, mode, appendlayerdir, wildcard_version, no_remove, initial_rev, no_report_remove=False, dry_run_outdir=None, no_overrides=False, force_patch_refresh=False)"}, {"_type": "tag", "name": "_update_recipe_patch", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/devtool/standard.py", "pattern": "/^def _update_recipe_patch(recipename, workspace, srctree, rd, appendlayerdir, wildcard_version, n/", "language": "Python", "kind": "function", "signature": "(recipename, workspace, srctree, rd, appendlayerdir, wildcard_version, no_remove, no_report_remove, initial_rev, dry_run_outdir=None, force_patch_refresh=False)"}, {"_type": "tag", "name": "_update_recipe_srcrev", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/devtool/standard.py", "pattern": "/^def _update_recipe_srcrev(recipename, workspace, srctree, rd, appendlayerdir, wildcard_version, /", "language": "Python", "kind": "function", "signature": "(recipename, workspace, srctree, rd, appendlayerdir, wildcard_version, no_remove, no_report_remove, dry_run_outdir=None)"}, {"_type": "tag", "name": "add", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/devtool/standard.py", "pattern": "/^def add(args, config, basepath, workspace):$/", "language": "Python", "kind": "function", "signature": "(args, config, basepath, workspace)"}, {"_type": "tag", "name": "addfile", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/devtool/standard.py", "pattern": "/^    def addfile(fn):$/", "file": true, "language": "Python", "kind": "function", "signature": "(fn)", "scope": "_add_md5", "scopeKind": "function"}, {"_type": "tag", "name": "clean_preferred_provider", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/devtool/standard.py", "pattern": "/^    def clean_preferred_provider(pn, layerconf_path):$/", "file": true, "language": "Python", "kind": "function", "signature": "(pn, layerconf_path)", "scope": "_reset", "scopeKind": "function"}, {"_type": "tag", "name": "extract", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/devtool/standard.py", "pattern": "/^def extract(args, config, basepath, workspace):$/", "language": "Python", "kind": "function", "signature": "(args, config, basepath, workspace)"}, {"_type": "tag", "name": "finish", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/devtool/standard.py", "pattern": "/^def finish(args, config, basepath, workspace):$/", "language": "Python", "kind": "function", "signature": "(args, config, basepath, workspace)"}, {"_type": "tag", "name": "get_default_srctree", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/devtool/standard.py", "pattern": "/^def get_default_srctree(config, recipename=''):$/", "language": "Python", "kind": "function", "signature": "(config, recipename='')"}, {"_type": "tag", "name": "get_staging_kbranch", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/devtool/standard.py", "pattern": "/^def get_staging_kbranch(srcdir):$/", "language": "Python", "kind": "function", "signature": "(srcdir)"}, {"_type": "tag", "name": "get_staging_kver", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/devtool/standard.py", "pattern": "/^def get_staging_kver(srcdir):$/", "language": "Python", "kind": "function", "signature": "(srcdir)"}, {"_type": "tag", "name": "logger", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/devtool/standard.py", "pattern": "/^logger = logging.getLogger('devtool')$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "modify", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/devtool/standard.py", "pattern": "/^def modify(args, config, basepath, workspace):$/", "language": "Python", "kind": "function", "signature": "(args, config, basepath, workspace)"}, {"_type": "tag", "name": "override_branch_prefix", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/devtool/standard.py", "pattern": "/^override_branch_prefix = 'devtool-override-'$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "preservedir", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/devtool/standard.py", "pattern": "/^        def preservedir(origdir):$/", "file": true, "language": "Python", "kind": "function", "signature": "(origdir)", "scope": "_reset", "scopeKind": "function"}, {"_type": "tag", "name": "register_commands", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/devtool/standard.py", "pattern": "/^def register_commands(subparsers, context):$/", "language": "Python", "kind": "function", "signature": "(subparsers, context)"}, {"_type": "tag", "name": "rename", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/devtool/standard.py", "pattern": "/^def rename(args, config, basepath, workspace):$/", "language": "Python", "kind": "function", "signature": "(args, config, basepath, workspace)"}, {"_type": "tag", "name": "reset", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/devtool/standard.py", "pattern": "/^def reset(args, config, basepath, workspace):$/", "language": "Python", "kind": "function", "signature": "(args, config, basepath, workspace)"}, {"_type": "tag", "name": "srcuri_entry", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/devtool/standard.py", "pattern": "/^    def srcuri_entry(fname):$/", "file": true, "language": "Python", "kind": "function", "signature": "(fname)", "scope": "_update_recipe_patch", "scopeKind": "function"}, {"_type": "tag", "name": "status", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/devtool/standard.py", "pattern": "/^def status(args, config, basepath, workspace):$/", "language": "Python", "kind": "function", "signature": "(args, config, basepath, workspace)"}, {"_type": "tag", "name": "symlink_oelocal_files_srctree", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/devtool/standard.py", "pattern": "/^def symlink_oelocal_files_srctree(rd,srctree):$/", "language": "Python", "kind": "function", "signature": "(rd,srctree)"}, {"_type": "tag", "name": "sync", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/devtool/standard.py", "pattern": "/^def sync(args, config, basepath, workspace):$/", "language": "Python", "kind": "function", "signature": "(args, config, basepath, workspace)"}, {"_type": "tag", "name": "update_recipe", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/devtool/standard.py", "pattern": "/^def update_recipe(args, config, basepath, workspace):$/", "language": "Python", "kind": "function", "signature": "(args, config, basepath, workspace)"}], "hash": "7e86691c2c86d9b03ea6d3a8000bf916", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "openembedded-core/scripts/lib/devtool/standard.py", "fields": [{"name": "logger = logging.getLogger('devtool')", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "override_branch_prefix = 'devtool-override-'", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"26122": ""}]}