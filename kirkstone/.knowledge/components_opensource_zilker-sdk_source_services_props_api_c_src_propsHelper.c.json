{"is_source_file": true, "format": "C", "description": "A source file providing helper functions for accessing and manipulating properties within a software project. It includes functions for querying, retrieving, setting, and converting property values, as well as checks for property mutability and security constraints.", "external_files": ["<propsMgr/propsHelper.h>", "<propsMgr/propsService_ipc.h>", "<propsMgr/commonProperties.h>", "<icUtil/stringUtils.h>", "<icLog/logging.h>", "<string.h>", "<stdlib.h>", "<stdio.h>", "<inttypes.h>", "<errno.h>"], "external_methods": ["propsService_request_GET_CPE_PROPERTY", "propsService_request_SET_CPE_PROPERTY", "create_property", "destroy_property", "destroy_propertySetResult", "stringCompare", "stringToBool", "trimString"], "published": ["hasProperty", "canServerSetProperty", "getPropertyAsString", "getPropertyEventAsString", "getPropertyAsInt32", "getPropertyEventAsInt32", "getPropertyAsUInt32", "getPropertyEventAsUInt32", "getPropertyAsInt64", "getPropertyEventAsInt64", "getPropertyAsUInt64", "getPropertyEventAsUInt64", "getPropertyAsBool", "getPropertyEventAsBool", "setPropertyValue", "setPropertyUInt32", "setPropertyInt32", "setPropertyUInt64", "setPropertyInt64", "setPropertyBool"], "classes": [], "methods": [{"name": "bool hasProperty(const char * propName)", "description": "Checks if a specific property is set by querying the propsService. Returns true if the property has a value, false otherwise.", "scope": "", "scopeKind": ""}, {"name": "bool canServerSetProperty(const char * propName,const char * propsValue)", "description": "Determines whether a remote request is permitted to set a specific property, with special handling for SSL verification settings to prevent insecure configurations.", "scope": "", "scopeKind": ""}, {"name": "char * getPropertyAsString(const char * propName,const char * defValue)", "description": "Retrieves the string value of a property from the propsService, returning a default value if the property is not defined or the service fails.", "scope": "", "scopeKind": ""}, {"name": "const char * getPropertyEventAsString(const cpePropertyEvent * event,const char * defValue)", "description": "Gets the string value associated with a property event, or a default if the event is null or signifies deletion.", "scope": "", "scopeKind": ""}, {"name": "int32_t getInternalAsInt32(const char * value,int32_t defValue)", "description": "Converts a string to a 32-bit integer, applying the default value if conversion fails or input is invalid.", "scope": "", "scopeKind": ""}, {"name": "int32_t getPropertyAsInt32(const char * propName,int32_t defValue)", "description": "Fetches a property's value as a 32-bit integer, with an option for a default if retrieval fails.", "scope": "", "scopeKind": ""}, {"name": "int32_t getPropertyEventAsInt32(const cpePropertyEvent * event,int32_t defValue)", "description": "Obtains a property's integer value from an event, or a default if the event is null or indicates deletion.", "scope": "", "scopeKind": ""}, {"name": "uint32_t getInternalAsUInt32(const char * value,uint32_t defValue)", "description": "Converts a string to an unsigned 32-bit integer, considering invalid input and defaults.", "scope": "", "scopeKind": ""}, {"name": "uint32_t getPropertyAsUInt32(const char * propName,uint32_t defValue)", "description": "Retrieves a property's value as an unsigned 32-bit integer with fallback default.", "scope": "", "scopeKind": ""}, {"name": "uint32_t getPropertyEventAsUInt32(const cpePropertyEvent * event,uint32_t defValue)", "description": "Gets a property's unsigned 32-bit integer value from an event.", "scope": "", "scopeKind": ""}, {"name": "int64_t getInternalAsInt64(const char * value,int64_t defValue)", "description": "Converts a string to a 64-bit integer, using default on failure.", "scope": "", "scopeKind": ""}, {"name": "int64_t getPropertyAsInt64(const char * propName,int64_t defValue)", "description": "Fetches a property's value as a 64-bit integer, with default fallback.", "scope": "", "scopeKind": ""}, {"name": "int64_t getPropertyEventAsInt64(const cpePropertyEvent * event,int64_t defValue)", "description": "Gets a property's 64-bit integer value from an event.", "scope": "", "scopeKind": ""}, {"name": "uint64_t getInternalAsUInt64(const char * value,uint64_t defValue)", "description": "Converts a string to a 64-bit unsigned integer safely, considering defaults.", "scope": "", "scopeKind": ""}, {"name": "uint64_t getPropertyAsUInt64(const char * propName,uint64_t defValue)", "description": "Retrieves a property's value as a 64-bit unsigned integer with default.", "scope": "", "scopeKind": ""}, {"name": "uint64_t getPropertyEventAsUInt64(const cpePropertyEvent * event,uint64_t defValue)", "description": "Gets a property's unsigned 64-bit integer value from an event.", "scope": "", "scopeKind": ""}, {"name": "bool getInternalAsBool(const char * value,bool defValue)", "description": "Converts a string to a boolean, returning a default if input is invalid.", "scope": "", "scopeKind": ""}, {"name": "bool getPropertyAsBool(const char * propName,bool defValue)", "description": "Fetches a property's boolean value with a default if not set or invalid.", "scope": "", "scopeKind": ""}, {"name": "bool getPropertyEventAsBool(const cpePropertyEvent * event,bool defValue)", "description": "Gets a boolean property value from an event.", "scope": "", "scopeKind": ""}, {"name": "propSetResult setPropertyValue(const char * propName,const char * propValue,bool overwrite,propSource source)", "description": "Sets a property in the propsService, optionally avoiding overwriting existing values.", "scope": "", "scopeKind": ""}, {"name": "propSetResult setPropertyUInt32(const char * propName,uint32_t value,bool overwrite,propSource source)", "description": "Sets a uint32 property value.", "scope": "", "scopeKind": ""}, {"name": "propSetResult setPropertyInt32(const char * propName,int32_t value,bool overwrite,propSource source)", "description": "Sets an int32 property value.", "scope": "", "scopeKind": ""}, {"name": "propSetResult setPropertyUInt64(const char * propName,uint64_t value,bool overwrite,propSource source)", "description": "Sets a uint64 property value.", "scope": "", "scopeKind": ""}, {"name": "propSetResult setPropertyInt64(const char * propName,int64_t value,bool overwrite,propSource source)", "description": "Sets an int64 property value.", "scope": "", "scopeKind": ""}, {"name": "propSetResult setPropertyBool(const char * propName,bool value,bool overwrite,propSource source)", "description": "Sets a boolean property value.", "scope": "", "scopeKind": ""}], "search-terms": ["propsHelper", "property query", "property set", "property type cast", "propsService", "internal conversion", "property retrieval", "property setting", "remote property access", "property security"], "state": 2, "file_id": 1231, "knowledge_revision": 14397, "git_revision": "", "ctags": [{"_type": "tag", "name": "canServerSetProperty", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/props/api/c/src/propsHelper.c", "pattern": "/^bool canServerSetProperty(const char *propName, const char *propsValue)$/", "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(const char * propName,const char * propsValue)"}, {"_type": "tag", "name": "getInternalAsBool", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/props/api/c/src/propsHelper.c", "pattern": "/^static bool getInternalAsBool(const char *value, bool defValue)$/", "file": true, "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(const char * value,bool defValue)"}, {"_type": "tag", "name": "getInternalAsInt32", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/props/api/c/src/propsHelper.c", "pattern": "/^static int32_t getInternalAsInt32(const char* value, int32_t defValue)$/", "file": true, "language": "C", "typeref": "typename:int32_t", "kind": "function", "signature": "(const char * value,int32_t defValue)"}, {"_type": "tag", "name": "getInternalAsInt64", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/props/api/c/src/propsHelper.c", "pattern": "/^static int64_t getInternalAsInt64(const char *value, int64_t defValue)$/", "file": true, "language": "C", "typeref": "typename:int64_t", "kind": "function", "signature": "(const char * value,int64_t defValue)"}, {"_type": "tag", "name": "getInternalAsUInt32", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/props/api/c/src/propsHelper.c", "pattern": "/^static uint32_t getInternalAsUInt32(const char *value, uint32_t defValue)$/", "file": true, "language": "C", "typeref": "typename:uint32_t", "kind": "function", "signature": "(const char * value,uint32_t defValue)"}, {"_type": "tag", "name": "getInternalAsUInt64", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/props/api/c/src/propsHelper.c", "pattern": "/^static uint64_t getInternalAsUInt64(const char *value, uint64_t defValue)$/", "file": true, "language": "C", "typeref": "typename:uint64_t", "kind": "function", "signature": "(const char * value,uint64_t defValue)"}, {"_type": "tag", "name": "getPropertyAsBool", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/props/api/c/src/propsHelper.c", "pattern": "/^bool getPropertyAsBool(const char *propName, bool defValue)$/", "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(const char * propName,bool defValue)"}, {"_type": "tag", "name": "getPropertyAsInt32", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/props/api/c/src/propsHelper.c", "pattern": "/^int32_t getPropertyAsInt32(const char *propName, int32_t defValue)$/", "language": "C", "typeref": "typename:int32_t", "kind": "function", "signature": "(const char * propName,int32_t defValue)"}, {"_type": "tag", "name": "getPropertyAsInt64", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/props/api/c/src/propsHelper.c", "pattern": "/^int64_t getPropertyAsInt64(const char *propName, int64_t defValue)$/", "language": "C", "typeref": "typename:int64_t", "kind": "function", "signature": "(const char * propName,int64_t defValue)"}, {"_type": "tag", "name": "getPropertyAsString", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/props/api/c/src/propsHelper.c", "pattern": "/^char *getPropertyAsString(const char *propName, const char *defValue)$/", "language": "C", "typeref": "typename:char *", "kind": "function", "signature": "(const char * propName,const char * defValue)"}, {"_type": "tag", "name": "getPropertyAsUInt32", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/props/api/c/src/propsHelper.c", "pattern": "/^uint32_t getPropertyAsUInt32(const char *propName, uint32_t defValue)$/", "language": "C", "typeref": "typename:uint32_t", "kind": "function", "signature": "(const char * propName,uint32_t defValue)"}, {"_type": "tag", "name": "getPropertyAsUInt64", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/props/api/c/src/propsHelper.c", "pattern": "/^uint64_t getPropertyAsUInt64(const char *propName, uint64_t defValue)$/", "language": "C", "typeref": "typename:uint64_t", "kind": "function", "signature": "(const char * propName,uint64_t defValue)"}, {"_type": "tag", "name": "getPropertyEventAsBool", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/props/api/c/src/propsHelper.c", "pattern": "/^bool getPropertyEventAsBool(const cpePropertyEvent *event, bool defValue)$/", "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(const cpePropertyEvent * event,bool defValue)"}, {"_type": "tag", "name": "getPropertyEventAsInt32", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/props/api/c/src/propsHelper.c", "pattern": "/^int32_t getPropertyEventAsInt32(const cpePropertyEvent *event, int32_t defValue)$/", "language": "C", "typeref": "typename:int32_t", "kind": "function", "signature": "(const cpePropertyEvent * event,int32_t defValue)"}, {"_type": "tag", "name": "getPropertyEventAsInt64", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/props/api/c/src/propsHelper.c", "pattern": "/^int64_t getPropertyEventAsInt64(const cpePropertyEvent *event, int64_t defValue)$/", "language": "C", "typeref": "typename:int64_t", "kind": "function", "signature": "(const cpePropertyEvent * event,int64_t defValue)"}, {"_type": "tag", "name": "getPropertyEventAsString", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/props/api/c/src/propsHelper.c", "pattern": "/^const char *getPropertyEventAsString(const cpePropertyEvent *event, const char *defValue)$/", "language": "C", "typeref": "typename:const char *", "kind": "function", "signature": "(const cpePropertyEvent * event,const char * defValue)"}, {"_type": "tag", "name": "getPropertyEventAsUInt32", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/props/api/c/src/propsHelper.c", "pattern": "/^uint32_t getPropertyEventAsUInt32(const cpePropertyEvent *event, uint32_t defValue)$/", "language": "C", "typeref": "typename:uint32_t", "kind": "function", "signature": "(const cpePropertyEvent * event,uint32_t defValue)"}, {"_type": "tag", "name": "getPropertyEventAsUInt64", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/props/api/c/src/propsHelper.c", "pattern": "/^uint64_t getPropertyEventAsUInt64(const cpePropertyEvent *event, uint64_t defValue)$/", "language": "C", "typeref": "typename:uint64_t", "kind": "function", "signature": "(const cpePropertyEvent * event,uint64_t defValue)"}, {"_type": "tag", "name": "hasProperty", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/props/api/c/src/propsHelper.c", "pattern": "/^bool hasProperty(const char *propName)$/", "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(const char * propName)"}, {"_type": "tag", "name": "setPropertyBool", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/props/api/c/src/propsHelper.c", "pattern": "/^propSetResult setPropertyBool(const char *propName, bool value, bool overwrite, propSource sourc/", "language": "C", "typeref": "typename:propSetResult", "kind": "function", "signature": "(const char * propName,bool value,bool overwrite,propSource source)"}, {"_type": "tag", "name": "setPropertyInt32", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/props/api/c/src/propsHelper.c", "pattern": "/^propSetResult setPropertyInt32(const char *propName, int32_t value, bool overwrite, propSource s/", "language": "C", "typeref": "typename:propSetResult", "kind": "function", "signature": "(const char * propName,int32_t value,bool overwrite,propSource source)"}, {"_type": "tag", "name": "setPropertyInt64", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/props/api/c/src/propsHelper.c", "pattern": "/^propSetResult setPropertyInt64(const char *propName, int64_t value, bool overwrite, propSource s/", "language": "C", "typeref": "typename:propSetResult", "kind": "function", "signature": "(const char * propName,int64_t value,bool overwrite,propSource source)"}, {"_type": "tag", "name": "setPropertyUInt32", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/props/api/c/src/propsHelper.c", "pattern": "/^propSetResult setPropertyUInt32(const char *propName, uint32_t value, bool overwrite, propSource/", "language": "C", "typeref": "typename:propSetResult", "kind": "function", "signature": "(const char * propName,uint32_t value,bool overwrite,propSource source)"}, {"_type": "tag", "name": "setPropertyUInt64", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/props/api/c/src/propsHelper.c", "pattern": "/^propSetResult setPropertyUInt64(const char *propName, uint64_t value, bool overwrite, propSource/", "language": "C", "typeref": "typename:propSetResult", "kind": "function", "signature": "(const char * propName,uint64_t value,bool overwrite,propSource source)"}, {"_type": "tag", "name": "setPropertyValue", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/props/api/c/src/propsHelper.c", "pattern": "/^propSetResult setPropertyValue(const char *propName, const char *propValue, bool overwrite, prop/", "language": "C", "typeref": "typename:propSetResult", "kind": "function", "signature": "(const char * propName,const char * propValue,bool overwrite,propSource source)"}], "hash": "b839cda4e51261238f71ecc485430e2e", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "components/opensource/zilker-sdk/source/services/props/api/c/src/propsHelper.c", "revision_history": [{"14397": ""}]}