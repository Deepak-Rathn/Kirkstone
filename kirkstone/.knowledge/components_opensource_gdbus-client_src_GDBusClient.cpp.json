{"is_source_file": true, "format": "C++", "description": "This file is a C++ source file implementing a D-Bus client component for interacting with system services. It includes class definitions, function implementations for making synchronous D-Bus calls, managing proxies, handling signals, error checking, and logging mechanisms. The code relies heavily on GLib and GIO libraries, with support for threading and event loops, and provides a framework for communication over D-Bus with detailed error handling and callback registration.", "external_files": ["GDBusClient.hpp", "<cstdint>", "<cstdlib>", "<cstdio>", "<vector>", "<map>", "<set>", "<string>", "<functional>", "<utility>", "<algorithm>", "<regex>", "<mutex>", "<atomic>", "<thread>", "<chrono>", "gio/gio.h"], "external_methods": ["g_dbus_proxy_new_for_bus_sync", "g_dbus_proxy_call_sync", "g_variant_new_tuple", "g_variant_get_child_value", "g_variant_n_children", "g_variant_get_child_value", "g_variant_unref", "g_variant_take_ref", "g_variant_is_object_path", "g_dbus_is_name", "g_dbus_is_interface_name", "g_dbus_is_member_name", "g_main_loop_new", "g_main_context_new", "g_main_loop_get_context", "g_main_context_unref", "g_main_loop_unref", "g_main_context_is_owner", "g_source_set_callback", "g_source_attach", "g_source_unref", "g_source_destroy", "g_source_set_callback", "g_timeout_source_new", "g_source_destroy", "g_main_context_iteration", "g_main_loop_quit", "g_main_loop_is_running", "g_clear_object", "g_error_free", "g_quark_to_string", "g_clear_error", "g_variant_is_object_path", "g_variant_new_tuple", "g_variant_unref", "g_variant_get_child_value", "g_variant_n_children"], "published": ["GDBusCall", "GDBusSignal", "waitAndProcessSignals", "stopProcessingSignals", "GDBusObjectDescriptor"], "classes": [{"name": "GDBusCall", "description": "Represents a D-Bus method call, managing parameters, executing synchronous calls, and handling retries with error checking."}, {"name": "GDBusSignal", "description": "Represents a D-Bus signal subscription, with mechanisms to register callbacks."}], "methods": [{"name": "bool callSync()", "description": "Executes the D-Bus method call synchronously, with retries on specific errors, marshaling input parameters and unmarshaling output, ensuring thread safety and resource cleanup.", "scope": "gdbus_client::GDBusCall", "scopeKind": "class"}, {"name": "registerCallback", "description": "Registers a callback for a specific D-Bus signal, associating it with a sender and signal name."}, {"name": "waitAndProcessSignals", "description": "Runs the GLib main loop for a specified duration to process incoming D-Bus signals and events."}, {"name": "stopProcessingSignals", "description": "Stops the main loop to cease processing D-Bus signals."}, {"name": "GDBusCall(const GDBusObjectDescriptor & obj,const char * method)", "scope": "gdbus_client::GDBusCall", "scopeKind": "class", "description": "unavailable"}, {"name": "GDBusCall(const char * obj_name,const char * method)", "scope": "gdbus_client::GDBusCall", "scopeKind": "class", "description": "unavailable"}, {"name": "void RDK_LOG(int,const char *,const char *,const char *,const char *,unsigned,const char *)", "scope": "__anon7952d90d0811", "scopeKind": "namespace", "description": "unavailable"}, {"name": ":   name(name), type(type), cleanup{ []{\\/*do nothing for 'in'*\\/} } __anon7952d90d0202", "scope": "__anon7952d90d0111::param_t", "scopeKind": "struct", "description": "unavailable"}, {"name": "__anon7952d90d0302()", "scope": "__anon7952d90d0111::param_t::param_t", "scopeKind": "function", "description": "unavailable"}, {"name": ":   name(name), type(type), cleanup{ [par]{par->value = {}; } } __anon7952d90d0402", "scope": "__anon7952d90d0111::param_t", "scopeKind": "struct", "description": "unavailable"}, {"name": "__anon7952d90d0502(GVariant *v)", "scope": "__anon7952d90d0111::param_t::param_t", "scopeKind": "function", "description": "unavailable"}, {"name": "__anon7952d90d0602(GVariant *v)", "scope": "__anon7952d90d0111::variant_holder_t::~variant_holder_t", "scopeKind": "function", "description": "unavailable"}, {"name": "P * _verboseNonNull(const char * func,unsigned line,P * p,const std::string & expr)", "scope": "__anon7952d90d0111", "scopeKind": "namespace", "description": "unavailable"}, {"name": "void add(const gdbus_client::GDBusCall * p,call_t && call)", "scope": "__anon7952d90d0111::call_storage_t", "scopeKind": "struct", "description": "unavailable"}, {"name": "void add(const obj_desc_t & sender,const std::string & signal_name,const gdbus_client::GDBusSignal::callback_t & callback)", "scope": "__anon7952d90d0111::signal_storage_t", "scopeKind": "struct", "description": "unavailable"}, {"name": "bool adopt(GVariant * v)", "scope": "__anon7952d90d0111::variant_holder_t", "scopeKind": "struct", "description": "unavailable"}, {"name": "call_guard_t(call_guard_t && g)", "scope": "__anon7952d90d0111::call_storage_t::call_guard_t", "scopeKind": "struct", "description": "unavailable"}, {"name": "call_guard_t(call_ptr_t && ptr)", "scope": "__anon7952d90d0111::call_storage_t::call_guard_t", "scopeKind": "struct", "description": "unavailable"}, {"name": "call_t(obj_desc_t obj,std::string method)", "scope": "__anon7952d90d0111::call_t", "scopeKind": "struct", "description": "unavailable"}, {"name": "void clear()", "scope": "__anon7952d90d0111::gerror_t", "scopeKind": "struct", "description": "unavailable"}, {"name": "errcode_t errType() const", "scope": "__anon7952d90d0111::gerror_t", "scopeKind": "struct", "description": "unavailable"}, {"name": "obj_desc_t fromDesc(const gdbus_client::GDBusObjectDescriptor & d)", "scope": "__anon7952d90d0111::obj_desc_t", "scopeKind": "struct", "description": "unavailable"}, {"name": "obj_desc_t fromName(const std::string & name)", "scope": "__anon7952d90d0111::obj_desc_t", "scopeKind": "struct", "description": "unavailable"}, {"name": "variant_holder_t from_tuple(GVariant * tuple)", "scope": "__anon7952d90d0111::variant_holder_t", "scopeKind": "struct", "description": "unavailable"}, {"name": "gcontext_switcher_t()", "scope": "__anon7952d90d0111::gcontext_switcher_t", "scopeKind": "class", "description": "unavailable"}, {"name": "call_guard_t get(const gdbus_client::GDBusCall * p)", "scope": "__anon7952d90d0111::call_storage_t", "scopeKind": "struct", "description": "unavailable"}, {"name": "std::vector<gdbus_client::GDBusSignal::callback_t> get(const std::string & sender_name,const std::string & signal_name)", "scope": "__anon7952d90d0111::signal_storage_t", "scopeKind": "struct", "description": "unavailable"}, {"name": "bool have_logger()", "scope": "__anon7952d90d0a11", "scopeKind": "namespace", "description": "unavailable"}, {"name": "proxy_t & instanceFor(const obj_desc_t & obj,const Policy policy)", "scope": "__anon7952d90d0111::proxy_t", "scopeKind": "struct", "description": "unavailable"}, {"name": "const std::string key(const std::string & sender_name,const std::string & sig_name)", "scope": "__anon7952d90d0111::signal_storage_t", "scopeKind": "struct", "description": "unavailable"}, {"name": "bool logAssert(const char * func,unsigned line,bool f,const std::string & err)", "scope": "__anon7952d90d0a11", "scopeKind": "namespace", "description": "unavailable"}, {"name": "loop_timeout_t(unsigned interval_msec,GMainLoop * loop)", "scope": "__anon7952d90d0111::loop_timeout_t", "scopeKind": "struct", "description": "unavailable"}, {"name": "GMainContext * mainContextOf(GMainLoop * loop)", "scope": "__anon7952d90d0111", "scopeKind": "namespace", "description": "unavailable"}, {"name": "GMainLoop * mainLoopInstance()", "scope": "__anon7952d90d0111", "scopeKind": "namespace", "description": "unavailable"}, {"name": "void moveIntoCall()", "scope": "__anon7952d90d0111::param_t", "scopeKind": "struct", "description": "unavailable"}], "calls": ["g_dbus_proxy_call_sync", "g_dbus_proxy_new_for_bus_sync", "g_variant_new_tuple", "g_variant_get_child_value", "g_variant_n_children", "g_variant_get_child_value", "g_variant_unref", "g_variant_take_ref"], "search-terms": ["GDBusClient.cpp", "D-Bus", "g_dbus_proxy", "GVariant", "signal registration", "synchronous call", "proxy management", "error handling", "GLib main loop", "thread safety"], "state": 2, "file_id": 1350, "knowledge_revision": 14508, "git_revision": "", "ctags": [{"_type": "tag", "name": "ACCESS_DENIED", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusClient.cpp", "pattern": "/^            ACCESS_DENIED,$/", "file": true, "language": "C++", "kind": "enumerator", "scope": "__anon7952d90d0111::gerror_t::errcode_t", "scopeKind": "enum"}, {"_type": "tag", "name": "AT", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusClient.cpp", "pattern": "/^#define AT(/", "file": true, "language": "C++", "kind": "macro", "signature": "()"}, {"_type": "tag", "name": "GDBusCall", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusClient.cpp", "pattern": "/^        using GDBusCall = gdbus_client::GDBusCall;$/", "file": true, "language": "C++", "typeref": "typename:gdbus_client::GDBusCall", "kind": "typedef", "scope": "__anon7952d90d0111::param_t", "scopeKind": "struct"}, {"_type": "tag", "name": "GDBusCall", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusClient.cpp", "pattern": "/^    GDBusCall::GDBusCall(const GDBusObjectDescriptor &obj, const char *method) {$/", "language": "C++", "kind": "function", "signature": "(const GDBusObjectDescriptor & obj,const char * method)", "scope": "gdbus_client::GDBusCall", "scopeKind": "class"}, {"_type": "tag", "name": "GDBusCall", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusClient.cpp", "pattern": "/^    GDBusCall::GDBusCall(const char *obj_name, const char *method) {$/", "language": "C++", "kind": "function", "signature": "(const char * obj_name,const char * method)", "scope": "gdbus_client::GDBusCall", "scopeKind": "class"}, {"_type": "tag", "name": "NOERR", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusClient.cpp", "pattern": "/^            NOERR,$/", "file": true, "language": "C++", "kind": "enumerator", "scope": "__anon7952d90d0111::gerror_t::errcode_t", "scopeKind": "enum"}, {"_type": "tag", "name": "PARAM_CTOR", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusClient.cpp", "pattern": "/^#define PARAM_CTOR(/", "file": true, "language": "C++", "kind": "macro", "signature": "(gtype,dir,value_type)"}, {"_type": "tag", "name": "PARAM_IN", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusClient.cpp", "pattern": "/^        using PARAM_IN  = gdbus_client::GDBusDirection::PARAM_IN;$/", "file": true, "language": "C++", "typeref": "typename:gdbus_client::GDBusDirection::PARAM_IN", "kind": "typedef", "scope": "__anon7952d90d0111::param_t", "scopeKind": "struct"}, {"_type": "tag", "name": "PARAM_OUT", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusClient.cpp", "pattern": "/^        using PARAM_OUT = gdbus_client::GDBusDirection::PARAM_OUT;$/", "file": true, "language": "C++", "typeref": "typename:gdbus_client::GDBusDirection::PARAM_OUT", "kind": "typedef", "scope": "__anon7952d90d0111::param_t", "scopeKind": "struct"}, {"_type": "tag", "name": "Policy", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusClient.cpp", "pattern": "/^        enum Policy { USE_EXISTING, RECREATE };$/", "file": true, "language": "C++", "kind": "enum", "scope": "__anon7952d90d0111::proxy_t", "scopeKind": "struct"}, {"_type": "tag", "name": "RDK_LOG", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusClient.cpp", "pattern": "/^    void RDK_LOG(int, const char*, const char*,$/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(int,const char *,const char *,const char *,const char *,unsigned,const char *)", "scope": "__anon7952d90d0811", "scopeKind": "namespace"}, {"_type": "tag", "name": "RDK_LOG_ERROR", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusClient.cpp", "pattern": "/^    enum { RDK_LOG_ERROR = 2 };$/", "file": true, "language": "C++", "kind": "enumerator", "scope": "__anon7952d90d0811::__anon7952d90d0903", "scopeKind": "enum"}, {"_type": "tag", "name": "RECREATE", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusClient.cpp", "pattern": "/^        enum Policy { USE_EXISTING, RECREATE };$/", "file": true, "language": "C++", "kind": "enumerator", "scope": "__anon7952d90d0111::proxy_t::Policy", "scopeKind": "enum"}, {"_type": "tag", "name": "SERVER_DISCONNECT", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusClient.cpp", "pattern": "/^            SERVER_DISCONNECT,$/", "file": true, "language": "C++", "kind": "enumerator", "scope": "__anon7952d90d0111::gerror_t::errcode_t", "scopeKind": "enum"}, {"_type": "tag", "name": "SERVICE_UNKNOWN", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusClient.cpp", "pattern": "/^            SERVICE_UNKNOWN,$/", "file": true, "language": "C++", "kind": "enumerator", "scope": "__anon7952d90d0111::gerror_t::errcode_t", "scopeKind": "enum"}, {"_type": "tag", "name": "UNSPECIFIED", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusClient.cpp", "pattern": "/^            UNSPECIFIED };$/", "file": true, "language": "C++", "kind": "enumerator", "scope": "__anon7952d90d0111::gerror_t::errcode_t", "scopeKind": "enum"}, {"_type": "tag", "name": "USE_EXISTING", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusClient.cpp", "pattern": "/^        enum Policy { USE_EXISTING, RECREATE };$/", "file": true, "language": "C++", "kind": "enumerator", "scope": "__anon7952d90d0111::proxy_t::Policy", "scopeKind": "enum"}, {"_type": "tag", "name": "__anon7952d90d0111", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusClient.cpp", "pattern": "/^namespace {$/", "file": true, "language": "C++", "kind": "namespace"}, {"_type": "tag", "name": "__anon7952d90d0202", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusClient.cpp", "pattern": "/^            :   name(name), type(type), cleanup{ []{\\/*do nothing for 'in'*\\/} }$/", "file": true, "language": "C++", "kind": "function", "scope": "__anon7952d90d0111::param_t", "scopeKind": "struct"}, {"_type": "tag", "name": "__anon7952d90d0302", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusClient.cpp", "pattern": "/^            marshal = [par]() { return                                  \\/\\/ Capture the pointer/", "file": true, "language": "C++", "kind": "function", "signature": "() ", "scope": "__anon7952d90d0111::param_t::param_t", "scopeKind": "function"}, {"_type": "tag", "name": "__anon7952d90d0402", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusClient.cpp", "pattern": "/^            :   name(name), type(type), cleanup{ [par]{par->value = {}; } }$/", "file": true, "language": "C++", "kind": "function", "scope": "__anon7952d90d0111::param_t", "scopeKind": "struct"}, {"_type": "tag", "name": "__anon7952d90d0502", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusClient.cpp", "pattern": "/^            unmarshal = [par](GVariant *v) { return                     \\/\\/ Capture the pointer/", "file": true, "language": "C++", "kind": "function", "signature": "(GVariant *v) ", "scope": "__anon7952d90d0111::param_t::param_t", "scopeKind": "function"}, {"_type": "tag", "name": "__anon7952d90d0602", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusClient.cpp", "pattern": "/^                [](GVariant *v){ if (v) g_variant_unref(v);}) ;$/", "file": true, "language": "C++", "kind": "function", "signature": "(GVariant *v)", "scope": "__anon7952d90d0111::variant_holder_t::~variant_holder_t", "scopeKind": "function"}, {"_type": "tag", "name": "__anon7952d90d0711", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusClient.cpp", "pattern": "/^namespace { \\/\\/ Error reporting section$/", "file": true, "language": "C++", "kind": "namespace"}, {"_type": "tag", "name": "__anon7952d90d0811", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusClient.cpp", "pattern": "/^namespace {$/", "file": true, "language": "C++", "kind": "namespace"}, {"_type": "tag", "name": "__anon7952d90d0903", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusClient.cpp", "pattern": "/^    enum { RDK_LOG_ERROR = 2 };$/", "file": true, "language": "C++", "kind": "enum", "scope": "__anon7952d90d0811", "scopeKind": "namespace"}, {"_type": "tag", "name": "__anon7952d90d0a11", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusClient.cpp", "pattern": "/^namespace { \\/\\/ RDK logging$/", "file": true, "language": "C++", "kind": "namespace"}, {"_type": "tag", "name": "_verboseNonNull", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusClient.cpp", "pattern": "/^    P* _verboseNonNull( const char *func, unsigned line,    \\/\\/ Complains if p is null, but the/", "language": "C++", "typeref": "typename:P *", "kind": "function", "signature": "(const char * func,unsigned line,P * p,const std::string & expr)", "scope": "__anon7952d90d0111", "scopeKind": "namespace"}, {"_type": "tag", "name": "add", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusClient.cpp", "pattern": "/^        void add(const gdbus_client::GDBusCall* p, call_t && call) {$/", "file": true, "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(const gdbus_client::GDBusCall * p,call_t && call)", "scope": "__anon7952d90d0111::call_storage_t", "scopeKind": "struct"}, {"_type": "tag", "name": "add", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusClient.cpp", "pattern": "/^        void add(const obj_desc_t &sender,$/", "file": true, "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(const obj_desc_t & sender,const std::string & signal_name,const gdbus_client::GDBusSignal::callback_t & callback)", "scope": "__anon7952d90d0111::signal_storage_t", "scopeKind": "struct"}, {"_type": "tag", "name": "adopt", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusClient.cpp", "pattern": "/^        bool adopt(GVariant *v) {$/", "file": true, "language": "C++", "typeref": "typename:bool", "kind": "function", "signature": "(GVariant * v)", "scope": "__anon7952d90d0111::variant_holder_t", "scopeKind": "struct"}, {"_type": "tag", "name": "call", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusClient.cpp", "pattern": "/^            call_ptr_t call;    \\/\\/      check the value of use_count of the pointer with verbo/", "file": true, "language": "C++", "typeref": "typename:call_ptr_t", "kind": "member", "scope": "__anon7952d90d0111::call_storage_t::call_guard_t", "scopeKind": "struct"}, {"_type": "tag", "name": "call", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusClient.cpp", "pattern": "/^        call_t &call;$/", "file": true, "language": "C++", "typeref": "typename:call_t &", "kind": "member", "scope": "__anon7952d90d0111::call_cleanup_guard_t", "scopeKind": "struct"}, {"_type": "tag", "name": "callSync", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusClient.cpp", "pattern": "/^    bool GDBusCall::callSync() {    \\/\\/ Reentrant, although the values of out params of the cal/", "language": "C++", "typeref": "typename:bool", "kind": "function", "signature": "()", "scope": "gdbus_client::GDBusCall", "scopeKind": "class"}, {"_type": "tag", "name": "callUnderConstruction", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusClient.cpp", "pattern": "/^    thread_local const gdbus_client::GDBusCall* callUnderConstruction = nullptr;\\/\\/ Set in GDBu/", "language": "C++", "typeref": "typename:thread_local const gdbus_client::GDBusCall *", "kind": "variable", "scope": "__anon7952d90d0111", "scopeKind": "namespace"}, {"_type": "tag", "name": "call_cleanup_guard_t", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusClient.cpp", "pattern": "/^    struct call_cleanup_guard_t {$/", "file": true, "language": "C++", "kind": "struct", "scope": "__anon7952d90d0111", "scopeKind": "namespace"}, {"_type": "tag", "name": "call_guard_t", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusClient.cpp", "pattern": "/^            call_guard_t(call_guard_t &&g) noexcept :call{std::move(g.call)}$/", "file": true, "language": "C++", "kind": "function", "signature": "(call_guard_t && g)", "scope": "__anon7952d90d0111::call_storage_t::call_guard_t", "scopeKind": "struct"}, {"_type": "tag", "name": "call_guard_t", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusClient.cpp", "pattern": "/^            explicit call_guard_t(call_ptr_t &&ptr) :call{ptr} {}$/", "file": true, "language": "C++", "kind": "function", "signature": "(call_ptr_t && ptr)", "scope": "__anon7952d90d0111::call_storage_t::call_guard_t", "scopeKind": "struct"}, {"_type": "tag", "name": "call_guard_t", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusClient.cpp", "pattern": "/^        struct call_guard_t {   \\/\\/ call_guard_t is a thin wrapper for shared_ptr<call_t> used /", "file": true, "language": "C++", "kind": "struct", "scope": "__anon7952d90d0111::call_storage_t", "scopeKind": "struct"}, {"_type": "tag", "name": "call_mutex", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusClient.cpp", "pattern": "/^        std::mutex call_mutex;   \\/\\/ protect the calls map from simultaneous modification and a/", "file": true, "language": "C++", "typeref": "typename:std::mutex", "kind": "member", "scope": "__anon7952d90d0111::call_storage_t", "scopeKind": "struct"}, {"_type": "tag", "name": "call_ptr_t", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusClient.cpp", "pattern": "/^        using call_ptr_t = std::shared_ptr<call_t>; \\/\\/ The registered calls are stored using s/", "file": true, "language": "C++", "typeref": "typename:std::shared_ptr<call_t>", "kind": "typedef", "scope": "__anon7952d90d0111::call_storage_t", "scopeKind": "struct"}, {"_type": "tag", "name": "call_storage_t", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusClient.cpp", "pattern": "/^    struct call_storage_t {$/", "file": true, "language": "C++", "kind": "struct", "scope": "__anon7952d90d0111", "scopeKind": "namespace"}, {"_type": "tag", "name": "call_t", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusClient.cpp", "pattern": "/^        call_t(obj_desc_t obj, std::string method)$/", "file": true, "language": "C++", "kind": "function", "signature": "(obj_desc_t obj,std::string method)", "scope": "__anon7952d90d0111::call_t", "scopeKind": "struct"}, {"_type": "tag", "name": "call_t", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusClient.cpp", "pattern": "/^    struct call_t {$/", "file": true, "language": "C++", "kind": "struct", "scope": "__anon7952d90d0111", "scopeKind": "namespace"}, {"_type": "tag", "name": "calls", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusClient.cpp", "pattern": "/^        std::map<const gdbus_client::GDBusCall*, call_ptr_t> calls; \\/\\/ The map of the register/", "file": true, "language": "C++", "typeref": "typename:std::map<const gdbus_client::GDBusCall *,call_ptr_t>", "kind": "member", "scope": "__anon7952d90d0111::call_storage_t", "scopeKind": "struct"}, {"_type": "tag", "name": "calls", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusClient.cpp", "pattern": "/^    calls;$/", "language": "C++", "typeref": "struct:__anon7952d90d0111::call_storage_t", "kind": "variable", "scope": "__anon7952d90d0111", "scopeKind": "namespace"}, {"_type": "tag", "name": "cleanup", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusClient.cpp", "pattern": "/^        std::function<void()>           cleanup;    \\/\\/ The cleanup function, to zero out the '/", "file": true, "language": "C++", "typeref": "typename:std::function<void ()>", "kind": "member", "scope": "__anon7952d90d0111::param_t", "scopeKind": "struct"}, {"_type": "tag", "name": "clear", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusClient.cpp", "pattern": "/^        void clear() {g_clear_error(&err); }$/", "file": true, "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "()", "scope": "__anon7952d90d0111::gerror_t", "scopeKind": "struct"}, {"_type": "tag", "name": "context", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusClient.cpp", "pattern": "/^        GMainContext *context = nullptr;$/", "file": true, "language": "C++", "typeref": "typename:GMainContext *", "kind": "member", "scope": "__anon7952d90d0111::gcontext_switcher_t", "scopeKind": "struct"}, {"_type": "tag", "name": "converters", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusClient.cpp", "pattern": "/^    namespace converters {$/", "file": true, "language": "C++", "kind": "namespace", "scope": "gdbus_client", "scopeKind": "namespace"}, {"_type": "tag", "name": "err", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusClient.cpp", "pattern": "/^        GError *err = nullptr;$/", "file": true, "language": "C++", "typeref": "typename:GError *", "kind": "member", "scope": "__anon7952d90d0111::gerror_t", "scopeKind": "struct"}, {"_type": "tag", "name": "errType", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusClient.cpp", "pattern": "/^        errcode_t errType() const {$/", "file": true, "language": "C++", "typeref": "typename:errcode_t", "kind": "function", "signature": "() const", "scope": "__anon7952d90d0111::gerror_t", "scopeKind": "struct"}, {"_type": "tag", "name": "errcode_t", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusClient.cpp", "pattern": "/^        enum errcode_t {$/", "file": true, "language": "C++", "kind": "enum", "scope": "__anon7952d90d0111::gerror_t", "scopeKind": "struct"}, {"_type": "tag", "name": "errorMap", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusClient.cpp", "pattern": "/^        const std::map<std::pair<unsigned,int>, errcode_t> errorMap {$/", "file": true, "language": "C++", "typeref": "typename:const std::map<std::pair<unsigned,int>,errcode_t>", "kind": "member", "scope": "__anon7952d90d0111::gerror_t", "scopeKind": "struct"}, {"_type": "tag", "name": "fromDesc", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusClient.cpp", "pattern": "/^        static obj_desc_t fromDesc(const gdbus_client::GDBusObjectDescriptor &d)$/", "file": true, "language": "C++", "typeref": "typename:obj_desc_t", "kind": "function", "signature": "(const gdbus_client::GDBusObjectDescriptor & d)", "scope": "__anon7952d90d0111::obj_desc_t", "scopeKind": "struct"}, {"_type": "tag", "name": "fromName", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusClient.cpp", "pattern": "/^        static obj_desc_t fromName(const std::string &name) {$/", "file": true, "language": "C++", "typeref": "typename:obj_desc_t", "kind": "function", "signature": "(const std::string & name)", "scope": "__anon7952d90d0111::obj_desc_t", "scopeKind": "struct"}, {"_type": "tag", "name": "from_tuple", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusClient.cpp", "pattern": "/^        static variant_holder_t from_tuple(GVariant *tuple) {$/", "file": true, "language": "C++", "typeref": "typename:variant_holder_t", "kind": "function", "signature": "(GVariant * tuple)", "scope": "__anon7952d90d0111::variant_holder_t", "scopeKind": "struct"}, {"_type": "tag", "name": "gcontext_switcher_t", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusClient.cpp", "pattern": "/^    gcontext_switcher_t::gcontext_switcher_t() {    \\/\\/ the constructor changes the current gco/", "language": "C++", "kind": "function", "signature": "()", "scope": "__anon7952d90d0111::gcontext_switcher_t", "scopeKind": "class"}, {"_type": "tag", "name": "gcontext_switcher_t", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusClient.cpp", "pattern": "/^    struct gcontext_switcher_t {$/", "file": true, "language": "C++", "kind": "struct", "scope": "__anon7952d90d0111", "scopeKind": "namespace"}, {"_type": "tag", "name": "gdbus_client", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusClient.cpp", "pattern": "/^namespace gdbus_client {$/", "file": true, "language": "C++", "kind": "namespace"}, {"_type": "tag", "name": "gerror_t", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusClient.cpp", "pattern": "/^    struct gerror_t {$/", "file": true, "language": "C++", "kind": "struct", "scope": "__anon7952d90d0111", "scopeKind": "namespace"}, {"_type": "tag", "name": "get", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusClient.cpp", "pattern": "/^        call_guard_t get(const gdbus_client::GDBusCall* p) {$/", "file": true, "language": "C++", "typeref": "typename:call_guard_t", "kind": "function", "signature": "(const gdbus_client::GDBusCall * p)", "scope": "__anon7952d90d0111::call_storage_t", "scopeKind": "struct"}, {"_type": "tag", "name": "get", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusClient.cpp", "pattern": "/^        std::vector<gdbus_client::GDBusSignal::callback_t> get($/", "file": true, "language": "C++", "typeref": "typename:std::vector<gdbus_client::GDBusSignal::callback_t>", "kind": "function", "signature": "(const std::string & sender_name,const std::string & signal_name)", "scope": "__anon7952d90d0111::signal_storage_t", "scopeKind": "struct"}, {"_type": "tag", "name": "have_logger", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusClient.cpp", "pattern": "/^    bool have_logger() {$/", "language": "C++", "typeref": "typename:bool", "kind": "function", "signature": "()", "scope": "__anon7952d90d0a11", "scopeKind": "namespace"}, {"_type": "tag", "name": "iface", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusClient.cpp", "pattern": "/^        std::string name, path, iface;$/", "file": true, "language": "C++", "typeref": "typename:std::string", "kind": "member", "scope": "__anon7952d90d0111::obj_desc_t", "scopeKind": "struct"}, {"_type": "tag", "name": "instanceFor", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusClient.cpp", "pattern": "/^        static proxy_t& instanceFor(const obj_desc_t &obj,  \\/\\/ Reentrant$/", "file": true, "language": "C++", "typeref": "typename:proxy_t &", "kind": "function", "signature": "(const obj_desc_t & obj,const Policy policy)", "scope": "__anon7952d90d0111::proxy_t", "scopeKind": "struct"}, {"_type": "tag", "name": "intervalMsec", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusClient.cpp", "pattern": "/^        unsigned intervalMsec = 0;$/", "file": true, "language": "C++", "typeref": "typename:unsigned", "kind": "member", "scope": "__anon7952d90d0111::loop_timeout_t", "scopeKind": "struct"}, {"_type": "tag", "name": "key", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusClient.cpp", "pattern": "/^        static const std::string key(const std::string &sender_name,$/", "file": true, "language": "C++", "typeref": "typename:const std::string", "kind": "function", "signature": "(const std::string & sender_name,const std::string & sig_name)", "scope": "__anon7952d90d0111::signal_storage_t", "scopeKind": "struct"}, {"_type": "tag", "name": "logAssert", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusClient.cpp", "pattern": "/^    bool logAssert(const char *func, unsigned line,$/", "language": "C++", "typeref": "typename:bool", "kind": "function", "signature": "(const char * func,unsigned line,bool f,const std::string & err)", "scope": "__anon7952d90d0a11", "scopeKind": "namespace"}, {"_type": "tag", "name": "loop_timeout_t", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusClient.cpp", "pattern": "/^        loop_timeout_t(unsigned interval_msec, GMainLoop *loop)  {$/", "file": true, "language": "C++", "kind": "function", "signature": "(unsigned interval_msec,GMainLoop * loop)", "scope": "__anon7952d90d0111::loop_timeout_t", "scopeKind": "struct"}, {"_type": "tag", "name": "loop_timeout_t", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusClient.cpp", "pattern": "/^    struct loop_timeout_t {$/", "file": true, "language": "C++", "kind": "struct", "scope": "__anon7952d90d0111", "scopeKind": "namespace"}, {"_type": "tag", "name": "mainContextOf", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusClient.cpp", "pattern": "/^    GMainContext* mainContextOf(GMainLoop *loop) {$/", "language": "C++", "typeref": "typename:GMainContext *", "kind": "function", "signature": "(GMainLoop * loop)", "scope": "__anon7952d90d0111", "scopeKind": "namespace"}, {"_type": "tag", "name": "mainLoopInstance", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusClient.cpp", "pattern": "/^    GMainLoop* mainLoopInstance() {$/", "language": "C++", "typeref": "typename:GMainLoop *", "kind": "function", "signature": "()", "scope": "__anon7952d90d0111", "scopeKind": "namespace"}, {"_type": "tag", "name": "marshal", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusClient.cpp", "pattern": "/^        std::function<GVariant*()>      marshal;    \\/\\/ The marshaller, to convert 'in' paramet/", "file": true, "language": "C++", "typeref": "typename:std::function<GVariant * ()>", "kind": "member", "scope": "__anon7952d90d0111::param_t", "scopeKind": "struct"}, {"_type": "tag", "name": "method", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusClient.cpp", "pattern": "/^        std::string method;                         \\/\\/ the target method$/", "file": true, "language": "C++", "typeref": "typename:std::string", "kind": "member", "scope": "__anon7952d90d0111::call_t", "scopeKind": "struct"}, {"_type": "tag", "name": "moveIntoCall", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusClient.cpp", "pattern": "/^        void moveIntoCall() && {                                        \\/\\/ Consume this param_/", "file": true, "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "()", "scope": "__anon7952d90d0111::param_t", "scopeKind": "struct"}, {"_type": "tag", "name": "name", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusClient.cpp", "pattern": "/^        const char *name;       \\/\\/ Kept for error reporting and introspection$/", "file": true, "language": "C++", "typeref": "typename:const char *", "kind": "member", "scope": "__anon7952d90d0111::param_t", "scopeKind": "struct"}, {"_type": "tag", "name": "verboseNonNull", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusClient.cpp", "pattern": "/^#define verboseNonNull(/", "file": true, "language": "C++", "kind": "macro", "signature": "(p)"}], "hash": "69f88d3340c745f7db0aa3378890d471", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "components/opensource/gdbus-client/src/GDBusClient.cpp", "fields": [{"name": "call_ptr_t call", "scope": "__anon7952d90d0111::call_storage_t::call_guard_t", "scopeKind": "struct", "description": "unavailable"}, {"name": "call_t & call", "scope": "__anon7952d90d0111::call_cleanup_guard_t", "scopeKind": "struct", "description": "unavailable"}, {"name": "thread_local const gdbus_client::GDBusCall * callUnderConstruction", "scope": "__anon7952d90d0111", "scopeKind": "namespace", "description": "unavailable"}, {"name": "std::mutex call_mutex", "scope": "__anon7952d90d0111::call_storage_t", "scopeKind": "struct", "description": "unavailable"}, {"name": "std::map<const gdbus_client::GDBusCall *,call_ptr_t> calls", "scope": "__anon7952d90d0111::call_storage_t", "scopeKind": "struct", "description": "unavailable"}, {"name": "struct:__anon7952d90d0111::call_storage_t calls", "scope": "__anon7952d90d0111", "scopeKind": "namespace", "description": "unavailable"}, {"name": "std::function<void ()> cleanup", "scope": "__anon7952d90d0111::param_t", "scopeKind": "struct", "description": "unavailable"}, {"name": "GMainContext * context", "scope": "__anon7952d90d0111::gcontext_switcher_t", "scopeKind": "struct", "description": "unavailable"}, {"name": "GError * err", "scope": "__anon7952d90d0111::gerror_t", "scopeKind": "struct", "description": "unavailable"}, {"name": "const std::map<std::pair<unsigned,int>,errcode_t> errorMap", "scope": "__anon7952d90d0111::gerror_t", "scopeKind": "struct", "description": "unavailable"}, {"name": "std::string iface", "scope": "__anon7952d90d0111::obj_desc_t", "scopeKind": "struct", "description": "unavailable"}, {"name": "unsigned intervalMsec", "scope": "__anon7952d90d0111::loop_timeout_t", "scopeKind": "struct", "description": "unavailable"}, {"name": "std::function<GVariant * ()> marshal", "scope": "__anon7952d90d0111::param_t", "scopeKind": "struct", "description": "unavailable"}, {"name": "std::string method", "scope": "__anon7952d90d0111::call_t", "scopeKind": "struct", "description": "unavailable"}, {"name": "const char * name", "scope": "__anon7952d90d0111::param_t", "scopeKind": "struct", "description": "unavailable"}], "revision_history": [{"14508": ""}]}