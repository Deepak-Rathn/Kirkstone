{"is_source_file": true, "format": "C++", "description": "This file contains source code implementing the XUPNPStub class, which provides methods for pre-requisites checking, reading output files, and managing the lifecycle of the UPNP stub components. It includes functions for process checks, log file search, and interaction with JSON output data.", "external_files": ["XUPNP_Stub.h", "<string.h>", "<fstream>", "<sstream>", "<unistd.h>"], "external_methods": ["getenv", "popen", "pclose", "system"], "published": ["XUPNPStub::initialize", "XUPNPStub::testmodulepre_requisites", "XUPNPStub::testmodulepost_requisites", "XUPNPStub::XUPNPStub_ReadXDiscOutputFile", "XUPNPStub::XUPNPStub_CheckXDiscOutputFile", "CreateObject", "DestroyObject", "XUPNPStub::cleanup"], "classes": [{"name": "XUPNPStub", "description": "A class providing UPNP and discovery process validation, log/file interactions, and lifecycle management for the stub."}], "methods": [{"name": "bool initialize(IN const char * szVersion)", "description": "Initializes the UPNP stub, registering wrapper functions with the agent.", "scope": "XUPNPStub", "scopeKind": "class"}, {"name": "std::string testmodulepre_requisites()", "description": "Checks for required processes and retrieves output.json path for UPNP testing pre-requisites.", "scope": "XUPNPStub", "scopeKind": "class"}, {"name": "bool testmodulepost_requisites()", "description": "Resets or clears pre-requisites after testing.", "scope": "XUPNPStub", "scopeKind": "class"}, {"name": "void XUPNPStub_ReadXDiscOutputFile(IN const Json::Value & req,OUT Json::Value & response)", "description": "Reads specific parameters from the discovery output file, returning success or failure with details.", "scope": "XUPNPStub", "scopeKind": "class"}, {"name": "void XUPNPStub_CheckXDiscOutputFile(IN const Json::Value & req,OUT Json::Value & response)", "description": "Checks if the discovery output file has been created and reports status.", "scope": "XUPNPStub", "scopeKind": "class"}, {"name": "bool cleanup(IN const char * szVersion)", "description": "Performs cleanup activities for the stub object.", "scope": "XUPNPStub", "scopeKind": "class"}, {"name": "XUPNPStub * CreateObject(TcpSocketServer & ptrtcpServer)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "void DestroyObject(XUPNPStub * stubobj)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "bool checkRunningProcess(const char * processName)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "bool readLogFile(const char * filename,const string parameter)", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["checkRunningProcess", "popen", "fgets", "pclose", "sprintf", "system", "ifstream::open", "ifstream::close", "getline"], "search-terms": ["XUPNP_Stub", "pre_requisites", "XDISCOVERY", "XDISCONFIG", "XUPNP", "json", "output.json", "discovery output", "readLogFile", "checkRunningProcess"], "state": 2, "file_id": 5568, "knowledge_revision": 18682, "git_revision": "", "ctags": [{"_type": "tag", "name": "CreateObject", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/XUPNP_Stub/src/XUPNP_Stub.cpp", "pattern": "/^extern \"C\" XUPNPStub* CreateObject(TcpSocketServer &ptrtcpServer)$/", "language": "C++", "typeref": "typename:XUPNPStub *", "kind": "function", "signature": "(TcpSocketServer & ptrtcpServer)"}, {"_type": "tag", "name": "DestroyObject", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/XUPNP_Stub/src/XUPNP_Stub.cpp", "pattern": "/^extern \"C\" void DestroyObject(XUPNPStub *stubobj)$/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(XUPNPStub * stubobj)"}, {"_type": "tag", "name": "XUPNPStub_CheckXDiscOutputFile", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/XUPNP_Stub/src/XUPNP_Stub.cpp", "pattern": "/^void XUPNPStub::XUPNPStub_CheckXDiscOutputFile(IN const Json::Value& req, OUT Json::Value& respo/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(IN const Json::Value & req,OUT Json::Value & response)", "scope": "XUPNPStub", "scopeKind": "class"}, {"_type": "tag", "name": "XUPNPStub_ReadXDiscOutputFile", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/XUPNP_Stub/src/XUPNP_Stub.cpp", "pattern": "/^void XUPNPStub::XUPNPStub_ReadXDiscOutputFile(IN const Json::Value& req, OUT Json::Value& respon/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(IN const Json::Value & req,OUT Json::Value & response)", "scope": "XUPNPStub", "scopeKind": "class"}, {"_type": "tag", "name": "checkRunningProcess", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/XUPNP_Stub/src/XUPNP_Stub.cpp", "pattern": "/^bool checkRunningProcess(const char *processName)$/", "language": "C++", "typeref": "typename:bool", "kind": "function", "signature": "(const char * processName)"}, {"_type": "tag", "name": "cleanup", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/XUPNP_Stub/src/XUPNP_Stub.cpp", "pattern": "/^bool XUPNPStub::cleanup(IN const char* szVersion)$/", "language": "C++", "typeref": "typename:bool", "kind": "function", "signature": "(IN const char * szVersion)", "scope": "XUPNPStub", "scopeKind": "class"}, {"_type": "tag", "name": "g_tdkPath", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/XUPNP_Stub/src/XUPNP_Stub.cpp", "pattern": "/^string g_tdkPath = getenv(\"TDK_PATH\");$/", "language": "C++", "typeref": "typename:string", "kind": "variable"}, {"_type": "tag", "name": "initialize", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/XUPNP_Stub/src/XUPNP_Stub.cpp", "pattern": "/^bool XUPNPStub::initialize(IN const char* szVersion)$/", "language": "C++", "typeref": "typename:bool", "kind": "function", "signature": "(IN const char * szVersion)", "scope": "XUPNPStub", "scopeKind": "class"}, {"_type": "tag", "name": "readLogFile", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/XUPNP_Stub/src/XUPNP_Stub.cpp", "pattern": "/^bool readLogFile(const char *filename, const string parameter)$/", "language": "C++", "typeref": "typename:bool", "kind": "function", "signature": "(const char * filename,const string parameter)"}, {"_type": "tag", "name": "testmodulepost_requisites", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/XUPNP_Stub/src/XUPNP_Stub.cpp", "pattern": "/^bool XUPNPStub::testmodulepost_requisites()$/", "language": "C++", "typeref": "typename:bool", "kind": "function", "signature": "()", "scope": "XUPNPStub", "scopeKind": "class"}, {"_type": "tag", "name": "testmodulepre_requisites", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/XUPNP_Stub/src/XUPNP_Stub.cpp", "pattern": "/^std::string XUPNPStub::testmodulepre_requisites()$/", "language": "C++", "typeref": "typename:std::string", "kind": "function", "signature": "()", "scope": "XUPNPStub", "scopeKind": "class"}, {"_type": "tag", "name": "xdiscOutputFile", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/XUPNP_Stub/src/XUPNP_Stub.cpp", "pattern": "/^static char xdiscOutputFile[STR_LEN];$/", "file": true, "language": "C++", "typeref": "typename:char[]", "kind": "variable"}], "hash": "6c8fb04bb5ff68311784d03b256b169a", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "rdkb/tools/tdkb/XUPNP_Stub/src/XUPNP_Stub.cpp", "fields": [{"name": "string g_tdkPath", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "char[] xdiscOutputFile", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"18682": ""}]}