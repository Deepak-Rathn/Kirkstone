{"is_source_file": true, "format": "Python", "description": "This Python source file contains unit tests for the oe.path.realpath function, focusing on resolving symbolic links and handling special cases like loops and broken links.", "external_files": ["unittest.case", "oe", "oe.path", "tempfile", "os", "errno", "shutil"], "external_methods": ["oe.path.realpath"], "published": ["TestRealPath"], "classes": [{"name": "TestRealPath", "description": "A unit test class for testing the oe.path.realpath function, including setup and teardown for test environment, and multiple test cases for path resolution."}], "methods": [{"name": "setUp(self)", "description": "Creates a temporary directory structure with symlinks, files, and directories to be used in testing path resolution.", "scope": "TestRealPath", "scopeKind": "class"}, {"name": "tearDown(self)", "description": "Removes the temporary directory structure created for testing.", "scope": "TestRealPath", "scopeKind": "class"}, {"name": "__realpath(self, file, use_physdir, assume_dir = True)", "description": "Helper method that wraps oe.path.realpath for use in tests, constructing absolute paths based on the temporary root.", "scope": "TestRealPath", "scopeKind": "class"}, {"name": "test_norm(self)", "description": "Test case that verifies the normalization of paths and correct resolution of symlinks using the realpath function.", "scope": "TestRealPath", "scopeKind": "class"}, {"name": "test_phys(self)", "description": "Test case that verifies path resolution using physical directory structure.", "scope": "TestRealPath", "scopeKind": "class"}, {"name": "test_loop(self)", "description": "Test case that verifies handling of symlink loops and associated exceptions.", "scope": "TestRealPath", "scopeKind": "class"}], "calls": ["oe.path.realpath"], "search-terms": ["symlink resolution", "path normalization", "unit test", "oe.path", "path resolution", "symlink loops"], "state": 2, "file_id": 1911, "knowledge_revision": 15053, "git_revision": "", "ctags": [{"_type": "tag", "name": "DIRS", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oeqa/selftest/cases/oelib/path.py", "pattern": "/^    DIRS = [ \"a\", \"b\", \"etc\", \"sbin\", \"usr\", \"usr\\/bin\", \"usr\\/binX\", \"usr\\/sbin\", \"usr\\/include/", "language": "Python", "kind": "variable", "scope": "TestRealPath", "scopeKind": "class"}, {"_type": "tag", "name": "EXCEPTIONS", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oeqa/selftest/cases/oelib/path.py", "pattern": "/^    EXCEPTIONS = [$/", "language": "Python", "kind": "variable", "scope": "TestRealPath", "scopeKind": "class"}, {"_type": "tag", "name": "FILES", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oeqa/selftest/cases/oelib/path.py", "pattern": "/^    FILES = [ \"etc\\/passwd\", \"b\\/file\" ]$/", "language": "Python", "kind": "variable", "scope": "TestRealPath", "scopeKind": "class"}, {"_type": "tag", "name": "LINKS", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oeqa/selftest/cases/oelib/path.py", "pattern": "/^    LINKS = [$/", "language": "Python", "kind": "variable", "scope": "TestRealPath", "scopeKind": "class"}, {"_type": "tag", "name": "LINKS_PHYS", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oeqa/selftest/cases/oelib/path.py", "pattern": "/^    LINKS_PHYS = [$/", "language": "Python", "kind": "variable", "scope": "TestRealPath", "scopeKind": "class"}, {"_type": "tag", "name": "TestRealPath", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oeqa/selftest/cases/oelib/path.py", "pattern": "/^class TestRealPath(TestCase):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "__realpath", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oeqa/selftest/cases/oelib/path.py", "pattern": "/^    def __realpath(self, file, use_physdir, assume_dir = True):$/", "file": true, "language": "Python", "kind": "member", "signature": "(self, file, use_physdir, assume_dir = True)", "scope": "TestRealPath", "scopeKind": "class"}, {"_type": "tag", "name": "setUp", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oeqa/selftest/cases/oelib/path.py", "pattern": "/^    def setUp(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "TestRealPath", "scopeKind": "class"}, {"_type": "tag", "name": "tearDown", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oeqa/selftest/cases/oelib/path.py", "pattern": "/^    def tearDown(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "TestRealPath", "scopeKind": "class"}, {"_type": "tag", "name": "test_loop", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oeqa/selftest/cases/oelib/path.py", "pattern": "/^    def test_loop(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "TestRealPath", "scopeKind": "class"}, {"_type": "tag", "name": "test_norm", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oeqa/selftest/cases/oelib/path.py", "pattern": "/^    def test_norm(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "TestRealPath", "scopeKind": "class"}, {"_type": "tag", "name": "test_phys", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oeqa/selftest/cases/oelib/path.py", "pattern": "/^    def test_phys(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "TestRealPath", "scopeKind": "class"}], "hash": "1f0c0c10d17aa93173b9124669270165", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "openembedded-core/meta/lib/oeqa/selftest/cases/oelib/path.py", "fields": [{"name": "DIRS = [ \"a\", \"b\", \"etc\", \"sbin\", \"usr\", \"usr\\/bin\", \"usr\\/binX\", \"usr\\/sbin\", \"usr\\/include/", "scope": "TestRealPath", "scopeKind": "class", "description": "unavailable"}, {"name": "EXCEPTIONS = [", "scope": "TestRealPath", "scopeKind": "class", "description": "unavailable"}, {"name": "FILES = [ \"etc\\/passwd\", \"b\\/file\" ]", "scope": "TestRealPath", "scopeKind": "class", "description": "unavailable"}, {"name": "LINKS = [", "scope": "TestRealPath", "scopeKind": "class", "description": "unavailable"}, {"name": "LINKS_PHYS = [", "scope": "TestRealPath", "scopeKind": "class", "description": "unavailable"}], "revision_history": [{"15053": ""}]}