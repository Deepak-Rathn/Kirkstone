{"is_source_file": true, "format": "C header file", "description": "This file defines the interface for a Service Registry component, including data structures, function declarations for registering services, retrieving service information, and managing service handles within an IPC system.", "external_files": ["stdint.h", "<icIpc/ipcReceiver.h>", "ipcCommon.h"], "external_methods": ["createServiceHandle", "destroyServiceHandle", "registerService", "getServiceForIpcPort", "getServiceForEventPort", "getServiceAddressForIpcPort", "getServiceAddressForEventPort"], "published": ["serviceHandle", "createServiceHandle", "destroyServiceHandle", "registerService", "getServiceForIpcPort", "getServiceForEventPort", "getServiceAddressForIpcPort", "getServiceAddressForEventPort"], "classes": [], "methods": [{"name": "createServiceHandle", "description": "Creates and initializes a new serviceHandle instance, setting default values and address."}, {"name": "destroyServiceHandle", "description": "Deallocates and cleans up a provided serviceHandle instance."}, {"name": "registerService", "description": "Registers a service with the provided handle into the registry, making it discoverable."}, {"name": "getServiceForIpcPort", "description": "Retrieves the serviceHandle associated with a specific IPC port, or NULL if not found."}, {"name": "getServiceForEventPort", "description": "Retrieves the serviceHandle associated with a specific event port, or NULL if not found."}, {"name": "getServiceAddressForIpcPort", "description": "Returns the IP address for a given IPC port, defaulting to LOCAL_LOOPBACK if unknown."}, {"name": "getServiceAddressForEventPort", "description": "Returns the IP address for a given event port, defaulting to LOCAL_LOOPBACK if unknown."}], "calls": ["createServiceHandle", "destroyServiceHandle", "registerService", "getServiceForIpcPort", "getServiceForEventPort", "getServiceAddressForIpcPort", "getServiceAddressForEventPort"], "search-terms": ["ServiceRegistry", "serviceHandle", "registerService", "ipcPort", "eventPort", "serviceAddress", "serviceVisibility", "ipcReceiver", "ipcCommon"], "state": 2, "file_id": 738, "knowledge_revision": 13901, "git_revision": "", "ctags": [{"_type": "tag", "name": "IC_SERVICEREGISTRY_H", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/ipc/c/src/serviceRegistry.h", "pattern": "/^#define IC_SERVICEREGISTRY_H$/", "language": "C++", "kind": "macro"}, {"_type": "tag", "name": "_serviceHandle", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/ipc/c/src/serviceRegistry.h", "pattern": "/^typedef struct _serviceHandle {$/", "language": "C++", "kind": "struct"}, {"_type": "tag", "name": "eventPort", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/ipc/c/src/serviceRegistry.h", "pattern": "/^    uint16_t    eventPort;              \\/\\/ UDP port used for broadcasting events from the serv/", "language": "C++", "typeref": "typename:uint16_t", "kind": "member", "scope": "_serviceHandle", "scopeKind": "struct"}, {"_type": "tag", "name": "ipcPort", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/ipc/c/src/serviceRegistry.h", "pattern": "/^    uint16_t    ipcPort;                \\/\\/ accessible TCP port for IPC communication to\\/from /", "language": "C++", "typeref": "typename:uint16_t", "kind": "member", "scope": "_serviceHandle", "scopeKind": "struct"}, {"_type": "tag", "name": "serviceAddress", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/ipc/c/src/serviceRegistry.h", "pattern": "/^    char        serviceAddress[128];    \\/\\/ IP address of the service.  Probably set to LOCAL_L/", "language": "C++", "typeref": "typename:char[128]", "kind": "member", "scope": "_serviceHandle", "scopeKind": "struct"}, {"_type": "tag", "name": "serviceHandle", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/ipc/c/src/serviceRegistry.h", "pattern": "/^} serviceHandle;$/", "language": "C++", "typeref": "struct:_serviceHandle", "kind": "typedef"}, {"_type": "tag", "name": "serviceName", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/ipc/c/src/serviceRegistry.h", "pattern": "/^    char        serviceName[128];       \\/\\/ name of the service.  used only for debugging$/", "language": "C++", "typeref": "typename:char[128]", "kind": "member", "scope": "_serviceHandle", "scopeKind": "struct"}, {"_type": "tag", "name": "visibility", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/ipc/c/src/serviceRegistry.h", "pattern": "/^    serviceVisibility  visibility;      \\/\\/ visible scope of the service$/", "language": "C++", "typeref": "typename:serviceVisibility", "kind": "member", "scope": "_serviceHandle", "scopeKind": "struct"}], "hash": "fceec172b240174a3953123676bf7000", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "components/opensource/zilker-sdk/source/libs/ipc/c/src/serviceRegistry.h", "fields": [{"name": "uint16_t eventPort", "scope": "_serviceHandle", "scopeKind": "struct", "description": "unavailable"}, {"name": "uint16_t ipcPort", "scope": "_serviceHandle", "scopeKind": "struct", "description": "unavailable"}, {"name": "char[128] serviceAddress", "scope": "_serviceHandle", "scopeKind": "struct", "description": "unavailable"}, {"name": "char[128] serviceName", "scope": "_serviceHandle", "scopeKind": "struct", "description": "unavailable"}, {"name": "serviceVisibility visibility", "scope": "_serviceHandle", "scopeKind": "struct", "description": "unavailable"}], "revision_history": [{"13901": ""}]}