{"is_source_file": true, "format": "C", "description": "This file contains implementation code for managing Wi-Fi metadata, including functions for packing/unpacking MessagePack data, manipulating encoded buffers, and encoding data in Base64. It appears to be a source file defining external functions, internal logic, and data structures related to Wi-Fi helper operations in a network management context.", "external_files": ["errno.h", "string.h", "msgpack.h", "ccsp_trace.h", "managedwifi_helpers.h", "managedwifidoc.h"], "external_methods": ["msgpack_unpack_next", "msgpack_unpacked_init", "msgpack_unpacked_destroy", "msgpack_pack_str", "msgpack_pack_str_body", "msgpack_pack_uint32", "msgpack_pack_uint16", "msgpack_sbuffer_init", "msgpack_sbuffer_destroy", "msgpack_packer_init", "msgpack_zone_init", "msgpack_unpack", "msgpack_object_print", "msgpack_zone_destroy"], "published": ["comp_mw_helper_convert", "mg_append_wifi_doc", "mg_wifi_pack_appenddoc", "mg_appendWifiEncodedData", "mg_base64wifiblobencoder"], "classes": [], "methods": [{"name": "void * comp_mw_helper_convert(const void * buf,size_t len,size_t struct_size,const char * wrapper,msgpack_object_type expect_type,bool optional,process_fn_t process,destroy_fn_t destroy)", "description": "Converts a MessagePack buffer into a structured object, performs optional processing, and validates contents.", "scope": "", "scopeKind": ""}, {"name": "char * mg_append_wifi_doc(char * subdoc_name,uint32_t version,uint16_t trans_id,char * blob_data,size_t blob_size)", "description": "Creates a Wi-Fi embedded document, encodes it in Base64, and prepares it for transmission or storage.", "scope": "", "scopeKind": ""}, {"name": "size_t mg_wifi_pack_appenddoc(const mg_wifi_appenddoc_t * appenddocData,void ** data)", "description": "Serializes Wi-Fi append document data into a MessagePack buffer.", "scope": "", "scopeKind": ""}, {"name": "size_t mg_appendWifiEncodedData(void ** appendData,void * encodedBuffer,size_t encodedSize,void * metadataPack,size_t metadataSize)", "description": "Concatenates two encoded Wi-Fi buffers, updates the map size, and returns the combined size.", "scope": "", "scopeKind": ""}, {"name": "char * mg_base64wifiblobencoder(char * blob_data,size_t blob_size)", "description": "Encodes binary data into Base64 format.", "scope": "", "scopeKind": ""}, {"name": "int mg_alterWifiMapData(char * buf)", "description": "Modifies the MessagePack binary stream to update the map size field.", "scope": "", "scopeKind": ""}, {"name": "msgpack_object * __finder_mw_comp(const char * name,msgpack_object_type expect_type,msgpack_object_map * map)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "void __msgpack_pack_string(msgpack_packer * pk,const void * string,size_t n)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "void __msgpack_pack_string_nvp(msgpack_packer * pk,const struct wifi_token * token,const char * val)", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["msgpack_unpack_next", "msgpack_unpacked_init", "msgpack_unpacked_destroy", "msgpack_pack_str", "msgpack_pack_str_body", "msgpack_pack_uint32", "msgpack_pack_uint16", "malloc", "free", "strdup", "memcpy", "base64wifiblobencoder", "b64_get_encoded_buffer_size", "b64_encode", "match", "strncpy", "strlen", "strncmp"], "search-terms": ["managedwifi_helpers", "msgpack", "wifi_token", "mg_appendWifiEncodedData", "mg_base64wifiblobencoder", "alterMapData", "pack_appenddoc", "unpack_next"], "state": 2, "file_id": 8351, "knowledge_revision": 21397, "git_revision": "", "ctags": [{"_type": "tag", "name": "WIFI_METADATA_MAP_SIZE", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspPandM/source/TR-181/middle_layer_src/managedwifi_helpers.c", "pattern": "/^#define WIFI_METADATA_MAP_SIZE /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "__finder_mw_comp", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspPandM/source/TR-181/middle_layer_src/managedwifi_helpers.c", "pattern": "/^msgpack_object* __finder_mw_comp( const char *name, $/", "language": "C", "typeref": "typename:msgpack_object *", "kind": "function", "signature": "(const char * name,msgpack_object_type expect_type,msgpack_object_map * map)"}, {"_type": "tag", "name": "__msgpack_pack_string", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspPandM/source/TR-181/middle_layer_src/managedwifi_helpers.c", "pattern": "/^static void __msgpack_pack_string( msgpack_packer *pk, const void *string, size_t n )$/", "file": true, "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(msgpack_packer * pk,const void * string,size_t n)"}, {"_type": "tag", "name": "__msgpack_pack_string_nvp", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspPandM/source/TR-181/middle_layer_src/managedwifi_helpers.c", "pattern": "/^static void __msgpack_pack_string_nvp( msgpack_packer *pk,$/", "file": true, "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(msgpack_packer * pk,const struct wifi_token * token,const char * val)"}, {"_type": "tag", "name": "comp_mw_helper_convert", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspPandM/source/TR-181/middle_layer_src/managedwifi_helpers.c", "pattern": "/^void* comp_mw_helper_convert( const void *buf, size_t len,$/", "language": "C", "typeref": "typename:void *", "kind": "function", "signature": "(const void * buf,size_t len,size_t struct_size,const char * wrapper,msgpack_object_type expect_type,bool optional,process_fn_t process,destroy_fn_t destroy)"}, {"_type": "tag", "name": "length", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspPandM/source/TR-181/middle_layer_src/managedwifi_helpers.c", "pattern": "/^    size_t length;$/", "file": true, "language": "C", "typeref": "typename:size_t", "kind": "member", "scope": "wifi_token", "scopeKind": "struct"}, {"_type": "tag", "name": "mg_alterWifiMapData", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspPandM/source/TR-181/middle_layer_src/managedwifi_helpers.c", "pattern": "/^static int mg_alterWifiMapData( char * buf )$/", "file": true, "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(char * buf)"}, {"_type": "tag", "name": "mg_appendWifiEncodedData", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspPandM/source/TR-181/middle_layer_src/managedwifi_helpers.c", "pattern": "/^size_t mg_appendWifiEncodedData( void **appendData, void *encodedBuffer, size_t encodedSize, voi/", "language": "C", "typeref": "typename:size_t", "kind": "function", "signature": "(void ** appendData,void * encodedBuffer,size_t encodedSize,void * metadataPack,size_t metadataSize)"}, {"_type": "tag", "name": "mg_append_wifi_doc", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspPandM/source/TR-181/middle_layer_src/managedwifi_helpers.c", "pattern": "/^char * mg_append_wifi_doc(char * subdoc_name, uint32_t version, uint16_t trans_id, char * blob_d/", "language": "C", "typeref": "typename:char *", "kind": "function", "signature": "(char * subdoc_name,uint32_t version,uint16_t trans_id,char * blob_data,size_t blob_size)"}, {"_type": "tag", "name": "mg_base64wifiblobencoder", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspPandM/source/TR-181/middle_layer_src/managedwifi_helpers.c", "pattern": "/^char * mg_base64wifiblobencoder(char * blob_data, size_t blob_size )$/", "language": "C", "typeref": "typename:char *", "kind": "function", "signature": "(char * blob_data,size_t blob_size)"}, {"_type": "tag", "name": "mg_wifi_pack_appenddoc", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspPandM/source/TR-181/middle_layer_src/managedwifi_helpers.c", "pattern": "/^size_t mg_wifi_pack_appenddoc(const mg_wifi_appenddoc_t *appenddocData,void **data)$/", "language": "C", "typeref": "typename:size_t", "kind": "function", "signature": "(const mg_wifi_appenddoc_t * appenddocData,void ** data)"}, {"_type": "tag", "name": "name", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspPandM/source/TR-181/middle_layer_src/managedwifi_helpers.c", "pattern": "/^    const char *name;$/", "file": true, "language": "C", "typeref": "typename:const char *", "kind": "member", "scope": "wifi_token", "scopeKind": "struct"}, {"_type": "tag", "name": "wifi_token", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspPandM/source/TR-181/middle_layer_src/managedwifi_helpers.c", "pattern": "/^struct wifi_token {$/", "file": true, "language": "C", "kind": "struct"}], "hash": "7dda50323ffa2fb7fb2dd820927aad19", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "rdkb/components/opensource/ccsp/CcspPandM/source/TR-181/middle_layer_src/managedwifi_helpers.c", "fields": [{"name": "size_t length", "scope": "wifi_token", "scopeKind": "struct", "description": "unavailable"}, {"name": "const char * name", "scope": "wifi_token", "scopeKind": "struct", "description": "unavailable"}], "revision_history": [{"21397": ""}]}