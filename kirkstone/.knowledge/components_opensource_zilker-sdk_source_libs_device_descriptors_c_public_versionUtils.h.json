{"is_source_file": true, "format": "C header file", "description": "This header file declares utility functions for parsing and comparing version strings and arrays, specifically tailored for device descriptor version management, providing prototypes for converting version strings to integer arrays and comparing versions.", "external_files": ["stdint.h"], "external_methods": [], "published": ["versionStringToInt", "compareVersionArrays", "compareVersionStrings"], "classes": [], "methods": [{"name": "versionStringToInt", "description": "Converts a version string into an array of integers, splitting on non-digit characters, and returns the array along with its length. Caller must free the returned array."}, {"name": "compareVersionArrays", "description": "Compares two version arrays produced by versionStringToInt, returning a negative number if left > right, 0 if equal, or positive if right > left."}, {"name": "compareVersionStrings", "description": "Compares two version strings directly, returning a negative number if the first is greater, 0 if equal, or positive if the second is greater."}], "calls": [], "search-terms": ["versionUtils", "versionStringToInt", "compareVersionArrays", "compareVersionStrings", "device descriptors", "version parsing", "version comparison"], "state": 2, "file_id": 591, "knowledge_revision": 13754, "git_revision": "", "ctags": [{"_type": "tag", "name": "ZILKER_VERSIONUTILS_H", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/device/descriptors/c/public/versionUtils.h", "pattern": "/^#define ZILKER_VERSIONUTILS_H$/", "language": "C++", "kind": "macro"}], "hash": "0f649be3e5e409450e65b2b22a602464", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "components/opensource/zilker-sdk/source/libs/device/descriptors/c/public/versionUtils.h", "revision_history": [{"13754": ""}]}