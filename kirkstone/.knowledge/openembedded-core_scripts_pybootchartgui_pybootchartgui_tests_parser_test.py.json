{"is_source_file": true, "format": "Python", "description": "This is a unit test script for the pybootchartgui package, specifically testing the parsing functionalities such as header parsing, timed blocks, process logs, disk statistics, and CPU statistics. It sets up a testing environment, invokes parsing functions, and asserts correctness of parsed data against expected values.", "external_files": ["../../examples/1/header", "../../examples/1/proc_diskstats.log", "../../examples/1/proc_ps.log", "../../examples/1/extract2.proc_ps.log", "../../examples/1/proc_diskstats.log", "../../examples/1/header", "../../examples/1/proc_stat.log", "../../examples/1/extract.proc_diskstats.log", "../../examples/1/extract.proc_stat.log"], "external_methods": ["parsing.Trace", "parsing.parse_file", "parsing.get_num_cpus", "main._mk_options_parser", "main._mk_writer"], "published": [], "classes": [{"name": "TestBCParser", "description": "A unittest test case class for testing the parsing functions in the pybootchartgui package."}], "methods": [{"name": "setUp(self)", "description": "Initializes test setup, including setting directory paths and variables.", "scope": "TestBCParser", "scopeKind": "class"}, {"name": "mk_fname(self,f)", "description": "Constructs full file paths based on the root directory.", "scope": "TestBCParser", "scopeKind": "class"}, {"name": "testParseHeader(self)", "description": "Tests parsing of header data in trace files.", "scope": "TestBCParser", "scopeKind": "class"}, {"name": "test_parseTimedBlocks(self)", "description": "Tests parsing of timed block data.", "scope": "TestBCParser", "scopeKind": "class"}, {"name": "testParseProcPsLog(self)", "description": "Tests parsing of process snapshot logs.", "scope": "TestBCParser", "scopeKind": "class"}, {"name": "testparseProcDiskStatLog(self)", "description": "Tests parsing of disk statistics logs.", "scope": "TestBCParser", "scopeKind": "class"}, {"name": "testparseProcStatLog(self)", "description": "Tests parsing of CPU statistics logs.", "scope": "TestBCParser", "scopeKind": "class"}, {"name": "floatEq(f1, f2)", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["parsing.Trace", "parsing.parse_file", "parsing.get_num_cpus", "main._mk_options_parser", "main._mk_writer"], "search-terms": ["unittest", "parsing", "pybootchartgui", "parse_file", "testParseHeader", "testParseProcPsLog", "testparseProcDiskStatLog", "testparseProcStatLog"], "state": 2, "file_id": 1498, "knowledge_revision": 14640, "git_revision": "", "ctags": [{"_type": "tag", "name": "TestBCParser", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/pybootchartgui/pybootchartgui/tests/parser_test.py", "pattern": "/^class TestBCParser(unittest.TestCase):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "args", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/pybootchartgui/pybootchartgui/tests/parser_test.py", "pattern": "/^options, args = parser.parse_args(['--q', bootchart_dir])$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "bootchart_dir", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/pybootchartgui/pybootchartgui/tests/parser_test.py", "pattern": "/^bootchart_dir = os.path.join(os.path.dirname(sys.argv[0]), '..\\/..\\/examples\\/1\\/')$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "debug", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/pybootchartgui/pybootchartgui/tests/parser_test.py", "pattern": "/^debug = False$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "floatEq", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/pybootchartgui/pybootchartgui/tests/parser_test.py", "pattern": "/^def floatEq(f1, f2):$/", "language": "Python", "kind": "function", "signature": "(f1, f2)"}, {"_type": "tag", "name": "main", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/pybootchartgui/pybootchartgui/tests/parser_test.py", "pattern": "/^import pybootchartgui.main as main$/", "language": "Python", "kind": "namespace", "nameref": "module:pybootchartgui.main"}, {"_type": "tag", "name": "mk_fname", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/pybootchartgui/pybootchartgui/tests/parser_test.py", "pattern": "/^\tdef mk_fname(self,f):$/", "language": "Python", "kind": "member", "signature": "(self,f)", "scope": "TestBCParser", "scopeKind": "class"}, {"_type": "tag", "name": "options", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/pybootchartgui/pybootchartgui/tests/parser_test.py", "pattern": "/^options, args = parser.parse_args(['--q', bootchart_dir])$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "parser", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/pybootchartgui/pybootchartgui/tests/parser_test.py", "pattern": "/^parser = main._mk_options_parser()$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "parsing", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/pybootchartgui/pybootchartgui/tests/parser_test.py", "pattern": "/^import pybootchartgui.parsing as parsing$/", "language": "Python", "kind": "namespace", "nameref": "module:pybootchartgui.parsing"}, {"_type": "tag", "name": "setUp", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/pybootchartgui/pybootchartgui/tests/parser_test.py", "pattern": "/^\tdef setUp(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "TestBCParser", "scopeKind": "class"}, {"_type": "tag", "name": "testParseHeader", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/pybootchartgui/pybootchartgui/tests/parser_test.py", "pattern": "/^\tdef testParseHeader(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "TestBCParser", "scopeKind": "class"}, {"_type": "tag", "name": "testParseProcPsLog", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/pybootchartgui/pybootchartgui/tests/parser_test.py", "pattern": "/^\tdef testParseProcPsLog(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "TestBCParser", "scopeKind": "class"}, {"_type": "tag", "name": "test_parseTimedBlocks", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/pybootchartgui/pybootchartgui/tests/parser_test.py", "pattern": "/^\tdef test_parseTimedBlocks(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "TestBCParser", "scopeKind": "class"}, {"_type": "tag", "name": "testparseProcDiskStatLog", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/pybootchartgui/pybootchartgui/tests/parser_test.py", "pattern": "/^\tdef testparseProcDiskStatLog(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "TestBCParser", "scopeKind": "class"}, {"_type": "tag", "name": "testparseProcStatLog", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/pybootchartgui/pybootchartgui/tests/parser_test.py", "pattern": "/^\tdef testparseProcStatLog(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "TestBCParser", "scopeKind": "class"}, {"_type": "tag", "name": "writer", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/pybootchartgui/pybootchartgui/tests/parser_test.py", "pattern": "/^writer = main._mk_writer(options)$/", "language": "Python", "kind": "variable"}], "hash": "ecc3c89912f871d7d5e781ab5f2273ca", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "openembedded-core/scripts/pybootchartgui/pybootchartgui/tests/parser_test.py", "fields": [{"name": "options, args = parser.parse_args(['--q', bootchart_dir])", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "bootchart_dir = os.path.join(os.path.dirname(sys.argv[0]), '..\\/..\\/examples\\/1\\/')", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "debug = False", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "parser = main._mk_options_parser()", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "writer = main._mk_writer(options)", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"14640": ""}]}