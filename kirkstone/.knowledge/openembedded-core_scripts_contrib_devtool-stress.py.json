{"is_source_file": true, "format": "Python", "description": "This file is a Python script named 'devtool-stress.py' that functions as a stress testing utility for the 'devtool' component within a build environment, likely related to embedded Linux build systems. It includes commands to extract and modify recipes, and runs tests on multiple recipes with logging capabilities.", "external_files": ["lib/scriptutils.py", "lib/argparse_oe.py", "bb/tinfoil.py", "bb/providers.py", "bb/process.py"], "external_methods": ["scriptutils.logger_create", "argparse_oe.ArgumentParser", "bb.tinfoil.Tinfoil", "bb.providers.findProviders", "bb.process.run", "bb.process.ExecutionError", "bb.process.CmdError"], "published": ["select_recipes", "stress_extract", "stress_modify", "main"], "classes": [{"name": "Tinfoil", "description": "A class in the 'bb.tinfoil' module, used to prepare and manage build recipes."}], "methods": [{"name": "select_recipes(args)", "description": "Selects recipes based on user arguments, applying skip and only filters.", "scope": "", "scopeKind": ""}, {"name": "stress_extract(args)", "description": "Runs 'devtool extract' on selected recipes and logs failures.", "scope": "", "scopeKind": ""}, {"name": "stress_modify(args)", "description": "Runs 'devtool modify' and subsequent build steps on selected recipes and logs outcomes.", "scope": "", "scopeKind": ""}, {"name": "main()", "description": "Entry point for the script; sets up argument parsing and dispatches subcommands.", "scope": "", "scopeKind": ""}], "calls": ["sys.argv", "os.path.abspath", "os.path.dirname", "os.path.realpath", "sys.path.insert", "import scriptutils", "import argparse_oe", "logger_create", "select_recipes", "bb.tinfoil.Tinfoil", "bb.providers.findProviders", "bb.process.run", "shutil.rmtree", "os.setpgrp", "signal.SIGTERM", "os.killpg", "argparse_oe.ArgumentParser", "scriptpath.add_bitbake_lib_path"], "search-terms": ["devtool-stress", "stress tester", "recipe selection", "bb.tinfoil", "stress_extract", "stress_modify", "subcommand", "run", "python3 script"], "state": 2, "file_id": 1514, "knowledge_revision": 14665, "git_revision": "", "ctags": [{"_type": "tag", "name": "logger", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/contrib/devtool-stress.py", "pattern": "/^logger = scriptutils.logger_create('devtool-stress')$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "main", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/contrib/devtool-stress.py", "pattern": "/^def main():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "scripts_lib_path", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/contrib/devtool-stress.py", "pattern": "/^scripts_lib_path = os.path.abspath(os.path.join(os.path.dirname(os.path.realpath(__file__)), '../", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "select_recipes", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/contrib/devtool-stress.py", "pattern": "/^def select_recipes(args):$/", "language": "Python", "kind": "function", "signature": "(args)"}, {"_type": "tag", "name": "stress_extract", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/contrib/devtool-stress.py", "pattern": "/^def stress_extract(args):$/", "language": "Python", "kind": "function", "signature": "(args)"}, {"_type": "tag", "name": "stress_modify", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/contrib/devtool-stress.py", "pattern": "/^def stress_modify(args):$/", "language": "Python", "kind": "function", "signature": "(args)"}], "hash": "dc13ad3307fc3a396255f0d414575385", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "openembedded-core/scripts/contrib/devtool-stress.py", "fields": [{"name": "logger = scriptutils.logger_create('devtool-stress')", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "scripts_lib_path = os.path.abspath(os.path.join(os.path.dirname(os.path.realpath(__file__)), '../", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"14665": ""}]}