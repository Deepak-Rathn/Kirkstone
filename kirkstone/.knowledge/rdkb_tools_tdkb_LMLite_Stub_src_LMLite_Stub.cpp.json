{"is_source_file": true, "format": "C++", "description": "This file implements a C++ class 'LMLiteStub' that provides wrapper functions for managing parameters via a TDK component, including initialization, setting, getting, and functional validation. It also includes external linkage functions for object creation and destruction.", "external_files": ["LMLite_Stub.h", "ssp_tdk_wrp.h"], "external_methods": ["ssp_register", "ssp_terminate", "ssp_getParameterValue", "ssp_setParameterValue", "free_Memory_val"], "published": ["CreateObject", "DestroyObject"], "classes": [{"name": "LMLiteStub", "description": "A class providing wrapper functions for parameter management through TDK component, including initialization, pre/post requisites, get/set operations, and validation."}], "methods": [{"name": "bool initialize(IN const char * szVersion)", "description": "Initializes the LMLiteStub object, primarily for registering the wrapper method.", "scope": "LMLiteStub", "scopeKind": "class"}, {"name": "std::string testmodulepre_requisites()", "description": "Sets up necessary pre-requisites for the test module by invoking ssp_register.", "scope": "LMLiteStub", "scopeKind": "class"}, {"name": "bool testmodulepost_requisites()", "description": "Resets or cleans up pre-requisites by invoking ssp_terminate.", "scope": "LMLiteStub", "scopeKind": "class"}, {"name": "void LMLiteStub_Get(IN const Json::Value & req,OUT Json::Value & response)", "description": "Retrieves parameter values using ssp_getParameterValue and populates the response JSON.", "scope": "LMLiteStub", "scopeKind": "class"}, {"name": "void LMLiteStub_Set(IN const Json::Value & req,OUT Json::Value & response)", "description": "Sets a parameter value using ssp_setParameterValue and validates the change via get.", "scope": "LMLiteStub", "scopeKind": "class"}, {"name": "void LMLiteStub_Set_Get(IN const Json::Value & req,OUT Json::Value & response)", "description": "Performs set and get operations together for functional validation of parameter management.", "scope": "LMLiteStub", "scopeKind": "class"}, {"name": "bool cleanup(IN const char * szVersion)", "description": "Performs cleanup activities for the LMLiteStub object.", "scope": "LMLiteStub", "scopeKind": "class"}, {"name": "LMLiteStub * CreateObject(TcpSocketServer & ptrtcpServer)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "void DestroyObject(LMLiteStub * stubobj)", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["ssp_register", "ssp_terminate", "ssp_getParameterValue", "ssp_setParameterValue", "free_Memory_val"], "search-terms": ["LMLiteStub", "ssp_getParameterValue", "ssp_setParameterValue", "LMLite_Stub.cpp", "testmodulepre_requisites", "LMLiteStub_Get", "LMLiteStub_Set", "LMLiteStub_Set_Get"], "state": 2, "file_id": 5611, "knowledge_revision": 18723, "git_revision": "", "ctags": [{"_type": "tag", "name": "CreateObject", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/LMLite_Stub/src/LMLite_Stub.cpp", "pattern": "/^extern \"C\" LMLiteStub* CreateObject(TcpSocketServer &ptrtcpServer)$/", "language": "C++", "typeref": "typename:LMLiteStub *", "kind": "function", "signature": "(TcpSocketServer & ptrtcpServer)"}, {"_type": "tag", "name": "DestroyObject", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/LMLite_Stub/src/LMLite_Stub.cpp", "pattern": "/^extern \"C\" void DestroyObject(LMLiteStub *stubobj)$/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(LMLiteStub * stubobj)"}, {"_type": "tag", "name": "LMLiteStub_Get", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/LMLite_Stub/src/LMLite_Stub.cpp", "pattern": "/^void LMLiteStub::LMLiteStub_Get(IN const Json::Value& req, OUT Json::Value& response)$/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(IN const Json::Value & req,OUT Json::Value & response)", "scope": "LMLiteStub", "scopeKind": "class"}, {"_type": "tag", "name": "LMLiteStub_Set", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/LMLite_Stub/src/LMLite_Stub.cpp", "pattern": "/^void LMLiteStub::LMLiteStub_Set(IN const Json::Value& req, OUT Json::Value& response)$/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(IN const Json::Value & req,OUT Json::Value & response)", "scope": "LMLiteStub", "scopeKind": "class"}, {"_type": "tag", "name": "LMLiteStub_Set_Get", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/LMLite_Stub/src/LMLite_Stub.cpp", "pattern": "/^void LMLiteStub::LMLiteStub_Set_Get(IN const Json::Value& req, OUT Json::Value& response)$/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(IN const Json::Value & req,OUT Json::Value & response)", "scope": "LMLiteStub", "scopeKind": "class"}, {"_type": "tag", "name": "cleanup", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/LMLite_Stub/src/LMLite_Stub.cpp", "pattern": "/^bool LMLiteStub::cleanup(IN const char* szVersion)$/", "language": "C++", "typeref": "typename:bool", "kind": "function", "signature": "(IN const char * szVersion)", "scope": "LMLiteStub", "scopeKind": "class"}, {"_type": "tag", "name": "initialize", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/LMLite_Stub/src/LMLite_Stub.cpp", "pattern": "/^bool LMLiteStub::initialize(IN const char* szVersion)$/", "language": "C++", "typeref": "typename:bool", "kind": "function", "signature": "(IN const char * szVersion)", "scope": "LMLiteStub", "scopeKind": "class"}, {"_type": "tag", "name": "testmodulepost_requisites", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/LMLite_Stub/src/LMLite_Stub.cpp", "pattern": "/^bool LMLiteStub::testmodulepost_requisites()$/", "language": "C++", "typeref": "typename:bool", "kind": "function", "signature": "()", "scope": "LMLiteStub", "scopeKind": "class"}, {"_type": "tag", "name": "testmodulepre_requisites", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/LMLite_Stub/src/LMLite_Stub.cpp", "pattern": "/^std::string LMLiteStub::testmodulepre_requisites()$/", "language": "C++", "typeref": "typename:std::string", "kind": "function", "signature": "()", "scope": "LMLiteStub", "scopeKind": "class"}], "hash": "d3fe52a9b91780203c81485b78bfc5d3", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "rdkb/tools/tdkb/LMLite_Stub/src/LMLite_Stub.cpp", "revision_history": [{"18723": ""}]}