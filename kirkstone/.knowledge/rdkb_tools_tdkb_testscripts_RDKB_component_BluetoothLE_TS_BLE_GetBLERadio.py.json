{"is_source_file": true, "format": "Python", "description": "This Python script is a test case for verifying the enable status of Bluetooth Low Energy (BLE) radio feature on a device. It checks if the BLE radio enable status from a configuration file matches the status retrieved via TR-181 parameters. The script uses TDK libraries to interface with the device modules, performs configuration and validation steps, and reports success or failure based on the matching status.", "external_files": ["/tmp/rfc_configdata.txt"], "external_methods": ["tdkbtr181.TDKScriptingLibrary('tdkbtr181','1')", "tdkbtr181.TDKScriptingLibrary('sysutil','1')", "tdkbtr181.createTestStep('TDKB_TR181Stub_Get')", "tdkbtr181.createTestStep('ExecuteCmd')"], "published": ["Device.DeviceInfo.X_RDKCENTRAL-COM_RFC.Feature.BLERadio"], "classes": [], "methods": [{"name": "executeTestCase", "description": "Executes a test step with the expected result and captures the output.", "parameters": ["expectedresult"]}, {"name": "getResult", "description": "Retrieves the result of the last executed test step.", "parameters": []}, {"name": "getResultDetails", "description": "Provides detailed output from the last executed test step.", "parameters": []}, {"name": "setResultStatus", "description": "Marks the current test step as SUCCESS or FAILURE.", "parameters": ["status"]}, {"name": "configureTestCase", "description": "Initializes test case configuration with device IP and port.", "parameters": ["ip", "port", "test_name"]}, {"name": "createTestStep", "description": "Creates a test step object for executing specific actions.", "parameters": ["step_name"]}, {"name": "addParameter", "description": "Adds parameters to a test step.", "parameters": ["key", "value"]}, {"name": "unloadModule", "description": "Unloads the specified module from the test environment.", "parameters": ["module_name"]}], "calls": ["tdkbtr181.TDKScriptingLibrary('tdkbtr181','1')", "tdkbtr181.TDKScriptingLibrary('sysutil','1')", "createTestStep('TDKB_TR181Stub_Get')", "createTestStep('ExecuteCmd')", "executeTestCase(expectedresult)", "getResult()", "getResultDetails()", "setResultStatus('SUCCESS' or 'FAILURE')", "configureTestCase(ip, port, 'TS_BLE_GetBLERadio')", "unloadModule('tdkbtr181')", "unloadModule('sysutil')"], "search-terms": ["BLE Radio status check", "rfc_configdata.txt BLE", "Device.DeviceInfo.X_RDKCENTRAL-COM_RFC.Feature.BLERadio", "TR-181 BLE radio", "BluetoothLE test script", "GetBLERadio"], "state": 2, "file_id": 4219, "knowledge_revision": 17354, "git_revision": "", "ctags": [{"_type": "tag", "name": "BLERadioOrg", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/testscripts/RDKB/component/BluetoothLE/TS_BLE_GetBLERadio.py", "pattern": "/^    BLERadioOrg = tdkTestObj.getResultDetails();$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "actualresult", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/testscripts/RDKB/component/BluetoothLE/TS_BLE_GetBLERadio.py", "pattern": "/^        actualresult = tdkTestObj.getResult();$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "actualresult", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/testscripts/RDKB/component/BluetoothLE/TS_BLE_GetBLERadio.py", "pattern": "/^    actualresult = tdkTestObj.getResult();$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "details", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/testscripts/RDKB/component/BluetoothLE/TS_BLE_GetBLERadio.py", "pattern": "/^        details = tdkTestObj.getResultDetails().strip().replace(\"\\\\\\\\n\",\"\");$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "details_config", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/testscripts/RDKB/component/BluetoothLE/TS_BLE_GetBLERadio.py", "pattern": "/^            details_config=details.split(\"#~\")[1].split(' ')[0].rstrip(\" \");$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "expectedresult", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/testscripts/RDKB/component/BluetoothLE/TS_BLE_GetBLERadio.py", "pattern": "/^        expectedresult=\"SUCCESS\";$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "expectedresult", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/testscripts/RDKB/component/BluetoothLE/TS_BLE_GetBLERadio.py", "pattern": "/^    expectedresult=\"SUCCESS\";$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "ip", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/testscripts/RDKB/component/BluetoothLE/TS_BLE_GetBLERadio.py", "pattern": "/^ip = <ipaddress>$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "loadmodulestatus", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/testscripts/RDKB/component/BluetoothLE/TS_BLE_GetBLERadio.py", "pattern": "/^loadmodulestatus=obj.getLoadModuleResult();$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "loadmodulestatus2", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/testscripts/RDKB/component/BluetoothLE/TS_BLE_GetBLERadio.py", "pattern": "/^loadmodulestatus2=obj2.getLoadModuleResult();$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "obj", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/testscripts/RDKB/component/BluetoothLE/TS_BLE_GetBLERadio.py", "pattern": "/^obj = tdklib.TDKScriptingLibrary(\"tdkbtr181\",\"1\");$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "obj2", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/testscripts/RDKB/component/BluetoothLE/TS_BLE_GetBLERadio.py", "pattern": "/^obj2 = tdklib.TDKScriptingLibrary(\"sysutil\",\"1\");$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "port", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/testscripts/RDKB/component/BluetoothLE/TS_BLE_GetBLERadio.py", "pattern": "/^port = <port>$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "query", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/testscripts/RDKB/component/BluetoothLE/TS_BLE_GetBLERadio.py", "pattern": "/^        query=\"cat \\/tmp\\/rfc_configdata.txt | grep -i \\\\\"tr181.Device.DeviceInfo.X_RDKCENTRAL-C/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "tdkTestObj", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/testscripts/RDKB/component/BluetoothLE/TS_BLE_GetBLERadio.py", "pattern": "/^        tdkTestObj = obj2.createTestStep('ExecuteCmd');$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "tdkTestObj", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/testscripts/RDKB/component/BluetoothLE/TS_BLE_GetBLERadio.py", "pattern": "/^    tdkTestObj = obj.createTestStep('TDKB_TR181Stub_Get');$/", "language": "Python", "kind": "variable"}], "hash": "a076936dcfaa309df5dc07c5b8aed606", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "rdkb/tools/tdkb/testscripts/RDKB/component/BluetoothLE/TS_BLE_GetBLERadio.py", "fields": [{"name": "BLERadioOrg = tdkTestObj.getResultDetails();", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "actualresult = tdkTestObj.getResult();", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "details = tdkTestObj.getResultDetails().strip().replace(\"\\\\\\\\n\",\"\");", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "details_config=details.split(\"#~\")[1].split(' ')[0].rstrip(\" \");", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "expectedresult=\"SUCCESS\";", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "ip = <ipaddress>", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "loadmodulestatus=obj.getLoadModuleResult();", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "loadmodulestatus2=obj2.getLoadModuleResult();", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "obj = tdklib.TDKScriptingLibrary(\"tdkbtr181\",\"1\");", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "obj2 = tdklib.TDKScriptingLibrary(\"sysutil\",\"1\");", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "port = <port>", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "query=\"cat \\/tmp\\/rfc_configdata.txt | grep -i \\\\\"tr181.Device.DeviceInfo.X_RDKCENTRAL-C/", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "tdkTestObj = obj2.createTestStep('ExecuteCmd');", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "tdkTestObj = obj.createTestStep('TDKB_TR181Stub_Get');", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"17354": ""}]}