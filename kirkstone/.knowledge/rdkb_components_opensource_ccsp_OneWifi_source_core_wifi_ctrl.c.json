{"is_source_file": true, "format": "C", "description": "This file is a C source file implementing WiFi control functionalities for a device, including initialization, event handling, radio and VAP management, callback registration, and interaction with webconfig, RBUS, and hardware abstraction layers.", "external_files": ["stdio.h", "stdbool.h", "ansc_platform.h", "wifi_hal.h", "wifi_hal_rdk_framework.h", "wifi_ctrl.h", "wifi_mgr.h", "wifi_util.h", "scheduler.h", "errno.h", "unistd.h", "pthread.h", "rbus.h", "ieee80211.h"], "external_methods": ["webconfig_init", "scheduler_deinit", "queue_destroy", "getNumberRadios", "get_wifidb_radio_map", "wifi_hal_setRadioOperatingParameters", "ow_mesh_ext_set_phy_config", "get_wifictrl_obj", "get_wifimgr_obj", "get_wifidb_vap_map", "get_max_number_vaps_per_radio", "get_wifidb_rdk_vap_info", "hash_map_get", "get_interface_name_for_vap_index", "push_event_to_ctrl_queue", "apps_mgr_event", "destroy_wifi_event", "scheduler_init", "queue_create", "webconfig_initializer_onewifi", "rbus_register_handlers", "rbus_subscribe_events", "wifi_hal_staConnectionStatus_callback_register", "wifi_hal_scanResults_callback_register", "wifi_hal_mgmt_frame_callbacks_register", "wifi_chan_event_register", "access", "get_ssid_from_device_mac", "get_wifi_global_param", "update_wifi_global_config", "rbus_get", "rbus_setStr", "rbus_set", "rbus_getStr", "set_wifi_public_vap_enable_status", "get_wifi_mesh_vap_enable_status", "get_privateApFromRadioIndex", "get_wifidb_vap_parameters", "get_wifidb_vap_info_map", "get_wifi_rfc_parameters", "get_wifidb_vap_info", "wifi_hal_getDefaultKeyPassphrase", "get_wifi_mesh_vap_enable_status", "start_wifi_monitor", "wifi_hal_post_init", "rbus_register_handlers", "rbus_subscribe_events", "rbus_get", "rbus_set", "rbus_setStr"], "published": ["get_ap_index_from_clientmac", "selfheal_event_publish_time", "reboot_device", "selfheal_event_publish", "check_sta_ext_connection_status", "start_extender_vaps", "start_gateway_vaps", "stop_gateway_vaps", "stop_extender_vaps", "start_wifi_services", "start_wifi_ctrl", "init_wifi_ctrl", "check_wifi_csa_sched_timeout_active_status", "check_wifi_radio_sched_timeout_active_status", "check_wifi_vap_sched_timeout_active_status", "resched_data_to_ctrl_queue", "wifi_sched_timeout", "start_wifi_sched_timer"], "classes": [], "methods": [{"name": "void deinit_wifi_ctrl(wifi_ctrl_t * ctrl)", "description": "Releases resources associated with the wifi_ctrl_t structure, including queues, mutexes, and scheduler.", "scope": "", "scopeKind": ""}, {"name": "wifi_radio_set_enable", "description": "Enables or disables all wifi radios based on the status parameter."}, {"name": "int get_ap_index_from_clientmac(mac_address_t mac_addr)", "description": "Finds the AP/VAP index associated with a client MAC address across radios and VAPs.", "scope": "", "scopeKind": ""}, {"name": "reset_wifi_radios", "description": "Disables and re-enables wifi radios to reset them."}, {"name": "selfheal_event_publish_time", "description": "Reads the self-heal event publish interval from a system file or defaults to 10 minutes."}, {"name": "reboot_device", "description": "Triggers a device reboot via RBUS calls, setting reboot reason and reboot command."}, {"name": "selfheal_event_publish", "description": "Publishes a self-heal event via RBUS to notify about connection timeout or events."}, {"name": "sta_selfheal_handing", "description": "Handles self-heal logic for STA connections, including triggers for radio reset and device reboot."}, {"name": "is_sta_enabled", "description": "Checks if STA mode is enabled based on device mode and gateway status."}, {"name": "void ctrl_queue_loop(wifi_ctrl_t * ctrl)", "description": "Main loop processing events from the control queue and dispatching to handlers.", "scope": "", "scopeKind": ""}, {"name": "init_wifi_global_config", "description": "Initializes global WiFi configurations such as GAS settings."}, {"name": "unsigned int get_Uptime(void)", "description": "Retrieves system uptime in seconds from /proc/uptime.", "scope": "", "scopeKind": ""}, {"name": "start_radios", "description": "Configures and starts WiFi radios based on device mode, including RF call and scheduling."}, {"name": "bool check_sta_ext_connection_status(void)", "description": "Checks if any VAP in any radio in STA mode is currently connected.", "scope": "", "scopeKind": ""}, {"name": "wifi_platform_property_t * get_wifi_hal_cap_prop(void)", "description": "Returns the capabilities/properties of the WiFi hardware abstraction layer.", "scope": "", "scopeKind": ""}, {"name": "is_acs_channel_updated", "description": "Checks if auto-channel selection is completed for all radios."}, {"name": "bool check_for_greylisted_mac_filter(void)", "description": "Checks if there are any greylisted MAC addresses based on radius rejection list.", "scope": "", "scopeKind": ""}, {"name": "rbus_get_vap_init_parameter", "description": "Gets initial parameters for VAPs and device mode via RBUS."}, {"name": "rbus_get_active_gw_parameter", "description": "Gets the active gateway status parameter via RBUS."}, {"name": "start_extender_vaps", "description": "Starts extender VAPs if mesh extenders are enabled."}, {"name": "start_gateway_vaps", "description": "Starts gateway VAPs, including private, public, and mesh gateway, depending on configuration."}, {"name": "stop_gateway_vaps", "description": "Stops all gateway-related VAPs."}, {"name": "stop_extender_vaps", "description": "Stops the extender VAPs."}, {"name": "start_wifi_services", "description": "Starts necessary WiFi services based on current device mode."}, {"name": "start_wifi_ctrl", "description": "Main function to initialize and start WiFi control including webconfig, verifying credentials, and starting monitor."}, {"name": "init_wifi_ctrl", "description": "Initializes the WiFi control structure, registering callbacks, and webconfig setup."}, {"name": "bool check_wifi_csa_sched_timeout_active_status(wifi_ctrl_t * l_ctrl)", "description": "Checks if any scheduled channel switch is active.", "scope": "", "scopeKind": ""}, {"name": "bool check_wifi_radio_sched_timeout_active_status(wifi_ctrl_t * l_ctrl)", "description": "Checks if any scheduled radio operation is active.", "scope": "", "scopeKind": ""}, {"name": "bool check_wifi_vap_sched_timeout_active_status(wifi_ctrl_t * l_ctrl,BOOL (* cb)(UINT apIndex))", "description": "Checks if any VAP scheduling is active.", "scope": "", "scopeKind": ""}, {"name": "resched_data_to_ctrl_queue", "description": "Re-enqueues pending VAP apply data to the control queue."}, {"name": "wifi_sched_timeout", "description": "Callback for scheduler timeout, clears scheduled handler IDs and reschedules data if needed."}, {"name": "start_wifi_sched_timer", "description": "Starts a timer for scheduling radio/VAP operations."}, {"name": "stop_wifi_sched_timer", "description": "Stops a scheduled timer for specific radio or VAP activities."}, {"name": "sync_wifi_hal_hotspot_vap_mac_entry_with_db", "description": "Synchronizes MAC filter entries between hardware and database for hotspot VAPs."}, {"name": "sync_wifi_hal_hotspot_vap_mac_entry", "description": "Task to periodically synchronize MAC entries."}, {"name": "rbus_check_and_subscribe_events", "description": "Checks and subscribes to RBUS events, ensuring subscriptions are active."}, {"name": "sta_connectivity_selfheal", "description": "Performs self-healing actions on STA connectivity issues."}, {"name": "run_greylist_event", "description": "Checks for greylisted MAC addresses and removes ACL entries if necessary."}, {"name": "run_analytics_event", "description": "Triggers analytics events management."}, {"name": "run_cac_event", "description": "Triggers CAC (channel access contention) events."}, {"name": "pending_states_webconfig_analyzer", "description": "Analyzes pending WebConfig states."}, {"name": "void ctrl_queue_timeout_scheduler_tasks(wifi_ctrl_t * ctrl)", "description": "Schedules periodic timer tasks for self-healing, analytics, greylist, and RBUS subscriptions.", "scope": "", "scopeKind": ""}, {"name": "wifi_radio_index_t get_wifidb_radio_index(uint8_t radio_index)", "description": "Maps radio hardware index to internal WiFi radio index.", "scope": "", "scopeKind": ""}, {"name": "rdk_wifi_vap_info_t * get_wifidb_rdk_vap_info(uint8_t vapIndex)", "description": "Retrieves the WiFi VAP info for a given VAP index.", "scope": "", "scopeKind": ""}, {"name": "rdk_wifi_vap_info_t * get_wifidb_rdk_vaps(uint8_t radio_index)", "description": "Returns array of VAP info per radio.", "scope": "", "scopeKind": ""}, {"name": "get_wifidb_vap_map", "description": "Returns VAP map for a radio."}, {"name": "wifi_radio_operationParam_t * get_wifidb_radio_map(uint8_t radio_index)", "description": "Returns radio operation parameters for a radio.", "scope": "", "scopeKind": ""}, {"name": "wifi_radio_feature_param_t * get_wifidb_radio_feat_map(uint8_t radio_index)", "description": "Returns radio feature parameters.", "scope": "", "scopeKind": ""}, {"name": "wifi_GASConfiguration_t * get_wifidb_gas_config(void)", "description": "Returns global GAS configuration.", "scope": "", "scopeKind": ""}, {"name": "get_wifidb_wifi_global_param", "description": "Returns global WiFi parameters."}, {"name": "get_wifidb_wifi_global_config", "description": "Returns global WiFi configuration."}, {"name": "wifi_vap_info_map_t * Get_wifi_object(uint8_t radio_index)", "description": "Returns VAP map object for a given radio index.", "scope": "", "scopeKind": ""}, {"name": "wifi_GASConfiguration_t * Get_wifi_gas_conf_object(void)", "description": "Returns GAS configuration object.", "scope": "", "scopeKind": ""}, {"name": "wifi_interworking_t * Get_wifi_object_interworking_parameter(uint8_t vapIndex)", "description": "Retrieves the interworking parameters for a given VAP.", "scope": "", "scopeKind": ""}, {"name": "wifi_preassoc_control_t * Get_wifi_object_preassoc_ctrl_parameter(uint8_t vapIndex)", "description": "Retrieves pre-association control parameters for a VAP.", "scope": "", "scopeKind": ""}, {"name": "wifi_postassoc_control_t * Get_wifi_object_postassoc_ctrl_parameter(uint8_t vapIndex)", "description": "Retrieves post-association control parameters for a VAP.", "scope": "", "scopeKind": ""}, {"name": "wifi_vap_security_t * Get_wifi_object_bss_security_parameter(uint8_t vapIndex)", "description": "Retrieves BSS security parameters.", "scope": "", "scopeKind": ""}, {"name": "wifi_vap_security_t * Get_wifi_object_sta_security_parameter(uint8_t vapIndex)", "description": "Retrieves STA security parameters.", "scope": "", "scopeKind": ""}, {"name": "wifi_front_haul_bss_t * Get_wifi_object_bss_parameter(uint8_t vapIndex)", "description": "Retrieves BSS parameters.", "scope": "", "scopeKind": ""}, {"name": "int get_wifi_mesh_sta_network_status(uint8_t vapIndex,bool * status)", "description": "Reports the mesh station network status.", "scope": "", "scopeKind": ""}, {"name": "bool get_wifi_mesh_vap_enable_status(void)", "description": "Checks if any mesh backhaul VAPs are enabled.", "scope": "", "scopeKind": ""}, {"name": "bool get_wifi_public_vap_enable_status(void)", "description": "Checks if any public VAPs (hotspot) are active.", "scope": "", "scopeKind": ""}, {"name": "set_wifi_vap_network_status", "description": "Enables or disables a VAP network."}, {"name": "set_wifi_sta_network_status", "description": "Enables or disables STA network."}, {"name": "set_wifi_public_vap_enable_status", "description": "Enables all public VAPs."}, {"name": "int get_wifi_rfc_parameters(char * str,void * value)", "description": "Retrieves RF configuration parameters based on string key.", "scope": "", "scopeKind": ""}, {"name": "wifi_dml_parameters_t * get_wifi_dml_parameters(void)", "description": "Returns DML (Data Model Layer) parameters structure.", "scope": "", "scopeKind": ""}, {"name": "wifi_rfc_dml_parameters_t * get_wifi_db_rfc_parameters(void)", "description": "Returns RFC DML parameters structure.", "scope": "", "scopeKind": ""}, {"name": "wifi_rfc_dml_parameters_t * get_ctrl_rfc_parameters(void)", "description": "Copies RFC parameters into control structure.", "scope": "", "scopeKind": ""}, {"name": "int get_multi_radio_dml_parameters(uint8_t radio_index,char * str,void * value)", "description": "Gets per-radio DML parameter (e.g., factory SSID).", "scope": "", "scopeKind": ""}, {"name": "set_multi_radio_dml_parameters", "description": "Sets per-radio DML parameter (e.g., factory SSID)."}, {"name": "int get_multi_vap_dml_parameters(uint8_t ap_index,char * str,void * value)", "description": "Retrieves specific multi-VAP DML parameter.", "scope": "", "scopeKind": ""}, {"name": "set_multi_vap_dml_parameters", "description": "Sets specific multi-VAP DML parameter."}, {"name": "int get_device_config_list(char * d_list,int size,char * str)", "description": "Retrieves device configuration lists such as RSSI, SNR, and others.", "scope": "", "scopeKind": ""}, {"name": "int get_vap_dml_parameters(char * str,void * value)", "description": "Retrieves various WiFi VAP DML parameters.", "scope": "", "scopeKind": ""}, {"name": "set_vap_dml_parameters", "description": "Sets WiFi VAP DML parameters."}, {"name": "set_dml_init_status", "description": "Marks DML initialization as complete and signals startup."}, {"name": "rdk_wifi_radio_t * find_radio_config_by_index(uint8_t index)", "description": "Finds radio config object by hardware index.", "scope": "", "scopeKind": ""}, {"name": "int get_sta_ssid_from_radio_config_by_radio_index(unsigned int radio_index,ssid_t ssid)", "description": "Gets SSID string from radio config based on radio index.", "scope": "", "scopeKind": ""}, {"name": "rdk_wifi_get_hal_capability_map", "description": "Returns pointer to WiFi HAL capability map."}, {"name": "rdk_wifi_vap_map_t * getRdkWifiVap(UINT radioIndex)", "description": "Returns the VAP map for a radio.", "scope": "", "scopeKind": ""}, {"name": "wifi_vap_info_t * getVapInfo(UINT apIndex)", "description": "Returns VAP info structure given apIndex.", "scope": "", "scopeKind": ""}, {"name": "rdk_wifi_vap_info_t * getRdkVapInfo(UINT apIndex)", "description": "Returns RDK-specific VAP info given apIndex.", "scope": "", "scopeKind": ""}, {"name": "wifi_radio_capabilities_t * getRadioCapability(UINT radioIndex)", "description": "Returns capabilities for a radio index.", "scope": "", "scopeKind": ""}, {"name": "wifi_radio_operationParam_t * getRadioOperationParam(UINT radioIndex)", "description": "Returns operational parameters for a radio index.", "scope": "", "scopeKind": ""}, {"name": "rdkGetIndexFromName", "description": "Maps interface name to wlan index."}, {"name": "UINT getRadioIndexFromAp(UINT apIndex)", "description": "Returns radio index for given apIndex.", "scope": "", "scopeKind": ""}, {"name": "UINT getPrivateApFromRadioIndex(UINT radioIndex)", "description": "Finds private AP index for a radio.", "scope": "", "scopeKind": ""}, {"name": "isVapPrivate", "description": "Checks if a VAP is private."}, {"name": "isVapXhs", "description": "Checks if a VAP is XHS."}, {"name": "isVapHotspot", "description": "Checks if a VAP is a hotspot."}, {"name": "isVapLnf", "description": "Checks if a VAP is LNF."}, {"name": "isVapLnfPsk", "description": "Checks if a VAP is LNF with PSK."}, {"name": "isVapMesh", "description": "Checks if a VAP is a mesh network."}, {"name": "isVapHotspotSecure", "description": "Checks if a VAP hotspot is secure."}, {"name": "isVapHotspotOpen", "description": "Checks if a VAP hotspot is open."}, {"name": "isVapHotspotSecure5g", "description": "Checks if a 5G hotspot is secure."}, {"name": "isVapHotspotSecure6g", "description": "Checks if a 6G hotspot is secure."}, {"name": "isVapHotspotOpen5g", "description": "Checks if a 5G hotspot is open."}, {"name": "isVapHotspotOpen6g", "description": "Checks if a 6G hotspot is open."}, {"name": "isVapLnfSecure", "description": "Checks if VAP uses LNF Radius."}, {"name": "isVapSTAMesh", "description": "Checks if VAP is a STA mesh."}, {"name": "isVapMeshBackhaul", "description": "Checks if VAP is mesh backhaul."}, {"name": "UINT getNumberRadios()", "description": "Returns total number of radios configured.", "scope": "", "scopeKind": ""}, {"name": "UINT getMaxNumberVAPsPerRadio(UINT radioIndex)", "description": "Returns maximum VAPs allowed per radio.", "scope": "", "scopeKind": ""}, {"name": "UINT getNumberVAPsPerRadio(UINT radioIndex)", "description": "Returns number of VAPs configured per radio.", "scope": "", "scopeKind": ""}, {"name": "UINT getTotalNumberVAPs()", "description": "Returns total configured VAPs across all radios.", "scope": "", "scopeKind": ""}, {"name": "CHAR * getVAPName(UINT apIndex)", "description": "Returns the VAP name string from apIndex.", "scope": "", "scopeKind": ""}, {"name": "int getVAPIndexFromName(CHAR * vapName,UINT * apIndex)", "description": "Maps VAP name to internal apIndex.", "scope": "", "scopeKind": ""}, {"name": "int getVAPArrayIndexFromVAPIndex(unsigned int apIndex,unsigned int * vap_array_index)", "description": "Gets array index in VAP list from apIndex.", "scope": "", "scopeKind": ""}, {"name": "char * convert_radio_index_to_band_str_g(UINT radioIndex)", "description": "Converts radio index to 2.4G/5G band string.", "scope": "", "scopeKind": ""}, {"name": "char * convert_radio_index_to_band_str(UINT radioIndex)", "description": "Converts radio index to frequency band string.", "scope": "", "scopeKind": ""}, {"name": "int get_vap_interface_bridge_name(unsigned int vap_index,char * bridge_name)", "description": "Gets bridge name for a VAP.", "scope": "", "scopeKind": ""}, {"name": "void Hotspot_APIsolation_Set(int apIns)", "description": "Sets AP isolation mode for a hotspot AP.", "scope": "", "scopeKind": ""}, {"name": "void Load_Hotspot_APIsolation_Settings(void)", "description": "Loads and applies AP isolation settings for hotspot VAPs.", "scope": "", "scopeKind": ""}, {"name": "int get_rbus_param(rbusHandle_t rbus_handle,rbus_data_type_t data_type,const char * paramNames,void * data_value)", "description": "Retrieves RBUS parameter values.", "scope": "", "scopeKind": ""}, {"name": "set_rbus_bool_param", "description": "Sets a boolean parameter in RBUS."}, {"name": "int captive_portal_check(void)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "void channel_change_callback(wifi_channel_change_event_t radio_channel_param)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "void check_log_upload_cron_job()", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "void get_action_frame_evt_params(uint8_t * frame,uint32_t len,frame_data_t * mgmt_frame,wifi_event_subtype_t * evt_subtype)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "void get_gas_init_frame_evt_params(uint8_t * frame,uint32_t len,frame_data_t * mgmt_frame,wifi_event_subtype_t * evt_subtype)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "bool get_notify_wifi_from_psm(char * PsmParamName)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "wifi_back_haul_sta_t * get_wifi_object_sta_parameter(uint8_t vapIndex)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int get_wifi_vap_network_status(uint8_t vapIndex,bool * status)", "scope": "", "scopeKind": "", "description": "unavailable"}], "search-terms": ["wifi_ctrl", "VAP", "radio_config", "VAP_INDEX", "WIFI_FREQUENCY", "rbus", "selfheal_event", "wifi_hal", "WiFi_GLOBAL", "macfilter", "selfheal", "WiFi_Mon", "VAP_PREFIX_HOTSPOT", "RDK_WIFI", "RF_CFG", "DML", "SSIDs", "mesh_backhaul", "ap_index", "vap_name", "WiFi_CAP", "RF_FREQUENCY", "WiFi_EVENT", "WPS", "SSID", "Passpoint", "interworking", "ACL", "SelfHeal", "AnalyticEvent"], "state": 2, "file_id": 6012, "knowledge_revision": 19130, "git_revision": "", "ctags": [{"_type": "tag", "name": "BUF_SIZE", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl.c", "pattern": "/^#define BUF_SIZE /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "FILE_SYSTEM_UPTIME", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl.c", "pattern": "/^#define FILE_SYSTEM_UPTIME /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "Get_wifi_gas_conf_object", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl.c", "pattern": "/^wifi_GASConfiguration_t * Get_wifi_gas_conf_object(void)$/", "language": "C", "typeref": "typename:wifi_GASConfiguration_t *", "kind": "function", "signature": "(void)"}, {"_type": "tag", "name": "Get_wifi_object", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl.c", "pattern": "/^wifi_vap_info_map_t * Get_wifi_object(uint8_t radio_index)$/", "language": "C", "typeref": "typename:wifi_vap_info_map_t *", "kind": "function", "signature": "(uint8_t radio_index)"}, {"_type": "tag", "name": "Get_wifi_object_bss_parameter", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl.c", "pattern": "/^wifi_front_haul_bss_t * Get_wifi_object_bss_parameter(uint8_t vapIndex)$/", "language": "C", "typeref": "typename:wifi_front_haul_bss_t *", "kind": "function", "signature": "(uint8_t vapIndex)"}, {"_type": "tag", "name": "Get_wifi_object_bss_security_parameter", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl.c", "pattern": "/^wifi_vap_security_t * Get_wifi_object_bss_security_parameter(uint8_t vapIndex)$/", "language": "C", "typeref": "typename:wifi_vap_security_t *", "kind": "function", "signature": "(uint8_t vapIndex)"}, {"_type": "tag", "name": "Get_wifi_object_interworking_parameter", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl.c", "pattern": "/^wifi_interworking_t * Get_wifi_object_interworking_parameter(uint8_t vapIndex)$/", "language": "C", "typeref": "typename:wifi_interworking_t *", "kind": "function", "signature": "(uint8_t vapIndex)"}, {"_type": "tag", "name": "Get_wifi_object_postassoc_ctrl_parameter", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl.c", "pattern": "/^wifi_postassoc_control_t * Get_wifi_object_postassoc_ctrl_parameter(uint8_t vapIndex)$/", "language": "C", "typeref": "typename:wifi_postassoc_control_t *", "kind": "function", "signature": "(uint8_t vapIndex)"}, {"_type": "tag", "name": "Get_wifi_object_preassoc_ctrl_parameter", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl.c", "pattern": "/^wifi_preassoc_control_t * Get_wifi_object_preassoc_ctrl_parameter(uint8_t vapIndex)$/", "language": "C", "typeref": "typename:wifi_preassoc_control_t *", "kind": "function", "signature": "(uint8_t vapIndex)"}, {"_type": "tag", "name": "Get_wifi_object_sta_security_parameter", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl.c", "pattern": "/^wifi_vap_security_t * Get_wifi_object_sta_security_parameter(uint8_t vapIndex)$/", "language": "C", "typeref": "typename:wifi_vap_security_t *", "kind": "function", "signature": "(uint8_t vapIndex)"}, {"_type": "tag", "name": "Hotspot_APIsolation_Set", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl.c", "pattern": "/^void Hotspot_APIsolation_Set(int apIns)$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(int apIns)"}, {"_type": "tag", "name": "Load_Hotspot_APIsolation_Settings", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl.c", "pattern": "/^void Load_Hotspot_APIsolation_Settings(void)$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(void)"}, {"_type": "tag", "name": "ONEWIFI_FR_FLAG", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl.c", "pattern": "/^#define ONEWIFI_FR_FLAG /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "__anon6d2afef70108", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl.c", "pattern": "/^typedef struct {$/", "file": true, "language": "C", "kind": "struct"}, {"_type": "tag", "name": "__anon6d2afef70208", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl.c", "pattern": "/^typedef struct{$/", "file": true, "language": "C", "kind": "struct"}, {"_type": "tag", "name": "app_get_ap_assoc_dev_diag_res3_fn", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl.c", "pattern": "/^    app_get_ap_assoc_dev_diag_res3_t app_get_ap_assoc_dev_diag_res3_fn;\t\t$/", "file": true, "language": "C", "typeref": "typename:app_get_ap_assoc_dev_diag_res3_t", "kind": "member", "scope": "__anon6d2afef70108", "scopeKind": "struct"}, {"_type": "tag", "name": "app_get_ap_assoc_dev_diag_res3_t", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl.c", "pattern": "/^typedef int (* app_get_ap_assoc_dev_diag_res3_t)(int ap_index, $/", "file": true, "language": "C", "typeref": "typename:int (*)(int ap_index,wifi_associated_dev3_t * assoc_dev_array,unsigned int * output_array_size)", "kind": "typedef"}, {"_type": "tag", "name": "app_get_neighbor_ap2_fn", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl.c", "pattern": "/^    app_get_neighbor_ap2_t           app_get_neighbor_ap2_fn;$/", "file": true, "language": "C", "typeref": "typename:app_get_neighbor_ap2_t", "kind": "member", "scope": "__anon6d2afef70108", "scopeKind": "struct"}, {"_type": "tag", "name": "app_get_neighbor_ap2_t", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl.c", "pattern": "/^typedef int (* app_get_neighbor_ap2_t) (int radio_index, $/", "file": true, "language": "C", "typeref": "typename:int (*)(int radio_index,wifi_neighbor_ap2_t * neighbor_results,unsigned int * output_array_size)", "kind": "typedef"}, {"_type": "tag", "name": "app_get_radio_channel_stats_fn", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl.c", "pattern": "/^    app_get_radio_channel_stats_t    app_get_radio_channel_stats_fn;$/", "file": true, "language": "C", "typeref": "typename:app_get_radio_channel_stats_t", "kind": "member", "scope": "__anon6d2afef70108", "scopeKind": "struct"}, {"_type": "tag", "name": "app_get_radio_channel_stats_t", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl.c", "pattern": "/^typedef int (* app_get_radio_channel_stats_t) (int radio_index, $/", "file": true, "language": "C", "typeref": "typename:int (*)(int radio_index,wifi_channelStats_t * channel_stats_array,int * array_size)", "kind": "typedef"}, {"_type": "tag", "name": "app_get_radio_traffic_stats_fn", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl.c", "pattern": "/^    app_get_radio_traffic_stats_t    app_get_radio_traffic_stats_fn;$/", "file": true, "language": "C", "typeref": "typename:app_get_radio_traffic_stats_t", "kind": "member", "scope": "__anon6d2afef70108", "scopeKind": "struct"}, {"_type": "tag", "name": "app_get_radio_traffic_stats_t", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl.c", "pattern": "/^typedef int (* app_get_radio_traffic_stats_t) (int radio_index, $/", "file": true, "language": "C", "typeref": "typename:int (*)(int radio_index,wifi_radioTrafficStats2_t * radio_traffic_stats)", "kind": "typedef"}, {"_type": "tag", "name": "app_info", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl.c", "pattern": "/^    wifi_app_info_t *app_info;$/", "file": true, "language": "C", "typeref": "typename:wifi_app_info_t *", "kind": "member", "scope": "__anon6d2afef70208", "scopeKind": "struct"}, {"_type": "tag", "name": "captive_portal_check", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl.c", "pattern": "/^int captive_portal_check(void)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(void)"}, {"_type": "tag", "name": "channel_change_callback", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl.c", "pattern": "/^void channel_change_callback(wifi_channel_change_event_t radio_channel_param)$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(wifi_channel_change_event_t radio_channel_param)"}, {"_type": "tag", "name": "check_for_greylisted_mac_filter", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl.c", "pattern": "/^bool check_for_greylisted_mac_filter(void)$/", "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(void)"}, {"_type": "tag", "name": "check_log_upload_cron_job", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl.c", "pattern": "/^void check_log_upload_cron_job()$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "check_sta_ext_connection_status", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl.c", "pattern": "/^bool check_sta_ext_connection_status(void)$/", "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(void)"}, {"_type": "tag", "name": "check_wifi_csa_sched_timeout_active_status", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl.c", "pattern": "/^bool check_wifi_csa_sched_timeout_active_status(wifi_ctrl_t *l_ctrl)$/", "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(wifi_ctrl_t * l_ctrl)"}, {"_type": "tag", "name": "check_wifi_radio_sched_timeout_active_status", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl.c", "pattern": "/^bool check_wifi_radio_sched_timeout_active_status(wifi_ctrl_t *l_ctrl)$/", "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(wifi_ctrl_t * l_ctrl)"}, {"_type": "tag", "name": "check_wifi_vap_sched_timeout_active_status", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl.c", "pattern": "/^bool check_wifi_vap_sched_timeout_active_status(wifi_ctrl_t *l_ctrl, BOOL (*cb)(UINT apIndex))$/", "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(wifi_ctrl_t * l_ctrl,BOOL (* cb)(UINT apIndex))"}, {"_type": "tag", "name": "convert_radio_index_to_band_str", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl.c", "pattern": "/^char *convert_radio_index_to_band_str(UINT radioIndex)$/", "language": "C", "typeref": "typename:char *", "kind": "function", "signature": "(UINT radioIndex)"}, {"_type": "tag", "name": "convert_radio_index_to_band_str_g", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl.c", "pattern": "/^char* convert_radio_index_to_band_str_g(UINT radioIndex)$/", "language": "C", "typeref": "typename:char *", "kind": "function", "signature": "(UINT radioIndex)"}, {"_type": "tag", "name": "ctrl_queue_loop", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl.c", "pattern": "/^void ctrl_queue_loop(wifi_ctrl_t *ctrl)$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(wifi_ctrl_t * ctrl)"}, {"_type": "tag", "name": "ctrl_queue_timeout_scheduler_tasks", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl.c", "pattern": "/^static void ctrl_queue_timeout_scheduler_tasks(wifi_ctrl_t *ctrl)$/", "file": true, "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(wifi_ctrl_t * ctrl)"}, {"_type": "tag", "name": "deinit_wifi_ctrl", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl.c", "pattern": "/^void deinit_wifi_ctrl(wifi_ctrl_t *ctrl)$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(wifi_ctrl_t * ctrl)"}, {"_type": "tag", "name": "find_radio_config_by_index", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl.c", "pattern": "/^rdk_wifi_radio_t* find_radio_config_by_index(uint8_t index)$/", "language": "C", "typeref": "typename:rdk_wifi_radio_t *", "kind": "function", "signature": "(uint8_t index)"}, {"_type": "tag", "name": "getMaxNumberVAPsPerRadio", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl.c", "pattern": "/^UINT getMaxNumberVAPsPerRadio(UINT radioIndex)$/", "language": "C", "typeref": "typename:UINT", "kind": "function", "signature": "(UINT radioIndex)"}, {"_type": "tag", "name": "getNumberRadios", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl.c", "pattern": "/^UINT getNumberRadios()$/", "language": "C", "typeref": "typename:UINT", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "getNumberVAPsPerRadio", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl.c", "pattern": "/^UINT getNumberVAPsPerRadio(UINT radioIndex)$/", "language": "C", "typeref": "typename:UINT", "kind": "function", "signature": "(UINT radioIndex)"}, {"_type": "tag", "name": "getPrivateApFromRadioIndex", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl.c", "pattern": "/^UINT getPrivateApFromRadioIndex(UINT radioIndex)$/", "language": "C", "typeref": "typename:UINT", "kind": "function", "signature": "(UINT radioIndex)"}, {"_type": "tag", "name": "getRadioCapability", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl.c", "pattern": "/^wifi_radio_capabilities_t *getRadioCapability(UINT radioIndex)$/", "language": "C", "typeref": "typename:wifi_radio_capabilities_t *", "kind": "function", "signature": "(UINT radioIndex)"}, {"_type": "tag", "name": "getRadioIndexFromAp", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl.c", "pattern": "/^UINT getRadioIndexFromAp(UINT apIndex)$/", "language": "C", "typeref": "typename:UINT", "kind": "function", "signature": "(UINT apIndex)"}, {"_type": "tag", "name": "getRadioOperationParam", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl.c", "pattern": "/^wifi_radio_operationParam_t *getRadioOperationParam(UINT radioIndex)$/", "language": "C", "typeref": "typename:wifi_radio_operationParam_t *", "kind": "function", "signature": "(UINT radioIndex)"}, {"_type": "tag", "name": "getRdkVapInfo", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl.c", "pattern": "/^rdk_wifi_vap_info_t *getRdkVapInfo(UINT apIndex)$/", "language": "C", "typeref": "typename:rdk_wifi_vap_info_t *", "kind": "function", "signature": "(UINT apIndex)"}, {"_type": "tag", "name": "getRdkWifiVap", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl.c", "pattern": "/^rdk_wifi_vap_map_t *getRdkWifiVap(UINT radioIndex)$/", "language": "C", "typeref": "typename:rdk_wifi_vap_map_t *", "kind": "function", "signature": "(UINT radioIndex)"}, {"_type": "tag", "name": "getTotalNumberVAPs", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl.c", "pattern": "/^UINT getTotalNumberVAPs()$/", "language": "C", "typeref": "typename:UINT", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "getVAPArrayIndexFromVAPIndex", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl.c", "pattern": "/^int getVAPArrayIndexFromVAPIndex(unsigned int apIndex, unsigned int *vap_array_index)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(unsigned int apIndex,unsigned int * vap_array_index)"}, {"_type": "tag", "name": "getVAPIndexFromName", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl.c", "pattern": "/^int getVAPIndexFromName(CHAR *vapName, UINT *apIndex)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(CHAR * vapName,UINT * apIndex)"}, {"_type": "tag", "name": "getVAPName", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl.c", "pattern": "/^CHAR* getVAPName(UINT apIndex)$/", "language": "C", "typeref": "typename:CHAR *", "kind": "function", "signature": "(UINT apIndex)"}, {"_type": "tag", "name": "getVapInfo", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl.c", "pattern": "/^wifi_vap_info_t *getVapInfo(UINT apIndex)$/", "language": "C", "typeref": "typename:wifi_vap_info_t *", "kind": "function", "signature": "(UINT apIndex)"}, {"_type": "tag", "name": "get_Uptime", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl.c", "pattern": "/^unsigned int get_Uptime(void)$/", "language": "C", "typeref": "typename:unsigned int", "kind": "function", "signature": "(void)"}, {"_type": "tag", "name": "get_action_frame_evt_params", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl.c", "pattern": "/^void get_action_frame_evt_params(uint8_t *frame, uint32_t len, frame_data_t *mgmt_frame, wifi_ev/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(uint8_t * frame,uint32_t len,frame_data_t * mgmt_frame,wifi_event_subtype_t * evt_subtype)"}, {"_type": "tag", "name": "get_ap_index_from_clientmac", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl.c", "pattern": "/^int get_ap_index_from_clientmac(mac_address_t mac_addr)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(mac_address_t mac_addr)"}, {"_type": "tag", "name": "get_ctrl_rfc_parameters", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl.c", "pattern": "/^wifi_rfc_dml_parameters_t* get_ctrl_rfc_parameters(void)$/", "language": "C", "typeref": "typename:wifi_rfc_dml_parameters_t *", "kind": "function", "signature": "(void)"}, {"_type": "tag", "name": "get_device_config_list", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl.c", "pattern": "/^int get_device_config_list(char *d_list, int size, char *str)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(char * d_list,int size,char * str)"}, {"_type": "tag", "name": "get_gas_init_frame_evt_params", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl.c", "pattern": "/^void get_gas_init_frame_evt_params(uint8_t *frame, uint32_t len, frame_data_t *mgmt_frame, wifi_/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(uint8_t * frame,uint32_t len,frame_data_t * mgmt_frame,wifi_event_subtype_t * evt_subtype)"}, {"_type": "tag", "name": "get_multi_radio_dml_parameters", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl.c", "pattern": "/^int get_multi_radio_dml_parameters(uint8_t radio_index, char *str, void *value)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(uint8_t radio_index,char * str,void * value)"}, {"_type": "tag", "name": "get_multi_vap_dml_parameters", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl.c", "pattern": "/^int get_multi_vap_dml_parameters(uint8_t ap_index, char *str, void *value)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(uint8_t ap_index,char * str,void * value)"}, {"_type": "tag", "name": "get_notify_wifi_from_psm", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl.c", "pattern": "/^bool get_notify_wifi_from_psm(char *PsmParamName)$/", "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(char * PsmParamName)"}, {"_type": "tag", "name": "get_rbus_param", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl.c", "pattern": "/^int get_rbus_param(rbusHandle_t rbus_handle, rbus_data_type_t data_type, const char *paramNames,/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(rbusHandle_t rbus_handle,rbus_data_type_t data_type,const char * paramNames,void * data_value)"}, {"_type": "tag", "name": "get_sta_ssid_from_radio_config_by_radio_index", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl.c", "pattern": "/^int get_sta_ssid_from_radio_config_by_radio_index(unsigned int radio_index, ssid_t ssid)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(unsigned int radio_index,ssid_t ssid)"}, {"_type": "tag", "name": "get_vap_dml_parameters", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl.c", "pattern": "/^int get_vap_dml_parameters(char *str, void *value)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(char * str,void * value)"}, {"_type": "tag", "name": "get_vap_interface_bridge_name", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl.c", "pattern": "/^int get_vap_interface_bridge_name(unsigned int vap_index, char *bridge_name)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(unsigned int vap_index,char * bridge_name)"}, {"_type": "tag", "name": "get_wifi_db_rfc_parameters", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl.c", "pattern": "/^wifi_rfc_dml_parameters_t* get_wifi_db_rfc_parameters(void)$/", "language": "C", "typeref": "typename:wifi_rfc_dml_parameters_t *", "kind": "function", "signature": "(void)"}, {"_type": "tag", "name": "get_wifi_dml_parameters", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl.c", "pattern": "/^wifi_dml_parameters_t* get_wifi_dml_parameters(void)$/", "language": "C", "typeref": "typename:wifi_dml_parameters_t *", "kind": "function", "signature": "(void)"}, {"_type": "tag", "name": "get_wifi_hal_cap_prop", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl.c", "pattern": "/^wifi_platform_property_t *get_wifi_hal_cap_prop(void)$/", "language": "C", "typeref": "typename:wifi_platform_property_t *", "kind": "function", "signature": "(void)"}, {"_type": "tag", "name": "get_wifi_mesh_sta_network_status", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl.c", "pattern": "/^int get_wifi_mesh_sta_network_status(uint8_t vapIndex, bool *status)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(uint8_t vapIndex,bool * status)"}, {"_type": "tag", "name": "get_wifi_mesh_vap_enable_status", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl.c", "pattern": "/^bool get_wifi_mesh_vap_enable_status(void)$/", "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(void)"}, {"_type": "tag", "name": "get_wifi_object_sta_parameter", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl.c", "pattern": "/^wifi_back_haul_sta_t * get_wifi_object_sta_parameter(uint8_t vapIndex)$/", "language": "C", "typeref": "typename:wifi_back_haul_sta_t *", "kind": "function", "signature": "(uint8_t vapIndex)"}, {"_type": "tag", "name": "get_wifi_public_vap_enable_status", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl.c", "pattern": "/^bool get_wifi_public_vap_enable_status(void)$/", "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(void)"}, {"_type": "tag", "name": "get_wifi_rfc_parameters", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl.c", "pattern": "/^int  get_wifi_rfc_parameters(char *str, void *value)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(char * str,void * value)"}, {"_type": "tag", "name": "get_wifi_vap_network_status", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl.c", "pattern": "/^int get_wifi_vap_network_status(uint8_t vapIndex, bool *status)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(uint8_t vapIndex,bool * status)"}, {"_type": "tag", "name": "get_wifidb_gas_config", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl.c", "pattern": "/^wifi_GASConfiguration_t* get_wifidb_gas_config(void)$/", "language": "C", "typeref": "typename:wifi_GASConfiguration_t *", "kind": "function", "signature": "(void)"}, {"_type": "tag", "name": "get_wifidb_radio_feat_map", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl.c", "pattern": "/^wifi_radio_feature_param_t* get_wifidb_radio_feat_map(uint8_t radio_index)$/", "language": "C", "typeref": "typename:wifi_radio_feature_param_t *", "kind": "function", "signature": "(uint8_t radio_index)"}, {"_type": "tag", "name": "get_wifidb_radio_index", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl.c", "pattern": "/^wifi_radio_index_t get_wifidb_radio_index(uint8_t radio_index)$/", "language": "C", "typeref": "typename:wifi_radio_index_t", "kind": "function", "signature": "(uint8_t radio_index)"}, {"_type": "tag", "name": "get_wifidb_radio_map", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl.c", "pattern": "/^wifi_radio_operationParam_t* get_wifidb_radio_map(uint8_t radio_index)$/", "language": "C", "typeref": "typename:wifi_radio_operationParam_t *", "kind": "function", "signature": "(uint8_t radio_index)"}, {"_type": "tag", "name": "get_wifidb_rdk_vap_info", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl.c", "pattern": "/^rdk_wifi_vap_info_t* get_wifidb_rdk_vap_info(uint8_t vapIndex)$/", "language": "C", "typeref": "typename:rdk_wifi_vap_info_t *", "kind": "function", "signature": "(uint8_t vapIndex)"}, {"_type": "tag", "name": "get_wifidb_rdk_vaps", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl.c", "pattern": "/^rdk_wifi_vap_info_t* get_wifidb_rdk_vaps(uint8_t radio_index)$/", "language": "C", "typeref": "typename:rdk_wifi_vap_info_t *", "kind": "function", "signature": "(uint8_t radio_index)"}], "hash": "27b425ff287294b166e4492a14e946d2", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl.c", "fields": [{"name": "app_get_ap_assoc_dev_diag_res3_t app_get_ap_assoc_dev_diag_res3_fn", "scope": "__anon6d2afef70108", "scopeKind": "struct", "description": "unavailable"}, {"name": "app_get_neighbor_ap2_t app_get_neighbor_ap2_fn", "scope": "__anon6d2afef70108", "scopeKind": "struct", "description": "unavailable"}, {"name": "app_get_radio_channel_stats_t app_get_radio_channel_stats_fn", "scope": "__anon6d2afef70108", "scopeKind": "struct", "description": "unavailable"}, {"name": "app_get_radio_traffic_stats_t app_get_radio_traffic_stats_fn", "scope": "__anon6d2afef70108", "scopeKind": "struct", "description": "unavailable"}, {"name": "wifi_app_info_t * app_info", "scope": "__anon6d2afef70208", "scopeKind": "struct", "description": "unavailable"}], "revision_history": [{"19130": ""}]}