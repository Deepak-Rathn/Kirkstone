{"is_source_file": true, "format": "Shell script / Bash", "description": "This file is a shell script responsible for configuration management, including fetching configuration from a server, handling retries, managing telecommunication modules, and updating device settings. It includes environment setup, connection logic (direct or codebig), and post-retrieval processing.", "external_files": ["/etc/include.properties", "/etc/device.properties", "/etc/telemetry2_0.properties", "/etc/log_timestamp.sh", "/lib/rdk/getpartnerid.sh", "/lib/rdk/getaccountid.sh", "/lib/rdk/utils.sh", "/etc/mount-utils/getConfigFile.sh", "/etc/firmwareSched.sh", "/lib/rdk/dca_utility.sh"], "external_methods": ["getECMMac", "getErouterIPAddress", "getConfigFile", "echo_t"], "published": [], "classes": [], "methods": [{"name": "getFWVersion", "description": "Retrieves the firmware version from /version.txt by parsing the imagename line."}, {"name": "getBuildType", "description": "Returns the build type environment variable."}, {"name": "getECMMacAddress", "description": "Gets the ECM MAC address using the getECMMac external method and formats it."}, {"name": "getReceiverId", "description": "Reads the device ReceiverId from a specific file if it exists."}, {"name": "getControllerId", "description": "Returns a static ControllerId value."}, {"name": "getChannelMapId", "description": "Returns a static ChannelMap Id."}, {"name": "getVODId", "description": "Returns a static VOD Id."}, {"name": "IsDirectBlocked", "description": "Checks if the direct connection is blocked based on the last failure timestamp stored in a file."}, {"name": "get_Codebigconfig", "description": "Configures whether to use Codebig or direct connection based on system configuration."}, {"name": "useDirectRequest", "description": "Attempts to fetch configuration via a direct curl request with retries."}, {"name": "useCodebigRequest", "description": "Attempts to fetch configuration via Codebig with retries, handling authentication."}, {"name": "processJsonResponse", "description": "Parses the server JSON response and reformats it for further processing."}, {"name": "sendHttpRequestToServer", "description": "Performs HTTP request to fetch configuration, includes retry logic on failure."}, {"name": "dropbearRecovery", "description": "Restarts dropbear SSH server if missing."}, {"name": "t2Log", "description": "Logs timestamped messages for telemetry."}], "calls": ["getECMMac", "getErouterIPAddress", "getConfigFile", "echo_t", "/bin/timestamp", "ps", "kill", "sleep", "kill", "scpr", "grep", "awk", "sed", "rm", "touch", "date", "pidof", "syscfg", "ssh", "cd", "ps", "expr"], "search-terms": ["DCMscript.sh", "configuration fetch", "retry logic", "telemetry", "Xconf", "Codebig", "direct connection", "firmwareSched", "dropbear", "telemetry path", "syscfg", "getpartnerid", "getaccountid"], "state": 2, "file_id": 7145, "knowledge_revision": 20227, "git_revision": "", "hash": "a71465f0fb4a215552d38ef18bf0e110", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "rdkb/components/opensource/ccsp/sysint/devicerpi/lib/rdk/DCMscript.sh", "revision_history": [{"20227": ""}]}