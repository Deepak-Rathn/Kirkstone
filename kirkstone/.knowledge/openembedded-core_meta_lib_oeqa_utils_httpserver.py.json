{"is_source_file": true, "format": "Python", "description": "This file implements an HTTP server utility with capabilities to start and stop the server, handle requests, and manage server processes, primarily used in testing or development environments.", "external_files": ["http.server", "multiprocessing", "os", "traceback", "signal", "socketserver"], "external_methods": ["http.server.SimpleHTTPRequestHandler.log_message", "signal.getsignal", "signal.signal", "signal.SIGTERM"], "published": ["HTTPServer", "HTTPRequestHandler", "HTTPService"], "classes": [{"name": "HTTPServer", "description": "A threaded HTTP server class that extends the standard library's HTTPServer with threading capabilities."}, {"name": "HTTPRequestHandler", "description": "A custom request handler that disables logging for requests, inheriting from SimpleHTTPRequestHandler."}, {"name": "HTTPService", "description": "A high-level class that manages the lifecycle of the HTTP server, including starting and stopping the server with process management and signal handling."}], "methods": [{"name": "server_start(self, root_dir, logger)", "description": "Changes the working directory to serve files from the specified root directory and starts the server loop.", "scope": "HTTPServer", "scopeKind": "class"}, {"name": "log_message(self, format_str, *args)", "description": "Overrides the default logging behavior to suppress log messages.", "scope": "HTTPRequestHandler", "scopeKind": "class"}, {"name": "__init__(self, root_dir, host='', port=0, logger=None)", "description": "Initializes the HTTPService with root directory, host, port, and logger.", "scope": "HTTPService", "scopeKind": "class"}, {"name": "start(self)", "description": "Starts the HTTP server in a separate process, handling signal management and logging.", "scope": "HTTPService", "scopeKind": "class"}, {"name": "stop(self)", "description": "Stops the running HTTP server and terminates the server process, with optional logging.", "scope": "HTTPService", "scopeKind": "class"}], "calls": ["self.server.server_start", "os.chdir", "self.serve_forever", "signal.getsignal", "signal.signal", "self.process.start", "self.server.server_close", "self.process.terminate", "self.process.join"], "search-terms": ["HTTPServer", "HTTPRequestHandler", "HTTPService", "multithreading", "process management", "file server", "signal handling", "Python HTTP server"], "state": 2, "file_id": 1882, "knowledge_revision": 15027, "git_revision": "", "ctags": [{"_type": "tag", "name": "HTTPRequestHandler", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oeqa/utils/httpserver.py", "pattern": "/^class HTTPRequestHandler(http.server.SimpleHTTPRequestHandler):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "HTTPServer", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oeqa/utils/httpserver.py", "pattern": "/^class HTTPServer(ThreadingMixIn, http.server.HTTPServer):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "HTTPService", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oeqa/utils/httpserver.py", "pattern": "/^class HTTPService(object):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oeqa/utils/httpserver.py", "pattern": "/^    def __init__(self, root_dir, host='', port=0, logger=None):$/", "language": "Python", "kind": "member", "signature": "(self, root_dir, host='', port=0, logger=None)", "scope": "HTTPService", "scopeKind": "class"}, {"_type": "tag", "name": "log_message", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oeqa/utils/httpserver.py", "pattern": "/^    def log_message(self, format_str, *args):$/", "language": "Python", "kind": "member", "signature": "(self, format_str, *args)", "scope": "HTTPRequestHandler", "scopeKind": "class"}, {"_type": "tag", "name": "server_start", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oeqa/utils/httpserver.py", "pattern": "/^    def server_start(self, root_dir, logger):$/", "language": "Python", "kind": "member", "signature": "(self, root_dir, logger)", "scope": "HTTPServer", "scopeKind": "class"}, {"_type": "tag", "name": "start", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oeqa/utils/httpserver.py", "pattern": "/^    def start(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "HTTPService", "scopeKind": "class"}, {"_type": "tag", "name": "stop", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oeqa/utils/httpserver.py", "pattern": "/^    def stop(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "HTTPService", "scopeKind": "class"}], "hash": "d64dcb7e01928581710a8bdaf7b7e011", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "openembedded-core/meta/lib/oeqa/utils/httpserver.py", "revision_history": [{"15027": ""}]}