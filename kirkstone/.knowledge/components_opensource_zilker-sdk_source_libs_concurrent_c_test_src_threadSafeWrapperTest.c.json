{"is_source_file": true, "format": "C", "description": "This file contains unit tests for the icThreadSafeWrapper component in C, utilizing the cmocka testing framework. It tests thread safety, auto and manual assignment, modification, release, and safety of concurrent operations.", "external_files": ["<stddef.h>", "<setjmp.h>", "<stdarg.h>", "<errno.h>", "<stdbool.h>", "<stdint.h>", "<string.h>", "<icLog/logging.h>", "<icConcurrent/icThreadSafeWrapper.h>", "<icConcurrent/threadUtils.h>", "<icConcurrent/timedWait.h>", "<pthread.h>", "// implied by pthread_mutex_t and pthread_cond_t usage"], "external_methods": ["cmocka.h:cmocka_unit_test", "cmocka-run_group_tests", "initIcLogger", "setIcLogPriorityFilter", "closeIcLogger", "createThread", "incrementalCondTimedWait", "initTimedWaitCond"], "published": [], "classes": [], "methods": [{"name": "void * autoAssignFunc()", "description": "Returns a strdup'ed string with the initial value prefix", "scope": "", "scopeKind": ""}, {"name": "bool checkReleaseFunc(void * item)", "description": "Function to determine whether the item should be released, controlled by doRelease flag", "scope": "", "scopeKind": ""}, {"name": "void modifyFunc(void * item,void * context)", "description": "Modifies the last character of the string to a specified character", "scope": "", "scopeKind": ""}, {"name": "void readFunc(const void * item,const void * context)", "description": "Assertion function to verify item content matches expected context", "scope": "", "scopeKind": ""}, {"name": "void blockingReadFunc(const void * item,const void * context)", "description": "Performs a blocking read with synchronization and verification", "scope": "", "scopeKind": ""}, {"name": "void * readThread(void * context)", "description": "Thread function for performing a wrapped read operation", "scope": "", "scopeKind": ""}, {"name": "void test_asyncModifyAndThenRead(void ** state)", "description": "Tests asynchronous modification followed by reading the value", "scope": "", "scopeKind": ""}, {"name": "void test_syncModifyAndThenRead(void ** state)", "description": "Tests synchronous modification followed by reading the value", "scope": "", "scopeKind": ""}, {"name": "void test_asyncModifyAndThenReadWithAutoAssign(void ** state)", "description": "Tests auto-assign and async modification, then read", "scope": "", "scopeKind": ""}, {"name": "void test_syncModifyAndThenReadWithAutoAssign(void ** state)", "description": "Tests auto-assign and sync modification, then read", "scope": "", "scopeKind": ""}, {"name": "void test_asyncModifyWhileReadingIsDelayed(void ** state)", "description": "Tests that modifications while reading are correctly delayed and applied", "scope": "", "scopeKind": ""}, {"name": "void test_releaseWhileReadingIsSafe(void ** state)", "description": "Ensures safe release of wrapper during active reads", "scope": "", "scopeKind": ""}, {"name": "void test_assignIfReleased(void ** state)", "description": "Tests conditional assignment if item is released", "scope": "", "scopeKind": ""}, {"name": "void * conditionAssignFunc()", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int main(int argc,const char ** argv)", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["threadSafeWrapperReadItem", "threadSafeWrapperAssignItem", "threadSafeWrapperEnqueueModification", "threadSafeWrapperModifyItem", "threadSafeWrapperReleaseItem"], "search-terms": ["threadSafeWrapper", "autoAssign", "modifyFunc", "concurrent", "unitTest", "multithreading", "locking", "cmocka", "test case"], "state": 2, "file_id": 878, "knowledge_revision": 14038, "git_revision": "", "ctags": [{"_type": "tag", "name": "INITIAL_VALUE", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/test/src/threadSafeWrapperTest.c", "pattern": "/^#define INITIAL_VALUE /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "INITIAL_VALUE_PREFIX", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/test/src/threadSafeWrapperTest.c", "pattern": "/^#define INITIAL_VALUE_PREFIX /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "LOG_TAG", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/test/src/threadSafeWrapperTest.c", "pattern": "/^#define LOG_TAG /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "autoAssignFunc", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/test/src/threadSafeWrapperTest.c", "pattern": "/^static void *autoAssignFunc()$/", "file": true, "language": "C", "typeref": "typename:void *", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "blockingReadFunc", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/test/src/threadSafeWrapperTest.c", "pattern": "/^static void blockingReadFunc(const void *item, const void *context)$/", "file": true, "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(const void * item,const void * context)"}, {"_type": "tag", "name": "checkReleaseFunc", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/test/src/threadSafeWrapperTest.c", "pattern": "/^static bool checkReleaseFunc(void *item)$/", "file": true, "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(void * item)"}, {"_type": "tag", "name": "conditionAssignFunc", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/test/src/threadSafeWrapperTest.c", "pattern": "/^static void *conditionAssignFunc()$/", "file": true, "language": "C", "typeref": "typename:void *", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "continueReadCond", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/test/src/threadSafeWrapperTest.c", "pattern": "/^static pthread_cond_t continueReadCond;$/", "file": true, "language": "C", "typeref": "typename:pthread_cond_t", "kind": "variable"}, {"_type": "tag", "name": "doRelease", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/test/src/threadSafeWrapperTest.c", "pattern": "/^static bool doRelease = false;$/", "file": true, "language": "C", "typeref": "typename:bool", "kind": "variable"}, {"_type": "tag", "name": "main", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/test/src/threadSafeWrapperTest.c", "pattern": "/^int main(int argc, const char **argv)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(int argc,const char ** argv)"}, {"_type": "tag", "name": "modifyFunc", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/test/src/threadSafeWrapperTest.c", "pattern": "/^static void modifyFunc(void *item, void *context)$/", "file": true, "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(void * item,void * context)"}, {"_type": "tag", "name": "mutex", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/test/src/threadSafeWrapperTest.c", "pattern": "/^static pthread_mutex_t mutex = PTHREAD_MUTEX_INITIALIZER;$/", "file": true, "language": "C", "typeref": "typename:pthread_mutex_t", "kind": "variable"}, {"_type": "tag", "name": "readFunc", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/test/src/threadSafeWrapperTest.c", "pattern": "/^static void readFunc(const void *item, const void *context)$/", "file": true, "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(const void * item,const void * context)"}, {"_type": "tag", "name": "readStartCond", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/test/src/threadSafeWrapperTest.c", "pattern": "/^static pthread_cond_t readStartCond;$/", "file": true, "language": "C", "typeref": "typename:pthread_cond_t", "kind": "variable"}, {"_type": "tag", "name": "readThread", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/test/src/threadSafeWrapperTest.c", "pattern": "/^static void *readThread(void *context)$/", "file": true, "language": "C", "typeref": "typename:void *", "kind": "function", "signature": "(void * context)"}, {"_type": "tag", "name": "test_assignIfReleased", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/test/src/threadSafeWrapperTest.c", "pattern": "/^static void test_assignIfReleased(void **state)$/", "file": true, "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(void ** state)"}, {"_type": "tag", "name": "test_asyncModifyAndThenRead", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/test/src/threadSafeWrapperTest.c", "pattern": "/^static void test_asyncModifyAndThenRead(void **state)$/", "file": true, "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(void ** state)"}, {"_type": "tag", "name": "test_asyncModifyAndThenReadWithAutoAssign", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/test/src/threadSafeWrapperTest.c", "pattern": "/^static void test_asyncModifyAndThenReadWithAutoAssign(void **state)$/", "file": true, "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(void ** state)"}, {"_type": "tag", "name": "test_asyncModifyWhileReadingIsDelayed", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/test/src/threadSafeWrapperTest.c", "pattern": "/^static void test_asyncModifyWhileReadingIsDelayed(void **state)$/", "file": true, "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(void ** state)"}, {"_type": "tag", "name": "test_releaseWhileReadingIsSafe", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/test/src/threadSafeWrapperTest.c", "pattern": "/^static void test_releaseWhileReadingIsSafe(void **state)$/", "file": true, "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(void ** state)"}, {"_type": "tag", "name": "test_syncModifyAndThenRead", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/test/src/threadSafeWrapperTest.c", "pattern": "/^static void test_syncModifyAndThenRead(void **state)$/", "file": true, "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(void ** state)"}, {"_type": "tag", "name": "test_syncModifyAndThenReadWithAutoAssign", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/test/src/threadSafeWrapperTest.c", "pattern": "/^static void test_syncModifyAndThenReadWithAutoAssign(void **state)$/", "file": true, "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(void ** state)"}], "hash": "679c4ab3a73e8bfdbf9c339868998d39", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "components/opensource/zilker-sdk/source/libs/concurrent/c/test/src/threadSafeWrapperTest.c", "fields": [{"name": "pthread_cond_t continueReadCond", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "bool doRelease", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "pthread_mutex_t mutex", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "pthread_cond_t readStartCond", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"14038": ""}]}