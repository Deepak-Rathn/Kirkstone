{"is_source_file": true, "format": "C", "description": "This file contains source code for telemetry and log processing functionalities in C, including parsing log files, extracting patterns, handling error codes, and generating JSON results.", "external_files": ["dcalist.h", "dcautil.h", "legacyutils.h", "t2log_wrapper.h", "t2common.h", "busInterface.h", "glib.h", "cjson/cJSON.h"], "external_methods": ["getLogLine", "updateLogSeek", "clearPCNodes", "searchPCNode", "insertPCNode", "addToSearchResult", "addToJson", "Vector_PushBack", "Vector_Create", "Vector_Size", "Vector_At", "initProperties", "isPropsInitialized", "initSearchResultJson", "getParameterValue", "getLoadAvg", "saveTopOutput", "getProcUsage", "removeTopOutput", "updateLastSeekval"], "published": ["getDCAResultsInJson", "getDCAResultsInVector", "freeGResult"], "classes": [], "methods": [{"name": "int processTopPattern(char * logfile,GList * pchead,int pcIndex,Vector * grepResultList)", "description": "Processes a log file to retrieve load averages and process usage statistics based on patterns in the log entries.", "scope": "", "scopeKind": ""}, {"name": "void appendData(pcdata_t * dst,const char * src)", "description": "Appends string data to a telemetry node, allocating or reallocating memory as needed.", "scope": "", "scopeKind": ""}, {"name": "T2ERROR processTr181Objects(char * logfile,GList * pchead,int pcIndex)", "description": "Processes TR181 objects via ccsp message bus, retrieving parameter values and appending them to telemetry nodes.", "scope": "", "scopeKind": ""}, {"name": "void addToJson(GList * pchead)", "description": "Adds telemetry node data to a JSON object for external consumption.", "scope": "", "scopeKind": ""}, {"name": "int addToVector(GList * pchead,Vector * grepResultList)", "description": "Adds parsed pattern results as GrepResult entries into a vector for further processing.", "scope": "", "scopeKind": ""}, {"name": "int getSplitParameterValue(char * line,pcdata_t * pcnode)", "description": "Extracts a split parameter's value from a log line based on pattern matching.", "scope": "", "scopeKind": ""}, {"name": "int getErrorCode(char * str,char * ec)", "description": "Extracts RDK error codes from log strings, returning standardized codes.", "scope": "", "scopeKind": ""}, {"name": "int handleRDKErrCodes(GList ** rdkec_head,char * line)", "description": "Handles RDK error codes found in log lines, updating the error code list accordingly.", "scope": "", "scopeKind": ""}, {"name": "int processCountPattern(hash_map_t * logSeekMap,char * logfile,GList * pchead,int pcIndex,GList ** rdkec_head,int * firstSeekFromEOF,int exec_count)", "description": "Processes log files to count occurrences of patterns and handle special error code patterns.", "scope": "", "scopeKind": ""}, {"name": "int processPattern(char ** prev_file,char * logfile,GList ** rdkec_head,GList * pchead,int pcIndex,Vector * grepResultList,hash_map_t * logSeekMap,int * firstSeekFromEOF,int exec_count)", "description": "Main pattern processing function that routes logs to specific handlers based on the filename.", "scope": "", "scopeKind": ""}, {"name": "char * strSplit(char * str,char * delim)", "description": "Splits a string based on a specified delimiter, used for processing log lines.", "scope": "", "scopeKind": ""}, {"name": "void getDType(char * filename,MarkerType mType,DType_t * dtype)", "description": "Determines the data type for a pattern based on filename and marker type.", "scope": "", "scopeKind": ""}, {"name": "int parseMarkerList(char * profileName,Vector * vMarkerList,Vector * grepResultList)", "description": "Parses a list of markers to process corresponding log patterns and generate telemetry results.", "scope": "", "scopeKind": ""}, {"name": "int getDCAResultsInJson(char * profileName,void * markerList,cJSON ** grepResultList)", "description": "Retrieves DCA telemetry results as a JSON object for a given profile.", "scope": "", "scopeKind": ""}, {"name": "int getDCAResultsInVector(char * profileName,Vector * vecMarkerList,Vector ** grepResultList)", "description": "Retrieves DCA telemetry results as a vector of GrepResult objects for a given profile.", "scope": "", "scopeKind": ""}, {"name": "void freeGResult(void * data)", "description": "Frees memory allocated for a GrepResult object.", "scope": "", "scopeKind": ""}], "calls": ["getLogLine", "updateLogSeek", "clearPCNodes", "searchPCNode", "insertPCNode", "addToSearchResult", "addToJson", "Vector_PushBack", "Vector_Create", "Vector_Size", "Vector_At", "initProperties", "isPropsInitialized", "initSearchResultJson", "getParameterValue", "getLoadAvg", "saveTopOutput", "getProcUsage", "removeTopOutput", "updateLastSeekval"], "search-terms": ["telemetry", "log processing", "pattern matching", "RDK error codes", "ccsp message bus", "top command parsing", "JSON output", "vector result collection", "multi-instance object handling"], "state": 2, "file_id": 12912, "knowledge_revision": 25823, "git_revision": "", "ctags": [{"_type": "tag", "name": "DELIMITER_SIZE", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/dcautil/dca.c", "pattern": "/^#define DELIMITER_SIZE /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "INVALID_COUNT", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/dcautil/dca.c", "pattern": "/^#define INVALID_COUNT /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "OBJ_DELIMITER", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/dcautil/dca.c", "pattern": "/^#define OBJ_DELIMITER /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "ROOT_JSON", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/dcautil/dca.c", "pattern": "/^cJSON *SEARCH_RESULT_JSON = NULL, *ROOT_JSON = NULL;$/", "language": "C", "typeref": "typename:cJSON *", "kind": "variable"}, {"_type": "tag", "name": "SEARCH_RESULT_JSON", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/dcautil/dca.c", "pattern": "/^cJSON *SEARCH_RESULT_JSON = NULL, *ROOT_JSON = NULL;$/", "language": "C", "typeref": "typename:cJSON *", "kind": "variable"}, {"_type": "tag", "name": "TR181BUF_LENGTH", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/dcautil/dca.c", "pattern": "/^#define TR181BUF_LENGTH /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "addToJson", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/dcautil/dca.c", "pattern": "/^void addToJson(GList *pchead) {$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(GList * pchead)"}, {"_type": "tag", "name": "addToVector", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/dcautil/dca.c", "pattern": "/^static int addToVector(GList *pchead, Vector* grepResultList) {$/", "file": true, "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(GList * pchead,Vector * grepResultList)"}, {"_type": "tag", "name": "appendData", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/dcautil/dca.c", "pattern": "/^static void appendData(pcdata_t* dst, const char* src) {$/", "file": true, "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(pcdata_t * dst,const char * src)"}, {"_type": "tag", "name": "dcaMutex", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/dcautil/dca.c", "pattern": "/^static pthread_mutex_t dcaMutex = PTHREAD_MUTEX_INITIALIZER;$/", "file": true, "language": "C", "typeref": "typename:pthread_mutex_t", "kind": "variable"}, {"_type": "tag", "name": "freeGResult", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/dcautil/dca.c", "pattern": "/^void freeGResult(void *data)$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(void * data)"}, {"_type": "tag", "name": "getDCAResultsInJson", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/dcautil/dca.c", "pattern": "/^int getDCAResultsInJson(char* profileName, void* markerList, cJSON** grepResultList) {$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(char * profileName,void * markerList,cJSON ** grepResultList)"}, {"_type": "tag", "name": "getDCAResultsInVector", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/dcautil/dca.c", "pattern": "/^int getDCAResultsInVector(char* profileName, Vector* vecMarkerList, Vector** grepResultList) {$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(char * profileName,Vector * vecMarkerList,Vector ** grepResultList)"}, {"_type": "tag", "name": "getDType", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/dcautil/dca.c", "pattern": "/^void getDType(char *filename, MarkerType mType, DType_t *dtype) {$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(char * filename,MarkerType mType,DType_t * dtype)"}, {"_type": "tag", "name": "getErrorCode", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/dcautil/dca.c", "pattern": "/^int getErrorCode(char *str, char *ec) {$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(char * str,char * ec)"}, {"_type": "tag", "name": "getSplitParameterValue", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/dcautil/dca.c", "pattern": "/^static int getSplitParameterValue(char *line, pcdata_t *pcnode) {$/", "file": true, "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(char * line,pcdata_t * pcnode)"}, {"_type": "tag", "name": "handleRDKErrCodes", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/dcautil/dca.c", "pattern": "/^static int handleRDKErrCodes(GList **rdkec_head, char *line) {$/", "file": true, "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(GList ** rdkec_head,char * line)"}, {"_type": "tag", "name": "logPath", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/dcautil/dca.c", "pattern": "/^static char *logPath = NULL;$/", "file": true, "language": "C", "typeref": "typename:char *", "kind": "variable"}, {"_type": "tag", "name": "parseMarkerList", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/dcautil/dca.c", "pattern": "/^static int parseMarkerList(char* profileName, Vector* vMarkerList, Vector* grepResultList) {$/", "file": true, "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(char * profileName,Vector * vMarkerList,Vector * grepResultList)"}, {"_type": "tag", "name": "persistentPath", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/dcautil/dca.c", "pattern": "/^static char *persistentPath = NULL;$/", "file": true, "language": "C", "typeref": "typename:char *", "kind": "variable"}, {"_type": "tag", "name": "processCountPattern", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/dcautil/dca.c", "pattern": "/^static int processCountPattern(hash_map_t *logSeekMap, char *logfile, GList *pchead, int pcIndex/", "file": true, "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(hash_map_t * logSeekMap,char * logfile,GList * pchead,int pcIndex,GList ** rdkec_head,int * firstSeekFromEOF,int exec_count)"}, {"_type": "tag", "name": "processPattern", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/dcautil/dca.c", "pattern": "/^static int processPattern(char **prev_file, char *logfile, GList **rdkec_head, GList *pchead, in/", "file": true, "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(char ** prev_file,char * logfile,GList ** rdkec_head,GList * pchead,int pcIndex,Vector * grepResultList,hash_map_t * logSeekMap,int * firstSeekFromEOF,int exec_count)"}, {"_type": "tag", "name": "processTopPattern", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/dcautil/dca.c", "pattern": "/^int processTopPattern(char *logfile, GList *pchead, int pcIndex, Vector* grepResultList) {$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(char * logfile,GList * pchead,int pcIndex,Vector * grepResultList)"}, {"_type": "tag", "name": "processTr181Objects", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/dcautil/dca.c", "pattern": "/^static T2ERROR processTr181Objects(char *logfile, GList *pchead, int pcIndex) {$/", "file": true, "language": "C", "typeref": "typename:T2ERROR", "kind": "function", "signature": "(char * logfile,GList * pchead,int pcIndex)"}, {"_type": "tag", "name": "strSplit", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/dcautil/dca.c", "pattern": "/^char *strSplit(char *str, char *delim) {$/", "language": "C", "typeref": "typename:char *", "kind": "function", "signature": "(char * str,char * delim)"}, {"_type": "tag", "name": "topOutputMutex", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/dcautil/dca.c", "pattern": "/^static pthread_mutex_t topOutputMutex = PTHREAD_MUTEX_INITIALIZER;$/", "file": true, "language": "C", "typeref": "typename:pthread_mutex_t", "kind": "variable"}], "hash": "8d4e636acbd618a28022c6ea40b2f290", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "rdk/components/generic/telemetry/source/dcautil/dca.c", "fields": [{"name": "cJSON * ROOT_JSON", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "cJSON * SEARCH_RESULT_JSON", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "pthread_mutex_t dcaMutex", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "char * logPath", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "char * persistentPath", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "pthread_mutex_t topOutputMutex", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"25823": ""}]}