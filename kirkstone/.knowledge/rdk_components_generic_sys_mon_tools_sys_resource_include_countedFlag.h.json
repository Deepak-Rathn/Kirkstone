{"is_source_file": true, "format": "C++ header file", "description": "This file defines the class CountedFlag, which manages a boolean flag with reference counting, providing operators for assignment and comparison, as well as accessors for the flag state and the count.", "external_files": ["stdio.h"], "external_methods": [], "published": ["CountedFlag"], "classes": [{"name": "CountedFlag", "description": "A class encapsulating a boolean flag with reference counting, allowing safe sharing and management of the flag's state."}], "methods": [{"name": "CountedFlag(bool _flag)", "description": "Constructor initializing the flag with a boolean value and setting the count to 1.", "scope": "CountedFlag", "scopeKind": "class"}, {"name": "operator=", "description": "Assignment operator that updates the count based on the equality of flags and updates the flag if count drops to zero."}, {"name": "operator==", "description": "Equality operator comparing the flag values of two CountedFlag objects."}, {"name": "operator!=", "description": "Inequality operator comparing the flag values of two CountedFlag objects."}, {"name": "bool get() const", "description": "Returns the current boolean value of the flag.", "scope": "CountedFlag", "scopeKind": "class"}, {"name": "int counter() const", "description": "Returns the current reference count.", "scope": "CountedFlag", "scopeKind": "class"}, {"name": "bool operator !=(const CountedFlag & rhs)", "scope": "CountedFlag", "scopeKind": "class", "description": "unavailable"}, {"name": "CountedFlag & operator =(const CountedFlag & rhs)", "scope": "CountedFlag", "scopeKind": "class", "description": "unavailable"}, {"name": "bool operator ==(const CountedFlag & rhs)", "scope": "CountedFlag", "scopeKind": "class", "description": "unavailable"}], "calls": ["CountedFlag::CountedFlag()", "CountedFlag::operator=", "CountedFlag::operator==", "CountedFlag::operator!=", "CountedFlag::get", "CountedFlag::counter"], "search-terms": ["CountedFlag", "reference counting", "flag management", "copy assignment operator", "boolean flag", "header guard"], "state": 2, "file_id": 12589, "knowledge_revision": 25486, "git_revision": "", "ctags": [{"_type": "tag", "name": "COUNTEDFLAG_H", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/sys_mon_tools/sys_resource/include/countedFlag.h", "pattern": "/^#define COUNTEDFLAG_H$/", "language": "C++", "kind": "macro"}, {"_type": "tag", "name": "CountedFlag", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/sys_mon_tools/sys_resource/include/countedFlag.h", "pattern": "/^\tCountedFlag(bool _flag) : flag(_flag), count(1) {};$/", "language": "C++", "kind": "function", "signature": "(bool _flag)", "scope": "CountedFlag", "scopeKind": "class"}, {"_type": "tag", "name": "CountedFlag", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/sys_mon_tools/sys_resource/include/countedFlag.h", "pattern": "/^class CountedFlag$/", "language": "C++", "kind": "class"}, {"_type": "tag", "name": "count", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/sys_mon_tools/sys_resource/include/countedFlag.h", "pattern": "/^\tint\tcount;$/", "language": "C++", "typeref": "typename:int", "kind": "member", "scope": "CountedFlag", "scopeKind": "class"}, {"_type": "tag", "name": "counter", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/sys_mon_tools/sys_resource/include/countedFlag.h", "pattern": "/^\tint counter() const { return count; }$/", "language": "C++", "typeref": "typename:int", "kind": "function", "signature": "() const", "scope": "CountedFlag", "scopeKind": "class"}, {"_type": "tag", "name": "flag", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/sys_mon_tools/sys_resource/include/countedFlag.h", "pattern": "/^\tbool\tflag;$/", "language": "C++", "typeref": "typename:bool", "kind": "member", "scope": "CountedFlag", "scopeKind": "class"}, {"_type": "tag", "name": "get", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/sys_mon_tools/sys_resource/include/countedFlag.h", "pattern": "/^\tbool get() const { return flag; }$/", "language": "C++", "typeref": "typename:bool", "kind": "function", "signature": "() const", "scope": "CountedFlag", "scopeKind": "class"}, {"_type": "tag", "name": "operator !=", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/sys_mon_tools/sys_resource/include/countedFlag.h", "pattern": "/^\tbool operator != (const CountedFlag& rhs)$/", "language": "C++", "typeref": "typename:bool", "kind": "function", "signature": "(const CountedFlag & rhs)", "scope": "CountedFlag", "scopeKind": "class"}, {"_type": "tag", "name": "operator =", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/sys_mon_tools/sys_resource/include/countedFlag.h", "pattern": "/^\tCountedFlag& operator = (const CountedFlag& rhs)$/", "language": "C++", "typeref": "typename:CountedFlag &", "kind": "function", "signature": "(const CountedFlag & rhs)", "scope": "CountedFlag", "scopeKind": "class"}, {"_type": "tag", "name": "operator ==", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/sys_mon_tools/sys_resource/include/countedFlag.h", "pattern": "/^\tbool operator == (const CountedFlag& rhs)$/", "language": "C++", "typeref": "typename:bool", "kind": "function", "signature": "(const CountedFlag & rhs)", "scope": "CountedFlag", "scopeKind": "class"}], "hash": "42745b4b0e293d33e09ecf400c712c85", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "rdk/components/generic/sys_mon_tools/sys_resource/include/countedFlag.h", "fields": [{"name": "int count", "scope": "CountedFlag", "scopeKind": "class", "description": "unavailable"}, {"name": "bool flag", "scope": "CountedFlag", "scopeKind": "class", "description": "unavailable"}], "revision_history": [{"25486": ""}]}