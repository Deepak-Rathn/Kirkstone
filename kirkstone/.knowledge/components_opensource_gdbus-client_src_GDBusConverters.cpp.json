{"is_source_file": true, "file_id": 1349, "git_revision": "", "state": 1, "description": "", "external_files": [], "external_methods": [], "published": [], "classes": [], "methods": [], "calls": [], "search-terms": [], "ctags": [{"_type": "tag", "name": "GDBusTuple", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusConverters.cpp", "pattern": "/^GDBusTuple::GDBusTuple() {$/", "language": "C++", "kind": "function", "signature": "()", "scope": "gdbus_client::GDBusTuple", "scopeKind": "class"}, {"_type": "tag", "name": "GDBusTuple", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusConverters.cpp", "pattern": "/^GDBusTuple::GDBusTuple(const GDBusTuple &tuple) noexcept {$/", "language": "C++", "kind": "function", "signature": "(const GDBusTuple & tuple)", "scope": "gdbus_client::GDBusTuple", "scopeKind": "class"}, {"_type": "tag", "name": "GDBusVariant", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusConverters.cpp", "pattern": "/^GDBusVariant::GDBusVariant()  {$/", "language": "C++", "kind": "function", "signature": "()", "scope": "gdbus_client::GDBusVariant", "scopeKind": "class"}, {"_type": "tag", "name": "GDBusVariant", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusConverters.cpp", "pattern": "/^GDBusVariant::GDBusVariant(const GDBusVariant &v) {$/", "language": "C++", "kind": "function", "signature": "(const GDBusVariant & v)", "scope": "gdbus_client::GDBusVariant", "scopeKind": "class"}, {"_type": "tag", "name": "__anon13a0cb590111", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusConverters.cpp", "pattern": "/^namespace {$/", "file": true, "language": "C++", "kind": "namespace"}, {"_type": "tag", "name": "__anon13a0cb590211", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusConverters.cpp", "pattern": "/^namespace {$/", "file": true, "language": "C++", "kind": "namespace"}, {"_type": "tag", "name": "addField", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusConverters.cpp", "pattern": "/^    void addField(handle_t fh, const GDBusTuple* ptuple, getter_t getter) {$/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(handle_t fh,const GDBusTuple * ptuple,getter_t getter)", "scope": "__anon13a0cb590211", "scopeKind": "namespace"}, {"_type": "tag", "name": "assign", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusConverters.cpp", "pattern": "/^        bool assign(const std::vector<GDBusVariant> &variants) {$/", "file": true, "language": "C++", "typeref": "typename:bool", "kind": "function", "signature": "(const std::vector<GDBusVariant> & variants)", "scope": "__anon13a0cb590211::tuple_t", "scopeKind": "struct"}, {"_type": "tag", "name": "assign", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusConverters.cpp", "pattern": "/^bool GDBusTuple::assign(const std::vector<GDBusVariant> &variants) {$/", "language": "C++", "typeref": "typename:bool", "kind": "function", "signature": "(const std::vector<GDBusVariant> & variants)", "scope": "gdbus_client::GDBusTuple", "scopeKind": "class"}, {"_type": "tag", "name": "at", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusConverters.cpp", "pattern": "/^        variant_t at(key_t key) {$/", "file": true, "language": "C++", "typeref": "typename:variant_t", "kind": "function", "signature": "(key_t key)", "scope": "__anon13a0cb590111::variants_map_t", "scopeKind": "struct"}, {"_type": "tag", "name": "converters", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusConverters.cpp", "pattern": "/^namespace converters {$/", "file": true, "language": "C++", "kind": "namespace", "scope": "gdbus_client", "scopeKind": "namespace"}, {"_type": "tag", "name": "curTuple", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusConverters.cpp", "pattern": "/^    thread_local GDBusTuple *curTuple = nullptr;$/", "language": "C++", "typeref": "typename:thread_local GDBusTuple *", "kind": "variable", "scope": "__anon13a0cb590211", "scopeKind": "namespace"}, {"_type": "tag", "name": "delField", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusConverters.cpp", "pattern": "/^    void delField(handle_t fh) { fields.erase(fh); }$/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(handle_t fh)", "scope": "__anon13a0cb590211", "scopeKind": "namespace"}, {"_type": "tag", "name": "erase", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusConverters.cpp", "pattern": "/^        void erase(const key_t &key) {$/", "file": true, "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(const key_t & key)", "scope": "__anon13a0cb590111::variants_map_t", "scopeKind": "struct"}, {"_type": "tag", "name": "field", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusConverters.cpp", "pattern": "/^GDBusTuple::field::field() {}$/", "language": "C++", "kind": "function", "signature": "()", "scope": "gdbus_client::GDBusTuple::field", "scopeKind": "class"}, {"_type": "tag", "name": "field", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusConverters.cpp", "pattern": "/^GDBusTuple::field::field(const GDBusTuple::field &f) {$/", "language": "C++", "kind": "function", "signature": "(const GDBusTuple::field & f)", "scope": "gdbus_client::GDBusTuple::field", "scopeKind": "class"}, {"_type": "tag", "name": "field_ptr", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusConverters.cpp", "pattern": "/^    struct field_ptr { const GDBusTuple * pt; getter_t getter; };$/", "file": true, "language": "C++", "kind": "struct", "scope": "__anon13a0cb590211", "scopeKind": "namespace"}, {"_type": "tag", "name": "fields", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusConverters.cpp", "pattern": "/^    std::map<handle_t, field_ptr> fields;$/", "language": "C++", "typeref": "typename:std::map<handle_t,field_ptr>", "kind": "variable", "scope": "__anon13a0cb590211", "scopeKind": "namespace"}, {"_type": "tag", "name": "gdbus_client", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusConverters.cpp", "pattern": "/^namespace gdbus_client {$/", "file": true, "language": "C++", "kind": "namespace"}, {"_type": "tag", "name": "getBool", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusConverters.cpp", "pattern": "/^bool GDBusVariant::getBool(bool &result) const {$/", "language": "C++", "typeref": "typename:bool", "kind": "function", "signature": "(bool & result) const", "scope": "gdbus_client::GDBusVariant", "scopeKind": "class"}, {"_type": "tag", "name": "getDouble", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusConverters.cpp", "pattern": "/^double GDBusVariant::getDouble(bool &result) const {$/", "language": "C++", "typeref": "typename:double", "kind": "function", "signature": "(bool & result) const", "scope": "gdbus_client::GDBusVariant", "scopeKind": "class"}, {"_type": "tag", "name": "getField", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusConverters.cpp", "pattern": "/^    GDBusVariant getField(handle_t fh) {$/", "language": "C++", "typeref": "typename:GDBusVariant", "kind": "function", "signature": "(handle_t fh)", "scope": "__anon13a0cb590211", "scopeKind": "namespace"}, {"_type": "tag", "name": "getInt", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusConverters.cpp", "pattern": "/^int GDBusVariant::getInt(bool &result) const {$/", "language": "C++", "typeref": "typename:int", "kind": "function", "signature": "(bool & result) const", "scope": "gdbus_client::GDBusVariant", "scopeKind": "class"}, {"_type": "tag", "name": "getString", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusConverters.cpp", "pattern": "/^std::string GDBusVariant::getString(bool &result) const {$/", "language": "C++", "typeref": "typename:std::string", "kind": "function", "signature": "(bool & result) const", "scope": "gdbus_client::GDBusVariant", "scopeKind": "class"}, {"_type": "tag", "name": "getVarByHandle", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusConverters.cpp", "pattern": "/^        GDBusVariant getVarByHandle(handle_t &fh) {$/", "file": true, "language": "C++", "typeref": "typename:GDBusVariant", "kind": "function", "signature": "(handle_t & fh)", "scope": "__anon13a0cb590211::tuple_t", "scopeKind": "struct"}, {"_type": "tag", "name": "getter", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusConverters.cpp", "pattern": "/^    struct field_ptr { const GDBusTuple * pt; getter_t getter; };$/", "file": true, "language": "C++", "typeref": "typename:getter_t", "kind": "member", "scope": "__anon13a0cb590211::field_ptr", "scopeKind": "struct"}, {"_type": "tag", "name": "getter_t", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusConverters.cpp", "pattern": "/^    using getter_t = std::string(*)(const GDBusVariant&, bool&);$/", "file": true, "language": "C++", "kind": "typedef", "scope": "__anon13a0cb590211", "scopeKind": "namespace"}, {"_type": "tag", "name": "getters", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusConverters.cpp", "pattern": "/^        std::vector<getter_t> getters;$/", "file": true, "language": "C++", "typeref": "typename:std::vector<getter_t>", "kind": "member", "scope": "__anon13a0cb590211::tuple_t", "scopeKind": "struct"}, {"_type": "tag", "name": "gv", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusConverters.cpp", "pattern": "/^        GVariant *gv = nullptr;$/", "file": true, "language": "C++", "typeref": "typename:GVariant *", "kind": "member", "scope": "__anon13a0cb590111::variant_t", "scopeKind": "struct"}, {"_type": "tag", "name": "handle_t", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusConverters.cpp", "pattern": "/^    using handle_t = const void*;$/", "file": true, "language": "C++", "typeref": "typename:const void *", "kind": "typedef", "scope": "__anon13a0cb590211", "scopeKind": "namespace"}, {"_type": "tag", "name": "handles", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusConverters.cpp", "pattern": "/^        std::vector<handle_t > handles;$/", "file": true, "language": "C++", "typeref": "typename:std::vector<handle_t>", "kind": "member", "scope": "__anon13a0cb590211::tuple_t", "scopeKind": "struct"}, {"_type": "tag", "name": "insert", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusConverters.cpp", "pattern": "/^        void insert(key_t key, variant_t &&v) {$/", "file": true, "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(key_t key,variant_t && v)", "scope": "__anon13a0cb590111::variants_map_t", "scopeKind": "struct"}, {"_type": "tag", "name": "key_t", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusConverters.cpp", "pattern": "/^        using key_t = const gdbus_client::GDBusVariant*;$/", "file": true, "language": "C++", "typeref": "typename:const gdbus_client::GDBusVariant *", "kind": "typedef", "scope": "__anon13a0cb590111::variants_map_t", "scopeKind": "struct"}, {"_type": "tag", "name": "marshal", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusConverters.cpp", "pattern": "/^GVariant * marshal(const TYPE_AO, const str_arr_t &arr) {$/", "language": "C++", "typeref": "typename:GVariant *", "kind": "function", "signature": "(const TYPE_AO,const str_arr_t & arr)", "scope": "gdbus_client::converters", "scopeKind": "namespace"}, {"_type": "tag", "name": "marshal", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusConverters.cpp", "pattern": "/^GVariant * marshal(const TYPE_AS, const str_arr_t &arr) {$/", "language": "C++", "typeref": "typename:GVariant *", "kind": "function", "signature": "(const TYPE_AS,const str_arr_t & arr)", "scope": "gdbus_client::converters", "scopeKind": "namespace"}, {"_type": "tag", "name": "marshal", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusConverters.cpp", "pattern": "/^GVariant * marshal(const TYPE_B, const bool b) {$/", "language": "C++", "typeref": "typename:GVariant *", "kind": "function", "signature": "(const TYPE_B,const bool b)", "scope": "gdbus_client::converters", "scopeKind": "namespace"}, {"_type": "tag", "name": "marshal", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusConverters.cpp", "pattern": "/^GVariant * marshal(const TYPE_D, const double x) {$/", "language": "C++", "typeref": "typename:GVariant *", "kind": "function", "signature": "(const TYPE_D,const double x)", "scope": "gdbus_client::converters", "scopeKind": "namespace"}, {"_type": "tag", "name": "marshal", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusConverters.cpp", "pattern": "/^GVariant * marshal(const TYPE_DICT, const std::map<string, string> &items) {$/", "language": "C++", "typeref": "typename:GVariant *", "kind": "function", "signature": "(const TYPE_DICT,const std::map<string,string> & items)", "scope": "gdbus_client::converters", "scopeKind": "namespace"}, {"_type": "tag", "name": "marshal", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusConverters.cpp", "pattern": "/^GVariant * marshal(const TYPE_I, const int32_t i) {$/", "language": "C++", "typeref": "typename:GVariant *", "kind": "function", "signature": "(const TYPE_I,const int32_t i)", "scope": "gdbus_client::converters", "scopeKind": "namespace"}, {"_type": "tag", "name": "marshal", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusConverters.cpp", "pattern": "/^GVariant * marshal(const TYPE_N, const int16_t i) {$/", "language": "C++", "typeref": "typename:GVariant *", "kind": "function", "signature": "(const TYPE_N,const int16_t i)", "scope": "gdbus_client::converters", "scopeKind": "namespace"}, {"_type": "tag", "name": "marshal", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusConverters.cpp", "pattern": "/^GVariant * marshal(const TYPE_O, const std::string &path) {$/", "language": "C++", "typeref": "typename:GVariant *", "kind": "function", "signature": "(const TYPE_O,const std::string & path)", "scope": "gdbus_client::converters", "scopeKind": "namespace"}, {"_type": "tag", "name": "marshal", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusConverters.cpp", "pattern": "/^GVariant * marshal(const TYPE_S, const string &s) {$/", "language": "C++", "typeref": "typename:GVariant *", "kind": "function", "signature": "(const TYPE_S,const string & s)", "scope": "gdbus_client::converters", "scopeKind": "namespace"}, {"_type": "tag", "name": "marshal", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusConverters.cpp", "pattern": "/^GVariant * marshal(const TYPE_T, const uint64_t b) {$/", "language": "C++", "typeref": "typename:GVariant *", "kind": "function", "signature": "(const TYPE_T,const uint64_t b)", "scope": "gdbus_client::converters", "scopeKind": "namespace"}, {"_type": "tag", "name": "marshal", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusConverters.cpp", "pattern": "/^GVariant * marshal(const TYPE_U, const uint32_t i) {$/", "language": "C++", "typeref": "typename:GVariant *", "kind": "function", "signature": "(const TYPE_U,const uint32_t i)", "scope": "gdbus_client::converters", "scopeKind": "namespace"}, {"_type": "tag", "name": "marshal", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusConverters.cpp", "pattern": "/^GVariant * marshal(const TYPE_V, const std::string &v) {$/", "language": "C++", "typeref": "typename:GVariant *", "kind": "function", "signature": "(const TYPE_V,const std::string & v)", "scope": "gdbus_client::converters", "scopeKind": "namespace"}, {"_type": "tag", "name": "marshal", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusConverters.cpp", "pattern": "/^GVariant * marshal(const TYPE_Y, const uint8_t b) {$/", "language": "C++", "typeref": "typename:GVariant *", "kind": "function", "signature": "(const TYPE_Y,const uint8_t b)", "scope": "gdbus_client::converters", "scopeKind": "namespace"}, {"_type": "tag", "name": "mutex", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusConverters.cpp", "pattern": "/^        std::mutex mutex;$/", "file": true, "language": "C++", "typeref": "typename:std::mutex", "kind": "member", "scope": "__anon13a0cb590111::variants_map_t", "scopeKind": "struct"}, {"_type": "tag", "name": "newField", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusConverters.cpp", "pattern": "/^        unsigned newField(handle_t fh, getter_t getter) {$/", "file": true, "language": "C++", "typeref": "typename:unsigned", "kind": "function", "signature": "(handle_t fh,getter_t getter)", "scope": "__anon13a0cb590211::tuple_t", "scopeKind": "struct"}, {"_type": "tag", "name": "operator =", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusConverters.cpp", "pattern": "/^GDBusTuple& GDBusTuple::operator=(const GDBusTuple &tuple) {$/", "language": "C++", "typeref": "typename:GDBusTuple &", "kind": "function", "signature": "(const GDBusTuple & tuple)", "scope": "gdbus_client::GDBusTuple", "scopeKind": "class"}, {"_type": "tag", "name": "operator =", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusConverters.cpp", "pattern": "/^GDBusVariant& GDBusVariant::operator=(const GDBusVariant &v) {$/", "language": "C++", "typeref": "typename:GDBusVariant &", "kind": "function", "signature": "(const GDBusVariant & v)", "scope": "gdbus_client::GDBusVariant", "scopeKind": "class"}, {"_type": "tag", "name": "operator bool", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusConverters.cpp", "pattern": "/^        operator bool() { return gv != nullptr; }$/", "file": true, "language": "C++", "kind": "function", "signature": "()", "scope": "__anon13a0cb590111::variant_t", "scopeKind": "struct"}, {"_type": "tag", "name": "operator bool", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusConverters.cpp", "pattern": "/^GDBusTuple::pbool   ::operator bool()       const { return getField(this).getBool(unusedResult);/", "language": "C++", "kind": "function", "signature": "() const", "scope": "gdbus_client::GDBusTuple::pbool", "scopeKind": "class"}, {"_type": "tag", "name": "operator double", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusConverters.cpp", "pattern": "/^GDBusTuple::pdouble ::operator double()     const { return getField(this).getDouble(unusedResult/", "language": "C++", "kind": "function", "signature": "() const", "scope": "gdbus_client::GDBusTuple::pdouble", "scopeKind": "class"}, {"_type": "tag", "name": "operator int", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusConverters.cpp", "pattern": "/^GDBusTuple::pint    ::operator int()        const { return getField(this).getInt(unusedResult); /", "language": "C++", "kind": "function", "signature": "() const", "scope": "gdbus_client::GDBusTuple::pint", "scopeKind": "class"}, {"_type": "tag", "name": "operator std::string", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusConverters.cpp", "pattern": "/^GDBusTuple::pstring ::operator std::string()const { return getField(this).getString(unusedResult/", "language": "C++", "kind": "function", "signature": "() const", "scope": "gdbus_client::GDBusTuple::pstring", "scopeKind": "class"}, {"_type": "tag", "name": "pbool", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusConverters.cpp", "pattern": "/^GDBusTuple::pbool   ::pbool()   { addField(this, curTuple, &strBool);   }$/", "language": "C++", "kind": "function", "signature": "()", "scope": "gdbus_client::GDBusTuple::pbool", "scopeKind": "class"}, {"_type": "tag", "name": "pdouble", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusConverters.cpp", "pattern": "/^GDBusTuple::pdouble ::pdouble() { addField(this, curTuple, &strDouble); }$/", "language": "C++", "kind": "function", "signature": "()", "scope": "gdbus_client::GDBusTuple::pdouble", "scopeKind": "class"}, {"_type": "tag", "name": "pint", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusConverters.cpp", "pattern": "/^GDBusTuple::pint    ::pint()    { addField(this, curTuple, &strInt);    }$/", "language": "C++", "kind": "function", "signature": "()", "scope": "gdbus_client::GDBusTuple::pint", "scopeKind": "class"}, {"_type": "tag", "name": "print", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusConverters.cpp", "pattern": "/^std::string GDBusVariant::print() const {$/", "language": "C++", "typeref": "typename:std::string", "kind": "function", "signature": "() const", "scope": "gdbus_client::GDBusVariant", "scopeKind": "class"}, {"_type": "tag", "name": "pstring", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusConverters.cpp", "pattern": "/^GDBusTuple::pstring ::pstring() { addField(this, curTuple, &strString); }$/", "language": "C++", "kind": "function", "signature": "()", "scope": "gdbus_client::GDBusTuple::pstring", "scopeKind": "class"}, {"_type": "tag", "name": "pt", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusConverters.cpp", "pattern": "/^    struct field_ptr { const GDBusTuple * pt; getter_t getter; };$/", "file": true, "language": "C++", "typeref": "typename:const GDBusTuple *", "kind": "member", "scope": "__anon13a0cb590211::field_ptr", "scopeKind": "struct"}, {"_type": "tag", "name": "strBool", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusConverters.cpp", "pattern": "/^    std::string strBool(  const GDBusVariant &v, bool &res) { return std::to_string(v.getBool(re/", "language": "C++", "typeref": "typename:std::string", "kind": "function", "signature": "(const GDBusVariant & v,bool & res)", "scope": "__anon13a0cb590211", "scopeKind": "namespace"}, {"_type": "tag", "name": "strDouble", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusConverters.cpp", "pattern": "/^    std::string strDouble(const GDBusVariant &v, bool &res) { return std::to_string(v.getDouble(/", "language": "C++", "typeref": "typename:std::string", "kind": "function", "signature": "(const GDBusVariant & v,bool & res)", "scope": "__anon13a0cb590211", "scopeKind": "namespace"}, {"_type": "tag", "name": "strInt", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusConverters.cpp", "pattern": "/^    std::string strInt(   const GDBusVariant &v, bool &res) { return std::to_string(v.getInt(res/", "language": "C++", "typeref": "typename:std::string", "kind": "function", "signature": "(const GDBusVariant & v,bool & res)", "scope": "__anon13a0cb590211", "scopeKind": "namespace"}, {"_type": "tag", "name": "strString", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusConverters.cpp", "pattern": "/^    std::string strString(const GDBusVariant &v, bool &res) { return v.getString(res);          /", "language": "C++", "typeref": "typename:std::string", "kind": "function", "signature": "(const GDBusVariant & v,bool & res)", "scope": "__anon13a0cb590211", "scopeKind": "namespace"}, {"_type": "tag", "name": "toString", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusConverters.cpp", "pattern": "/^        std::string toString() const {$/", "file": true, "language": "C++", "typeref": "typename:std::string", "kind": "function", "signature": "() const", "scope": "__anon13a0cb590211::tuple_t", "scopeKind": "struct"}, {"_type": "tag", "name": "toString", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusConverters.cpp", "pattern": "/^std::string GDBusTuple::toString() const {$/", "language": "C++", "typeref": "typename:std::string", "kind": "function", "signature": "() const", "scope": "gdbus_client::GDBusTuple", "scopeKind": "class"}, {"_type": "tag", "name": "tuple_t", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusConverters.cpp", "pattern": "/^        tuple_t(const tuple_t &t) {$/", "file": true, "language": "C++", "kind": "function", "signature": "(const tuple_t & t)", "scope": "__anon13a0cb590211::tuple_t", "scopeKind": "struct"}, {"_type": "tag", "name": "tuple_t", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusConverters.cpp", "pattern": "/^    struct tuple_t {$/", "file": true, "language": "C++", "kind": "struct", "scope": "__anon13a0cb590211", "scopeKind": "namespace"}, {"_type": "tag", "name": "tuples", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusConverters.cpp", "pattern": "/^    std::map<const GDBusTuple*, tuple_t> tuples;$/", "language": "C++", "typeref": "typename:std::map<const GDBusTuple *,tuple_t>", "kind": "variable", "scope": "__anon13a0cb590211", "scopeKind": "namespace"}, {"_type": "tag", "name": "unmarshal", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusConverters.cpp", "pattern": "/^bool unmarshal(const TYPE_ANY, GVariant *g, std::string &s) {$/", "language": "C++", "typeref": "typename:bool", "kind": "function", "signature": "(const TYPE_ANY,GVariant * g,std::string & s)", "scope": "gdbus_client::converters", "scopeKind": "namespace"}, {"_type": "tag", "name": "unmarshal", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusConverters.cpp", "pattern": "/^bool unmarshal(const TYPE_AO, GVariant *g, str_arr_t &arr) {$/", "language": "C++", "typeref": "typename:bool", "kind": "function", "signature": "(const TYPE_AO,GVariant * g,str_arr_t & arr)", "scope": "gdbus_client::converters", "scopeKind": "namespace"}, {"_type": "tag", "name": "unmarshal", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusConverters.cpp", "pattern": "/^bool unmarshal(const TYPE_AS, GVariant *g, str_arr_t &arr) {$/", "language": "C++", "typeref": "typename:bool", "kind": "function", "signature": "(const TYPE_AS,GVariant * g,str_arr_t & arr)", "scope": "gdbus_client::converters", "scopeKind": "namespace"}, {"_type": "tag", "name": "unmarshal", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusConverters.cpp", "pattern": "/^bool unmarshal(const TYPE_ATUP, GVariant *g, tuple_arr_t &arr) {$/", "language": "C++", "typeref": "typename:bool", "kind": "function", "signature": "(const TYPE_ATUP,GVariant * g,tuple_arr_t & arr)", "scope": "gdbus_client::converters", "scopeKind": "namespace"}, {"_type": "tag", "name": "unmarshal", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/gdbus-client/src/GDBusConverters.cpp", "pattern": "/^bool unmarshal(const TYPE_B, GVariant *gv, bool &b) {$/", "language": "C++", "typeref": "typename:bool", "kind": "function", "signature": "(const TYPE_B,GVariant * gv,bool & b)", "scope": "gdbus_client::converters", "scopeKind": "namespace"}], "format": "C++", "hash": "a878e070481ae1a59ff82c056584010d", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "components/opensource/gdbus-client/src/GDBusConverters.cpp", "knowledge_revision": 1351}