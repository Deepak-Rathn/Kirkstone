{"is_source_file": true, "format": "C", "description": "This file contains utility functions for managing PPP (Point-to-Point Protocol) connections, including retrieving IP addresses, session IDs, authentication protocols, and process management related to PPP interfaces. It includes code for interacting with system files, processes, and configurations specific to PPP management.", "external_files": ["pppmgr_global.h", "pppmgr_data.h", "pppmgr_dml_ppp_apis.h", "pppmgr_dml.h", "<syscfg/syscfg.h>", "<dirent.h>"], "external_methods": ["syscfg_get", "syscfg_set", "syscfg_commit", "sysevent_get", "CcspTraceWarning", "CcspTraceInfo", "CcspTraceError", "PppMgr_GetIfaceData_locked", "PppMgr_GetIfaceData_release", "DmlGetTotalNoOfPPPInterfaces"], "published": ["get_ppp_ip_addr", "get_session_id", "get_auth_proto", "PppMgr_getPppPid", "PppMgr_getIfaceDataWithPid"], "classes": [], "methods": [{"name": "void get_wan_proto(wanProto_t * p_wan_proto)", "description": "Retrieves the current WAN protocol (DHCP or PPPOE) from system configuration.", "scope": "", "scopeKind": ""}, {"name": "ULONG PppGetIfAddr(char * netdev)", "description": "Gets the IPv4 address assigned to a specified network interface.", "scope": "", "scopeKind": ""}, {"name": "ULONG get_ppp_ip_addr(void)", "description": "Determines the IP address of the PPP interface if the link is up and protocol is pppoe.", "scope": "", "scopeKind": ""}, {"name": "int get_session_id(ULONG * p_id,ANSC_HANDLE hContext)", "description": "Retrieves the session ID for a PPP connection depending on the link type (PPPoE or PPPoA).", "scope": "", "scopeKind": ""}, {"name": "int get_auth_proto(int * p_proto)", "description": "Extracts the authentication protocol used by the PPP session from log files.", "scope": "", "scopeKind": ""}, {"name": "int safe_strcpy(char * dst,char * src,int dst_size)", "description": "Safely copies a string into a destination buffer with size checking.", "scope": "", "scopeKind": ""}, {"name": "void PppMgr_GenerateDuidFile(char * wanName)", "description": "Generates and saves a DUID file based on UUID or MAC address for the PPP interface.", "scope": "", "scopeKind": ""}, {"name": "void PppMgr_RemoveDuidFile(char * wanName)", "description": "Removes the DUID file associated with a specific WAN interface.", "scope": "", "scopeKind": ""}, {"name": "int set_syscfg(char * pValue,char * param)", "description": "Sets a system configuration parameter and commits the change.", "scope": "", "scopeKind": ""}, {"name": "ANSC_STATUS PppMgr_checkPidExist(pid_t pppPid)", "description": "Checks if a process with a given PID exists.", "scope": "", "scopeKind": ""}, {"name": "int find_strstr(char * basestr,int basestr_len,char * substr,int substr_len)", "description": "Custom implementation to find a substring within a special string format, even if it has embedded end-of-string characters.", "scope": "", "scopeKind": ""}, {"name": "int strtol64(const char * str,char ** endptr,int32_t base,int64_t * val)", "description": "Converts a string to a 64-bit integer, used to identify process IDs.", "scope": "", "scopeKind": ""}, {"name": "int check_proc_entry_for_pid(char * name,char * args)", "description": "Searches /proc for a process with a given name and optional argument to identify its PID.", "scope": "", "scopeKind": ""}, {"name": "pid_t PppMgr_getPppPid(char * ifname)", "description": "Attempts to find the process ID of the pppd process associated with a specific network interface.", "scope": "", "scopeKind": ""}, {"name": "int PppMgr_getIfaceDataWithPid(pid_t pid)", "description": "Finds the interface data structure corresponding to a specific PPP process ID.", "scope": "", "scopeKind": ""}], "calls": ["socket", "ioctl", "close", "perror", "syscfg_get", "sysevent_get", "mkdir", "popen", "fopen", "fgets", "fclose", "remove", "stat", "snprintf", "strncpy", "strlen", "strstr", "sscanf", "strcmp", "strstr", "getppid", "popen", "read", "fread", "sprintf", "fseek", "pclose", "opendir", "readdir", "fscanf", "closedir", "sleep", "strtoll", "memcpy", "memset", "mkdir"], "search-terms": ["ppp", "PPP session", "WAN protocol", "PPP IP", "PPP process", "DUID", "UUID", "syscfg", "pppd", "PPP interface"], "state": 2, "file_id": 6721, "knowledge_revision": 19827, "git_revision": "", "ctags": [{"_type": "tag", "name": "GET_PPPID_ATTEMPT", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/RdkPppManager/source/TR-181/middle_layer_src/pppmgr_utils.c", "pattern": "/^#define GET_PPPID_ATTEMPT /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "NET_STATS_FILE", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/RdkPppManager/source/TR-181/middle_layer_src/pppmgr_utils.c", "pattern": "/^#define NET_STATS_FILE /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "PPPOE_PROC_FILE", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/RdkPppManager/source/TR-181/middle_layer_src/pppmgr_utils.c", "pattern": "/^#define PPPOE_PROC_FILE /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "PppGetIfAddr", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/RdkPppManager/source/TR-181/middle_layer_src/pppmgr_utils.c", "pattern": "/^PppGetIfAddr$/", "language": "C", "typeref": "typename:ULONG", "kind": "function", "signature": "(char * netdev)"}, {"_type": "tag", "name": "PppMgr_GenerateDuidFile", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/RdkPppManager/source/TR-181/middle_layer_src/pppmgr_utils.c", "pattern": "/^void PppMgr_GenerateDuidFile (char *wanName)$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(char * wanName)"}, {"_type": "tag", "name": "PppMgr_RemoveDuidFile", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/RdkPppManager/source/TR-181/middle_layer_src/pppmgr_utils.c", "pattern": "/^void PppMgr_RemoveDuidFile (char *wanName)$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(char * wanName)"}, {"_type": "tag", "name": "PppMgr_checkPidExist", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/RdkPppManager/source/TR-181/middle_layer_src/pppmgr_utils.c", "pattern": "/^ANSC_STATUS PppMgr_checkPidExist(pid_t pppPid)$/", "language": "C", "typeref": "typename:ANSC_STATUS", "kind": "function", "signature": "(pid_t pppPid)"}, {"_type": "tag", "name": "PppMgr_getIfaceDataWithPid", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/RdkPppManager/source/TR-181/middle_layer_src/pppmgr_utils.c", "pattern": "/^int PppMgr_getIfaceDataWithPid (pid_t pid)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(pid_t pid)"}, {"_type": "tag", "name": "PppMgr_getPppPid", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/RdkPppManager/source/TR-181/middle_layer_src/pppmgr_utils.c", "pattern": "/^pid_t PppMgr_getPppPid(char * ifname)$/", "language": "C", "typeref": "typename:pid_t", "kind": "function", "signature": "(char * ifname)"}, {"_type": "tag", "name": "SYSEVENT_PPP_STATUS", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/RdkPppManager/source/TR-181/middle_layer_src/pppmgr_utils.c", "pattern": "/^#define SYSEVENT_PPP_STATUS /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "check_proc_entry_for_pid", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/RdkPppManager/source/TR-181/middle_layer_src/pppmgr_utils.c", "pattern": "/^static int check_proc_entry_for_pid (char * name, char * args)$/", "file": true, "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(char * name,char * args)"}, {"_type": "tag", "name": "find_strstr", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/RdkPppManager/source/TR-181/middle_layer_src/pppmgr_utils.c", "pattern": "/^int find_strstr (char * basestr, int basestr_len, char * substr, int substr_len)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(char * basestr,int basestr_len,char * substr,int substr_len)"}, {"_type": "tag", "name": "get_auth_proto", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/RdkPppManager/source/TR-181/middle_layer_src/pppmgr_utils.c", "pattern": "/^int get_auth_proto(int * p_proto)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(int * p_proto)"}, {"_type": "tag", "name": "get_ppp_ip_addr", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/RdkPppManager/source/TR-181/middle_layer_src/pppmgr_utils.c", "pattern": "/^ULONG get_ppp_ip_addr(void)$/", "language": "C", "typeref": "typename:ULONG", "kind": "function", "signature": "(void)"}, {"_type": "tag", "name": "get_session_id", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/RdkPppManager/source/TR-181/middle_layer_src/pppmgr_utils.c", "pattern": "/^int get_session_id(ULONG * p_id, ANSC_HANDLE hContext)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(ULONG * p_id,ANSC_HANDLE hContext)"}, {"_type": "tag", "name": "get_wan_proto", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/RdkPppManager/source/TR-181/middle_layer_src/pppmgr_utils.c", "pattern": "/^void get_wan_proto(wanProto_t * p_wan_proto)$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(wanProto_t * p_wan_proto)"}, {"_type": "tag", "name": "safe_strcpy", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/RdkPppManager/source/TR-181/middle_layer_src/pppmgr_utils.c", "pattern": "/^int safe_strcpy(char * dst, char * src, int dst_size)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(char * dst,char * src,int dst_size)"}, {"_type": "tag", "name": "set_syscfg", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/RdkPppManager/source/TR-181/middle_layer_src/pppmgr_utils.c", "pattern": "/^int set_syscfg(char *pValue,char *param)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(char * pValue,char * param)"}, {"_type": "tag", "name": "strtol64", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/RdkPppManager/source/TR-181/middle_layer_src/pppmgr_utils.c", "pattern": "/^static int strtol64(const char *str, char **endptr, int32_t base, int64_t *val)$/", "file": true, "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(const char * str,char ** endptr,int32_t base,int64_t * val)"}], "hash": "640509951d9783de793129a5711c83e1", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "rdkb/components/opensource/ccsp/RdkPppManager/source/TR-181/middle_layer_src/pppmgr_utils.c", "revision_history": [{"19827": ""}]}