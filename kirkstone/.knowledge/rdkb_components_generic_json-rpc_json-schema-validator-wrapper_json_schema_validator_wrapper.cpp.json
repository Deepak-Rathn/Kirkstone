{"is_source_file": true, "format": "C++", "description": "This source file provides an implementation for a JSON schema validator wrapper using the nlohmann/json-schema library. It includes functions for initializing the validator with a schema, validating JSON requests against the schema, and cleanup. It also defines a custom error handler for schema validation errors.", "external_files": ["<nlohmann/json-schema.hpp>", "<fstream>", "<iostream>", "<iomanip>", "\"json_schema_validator_wrapper.h\""], "external_methods": ["nlohmann::json", "nlohmann::json_schema::json_validator"], "published": ["json_validator_init", "json_validator_terminate", "json_validator_validate_request"], "classes": [{"name": "custom_error_handler", "description": "A custom error handler class extending nlohmann::json_schema::basic_error_handler to output validation errors."}], "methods": [{"name": "int json_validator_init(const char * json_schema_path)", "description": "Initializes the JSON schema validator with a schema file from the provided path.", "scope": "", "scopeKind": ""}, {"name": "int json_validator_terminate()", "description": "Cleans up and deallocates the validator object.", "scope": "", "scopeKind": ""}, {"name": "int json_validator_validate_request(const char * json_string)", "description": "Validates a JSON request string against the loaded schema, returning an error code if validation fails.", "scope": "", "scopeKind": ""}, {"name": "void error(const nlohmann::json::json_pointer & ptr,const json & instance,const std::string & message)", "scope": "custom_error_handler", "scopeKind": "class", "description": "unavailable"}, {"name": "int json_validator_populate_schema(const char * json_schema_path)", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["json_validator_populate_schema", "validator->set_root_schema", "validator->validate"], "search-terms": ["json-schema validation", "json_validator", "json_schema_validator_wrapper", "schema loading", "custom error handler"], "state": 2, "file_id": 5767, "knowledge_revision": 18881, "git_revision": "", "ctags": [{"_type": "tag", "name": "custom_error_handler", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/generic/json-rpc/json-schema-validator-wrapper/json_schema_validator_wrapper.cpp", "pattern": "/^    class custom_error_handler : public nlohmann::json_schema::basic_error_handler$/", "file": true, "language": "C++", "kind": "class"}, {"_type": "tag", "name": "error", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/generic/json-rpc/json-schema-validator-wrapper/json_schema_validator_wrapper.cpp", "pattern": "/^        void error(const nlohmann::json::json_pointer &ptr, const json &instance, const std::str/", "file": true, "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(const nlohmann::json::json_pointer & ptr,const json & instance,const std::string & message)", "scope": "custom_error_handler", "scopeKind": "class"}, {"_type": "tag", "name": "json_validator_init", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/generic/json-rpc/json-schema-validator-wrapper/json_schema_validator_wrapper.cpp", "pattern": "/^    int json_validator_init(const char* json_schema_path)$/", "language": "C++", "typeref": "typename:int", "kind": "function", "signature": "(const char * json_schema_path)"}, {"_type": "tag", "name": "json_validator_populate_schema", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/generic/json-rpc/json-schema-validator-wrapper/json_schema_validator_wrapper.cpp", "pattern": "/^    static int json_validator_populate_schema(const char *json_schema_path)$/", "file": true, "language": "C++", "typeref": "typename:int", "kind": "function", "signature": "(const char * json_schema_path)"}, {"_type": "tag", "name": "json_validator_terminate", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/generic/json-rpc/json-schema-validator-wrapper/json_schema_validator_wrapper.cpp", "pattern": "/^    int json_validator_terminate()$/", "language": "C++", "typeref": "typename:int", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "json_validator_validate_request", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/generic/json-rpc/json-schema-validator-wrapper/json_schema_validator_wrapper.cpp", "pattern": "/^    int json_validator_validate_request(const char *json_string)$/", "language": "C++", "typeref": "typename:int", "kind": "function", "signature": "(const char * json_string)"}, {"_type": "tag", "name": "validator", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/generic/json-rpc/json-schema-validator-wrapper/json_schema_validator_wrapper.cpp", "pattern": "/^    json_validator *validator = NULL;$/", "language": "C++", "typeref": "typename:json_validator *", "kind": "variable"}], "hash": "7ff57731e514620e5b6a6382e6ade79c", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "rdkb/components/generic/json-rpc/json-schema-validator-wrapper/json_schema_validator_wrapper.cpp", "fields": [{"name": "json_validator * validator", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"18881": ""}]}