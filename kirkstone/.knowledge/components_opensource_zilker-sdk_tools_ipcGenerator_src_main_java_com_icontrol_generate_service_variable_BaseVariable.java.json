{"is_source_file": true, "format": "Java", "description": "This file defines an abstract class \"BaseVariable\" which serves as a base class for various variable types in a serialization/deserialization context, including methods for encoding/decoding in C and Java, and various type identification flags.", "external_files": ["com/icontrol/generate/service/context/ContextNative.java", "com/icontrol/util/StringUtils.java", "com/icontrol/xmlns/service/ICBaseVariable.java"], "external_methods": ["com.icontrol.xmlns.service.ICBaseVariable.getVarName", "com.icontrol.xmlns.service.ICBaseVariable.getVarDescription", "com.icontrol.xmlns.service.ICBaseVariable.getSensitive"], "published": ["getName", "setName", "getDescription", "setDescription", "isSensitive", "setSensitive", "isPtr", "isArray", "isMap", "isCustom", "isEvent", "isEnum", "isString", "isBoolean", "isShort", "isInt", "isLong", "isFloat", "isDouble", "isNumber", "isDate", "isPossiblyEvent", "getCtype", "getJavaType", "getJsonKey", "getNativeEncodeLines", "getNativeDecodeLines", "getJavaGetter", "getJavaSetter", "getJavaEncodeLines", "getJavaDecodeLines", "getJavaIpcObjectType"], "classes": [{"name": "BaseVariable", "description": "An abstract base class representing a generic variable used in serialization with methods to determine type, generate code for encoding/decoding in C and Java, and manage variable attributes."}], "methods": [{"name": "resolveReferences", "description": "Abstract method meant to be implemented by subclasses to resolve dependencies and references after loading."}, {"name": "getCtype", "description": "Abstract method that returns the C language type representation of the variable."}, {"name": "getJavaType", "description": "Abstract method that returns the Java type representation of the variable."}, {"name": "getJsonKey", "description": "Abstract method that returns the JSON key associated with this variable."}, {"name": "getNativeEncodeLines", "description": "Abstract method to generate C code lines for encoding this variable."}, {"name": "getNativeDecodeLines", "description": "Abstract method to generate C code lines for decoding this variable."}, {"name": "getJavaEncodeLines", "description": "Abstract method to generate Java code lines for encoding this variable."}, {"name": "getJavaDecodeLines", "description": "Abstract method to generate Java code lines for decoding this variable."}, {"name": "getJavaIpcObjectType", "description": "Abstract method that returns the Java IPC object type for this variable."}], "calls": ["com.icontrol.xmlns.service.ICBaseVariable.getVarName", "com.icontrol.xmlns.service.ICBaseVariable.getVarDescription", "com.icontrol.xmlns.service.ICBaseVariable.getSensitive", "com.icontrol.generate.service.context.ContextNative", "com.icontrol.util.StringUtils.camelCase"], "search-terms": ["BaseVariable", "serialization", "generate", "encodeLines", "decodeLines", "type", "variable class", "Java and C code generation"], "state": 2, "file_id": 490, "knowledge_revision": 13653, "git_revision": "", "hash": "2fcdcdb83881e9c7bbe29a43abad298c", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "components/opensource/zilker-sdk/tools/ipcGenerator/src/main/java/com/icontrol/generate/service/variable/BaseVariable.java", "revision_history": [{"13653": ""}]}