{"is_source_file": true, "format": "C++", "description": "This file implements a crash report server using Google's Breakpad library, sets up crash dump handling, and manages server initialization and message handling.", "external_files": ["client/linux/crash_generation/client_info.h", "client/linux/crash_generation/crash_generation_server.h", "servercontainer.h"], "external_methods": ["google_breakpad::ClientInfo", "google_breakpad::CrashGenerationServer", "write", "getpid", "atoi", "printf"], "published": ["main"], "classes": [{"name": "CrashGenerationServer", "description": "A server class from Google Breakpad that handles crash dump requests."}, {"name": "ServerContainer", "description": "A wrapper class for managing the lifecycle of the CrashGenerationServer instance."}], "methods": [{"name": "void OnClientDumpRequest(void * aContext,const ClientInfo * aClientInfo,const string * aFilePath)", "description": "Callback invoked when a client dump request is received; logs dumped file information.", "scope": "", "scopeKind": ""}, {"name": "int main(int argc,char ** argv)", "description": "Entry point for the crash dump server process, sets up server, and enters main loop.", "scope": "", "scopeKind": ""}], "calls": ["write", "getpid", "atoi", "printf", "ServerContainer::Start"], "search-terms": ["CrashGenerationServer", "OnClientDumpRequest", "server.cpp", "CrashServer", "google_breakpad"], "state": 2, "file_id": 12782, "knowledge_revision": 25680, "git_revision": "", "ctags": [{"_type": "tag", "name": "OnClientDumpRequest", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/crashupload/qt-breakpad-server-test/server/server.cpp", "pattern": "/^static void OnClientDumpRequest(void* aContext,$/", "file": true, "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(void * aContext,const ClientInfo * aClientInfo,const string * aFilePath)"}, {"_type": "tag", "name": "count", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/crashupload/qt-breakpad-server-test/server/server.cpp", "pattern": "/^static unsigned int count = 0;$/", "file": true, "language": "C++", "typeref": "typename:unsigned int", "kind": "variable"}, {"_type": "tag", "name": "dump_path", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/crashupload/qt-breakpad-server-test/server/server.cpp", "pattern": "/^static string dump_path = \"\\/opt\\/minidumps\";$/", "file": true, "language": "C++", "typeref": "typename:string", "kind": "variable"}, {"_type": "tag", "name": "main", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/crashupload/qt-breakpad-server-test/server/server.cpp", "pattern": "/^int main(int argc, char** argv)$/", "language": "C++", "typeref": "typename:int", "kind": "function", "signature": "(int argc,char ** argv)"}, {"_type": "tag", "name": "mutex", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/crashupload/qt-breakpad-server-test/server/server.cpp", "pattern": "/^pthread_mutex_t mutex         = PTHREAD_MUTEX_INITIALIZER;$/", "language": "C++", "typeref": "typename:pthread_mutex_t", "kind": "variable"}], "hash": "e30134069566aeb4061f39512f0386f1", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "rdk/components/generic/crashupload/qt-breakpad-server-test/server/server.cpp", "fields": [{"name": "unsigned int count", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "string dump_path", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "pthread_mutex_t mutex", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"25680": ""}]}