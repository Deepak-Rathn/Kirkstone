{"is_source_file": true, "format": "C", "description": "This file contains C source code implementing VLAN management functions for a Linux-based system. It provides functions to create and delete VLAN groups, add and remove interfaces from VLAN groups, print group configurations, and manage VLAN ID configurations stored in a linked list. The code interacts with system utilities like brctl, ip, and vconfig to configure network bridges and VLANs. It also includes utility functions to check the existence of bridges and interfaces, execute shell commands, and maintain VLAN configuration mappings.", "external_files": ["vlan_hal.h", "safec_lib.h"], "external_methods": ["_get_shell_outputbuffer", "_is_this_group_available_in_linux_bridge", "_is_this_interface_available_in_linux_bridge", "_is_this_interface_available_in_given_linux_bridge", "insert_VLAN_ConfigEntry", "delete_VLAN_ConfigEntry", "get_vlanId_for_GroupName"], "published": ["vlan_hal_addGroup", "vlan_hal_delGroup", "vlan_hal_addInterface", "vlan_hal_delInterface", "vlan_hal_printGroup", "vlan_hal_printAllGroup", "vlan_hal_delete_all_Interfaces"], "classes": [], "methods": [{"name": "int vlan_hal_addGroup(const char * groupName,const char * default_vlanID)", "description": "Creates a new VLAN group (bridge) with an optional default VLAN ID, if it does not already exist.", "scope": "", "scopeKind": ""}, {"name": "int vlan_hal_delGroup(const char * groupName)", "description": "Deletes an existing VLAN group and all associated interfaces.", "scope": "", "scopeKind": ""}, {"name": "int vlan_hal_addInterface(const char * groupName,const char * ifName,const char * vlanID)", "description": "Adds an interface to an existing VLAN group with a specified VLAN ID, configuring VLAN tagging.", "scope": "", "scopeKind": ""}, {"name": "int vlan_hal_delInterface(const char * groupName,const char * ifName,const char * vlanID)", "description": "Removes an interface from a VLAN group, deleting its VLAN configuration.", "scope": "", "scopeKind": ""}, {"name": "int vlan_hal_printGroup(const char * groupName)", "description": "Prints the details of a specific VLAN group for debugging purposes.", "scope": "", "scopeKind": ""}, {"name": "int vlan_hal_printAllGroup(void)", "description": "Prints all configured VLAN groups.", "scope": "", "scopeKind": ""}, {"name": "int vlan_hal_delete_all_Interfaces(const char * groupName)", "description": "Removes all interfaces associated with a given VLAN group.", "scope": "", "scopeKind": ""}, {"name": "int _is_this_group_available_in_linux_bridge(char * br_name)", "description": "Checks if a Linux bridge with a given name exists.", "scope": "", "scopeKind": ""}, {"name": "int _is_this_interface_available_in_linux_bridge(char * if_name,char * vlanID)", "description": "Checks if a given interface and VLAN ID are part of any Linux bridge.", "scope": "", "scopeKind": ""}, {"name": "int _is_this_interface_available_in_given_linux_bridge(char * if_name,char * br_name,char * vlanID)", "description": "Checks if a given interface with VLAN ID is part of a specific Linux bridge.", "scope": "", "scopeKind": ""}, {"name": "void _get_shell_outputbuffer(char * cmd,char * out,int len)", "description": "Executes a shell command and captures its output into a buffer.", "scope": "", "scopeKind": ""}, {"name": "int insert_VLAN_ConfigEntry(char * groupName,char * vlanID)", "description": "Stores VLAN group and VLAN ID configuration in a linked list.", "scope": "", "scopeKind": ""}, {"name": "int delete_VLAN_ConfigEntry(char * groupName)", "description": "Removes VLAN configuration for a specific group from the linked list.", "scope": "", "scopeKind": ""}, {"name": "int get_vlanId_for_GroupName(const char * groupName,char * vlanID)", "description": "Retrieves the VLAN ID assigned to a VLAN group from the linked list.", "scope": "", "scopeKind": ""}, {"name": "int print_all_vlanId_Configuration(void)", "scope": "", "scopeKind": "", "description": "unavailable"}], "search-terms": ["VLAN group creation", "bridge management", "Linux VLAN configuration", "brctl commands", "vconfig", "VLAN ID mapping", "interface addition/removal", "VLAN configuration list", "Linux bridge existence", "VLAN shell commands"], "state": 2, "file_id": 7034, "knowledge_revision": 20119, "git_revision": "", "ctags": [{"_type": "tag", "name": "_get_shell_outputbuffer", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/hal/source/vlan/vlan_hal.c", "pattern": "/^void _get_shell_outputbuffer(char * cmd, char * out, int len)$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(char * cmd,char * out,int len)"}, {"_type": "tag", "name": "_is_this_group_available_in_linux_bridge", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/hal/source/vlan/vlan_hal.c", "pattern": "/^int _is_this_group_available_in_linux_bridge(char * br_name)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(char * br_name)"}, {"_type": "tag", "name": "_is_this_interface_available_in_given_linux_bridge", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/hal/source/vlan/vlan_hal.c", "pattern": "/^int _is_this_interface_available_in_given_linux_bridge(char * if_name, char * br_name,char *vlan/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(char * if_name,char * br_name,char * vlanID)"}, {"_type": "tag", "name": "_is_this_interface_available_in_linux_bridge", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/hal/source/vlan/vlan_hal.c", "pattern": "/^int _is_this_interface_available_in_linux_bridge(char * if_name, char *vlanID)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(char * if_name,char * vlanID)"}, {"_type": "tag", "name": "delete_VLAN_ConfigEntry", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/hal/source/vlan/vlan_hal.c", "pattern": "/^int delete_VLAN_ConfigEntry(char *groupName)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(char * groupName)"}, {"_type": "tag", "name": "get_vlanId_for_GroupName", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/hal/source/vlan/vlan_hal.c", "pattern": "/^int get_vlanId_for_GroupName(const char *groupName, char *vlanID)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(const char * groupName,char * vlanID)"}, {"_type": "tag", "name": "gpvlan_Config_Head", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/hal/source/vlan/vlan_hal.c", "pattern": "/^vlan_vlanidconfiguration_t *gpvlan_Config_Head = NULL;$/", "language": "C", "typeref": "typename:vlan_vlanidconfiguration_t *", "kind": "variable"}, {"_type": "tag", "name": "insert_VLAN_ConfigEntry", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/hal/source/vlan/vlan_hal.c", "pattern": "/^int insert_VLAN_ConfigEntry(char *groupName, char *vlanID)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(char * groupName,char * vlanID)"}, {"_type": "tag", "name": "print_all_vlanId_Configuration", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/hal/source/vlan/vlan_hal.c", "pattern": "/^int print_all_vlanId_Configuration(void)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(void)"}, {"_type": "tag", "name": "vlan_hal_addGroup", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/hal/source/vlan/vlan_hal.c", "pattern": "/^int vlan_hal_addGroup(const char *groupName, const char *default_vlanID)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(const char * groupName,const char * default_vlanID)"}, {"_type": "tag", "name": "vlan_hal_addInterface", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/hal/source/vlan/vlan_hal.c", "pattern": "/^int vlan_hal_addInterface(const char *groupName, const char *ifName, const char *vlanID)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(const char * groupName,const char * ifName,const char * vlanID)"}, {"_type": "tag", "name": "vlan_hal_delGroup", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/hal/source/vlan/vlan_hal.c", "pattern": "/^int vlan_hal_delGroup(const char *groupName)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(const char * groupName)"}, {"_type": "tag", "name": "vlan_hal_delInterface", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/hal/source/vlan/vlan_hal.c", "pattern": "/^int vlan_hal_delInterface(const char *groupName, const char *ifName, const char *vlanID)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(const char * groupName,const char * ifName,const char * vlanID)"}, {"_type": "tag", "name": "vlan_hal_delete_all_Interfaces", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/hal/source/vlan/vlan_hal.c", "pattern": "/^int vlan_hal_delete_all_Interfaces(const char *groupName)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(const char * groupName)"}, {"_type": "tag", "name": "vlan_hal_printAllGroup", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/hal/source/vlan/vlan_hal.c", "pattern": "/^int vlan_hal_printAllGroup( void )$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(void)"}, {"_type": "tag", "name": "vlan_hal_printGroup", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/hal/source/vlan/vlan_hal.c", "pattern": "/^int vlan_hal_printGroup(const char *groupName)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(const char * groupName)"}], "hash": "b177d3d6502db6a5fc9e8e9887ffa2fa", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "rdkb/components/opensource/ccsp/hal/source/vlan/vlan_hal.c", "fields": [{"name": "vlan_vlanidconfiguration_t * gpvlan_Config_Head", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"20119": ""}]}