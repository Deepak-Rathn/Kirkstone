{"is_source_file": true, "format": "bash script", "description": "This file is a shell script used for managing GRE tunnels and hotspot functionalities in a network device. It contains functions to create, delete, and configure GRE tunnels, manage hotspot-specific parameters, and set related firewall rules.", "external_files": ["psmcli", "sysevent", "dmcli", "/fss/gw/usr/ccsp"], "external_methods": ["psmcli get", "psmcli set", "psmcli getallinst", "sysevent get", "sysevent set", "sysevent setunique", "sysevent async", "dmcli eRT setv", "killall"], "published": ["igre-start", "igre-stop", "igre-hotspot-stop", "ipv6_dhcp6_addr", "igre-bringup-gre-hs", "hotspotfd-tunnelEP", "wan-status"], "classes": [], "methods": [{"name": "read_init_params", "description": "Reads parameters required for hotspot initialization, including remote endpoints and keepalive configurations from psmcli."}, {"name": "init_snooper_sysevents", "description": "Sets system events for hotspot DHCP Snooping based on current configuration."}, {"name": "init_keepalive_sysevents", "description": "Sets system events related to keepalive policies and thresholds."}, {"name": "kill_procs", "description": "Kills the hotspot and arp processes related to a GRE tunnel instance."}, {"name": "get_ssids", "description": "Retrieves SSIDs associated with the hotspot bridge and updates psmcli with this information."}, {"name": "set_ssids_enabled", "description": "Enables or disables SSIDs and related WiFi settings for hotspot operation."}, {"name": "check_ssids", "description": "Checks current network status and enables or disables SSIDs accordingly based on WAN and remote endpoint status."}, {"name": "set_apisolation", "description": "Sets API isolation on all associated SSIDs for security."}, {"name": "kick_clients", "description": "Removes associated clients from SSIDs by triggering a disconnect."}, {"name": "start_hotspot", "description": "Initializes and starts hotspot processes for a given GRE tunnel instance."}, {"name": "create_tunnel", "description": "Creates a GRE tunnel with specified remote endpoint and configures its interface."}, {"name": "set_br_fw_rules", "description": "Configures firewall rules for a GRE tunnel and associated bridge."}, {"name": "configure_hotspot", "description": "Configures hotspot parameters and sets up firewall rules for a given GRE tunnel instance and bridge."}, {"name": "set_firewall_rules", "description": "Determines if a bridge is a hotspot bridge and configures appropriate firewall rules."}, {"name": "bring_up_bridge_on_boot", "description": "Brings up a network bridge if it is down or not active."}, {"name": "stop_hotspot", "description": "Stops hotspot services, deletes GRE interface, and resets relevant configurations."}, {"name": "delete_tunnel", "description": "Deletes a GRE tunnel instance and its associated interface."}, {"name": "find_active_gre_tunnels", "description": "Finds currently active GRE tunnels and recreates them if necessary, handling tunnel deletion and creation."}], "calls": ["psmcli get", "psmcli set", "psmcli getallinst", "sysevent get", "sysevent set", "sysevent setunique", "sysevent async", "dmcli eRT setv", "killall"], "search-terms": ["GRE tunnel management", "hotspot hotspotfd-tunnelEP", "firewall rules GRE", "multinet", "hotspot bridge", "create_tunnel", "delete_tunnel", "sysevent", "psmcli", "iptables"], "state": 2, "file_id": 7559, "knowledge_revision": 20635, "git_revision": "", "hash": "50545309b0b1dd9ee5550163b6aaf25f", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "rdkb/components/opensource/ccsp/Utopia/source/scripts/init/service.d/service_multinet/service_gre.sh", "revision_history": [{"20635": ""}]}