{"is_source_file": true, "format": "Python", "description": "This file defines support for variable typing in the OpenEmbedded build system, including type registration, factory creation, and utility functions for handling types and their flags.", "external_files": ["oe.types"], "external_methods": ["inspect.signature"], "published": ["available_types", "MissingFlag", "factory", "create", "get_callable_args", "factory_setup", "register"], "classes": [{"name": "MissingFlag", "description": "An exception class raised when a required flag is missing during type construction."}], "methods": [{"name": "factory(var_type)", "description": "Returns the factory object for a given type name.", "scope": "", "scopeKind": ""}, {"name": "create(value, var_type, **flags)", "description": "Creates an instance of a specified type with provided flags and value.", "scope": "", "scopeKind": ""}, {"name": "get_callable_args(obj)", "description": "Extracts argument names and optional arguments for a given callable.", "scope": "", "scopeKind": ""}, {"name": "factory_setup(name, obj)", "description": "Prepares a factory function for use by setting its flags and name.", "scope": "", "scopeKind": ""}, {"name": "register(name, factory)", "description": "Registers a new type with its factory function into the available_types registry.", "scope": "", "scopeKind": ""}, {"name": "__init__(self, flag, type)", "scope": "MissingFlag", "scopeKind": "class", "description": "unavailable"}, {"name": "__str__(self)", "scope": "MissingFlag", "scopeKind": "class", "description": "unavailable"}], "calls": ["inspect.signature", "types.<name>"], "search-terms": ["variable typing", "type registry", "factory creation", "type exceptions", "OpenEmbedded types"], "state": 2, "file_id": 1830, "knowledge_revision": 14972, "git_revision": "", "ctags": [{"_type": "tag", "name": "MissingFlag", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/maketype.py", "pattern": "/^class MissingFlag(TypeError):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/maketype.py", "pattern": "/^    def __init__(self, flag, type):$/", "language": "Python", "kind": "member", "signature": "(self, flag, type)", "scope": "MissingFlag", "scopeKind": "class"}, {"_type": "tag", "name": "__str__", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/maketype.py", "pattern": "/^    def __str__(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "MissingFlag", "scopeKind": "class"}, {"_type": "tag", "name": "available_types", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/maketype.py", "pattern": "/^available_types = {}$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "create", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/maketype.py", "pattern": "/^def create(value, var_type, **flags):$/", "language": "Python", "kind": "function", "signature": "(value, var_type, **flags)"}, {"_type": "tag", "name": "factory", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/maketype.py", "pattern": "/^def factory(var_type):$/", "language": "Python", "kind": "function", "signature": "(var_type)"}, {"_type": "tag", "name": "factory_setup", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/maketype.py", "pattern": "/^def factory_setup(name, obj):$/", "language": "Python", "kind": "function", "signature": "(name, obj)"}, {"_type": "tag", "name": "get_callable_args", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/maketype.py", "pattern": "/^def get_callable_args(obj):$/", "language": "Python", "kind": "function", "signature": "(obj)"}, {"_type": "tag", "name": "obj", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/maketype.py", "pattern": "/^    obj = getattr(types, name)$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "register", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/maketype.py", "pattern": "/^def register(name, factory):$/", "language": "Python", "kind": "function", "signature": "(name, factory)"}, {"_type": "tag", "name": "types", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/maketype.py", "pattern": "/^import oe.types as types$/", "language": "Python", "kind": "namespace", "nameref": "module:oe.types"}], "hash": "22635f43718965a2769394566c92c60a", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "openembedded-core/meta/lib/oe/maketype.py", "fields": [{"name": "available_types = {}", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "obj = getattr(types, name)", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"14972": ""}]}