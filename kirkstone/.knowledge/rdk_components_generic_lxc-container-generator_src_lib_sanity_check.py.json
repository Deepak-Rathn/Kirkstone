{"is_source_file": true, "format": "Python", "description": "This file defines classes related to sanity checks for configuring container environments, including tag validation, range validation, and configuration parsing.", "external_files": ["os", "sys", "configparser", "os.path", "distutils.log"], "external_methods": ["os.path.exists", "os.path.islink", "sys.maxsize", "info"], "published": ["cSanityCheck", "cTag", "cRangeTag"], "classes": [{"name": "cTag", "description": "Represents a configuration tag with allowed values and validation methods."}, {"name": "cRangeTag", "description": "Represents a range-based tag with range validation."}, {"name": "cSanityCheck", "description": "Performs various validation and parsing of container configuration files and tags, including directory validation, mount options, and tag/range validation."}], "methods": [{"name": "cTag.__init__", "description": "Initializes a tag with a name and prepares the allowed values list."}, {"name": "cTag.getName", "description": "Returns the name of the tag."}, {"name": "cTag.getValue", "description": "Returns the current value of the tag."}, {"name": "cTag.setAllowedValue", "description": "Adds an allowed value for the tag."}, {"name": "cTag.isAllowed", "description": "Checks if a value is allowed for this tag."}, {"name": "cTag.inSet", "description": "Checks if the current value of the tag matches a set of string constraints."}, {"name": "cTag.setValue", "description": "Sets the value of the tag if it is allowed."}, {"name": "cRangeTag.__init__", "description": "Initializes a range tag with a name and default value zero."}, {"name": "cRangeTag.getName", "description": "Returns the name of the range tag."}, {"name": "cRangeTag.getValue", "description": "Returns the current numeric value of the range tag."}, {"name": "cRangeTag.inRange", "description": "Checks if the current value falls within a given range string."}, {"name": "cRangeTag.isAllowed", "description": "Checks if a value is a non-negative integer."}, {"name": "cRangeTag.setValue", "description": "Sets the value of the range tag if it passes validation."}, {"name": "cSanityCheck.__init__", "description": "Initializes the sanity check object, loads configuration, and parses tags."}, {"name": "cSanityCheck.paresConfig", "description": "Reads configuration files and populates executable and writable directories, as well as tags and range tags."}, {"name": "cSanityCheck.parseTags", "description": "Parses tags string into internal tag objects."}, {"name": "cSanityCheck.isPrivileged", "description": "Returns whether the container is privileged."}, {"name": "cSanityCheck.getPlatformSettings", "description": "Constructs a string representing current tag values."}, {"name": "cSanityCheck.getName", "description": "Returns the name of the sanity check configuration."}, {"name": "cSanityCheck.validateTextEntry", "description": "Checks if a text entry from the configuration is valid."}, {"name": "cSanityCheck.pathExist", "description": "Checks if a given path exists or is a symlink within the root filesystem path."}, {"name": "cSanityCheck.isWritable", "description": "Checks if a directory is writable based on writable directories list."}, {"name": "cSanityCheck.isExecutable", "description": "Checks if a directory is marked as executable."}, {"name": "cSanityCheck.validateOptions", "description": "Validates mount options based on configuration and system rules."}, {"name": "cSanityCheck.validateMountBind", "description": "Validates whether a mount bind exists if required."}, {"name": "cSanityCheck.addDir", "description": "Adds a directory to the directory list for nested mount checks."}, {"name": "cSanityCheck.checkNestedMountBinds", "description": "Checks if a mount bind is nested within any directories in the list."}, {"name": "cSanityCheck.validateTags", "description": "Validates tags attached to an XML node against the defined rules."}, {"name": "cSanityCheck.validateAutoMount", "description": "Checks if an auto-mount entry has a valid option."}, {"name": "cSanityCheck.report_skipping_entry", "description": "Logs a message when skipping an entry in the configuration."}, {"name": "cSanityCheck.filter_out_inactive_tags", "description": "Removes inactive tags from an XML config tree based on validation rules."}, {"name": "__init__(self, filename, privileged, name, rootfsPath, confPath, givenTags, enableMountCheck)", "scope": "cSanityCheck", "scopeKind": "class", "description": "unavailable"}, {"name": "__init__(self, name)", "scope": "cTag", "scopeKind": "class", "description": "unavailable"}, {"name": "addDir(self, dir)", "scope": "cSanityCheck", "scopeKind": "class", "description": "unavailable"}, {"name": "c_default(node)", "scope": "cSanityCheck.report_skipping_entry", "scopeKind": "member", "description": "unavailable"}, {"name": "c_env_libs(node)", "scope": "cSanityCheck.report_skipping_entry", "scopeKind": "member", "description": "unavailable"}, {"name": "c_env_mpoint(node)", "scope": "cSanityCheck.report_skipping_entry", "scopeKind": "member", "description": "unavailable"}, {"name": "c_env_var(node)", "scope": "cSanityCheck.report_skipping_entry", "scopeKind": "member", "description": "unavailable"}, {"name": "checkNestedMountBinds(self, mountBind)", "scope": "cSanityCheck", "scopeKind": "class", "description": "unavailable"}, {"name": "filter_out_inactive_tags(self,node,path=None)", "scope": "cSanityCheck", "scopeKind": "class", "description": "unavailable"}, {"name": "getName(self)", "scope": "cTag", "scopeKind": "class", "description": "unavailable"}, {"name": "getPlatformSettings(self)", "scope": "cSanityCheck", "scopeKind": "class", "description": "unavailable"}, {"name": "getValue(self)", "scope": "cTag", "scopeKind": "class", "description": "unavailable"}, {"name": "inRange(self, rrange)", "scope": "cRangeTag", "scopeKind": "class", "description": "unavailable"}, {"name": "inSet(self, tagvaluestring)", "scope": "cTag", "scopeKind": "class", "description": "unavailable"}, {"name": "isAllowed(self, value)", "scope": "cTag", "scopeKind": "class", "description": "unavailable"}, {"name": "isExecutable(self, dir)", "scope": "cSanityCheck", "scopeKind": "class", "description": "unavailable"}, {"name": "isPrivileged(self)", "scope": "cSanityCheck", "scopeKind": "class", "description": "unavailable"}, {"name": "isWritable(self, dir)", "scope": "cSanityCheck", "scopeKind": "class", "description": "unavailable"}, {"name": "matched(value, tagvaluestring)", "scope": "cTag.inSet", "scopeKind": "member", "description": "unavailable"}, {"name": "paresConfig(self)", "scope": "cSanityCheck", "scopeKind": "class", "description": "unavailable"}, {"name": "parseTags(self, tagsString)", "scope": "cSanityCheck", "scopeKind": "class", "description": "unavailable"}, {"name": "pathExist(self, path)", "scope": "cSanityCheck", "scopeKind": "class", "description": "unavailable"}, {"name": "report_skipping_entry(self, node, path)", "scope": "cSanityCheck", "scopeKind": "class", "description": "unavailable"}, {"name": "setAllowedValue(self, value)", "scope": "cTag", "scopeKind": "class", "description": "unavailable"}, {"name": "setValue(self, value)", "scope": "cTag", "scopeKind": "class", "description": "unavailable"}, {"name": "validateAutoMount(self, entry)", "scope": "cSanityCheck", "scopeKind": "class", "description": "unavailable"}, {"name": "validateMountBind(self, mountBind, options)", "scope": "cSanityCheck", "scopeKind": "class", "description": "unavailable"}, {"name": "validateOptions(self, mountBind, fsType, options)", "scope": "cSanityCheck", "scopeKind": "class", "description": "unavailable"}, {"name": "validateTags(self,node)", "scope": "cSanityCheck", "scopeKind": "class", "description": "unavailable"}, {"name": "validateTextEntry(self, entry)", "scope": "cSanityCheck", "scopeKind": "class", "description": "unavailable"}], "calls": ["config.read", "os.path.exists", "os.path.islink", "config.get", "config.options", "sys.maxsize", "info"], "search-terms": ["SanityCheck", "cTag", "cRangeTag", "config", "validation", "container configuration", "mount options", "tag validation", "config parsing"], "state": 2, "file_id": 13038, "knowledge_revision": 25955, "git_revision": "", "ctags": [{"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/lxc-container-generator/src/lib/sanity_check.py", "pattern": "/^    def __init__(self, filename, privileged, name, rootfsPath, confPath, givenTags, enableMountC/", "language": "Python", "kind": "member", "signature": "(self, filename, privileged, name, rootfsPath, confPath, givenTags, enableMountCheck)", "scope": "cSanityCheck", "scopeKind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/lxc-container-generator/src/lib/sanity_check.py", "pattern": "/^    def __init__(self, name):$/", "language": "Python", "kind": "member", "signature": "(self, name)", "scope": "cRangeTag", "scopeKind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/lxc-container-generator/src/lib/sanity_check.py", "pattern": "/^    def __init__(self, name):$/", "language": "Python", "kind": "member", "signature": "(self, name)", "scope": "cTag", "scopeKind": "class"}, {"_type": "tag", "name": "addDir", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/lxc-container-generator/src/lib/sanity_check.py", "pattern": "/^    def addDir(self, dir):$/", "language": "Python", "kind": "member", "signature": "(self, dir)", "scope": "cSanityCheck", "scopeKind": "class"}, {"_type": "tag", "name": "cRangeTag", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/lxc-container-generator/src/lib/sanity_check.py", "pattern": "/^class cRangeTag(object):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "cSanityCheck", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/lxc-container-generator/src/lib/sanity_check.py", "pattern": "/^class cSanityCheck(object):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "cTag", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/lxc-container-generator/src/lib/sanity_check.py", "pattern": "/^class cTag(object):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "c_default", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/lxc-container-generator/src/lib/sanity_check.py", "pattern": "/^        def c_default(node):$/", "file": true, "language": "Python", "kind": "function", "signature": "(node)", "scope": "cSanityCheck.report_skipping_entry", "scopeKind": "member"}, {"_type": "tag", "name": "c_env_libs", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/lxc-container-generator/src/lib/sanity_check.py", "pattern": "/^        def c_env_libs(node):$/", "file": true, "language": "Python", "kind": "function", "signature": "(node)", "scope": "cSanityCheck.report_skipping_entry", "scopeKind": "member"}, {"_type": "tag", "name": "c_env_mpoint", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/lxc-container-generator/src/lib/sanity_check.py", "pattern": "/^        def c_env_mpoint(node):$/", "file": true, "language": "Python", "kind": "function", "signature": "(node)", "scope": "cSanityCheck.report_skipping_entry", "scopeKind": "member"}, {"_type": "tag", "name": "c_env_var", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/lxc-container-generator/src/lib/sanity_check.py", "pattern": "/^        def c_env_var(node):$/", "file": true, "language": "Python", "kind": "function", "signature": "(node)", "scope": "cSanityCheck.report_skipping_entry", "scopeKind": "member"}, {"_type": "tag", "name": "checkNestedMountBinds", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/lxc-container-generator/src/lib/sanity_check.py", "pattern": "/^    def checkNestedMountBinds(self, mountBind):$/", "language": "Python", "kind": "member", "signature": "(self, mountBind)", "scope": "cSanityCheck", "scopeKind": "class"}, {"_type": "tag", "name": "filter_out_inactive_tags", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/lxc-container-generator/src/lib/sanity_check.py", "pattern": "/^    def filter_out_inactive_tags(self,node,path=None):$/", "language": "Python", "kind": "member", "signature": "(self,node,path=None)", "scope": "cSanityCheck", "scopeKind": "class"}, {"_type": "tag", "name": "getName", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/lxc-container-generator/src/lib/sanity_check.py", "pattern": "/^    def getName(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "cRangeTag", "scopeKind": "class"}, {"_type": "tag", "name": "getName", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/lxc-container-generator/src/lib/sanity_check.py", "pattern": "/^    def getName(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "cSanityCheck", "scopeKind": "class"}, {"_type": "tag", "name": "getName", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/lxc-container-generator/src/lib/sanity_check.py", "pattern": "/^    def getName(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "cTag", "scopeKind": "class"}, {"_type": "tag", "name": "getPlatformSettings", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/lxc-container-generator/src/lib/sanity_check.py", "pattern": "/^    def getPlatformSettings(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "cSanityCheck", "scopeKind": "class"}, {"_type": "tag", "name": "getValue", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/lxc-container-generator/src/lib/sanity_check.py", "pattern": "/^    def getValue(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "cRangeTag", "scopeKind": "class"}, {"_type": "tag", "name": "getValue", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/lxc-container-generator/src/lib/sanity_check.py", "pattern": "/^    def getValue(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "cTag", "scopeKind": "class"}, {"_type": "tag", "name": "inRange", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/lxc-container-generator/src/lib/sanity_check.py", "pattern": "/^    def inRange(self, rrange):$/", "language": "Python", "kind": "member", "signature": "(self, rrange)", "scope": "cRangeTag", "scopeKind": "class"}, {"_type": "tag", "name": "inSet", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/lxc-container-generator/src/lib/sanity_check.py", "pattern": "/^    def inSet(self, tagvaluestring):$/", "language": "Python", "kind": "member", "signature": "(self, tagvaluestring)", "scope": "cTag", "scopeKind": "class"}, {"_type": "tag", "name": "isAllowed", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/lxc-container-generator/src/lib/sanity_check.py", "pattern": "/^    def isAllowed(self, value):$/", "language": "Python", "kind": "member", "signature": "(self, value)", "scope": "cRangeTag", "scopeKind": "class"}, {"_type": "tag", "name": "isAllowed", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/lxc-container-generator/src/lib/sanity_check.py", "pattern": "/^    def isAllowed(self, value):$/", "language": "Python", "kind": "member", "signature": "(self, value)", "scope": "cTag", "scopeKind": "class"}, {"_type": "tag", "name": "isExecutable", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/lxc-container-generator/src/lib/sanity_check.py", "pattern": "/^    def isExecutable(self, dir):$/", "language": "Python", "kind": "member", "signature": "(self, dir)", "scope": "cSanityCheck", "scopeKind": "class"}, {"_type": "tag", "name": "isPrivileged", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/lxc-container-generator/src/lib/sanity_check.py", "pattern": "/^    def isPrivileged(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "cSanityCheck", "scopeKind": "class"}, {"_type": "tag", "name": "isWritable", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/lxc-container-generator/src/lib/sanity_check.py", "pattern": "/^    def isWritable(self, dir):$/", "language": "Python", "kind": "member", "signature": "(self, dir)", "scope": "cSanityCheck", "scopeKind": "class"}, {"_type": "tag", "name": "matched", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/lxc-container-generator/src/lib/sanity_check.py", "pattern": "/^        def matched(value, tagvaluestring):$/", "file": true, "language": "Python", "kind": "function", "signature": "(value, tagvaluestring)", "scope": "cTag.inSet", "scopeKind": "member"}, {"_type": "tag", "name": "paresConfig", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/lxc-container-generator/src/lib/sanity_check.py", "pattern": "/^    def paresConfig(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "cSanityCheck", "scopeKind": "class"}, {"_type": "tag", "name": "parseTags", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/lxc-container-generator/src/lib/sanity_check.py", "pattern": "/^    def parseTags(self, tagsString):$/", "language": "Python", "kind": "member", "signature": "(self, tagsString)", "scope": "cSanityCheck", "scopeKind": "class"}, {"_type": "tag", "name": "pathExist", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/lxc-container-generator/src/lib/sanity_check.py", "pattern": "/^    def pathExist(self, path):$/", "language": "Python", "kind": "member", "signature": "(self, path)", "scope": "cSanityCheck", "scopeKind": "class"}, {"_type": "tag", "name": "report_skipping_entry", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/lxc-container-generator/src/lib/sanity_check.py", "pattern": "/^    def report_skipping_entry(self, node, path):$/", "language": "Python", "kind": "member", "signature": "(self, node, path)", "scope": "cSanityCheck", "scopeKind": "class"}, {"_type": "tag", "name": "setAllowedValue", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/lxc-container-generator/src/lib/sanity_check.py", "pattern": "/^    def setAllowedValue(self, value):$/", "language": "Python", "kind": "member", "signature": "(self, value)", "scope": "cTag", "scopeKind": "class"}, {"_type": "tag", "name": "setValue", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/lxc-container-generator/src/lib/sanity_check.py", "pattern": "/^    def setValue(self, value):$/", "language": "Python", "kind": "member", "signature": "(self, value)", "scope": "cRangeTag", "scopeKind": "class"}, {"_type": "tag", "name": "setValue", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/lxc-container-generator/src/lib/sanity_check.py", "pattern": "/^    def setValue(self, value):$/", "language": "Python", "kind": "member", "signature": "(self, value)", "scope": "cTag", "scopeKind": "class"}, {"_type": "tag", "name": "validateAutoMount", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/lxc-container-generator/src/lib/sanity_check.py", "pattern": "/^    def validateAutoMount(self, entry):$/", "language": "Python", "kind": "member", "signature": "(self, entry)", "scope": "cSanityCheck", "scopeKind": "class"}, {"_type": "tag", "name": "validateMountBind", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/lxc-container-generator/src/lib/sanity_check.py", "pattern": "/^    def validateMountBind(self, mountBind, options):$/", "language": "Python", "kind": "member", "signature": "(self, mountBind, options)", "scope": "cSanityCheck", "scopeKind": "class"}, {"_type": "tag", "name": "validateOptions", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/lxc-container-generator/src/lib/sanity_check.py", "pattern": "/^    def validateOptions(self, mountBind, fsType, options):$/", "language": "Python", "kind": "member", "signature": "(self, mountBind, fsType, options)", "scope": "cSanityCheck", "scopeKind": "class"}, {"_type": "tag", "name": "validateTags", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/lxc-container-generator/src/lib/sanity_check.py", "pattern": "/^    def validateTags(self,node):$/", "language": "Python", "kind": "member", "signature": "(self,node)", "scope": "cSanityCheck", "scopeKind": "class"}, {"_type": "tag", "name": "validateTextEntry", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/lxc-container-generator/src/lib/sanity_check.py", "pattern": "/^    def validateTextEntry(self, entry):$/", "language": "Python", "kind": "member", "signature": "(self, entry)", "scope": "cSanityCheck", "scopeKind": "class"}], "hash": "ae9ce0e527393e1ff98b6fd2872c81fb", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "rdk/components/generic/lxc-container-generator/src/lib/sanity_check.py", "revision_history": [{"25955": ""}]}