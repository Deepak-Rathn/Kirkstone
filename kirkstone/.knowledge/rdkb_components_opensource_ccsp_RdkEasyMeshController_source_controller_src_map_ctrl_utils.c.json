{"is_source_file": true, "format": "C", "description": "This file contains C source code implementing utility functions for RdkEasyMeshController, including handling of WLAN channel configurations, capabilities, and interface management in a wireless network controller firmware or software component.", "external_files": ["map_ctrl_utils.h", "map_ctrl_cmdu_tx.h", "map_ctrl_topology_tree.h", "map_info.h", "map_80211.h", "arraylist.h", "map_topology_tree.h"], "external_methods": ["map_is_channel_in_op_class", "map_cs_nr", "map_cs_is_set", "map_cs_set", "map_cs_unset", "map_cs_bw_set", "map_cs_bw_unset", "map_get_bw_from_op_class", "map_get_band_from_op_class", "map_get_channel_set_from_op_class", "map_get_is_center_channel_from_op_class", "map_get_center_channel", "map_get_subband_channel_range", "map_is_loopback_iface", "map_dc_foreach_radio", "map_dm_foreach_radio", "map_dm_foreach_agent_ale", "map_is_local_agent", "map_sort_op_class_list", "map_optimize_pref_op_class_list", "map_get_channel_in_op_class", "map_cs_unset_all", "map_cs_bw_unset_all", "map_sort_op_class_list", "map_get_m2_config", "log_ctrl_e", "log_ctrl_i", "maccmp", "map_is_5G_low_ctl_channel", "map_is_5G_high_ctl_channel", "map_get_is_center_channel_from_op_class", "map_get_center_channel", "map_get_channel_set_from_op_class"], "published": ["get_controller_cfg", "map_update_ale_receiving_iface", "parse_update_client_capability", "map_recompute_radio_state_and_update_ale_state", "map_reset_agent_node_onboarding_status", "map_reset_all_agent_nodes_onboarding_status", "map_convert_mapunits_to_bytes", "map_scan_status_to_string", "map_scan_type_to_string", "map_find_radio_by_supported_channel", "map_get_freq_bands", "map_is_5g_low_high", "map_get_profile_from_bss", "map_radio_has_profile_with_bss_state", "map_get_wsc_attr", "map_is_channel_in_cap_op_class", "map_get_channel_pref", "map_update_radio_channels", "map_merge_pref_op_class_list", "map_is_no_subband_channel_set", "map_is_all_subband_channel_set", "map_sort_op_class_list", "map_is_cac_request_valid", "map_find_local_iface", "map_find_bhsta_iface_from_ale", "map_find_bhsta_iface_gbl", "map_free_ht_vht_he_wifi6_caps", "map_update_radio_caps"], "classes": [{"name": "map_op_class_t", "description": "Represents an operational class with associated channels and preferences."}, {"name": "map_op_class_list_t", "description": "Encapsulates a list of op_class structures and their count."}, {"name": "map_radio_info_t", "description": "Contains information regarding a radio's capabilities, supported frequency bands, channels, and associated interfaces."}, {"name": "map_ale_info_t", "description": "Represents an Access Layer Entity with associated radios and interfaces."}, {"name": "map_profile_cfg_t", "description": "Configuration profile for a wireless network, including SSID, MAC address, and capabilities."}, {"name": "map_bss_info_t", "description": "Information about a Basic Service Set, including SSID, radio, and profile details."}], "methods": [{"name": "map_controller_cfg_t * get_controller_cfg()", "description": "Returns the current controller configuration settings.", "scope": "", "scopeKind": ""}, {"name": "void map_update_ale_receiving_iface(map_ale_info_t * ale,char * if_name)", "description": "Updates the interface name for an ALE and checks whether it's colocated with the controller.", "scope": "", "scopeKind": ""}, {"name": "int parse_update_client_capability(map_sta_info_t * sta,uint16_t assoc_frame_len,uint8_t * assoc_frame)", "description": "Parses client capabilities from an association frame and updates the station info.", "scope": "", "scopeKind": ""}, {"name": "void map_recompute_radio_state_and_update_ale_state(map_ale_info_t * ale)", "description": "Recalculates the onboarding state for an ALE based on radio states and updates the data model.", "scope": "", "scopeKind": ""}, {"name": "void map_reset_agent_node_onboarding_status(map_ale_info_t * ale)", "description": "Resets a specific agent node's onboarding status to the default onboarding state.", "scope": "", "scopeKind": ""}, {"name": "void map_reset_all_agent_nodes_onboarding_status(void)", "description": "Resets onboarding status for all agent nodes to onboarding state.", "scope": "", "scopeKind": ""}, {"name": "uint64_t map_convert_mapunits_to_bytes(uint32_t val,uint8_t unit)", "description": "Converts a value in map units to bytes based on the specified unit type.", "scope": "", "scopeKind": ""}, {"name": "const char * map_scan_status_to_string(uint8_t scan_status)", "description": "Converts a scan status code to a human-readable string.", "scope": "", "scopeKind": ""}, {"name": "const char * map_scan_type_to_string(uint8_t scan_type)", "description": "Converts a scan type code to a human-readable string.", "scope": "", "scopeKind": ""}, {"name": "map_radio_info_t * map_find_radio_by_supported_channel(map_ale_info_t * ale,int channel)", "description": "Finds a radio interface that supports a given channel.", "scope": "", "scopeKind": ""}, {"name": "uint16_t map_get_freq_bands(map_radio_info_t * radio)", "description": "Determines supported frequency bands for a given radio.", "scope": "", "scopeKind": ""}, {"name": "bool map_is_5g_low_high(map_radio_info_t * radio)", "description": "Checks if a radio supports both low and high 5 GHz bands.", "scope": "", "scopeKind": ""}, {"name": "map_profile_cfg_t * map_get_profile_from_bss(map_bss_info_t * bss)", "description": "Finds the profile used to configure a specific BSS.", "scope": "", "scopeKind": ""}, {"name": "bool map_radio_has_profile_with_bss_state(map_radio_info_t * radio,uint8_t bss_state)", "description": "Checks if a radio has a profile matching a specified BSS state.", "scope": "", "scopeKind": ""}, {"name": "uint8_t * map_get_wsc_attr(uint8_t * message,uint16_t message_size,uint16_t attr_type,uint16_t * attr_len)", "description": "Extracts a specific WSC attribute from a message.", "scope": "", "scopeKind": ""}, {"name": "bool map_is_channel_in_cap_op_class(map_op_class_t * cap_op_class,uint8_t channel)", "description": "Checks if a channel is supported within a given capability operation class.", "scope": "", "scopeKind": ""}, {"name": "uint8_t map_get_channel_pref(map_op_class_list_t * list,uint8_t op_class,uint8_t channel)", "description": "Retrieves the preference score for a specific channel within an op_class list.", "scope": "", "scopeKind": ""}, {"name": "void map_update_radio_channels(map_radio_info_t * radio)", "description": "Updates the set of supported channels for a radio based on configuration and capabilities.", "scope": "", "scopeKind": ""}, {"name": "int map_merge_pref_op_class_list(map_op_class_list_t * merged_list,map_op_class_list_t * cap_list,map_op_class_list_t * list1,map_op_class_list_t * list2)", "description": "Merges two preference-based op_class lists into a single list with optimized priorities.", "scope": "", "scopeKind": ""}, {"name": "bool map_is_no_subband_channel_set(map_channel_set_t * channels,uint8_t chan,uint8_t op_class)", "description": "Checks whether all sub-band channels for a given channel and op_class are unset in the provided list.", "scope": "", "scopeKind": ""}, {"name": "bool map_is_all_subband_channel_set(map_channel_set_t * channels,uint8_t chan,uint8_t op_class)", "description": "Checks whether all sub-band channels for a given channel and op_class are set in the provided list.", "scope": "", "scopeKind": ""}, {"name": "void map_sort_op_class_list(map_op_class_list_t * list)", "description": "Sorts the list of op_classes based on their class number and preference.", "scope": "", "scopeKind": ""}, {"name": "bool map_is_cac_request_valid(map_radio_info_t * radio,uint8_t cac_method,uint8_t op_class,uint8_t channel)", "description": "Validates whether a CAC (Channel Access Classifier) request is supported by the radio and its capabilities.", "scope": "", "scopeKind": ""}, {"name": "map_local_iface_t * map_find_local_iface(map_ale_info_t * ale,mac_addr mac)", "description": "Finds a local interface associated with an ALE by MAC address.", "scope": "", "scopeKind": ""}, {"name": "map_backhaul_sta_iface_t * map_find_bhsta_iface_from_ale(map_ale_info_t * ale,mac_addr sta_mac)", "description": "Finds a backhaul station interface within an ALE by MAC address.", "scope": "", "scopeKind": ""}, {"name": "map_backhaul_sta_iface_t * map_find_bhsta_iface_gbl(mac_addr sta_mac,map_ale_info_t ** ret_ale)", "description": "Finds a backhaul station interface across all ALEs by MAC address.", "scope": "", "scopeKind": ""}, {"name": "void map_free_ht_vht_he_wifi6_caps(map_radio_info_t * radio)", "description": "Frees the memory allocated for various radio capabilities.", "scope": "", "scopeKind": ""}, {"name": "void map_update_radio_caps(map_radio_info_t * radio)", "description": "Updates the capabilities of a radio based on its supported standards (HT, VHT, HE).", "scope": "", "scopeKind": ""}, {"name": "void check_add_op_class_channel(map_op_class_list_t * merged_list,map_op_class_list_t * cap_list,map_op_class_list_t * other_list,map_op_class_t * op_class,uint8_t channel)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int comp_op_class(const void * obj1,const void * obj2)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "map_op_class_t * find_op_class(map_op_class_list_t * list,uint8_t op_class_nr,uint8_t channel,bool in_channel_list)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "uint8_t get_channel_pref(map_op_class_list_t * list,uint8_t op_class_nr,uint8_t channel)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "bool is_channel_operable(map_op_class_list_t * cap_list,uint8_t op_class_nr,uint8_t channel)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "void map_cs_bw_set_with_bandlock_check(map_channel_bw_set_t * s,uint8_t bw,uint8_t c,bool is_5g_low_high,uint8_t bandlock_action)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "void map_cs_bw_unset_range(map_channel_bw_set_t * s,uint8_t bw,uint8_t c,uint8_t op_class)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "void map_optimize_pref_op_class_list(map_op_class_list_t * list,map_op_class_list_t * cap_list)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "void merge_pref_op_class_list_add(map_op_class_list_t * merged_list,map_op_class_list_t * cap_list,map_op_class_list_t * add_list,map_op_class_list_t * other_list)", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["map_is_channel_in_op_class", "map_cs_nr", "map_cs_is_set", "map_cs_set", "map_cs_unset", "map_cs_bw_set", "map_cs_bw_unset", "map_get_bw_from_op_class", "map_get_band_from_op_class", "map_get_channel_set_from_op_class", "map_get_is_center_channel_from_op_class", "map_get_center_channel", "map_get_subband_channel_range", "map_is_loopback_iface", "map_dm_foreach_radio", "map_dm_foreach_agent_ale", "map_is_local_agent", "map_sort_op_class_list", "map_optimize_pref_op_class_list", "map_get_channel_in_op_class", "map_cs_unset_all", "map_cs_bw_unset_all", "map_get_m2_config", "log_ctrl_e", "log_ctrl_i", "maccmp", "map_is_5G_low_ctl_channel", "map_is_5G_high_ctl_channel", "map_get_is_center_channel_from_op_class", "map_get_center_channel", "map_get_channel_set_from_op_class"], "search-terms": ["map_ctrl_utils", "controller", "op_class", "radio_capabilities", "channel_configuration", "ALE", "BSS", "capabilities", "channel_list", "wireless_network", "80211"], "state": 2, "file_id": 8554, "knowledge_revision": 21593, "git_revision": "", "ctags": [{"_type": "tag", "name": "LOG_TAG", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/RdkEasyMeshController/source/controller/src/map_ctrl_utils.c", "pattern": "/^#define LOG_TAG /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "check_add_op_class_channel", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/RdkEasyMeshController/source/controller/src/map_ctrl_utils.c", "pattern": "/^static void check_add_op_class_channel(map_op_class_list_t *merged_list, map_op_class_list_t *ca/", "file": true, "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(map_op_class_list_t * merged_list,map_op_class_list_t * cap_list,map_op_class_list_t * other_list,map_op_class_t * op_class,uint8_t channel)"}, {"_type": "tag", "name": "comp_op_class", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/RdkEasyMeshController/source/controller/src/map_ctrl_utils.c", "pattern": "/^static int comp_op_class(const void *obj1, const void *obj2)$/", "file": true, "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(const void * obj1,const void * obj2)"}, {"_type": "tag", "name": "find_op_class", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/RdkEasyMeshController/source/controller/src/map_ctrl_utils.c", "pattern": "/^static map_op_class_t *find_op_class(map_op_class_list_t *list, uint8_t op_class_nr, uint8_t cha/", "file": true, "language": "C", "typeref": "typename:map_op_class_t *", "kind": "function", "signature": "(map_op_class_list_t * list,uint8_t op_class_nr,uint8_t channel,bool in_channel_list)"}, {"_type": "tag", "name": "get_channel_pref", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/RdkEasyMeshController/source/controller/src/map_ctrl_utils.c", "pattern": "/^static uint8_t get_channel_pref(map_op_class_list_t *list, uint8_t op_class_nr, uint8_t channel)$/", "file": true, "language": "C", "typeref": "typename:uint8_t", "kind": "function", "signature": "(map_op_class_list_t * list,uint8_t op_class_nr,uint8_t channel)"}, {"_type": "tag", "name": "get_controller_cfg", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/RdkEasyMeshController/source/controller/src/map_ctrl_utils.c", "pattern": "/^map_controller_cfg_t* get_controller_cfg()$/", "language": "C", "typeref": "typename:map_controller_cfg_t *", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "is_channel_operable", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/RdkEasyMeshController/source/controller/src/map_ctrl_utils.c", "pattern": "/^static bool is_channel_operable(map_op_class_list_t *cap_list, uint8_t op_class_nr, uint8_t chan/", "file": true, "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(map_op_class_list_t * cap_list,uint8_t op_class_nr,uint8_t channel)"}, {"_type": "tag", "name": "map_convert_mapunits_to_bytes", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/RdkEasyMeshController/source/controller/src/map_ctrl_utils.c", "pattern": "/^uint64_t map_convert_mapunits_to_bytes(uint32_t val, uint8_t unit)$/", "language": "C", "typeref": "typename:uint64_t", "kind": "function", "signature": "(uint32_t val,uint8_t unit)"}, {"_type": "tag", "name": "map_cs_bw_set_with_bandlock_check", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/RdkEasyMeshController/source/controller/src/map_ctrl_utils.c", "pattern": "/^static void map_cs_bw_set_with_bandlock_check(map_channel_bw_set_t *s, uint8_t bw, uint8_t c, bo/", "file": true, "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(map_channel_bw_set_t * s,uint8_t bw,uint8_t c,bool is_5g_low_high,uint8_t bandlock_action)"}, {"_type": "tag", "name": "map_cs_bw_unset_range", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/RdkEasyMeshController/source/controller/src/map_ctrl_utils.c", "pattern": "/^static void map_cs_bw_unset_range(map_channel_bw_set_t *s, uint8_t bw, uint8_t c, uint8_t op_cla/", "file": true, "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(map_channel_bw_set_t * s,uint8_t bw,uint8_t c,uint8_t op_class)"}, {"_type": "tag", "name": "map_find_bhsta_iface_from_ale", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/RdkEasyMeshController/source/controller/src/map_ctrl_utils.c", "pattern": "/^map_backhaul_sta_iface_t *map_find_bhsta_iface_from_ale(map_ale_info_t *ale, mac_addr sta_mac)$/", "language": "C", "typeref": "typename:map_backhaul_sta_iface_t *", "kind": "function", "signature": "(map_ale_info_t * ale,mac_addr sta_mac)"}, {"_type": "tag", "name": "map_find_bhsta_iface_gbl", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/RdkEasyMeshController/source/controller/src/map_ctrl_utils.c", "pattern": "/^map_backhaul_sta_iface_t *map_find_bhsta_iface_gbl(mac_addr sta_mac, map_ale_info_t **ret_ale)$/", "language": "C", "typeref": "typename:map_backhaul_sta_iface_t *", "kind": "function", "signature": "(mac_addr sta_mac,map_ale_info_t ** ret_ale)"}, {"_type": "tag", "name": "map_find_local_iface", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/RdkEasyMeshController/source/controller/src/map_ctrl_utils.c", "pattern": "/^map_local_iface_t *map_find_local_iface(map_ale_info_t *ale, mac_addr mac)$/", "language": "C", "typeref": "typename:map_local_iface_t *", "kind": "function", "signature": "(map_ale_info_t * ale,mac_addr mac)"}, {"_type": "tag", "name": "map_find_radio_by_supported_channel", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/RdkEasyMeshController/source/controller/src/map_ctrl_utils.c", "pattern": "/^map_radio_info_t *map_find_radio_by_supported_channel(map_ale_info_t *ale, int channel)$/", "language": "C", "typeref": "typename:map_radio_info_t *", "kind": "function", "signature": "(map_ale_info_t * ale,int channel)"}, {"_type": "tag", "name": "map_free_ht_vht_he_wifi6_caps", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/RdkEasyMeshController/source/controller/src/map_ctrl_utils.c", "pattern": "/^void map_free_ht_vht_he_wifi6_caps(map_radio_info_t *radio)$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(map_radio_info_t * radio)"}, {"_type": "tag", "name": "map_get_channel_pref", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/RdkEasyMeshController/source/controller/src/map_ctrl_utils.c", "pattern": "/^uint8_t map_get_channel_pref(map_op_class_list_t *list, uint8_t op_class, uint8_t channel)$/", "language": "C", "typeref": "typename:uint8_t", "kind": "function", "signature": "(map_op_class_list_t * list,uint8_t op_class,uint8_t channel)"}, {"_type": "tag", "name": "map_get_freq_bands", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/RdkEasyMeshController/source/controller/src/map_ctrl_utils.c", "pattern": "/^uint16_t map_get_freq_bands(map_radio_info_t *radio)$/", "language": "C", "typeref": "typename:uint16_t", "kind": "function", "signature": "(map_radio_info_t * radio)"}, {"_type": "tag", "name": "map_get_profile_from_bss", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/RdkEasyMeshController/source/controller/src/map_ctrl_utils.c", "pattern": "/^map_profile_cfg_t *map_get_profile_from_bss(map_bss_info_t *bss)$/", "language": "C", "typeref": "typename:map_profile_cfg_t *", "kind": "function", "signature": "(map_bss_info_t * bss)"}, {"_type": "tag", "name": "map_get_wsc_attr", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/RdkEasyMeshController/source/controller/src/map_ctrl_utils.c", "pattern": "/^uint8_t *map_get_wsc_attr(uint8_t *message, uint16_t message_size, uint16_t attr_type, uint16_t /", "language": "C", "typeref": "typename:uint8_t *", "kind": "function", "signature": "(uint8_t * message,uint16_t message_size,uint16_t attr_type,uint16_t * attr_len)"}, {"_type": "tag", "name": "map_is_5g_low_high", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/RdkEasyMeshController/source/controller/src/map_ctrl_utils.c", "pattern": "/^bool map_is_5g_low_high(map_radio_info_t *radio)$/", "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(map_radio_info_t * radio)"}, {"_type": "tag", "name": "map_is_all_subband_channel_set", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/RdkEasyMeshController/source/controller/src/map_ctrl_utils.c", "pattern": "/^bool map_is_all_subband_channel_set(map_channel_set_t *channels, uint8_t chan, uint8_t op_class)$/", "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(map_channel_set_t * channels,uint8_t chan,uint8_t op_class)"}, {"_type": "tag", "name": "map_is_cac_request_valid", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/RdkEasyMeshController/source/controller/src/map_ctrl_utils.c", "pattern": "/^bool map_is_cac_request_valid(map_radio_info_t *radio, uint8_t cac_method, uint8_t op_class, uin/", "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(map_radio_info_t * radio,uint8_t cac_method,uint8_t op_class,uint8_t channel)"}, {"_type": "tag", "name": "map_is_channel_in_cap_op_class", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/RdkEasyMeshController/source/controller/src/map_ctrl_utils.c", "pattern": "/^bool map_is_channel_in_cap_op_class(map_op_class_t *cap_op_class, uint8_t channel)$/", "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(map_op_class_t * cap_op_class,uint8_t channel)"}, {"_type": "tag", "name": "map_is_no_subband_channel_set", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/RdkEasyMeshController/source/controller/src/map_ctrl_utils.c", "pattern": "/^bool map_is_no_subband_channel_set(map_channel_set_t *channels, uint8_t chan, uint8_t op_class)$/", "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(map_channel_set_t * channels,uint8_t chan,uint8_t op_class)"}, {"_type": "tag", "name": "map_merge_pref_op_class_list", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/RdkEasyMeshController/source/controller/src/map_ctrl_utils.c", "pattern": "/^int map_merge_pref_op_class_list(map_op_class_list_t *merged_list, map_op_class_list_t *cap_list/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(map_op_class_list_t * merged_list,map_op_class_list_t * cap_list,map_op_class_list_t * list1,map_op_class_list_t * list2)"}, {"_type": "tag", "name": "map_optimize_pref_op_class_list", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/RdkEasyMeshController/source/controller/src/map_ctrl_utils.c", "pattern": "/^void map_optimize_pref_op_class_list(map_op_class_list_t *list, map_op_class_list_t *cap_list)$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(map_op_class_list_t * list,map_op_class_list_t * cap_list)"}, {"_type": "tag", "name": "map_radio_has_profile_with_bss_state", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/RdkEasyMeshController/source/controller/src/map_ctrl_utils.c", "pattern": "/^bool map_radio_has_profile_with_bss_state(map_radio_info_t *radio, uint8_t bss_state)$/", "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(map_radio_info_t * radio,uint8_t bss_state)"}, {"_type": "tag", "name": "map_recompute_radio_state_and_update_ale_state", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/RdkEasyMeshController/source/controller/src/map_ctrl_utils.c", "pattern": "/^void map_recompute_radio_state_and_update_ale_state(map_ale_info_t *ale)$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(map_ale_info_t * ale)"}, {"_type": "tag", "name": "map_reset_agent_node_onboarding_status", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/RdkEasyMeshController/source/controller/src/map_ctrl_utils.c", "pattern": "/^void map_reset_agent_node_onboarding_status(map_ale_info_t *ale)$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(map_ale_info_t * ale)"}, {"_type": "tag", "name": "map_reset_all_agent_nodes_onboarding_status", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/RdkEasyMeshController/source/controller/src/map_ctrl_utils.c", "pattern": "/^void map_reset_all_agent_nodes_onboarding_status(void)$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(void)"}, {"_type": "tag", "name": "map_scan_status_to_string", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/RdkEasyMeshController/source/controller/src/map_ctrl_utils.c", "pattern": "/^const char *map_scan_status_to_string(uint8_t scan_status)$/", "language": "C", "typeref": "typename:const char *", "kind": "function", "signature": "(uint8_t scan_status)"}, {"_type": "tag", "name": "map_scan_type_to_string", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/RdkEasyMeshController/source/controller/src/map_ctrl_utils.c", "pattern": "/^const char* map_scan_type_to_string(uint8_t scan_type)$/", "language": "C", "typeref": "typename:const char *", "kind": "function", "signature": "(uint8_t scan_type)"}, {"_type": "tag", "name": "map_sort_op_class_list", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/RdkEasyMeshController/source/controller/src/map_ctrl_utils.c", "pattern": "/^void map_sort_op_class_list(map_op_class_list_t *list)$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(map_op_class_list_t * list)"}, {"_type": "tag", "name": "map_update_ale_receiving_iface", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/RdkEasyMeshController/source/controller/src/map_ctrl_utils.c", "pattern": "/^void map_update_ale_receiving_iface(map_ale_info_t *ale, char* if_name)$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(map_ale_info_t * ale,char * if_name)"}, {"_type": "tag", "name": "map_update_radio_caps", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/RdkEasyMeshController/source/controller/src/map_ctrl_utils.c", "pattern": "/^void map_update_radio_caps(map_radio_info_t *radio)$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(map_radio_info_t * radio)"}, {"_type": "tag", "name": "map_update_radio_channels", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/RdkEasyMeshController/source/controller/src/map_ctrl_utils.c", "pattern": "/^void map_update_radio_channels(map_radio_info_t *radio)$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(map_radio_info_t * radio)"}, {"_type": "tag", "name": "merge_pref_op_class_list_add", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/RdkEasyMeshController/source/controller/src/map_ctrl_utils.c", "pattern": "/^static void merge_pref_op_class_list_add(map_op_class_list_t *merged_list, map_op_class_list_t */", "file": true, "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(map_op_class_list_t * merged_list,map_op_class_list_t * cap_list,map_op_class_list_t * add_list,map_op_class_list_t * other_list)"}, {"_type": "tag", "name": "min", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/RdkEasyMeshController/source/controller/src/map_ctrl_utils.c", "pattern": "/^#define min(/", "file": true, "language": "C", "kind": "macro", "signature": "(a,b)"}, {"_type": "tag", "name": "parse_update_client_capability", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/RdkEasyMeshController/source/controller/src/map_ctrl_utils.c", "pattern": "/^int parse_update_client_capability(map_sta_info_t *sta, uint16_t assoc_frame_len, uint8_t* assoc/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(map_sta_info_t * sta,uint16_t assoc_frame_len,uint8_t * assoc_frame)"}], "hash": "5d158ee198fdeda0bc6a72e6ad42e38a", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "rdkb/components/opensource/ccsp/RdkEasyMeshController/source/controller/src/map_ctrl_utils.c", "revision_history": [{"21593": ""}]}