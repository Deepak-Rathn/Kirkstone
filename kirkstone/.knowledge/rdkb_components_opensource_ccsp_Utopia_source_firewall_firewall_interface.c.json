{"is_source_file": true, "format": "C", "description": "This source file defines weakly linked functions for firewall operations, including initialization, port filtering, port opening/forwarding, whitelist management, and rule preparation. It also references external headers and contains debug statements for each function.", "external_files": ["sysevent/sysevent.h", "syscfg/syscfg.h", "firewall_custom.h"], "external_methods": [], "published": ["firewall_lib_init", "firewall_lib_deinit", "filterPortMap", "do_openPorts", "do_forwardPorts", "do_OpenVideoAnalyticsPort", "do_ssh_IpAccessTable", "do_snmp_IpAccessTable", "do_tr69_whitelistTable", "prepare_xconf_rules", "prepare_rabid_rules", "update_rabid_features_status", "prepare_rabid_rules_for_mapt", "ethwan_mso_gui_acess_rules"], "classes": [], "methods": [{"name": "int firewall_lib_init(void * bus_handle,int sysevent_fd,token_t sysevent_token)", "description": "Weakly linked initialization function for firewall library, with parameters for bus handle, sys event file descriptor, and sys event token.", "scope": "", "scopeKind": ""}, {"name": "void firewall_lib_deinit()", "description": "Weakly linked deinitialization function for firewall library.", "scope": "", "scopeKind": ""}, {"name": "void filterPortMap(FILE * filt_fp)", "description": "Function to filter port mapping traffic, intended to operate on a file pointer.", "scope": "", "scopeKind": ""}, {"name": "void do_openPorts(FILE * filter_fp)", "description": "Function to open specific ports from WAN to LAN.", "scope": "", "scopeKind": ""}, {"name": "void do_forwardPorts(FILE * filter_fp)", "description": "Function to forward specific ports from WAN to LAN.", "scope": "", "scopeKind": ""}, {"name": "void do_OpenVideoAnalyticsPort(FILE * filter_fp)", "description": "Function to add rules for video analytics port access, restricted to LAN interface.", "scope": "", "scopeKind": ""}, {"name": "void do_ssh_IpAccessTable(FILE * filt_fp,const char * port,int family,const char * interface)", "description": "Whitelist IP access for SSH, with parameters for file pointer, port, family, and interface.", "scope": "", "scopeKind": ""}, {"name": "void do_snmp_IpAccessTable(FILE * filt_fp,int family)", "description": "Whitelist IP access for SNMP, with parameters for file pointer and family.", "scope": "", "scopeKind": ""}, {"name": "void do_tr69_whitelistTable(FILE * filt_fp,int family)", "description": "Whitelist IP access for TR-69, with parameters for file pointer and family.", "scope": "", "scopeKind": ""}, {"name": "int prepare_xconf_rules(FILE * mangle_fp)", "description": "Prepare rules for Xconf configurations, operating on a mangle rules file.", "scope": "", "scopeKind": ""}, {"name": "int prepare_rabid_rules(FILE * filter_fp,FILE * mangle_fp,ip_ver_t ver)", "description": "Prepare rabid rules depending on platform, with parameters for filter and mangle files, and IP version.", "scope": "", "scopeKind": ""}, {"name": "int prepare_rabid_rules_v2020Q3B(FILE * filter_fp,FILE * mangle_fp,ip_ver_t ver)", "description": "Alternative rabid rules preparation for specific platform, similar to 'prepare_rabid_rules'.", "scope": "", "scopeKind": ""}, {"name": "void update_rabid_features_status()", "description": "Update the status of rabid features.", "scope": "", "scopeKind": ""}, {"name": "int prepare_rabid_rules_for_mapt(FILE * filter_fp,ip_ver_t ver)", "description": "Prepare rabid rules specifically for Mapt, with parameters for filter file and IP version.", "scope": "", "scopeKind": ""}, {"name": "void ethwan_mso_gui_acess_rules(FILE * filter_fp,FILE * mangle_fp)", "description": "Add rules related to Ethwan MSO GUI access, operating on filter and mangle files.", "scope": "", "scopeKind": ""}], "calls": ["FIREWALL_DEBUG"], "search-terms": ["firewall_interface", "firewall_custom", "filterPortMap", "prepare_xconf_rules", "prepare_rabid_rules", "ethwan_mso_gui_acess_rules"], "state": 2, "file_id": 7453, "knowledge_revision": 20522, "git_revision": "", "ctags": [{"_type": "tag", "name": "do_OpenVideoAnalyticsPort", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/firewall/firewall_interface.c", "pattern": "/^void do_OpenVideoAnalyticsPort (FILE *filter_fp)$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(FILE * filter_fp)"}, {"_type": "tag", "name": "do_forwardPorts", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/firewall/firewall_interface.c", "pattern": "/^void do_forwardPorts(FILE *filter_fp)$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(FILE * filter_fp)"}, {"_type": "tag", "name": "do_openPorts", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/firewall/firewall_interface.c", "pattern": "/^void do_openPorts(FILE *filter_fp)$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(FILE * filter_fp)"}, {"_type": "tag", "name": "do_snmp_IpAccessTable", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/firewall/firewall_interface.c", "pattern": "/^void do_snmp_IpAccessTable(FILE *filt_fp, int family)$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(FILE * filt_fp,int family)"}, {"_type": "tag", "name": "do_ssh_IpAccessTable", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/firewall/firewall_interface.c", "pattern": "/^void do_ssh_IpAccessTable(FILE *filt_fp, const char *port, int family, const char *interface)$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(FILE * filt_fp,const char * port,int family,const char * interface)"}, {"_type": "tag", "name": "do_tr69_whitelistTable", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/firewall/firewall_interface.c", "pattern": "/^void do_tr69_whitelistTable(FILE *filt_fp, int family)$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(FILE * filt_fp,int family)"}, {"_type": "tag", "name": "ethwan_mso_gui_acess_rules", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/firewall/firewall_interface.c", "pattern": "/^void ethwan_mso_gui_acess_rules(FILE *filter_fp,FILE *mangle_fp)$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(FILE * filter_fp,FILE * mangle_fp)"}, {"_type": "tag", "name": "filterPortMap", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/firewall/firewall_interface.c", "pattern": "/^void filterPortMap(FILE *filt_fp)$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(FILE * filt_fp)"}, {"_type": "tag", "name": "firewall_lib_deinit", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/firewall/firewall_interface.c", "pattern": "/^void firewall_lib_deinit()$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "firewall_lib_init", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/firewall/firewall_interface.c", "pattern": "/^int firewall_lib_init(void *bus_handle, int sysevent_fd, token_t sysevent_token)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(void * bus_handle,int sysevent_fd,token_t sysevent_token)"}, {"_type": "tag", "name": "prepare_rabid_rules", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/firewall/firewall_interface.c", "pattern": "/^int prepare_rabid_rules(FILE *filter_fp, FILE *mangle_fp, ip_ver_t ver)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(FILE * filter_fp,FILE * mangle_fp,ip_ver_t ver)"}, {"_type": "tag", "name": "prepare_rabid_rules_for_mapt", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/firewall/firewall_interface.c", "pattern": "/^int prepare_rabid_rules_for_mapt(FILE *filter_fp, ip_ver_t ver)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(FILE * filter_fp,ip_ver_t ver)"}, {"_type": "tag", "name": "prepare_rabid_rules_v2020Q3B", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/firewall/firewall_interface.c", "pattern": "/^int prepare_rabid_rules_v2020Q3B(FILE *filter_fp, FILE *mangle_fp, ip_ver_t ver)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(FILE * filter_fp,FILE * mangle_fp,ip_ver_t ver)"}, {"_type": "tag", "name": "prepare_xconf_rules", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/firewall/firewall_interface.c", "pattern": "/^int prepare_xconf_rules(FILE *mangle_fp)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(FILE * mangle_fp)"}, {"_type": "tag", "name": "update_rabid_features_status", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/firewall/firewall_interface.c", "pattern": "/^void update_rabid_features_status()$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "()"}], "hash": "d937807395c518c60242ef101678a618", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "rdkb/components/opensource/ccsp/Utopia/source/firewall/firewall_interface.c", "revision_history": [{"20522": ""}]}