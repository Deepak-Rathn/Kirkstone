{"is_source_file": true, "format": "C", "description": "Source code implementing a simple linked list data structure in C, providing functions for creation, cloning, appending, prepending, searching, removing, deleting, iterating, and destroying linked lists and their iterators.", "external_files": ["icTypes/icLinkedList.h", "list.h"], "external_methods": ["linkedListIteratorDestroy__auto", "linkedListDestroy_generic__auto"], "published": ["linkedListCreate", "linkedListClone", "linkedListDeepClone", "linkedListDestroy", "linkedListIsClone", "linkedListCount", "linkedListAppend", "linkedListPrepend", "linkedListFind", "linkedListRemove", "linkedListDelete", "linkedListIterate", "linkedListGetElementAt", "linkedListClear", "linkedListStringCompareFunc", "linkedListCloneStringItemFunc", "linkedListIteratorCreate", "linkedListIteratorDestroy", "linkedListIteratorHasNext", "linkedListIteratorGetNext", "linkedListIteratorDeleteCurrent", "linkedListIteratorClearPrev"], "classes": [{"name": "_icLinkedListIterator", "description": "Structure representing a list iterator to traverse linked list nodes, maintaining current, previous, and head pointers."}], "methods": [{"name": "icLinkedList * linkedListCreate()", "description": "Allocates and initializes a new linked list structure.", "scope": "", "scopeKind": ""}, {"name": "icLinkedList * linkedListClone(icLinkedList * src)", "description": "Creates a shallow clone of an existing linked list, sharing the same item references.", "scope": "", "scopeKind": ""}, {"name": "icLinkedList * linkedListDeepClone(icLinkedList * src,linkedListCloneItemFunc cloneItemFunc,void * context)", "description": "Creates a deep clone of an existing linked list by cloning each item via a provided function.", "scope": "", "scopeKind": ""}, {"name": "void linkedListDestroy(icLinkedList * list,linkedListItemFreeFunc helper)", "description": "Releases memory for the linked list and its items, optionally using a helper function for custom item cleanup.", "scope": "", "scopeKind": ""}, {"name": "bool linkedListIsClone(icLinkedList * list)", "description": "Checks if a linked list was created by cloning, indicating shared item content.", "scope": "", "scopeKind": ""}, {"name": "uint16_t linkedListCount(icLinkedList * list)", "description": "Returns the number of items in the linked list.", "scope": "", "scopeKind": ""}, {"name": "bool linkedListAppend(icLinkedList * list,void * item)", "description": "Appends an item to the end of the linked list.", "scope": "", "scopeKind": ""}, {"name": "bool linkedListPrepend(icLinkedList * list,void * item)", "description": "Prepends an item to the beginning of the linked list.", "scope": "", "scopeKind": ""}, {"name": "void * linkedListFind(icLinkedList * list,void * searchVal,linkedListCompareFunc searchFunc)", "description": "Searches for an item in the list that matches via a comparison function.", "scope": "", "scopeKind": ""}, {"name": "void * linkedListRemove(icLinkedList * list,uint32_t offset)", "description": "Removes and returns the item at a specified offset within the list.", "scope": "", "scopeKind": ""}, {"name": "bool linkedListDelete(icLinkedList * list,void * searchVal,linkedListCompareFunc searchFunc,linkedListItemFreeFunc freeFunc)", "description": "Deletes an item from the list that matches a given value, with optional custom cleanup.", "scope": "", "scopeKind": ""}, {"name": "void linkedListIterate(icLinkedList * list,linkedListIterateFunc callback,void * arg)", "description": "Iterates over each item in the list, calling a callback function.", "scope": "", "scopeKind": ""}, {"name": "void * linkedListGetElementAt(icLinkedList * list,uint32_t offset)", "description": "Retrieves the item at a specified index without removing it.", "scope": "", "scopeKind": ""}, {"name": "void linkedListClear(icLinkedList * list,linkedListItemFreeFunc helper)", "description": "Clears all items from the list, optionally freeing memory via a helper.", "scope": "", "scopeKind": ""}, {"name": "bool linkedListStringCompareFunc(void * searchVal,void * item)", "description": "Comparison function to compare list items as strings.", "scope": "", "scopeKind": ""}, {"name": "void * linkedListCloneStringItemFunc(void * item,void * context)", "description": "Cloning function for string items in the list.", "scope": "", "scopeKind": ""}, {"name": "icLinkedListIterator * linkedListIteratorCreate(icLinkedList * list)", "description": "Creates an iterator to traverse the linked list.", "scope": "", "scopeKind": ""}, {"name": "void linkedListIteratorDestroy(icLinkedListIterator * iterator)", "description": "Destroys an iterator, freeing associated resources.", "scope": "", "scopeKind": ""}, {"name": "bool linkedListIteratorHasNext(icLinkedListIterator * iterator)", "description": "Checks if more items are available in the iteration.", "scope": "", "scopeKind": ""}, {"name": "void * linkedListIteratorGetNext(icLinkedListIterator * iterator)", "description": "Returns the next item in the list during iteration.", "scope": "", "scopeKind": ""}, {"name": "bool linkedListIteratorDeleteCurrent(icLinkedListIterator * iterator,linkedListItemFreeFunc helper)", "description": "Deletes the item most recently returned by 'getNext' from the list.", "scope": "", "scopeKind": ""}, {"name": "void linkedListIteratorClearPrev(icLinkedListIterator * iterator)", "description": "Clears the internal 'prev' pointer in the iterator to prevent invalid deletions.", "scope": "", "scopeKind": ""}, {"name": "listNode * createListNode()", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "bool iteratorFindByPtr(void * searchVal,void * item)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "void standardDoNotFreeFunc(void * item)", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["malloc", "free", "memset", "strcmp", "strdup", "linkedListAppend", "linkeListDestroy", "linkedListDelete", "linkedListCount", "linkedListIterate"], "search-terms": ["icLinkedList", "LinkedList implementation", "list iteration", "clone list", "deep clone", "list node creation", "list iterator", "list removal", "list deletion"], "state": 2, "file_id": 643, "knowledge_revision": 13807, "git_revision": "", "ctags": [{"_type": "tag", "name": "_icLinkedListIterator", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/types/c/src/icLinkedList.c", "pattern": "/^struct _icLinkedListIterator$/", "file": true, "language": "C", "kind": "struct"}, {"_type": "tag", "name": "createListNode", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/types/c/src/icLinkedList.c", "pattern": "/^listNode *createListNode()$/", "language": "C", "typeref": "typename:listNode *", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "curr", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/types/c/src/icLinkedList.c", "pattern": "/^    listNode      *curr;        \\/\\/ node to return in 'getNext'$/", "file": true, "language": "C", "typeref": "typename:listNode *", "kind": "member", "scope": "_icLinkedListIterator", "scopeKind": "struct"}, {"_type": "tag", "name": "head", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/types/c/src/icLinkedList.c", "pattern": "/^    icLinkedList  *head;        \\/\\/ list we're iterating through$/", "file": true, "language": "C", "typeref": "typename:icLinkedList *", "kind": "member", "scope": "_icLinkedListIterator", "scopeKind": "struct"}, {"_type": "tag", "name": "iteratorFindByPtr", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/types/c/src/icLinkedList.c", "pattern": "/^static bool iteratorFindByPtr(void *searchVal, void *item)$/", "file": true, "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(void * searchVal,void * item)"}, {"_type": "tag", "name": "linkedListAppend", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/types/c/src/icLinkedList.c", "pattern": "/^bool linkedListAppend(icLinkedList *list, void *item)$/", "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(icLinkedList * list,void * item)"}, {"_type": "tag", "name": "linkedListClear", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/types/c/src/icLinkedList.c", "pattern": "/^void linkedListClear(icLinkedList *list, linkedListItemFreeFunc helper)$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(icLinkedList * list,linkedListItemFreeFunc helper)"}, {"_type": "tag", "name": "linkedListClone", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/types/c/src/icLinkedList.c", "pattern": "/^icLinkedList *linkedListClone(icLinkedList *src)$/", "language": "C", "typeref": "typename:icLinkedList *", "kind": "function", "signature": "(icLinkedList * src)"}, {"_type": "tag", "name": "linkedListCloneStringItemFunc", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/types/c/src/icLinkedList.c", "pattern": "/^void *linkedListCloneStringItemFunc(void *item, void *context)$/", "language": "C", "typeref": "typename:void *", "kind": "function", "signature": "(void * item,void * context)"}, {"_type": "tag", "name": "linkedListCount", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/types/c/src/icLinkedList.c", "pattern": "/^uint16_t linkedListCount(icLinkedList *list)$/", "language": "C", "typeref": "typename:uint16_t", "kind": "function", "signature": "(icLinkedList * list)"}, {"_type": "tag", "name": "linkedListCreate", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/types/c/src/icLinkedList.c", "pattern": "/^icLinkedList *linkedListCreate()$/", "language": "C", "typeref": "typename:icLinkedList *", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "linkedListDeepClone", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/types/c/src/icLinkedList.c", "pattern": "/^icLinkedList *linkedListDeepClone(icLinkedList *src, linkedListCloneItemFunc cloneItemFunc, void/", "language": "C", "typeref": "typename:icLinkedList *", "kind": "function", "signature": "(icLinkedList * src,linkedListCloneItemFunc cloneItemFunc,void * context)"}, {"_type": "tag", "name": "linkedListDelete", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/types/c/src/icLinkedList.c", "pattern": "/^bool linkedListDelete(icLinkedList *list, void *searchVal, linkedListCompareFunc searchFunc, lin/", "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(icLinkedList * list,void * searchVal,linkedListCompareFunc searchFunc,linkedListItemFreeFunc freeFunc)"}, {"_type": "tag", "name": "linkedListDestroy", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/types/c/src/icLinkedList.c", "pattern": "/^void linkedListDestroy(icLinkedList *list, linkedListItemFreeFunc helper)$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(icLinkedList * list,linkedListItemFreeFunc helper)"}, {"_type": "tag", "name": "linkedListFind", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/types/c/src/icLinkedList.c", "pattern": "/^void *linkedListFind(icLinkedList *list, void *searchVal, linkedListCompareFunc searchFunc)$/", "language": "C", "typeref": "typename:void *", "kind": "function", "signature": "(icLinkedList * list,void * searchVal,linkedListCompareFunc searchFunc)"}, {"_type": "tag", "name": "linkedListGetElementAt", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/types/c/src/icLinkedList.c", "pattern": "/^void *linkedListGetElementAt(icLinkedList *list, uint32_t offset)$/", "language": "C", "typeref": "typename:void *", "kind": "function", "signature": "(icLinkedList * list,uint32_t offset)"}, {"_type": "tag", "name": "linkedListIsClone", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/types/c/src/icLinkedList.c", "pattern": "/^bool linkedListIsClone(icLinkedList *list)$/", "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(icLinkedList * list)"}, {"_type": "tag", "name": "linkedListIterate", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/types/c/src/icLinkedList.c", "pattern": "/^void linkedListIterate(icLinkedList *list, linkedListIterateFunc callback, void *arg)$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(icLinkedList * list,linkedListIterateFunc callback,void * arg)"}, {"_type": "tag", "name": "linkedListIteratorClearPrev", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/types/c/src/icLinkedList.c", "pattern": "/^void linkedListIteratorClearPrev(icLinkedListIterator *iterator)$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(icLinkedListIterator * iterator)"}, {"_type": "tag", "name": "linkedListIteratorCreate", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/types/c/src/icLinkedList.c", "pattern": "/^icLinkedListIterator * linkedListIteratorCreate(icLinkedList *list)$/", "language": "C", "typeref": "typename:icLinkedListIterator *", "kind": "function", "signature": "(icLinkedList * list)"}, {"_type": "tag", "name": "linkedListIteratorDeleteCurrent", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/types/c/src/icLinkedList.c", "pattern": "/^bool linkedListIteratorDeleteCurrent(icLinkedListIterator *iterator, linkedListItemFreeFunc help/", "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(icLinkedListIterator * iterator,linkedListItemFreeFunc helper)"}, {"_type": "tag", "name": "linkedListIteratorDestroy", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/types/c/src/icLinkedList.c", "pattern": "/^void linkedListIteratorDestroy(icLinkedListIterator *iterator)$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(icLinkedListIterator * iterator)"}, {"_type": "tag", "name": "linkedListIteratorGetNext", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/types/c/src/icLinkedList.c", "pattern": "/^void *linkedListIteratorGetNext(icLinkedListIterator *iterator)$/", "language": "C", "typeref": "typename:void *", "kind": "function", "signature": "(icLinkedListIterator * iterator)"}, {"_type": "tag", "name": "linkedListIteratorHasNext", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/types/c/src/icLinkedList.c", "pattern": "/^bool linkedListIteratorHasNext(icLinkedListIterator *iterator)$/", "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(icLinkedListIterator * iterator)"}, {"_type": "tag", "name": "linkedListPrepend", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/types/c/src/icLinkedList.c", "pattern": "/^bool linkedListPrepend(icLinkedList *list, void *item)$/", "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(icLinkedList * list,void * item)"}, {"_type": "tag", "name": "linkedListRemove", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/types/c/src/icLinkedList.c", "pattern": "/^void *linkedListRemove(icLinkedList* list, uint32_t offset)$/", "language": "C", "typeref": "typename:void *", "kind": "function", "signature": "(icLinkedList * list,uint32_t offset)"}, {"_type": "tag", "name": "linkedListStringCompareFunc", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/types/c/src/icLinkedList.c", "pattern": "/^bool linkedListStringCompareFunc(void *searchVal, void *item)$/", "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(void * searchVal,void * item)"}, {"_type": "tag", "name": "prev", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/types/c/src/icLinkedList.c", "pattern": "/^    listNode      *prev;        \\/\\/ node returned in last call to 'getNext'.  used for 'delete'$/", "file": true, "language": "C", "typeref": "typename:listNode *", "kind": "member", "scope": "_icLinkedListIterator", "scopeKind": "struct"}, {"_type": "tag", "name": "standardDoNotFreeFunc", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/types/c/src/icLinkedList.c", "pattern": "/^void standardDoNotFreeFunc(void *item)$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(void * item)"}], "hash": "2c42c0c5663217bced228e68a0085fbb", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "components/opensource/zilker-sdk/source/libs/types/c/src/icLinkedList.c", "fields": [{"name": "listNode * curr", "scope": "_icLinkedListIterator", "scopeKind": "struct", "description": "unavailable"}, {"name": "icLinkedList * head", "scope": "_icLinkedListIterator", "scopeKind": "struct", "description": "unavailable"}, {"name": "listNode * prev", "scope": "_icLinkedListIterator", "scopeKind": "struct", "description": "unavailable"}], "revision_history": [{"13807": ""}]}