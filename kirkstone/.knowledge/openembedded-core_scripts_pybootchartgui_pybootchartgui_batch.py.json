{"is_source_file": true, "format": "Python", "description": "This script provides a render function for generating bootcharts using cairo graphics. It supports multiple output formats (PNG, PDF, SVG) and utilizes external modules 'cairo' and a local 'draw' module. It handles rendering options and invokes drawing routines based on provided trace data and application options.", "external_files": ["cairo", "./draw"], "external_methods": ["draw.extents", "draw.render", "draw.MIN_IMG_W"], "published": ["render"], "classes": [], "methods": [{"name": "render(writer, trace, app_options, filename)", "description": "Generates a bootchart image in the specified format (PNG, PDF, SVG) using the provided trace data, application options, and filename. Handles format detection, surface creation, drawing, and saving.", "scope": "", "scopeKind": ""}], "calls": ["cairo.ImageSurface", "cairo.PDFSurface", "cairo.SVGSurface", "cairo.Context", "draw.extents", "draw.render"], "search-terms": ["pybootchartgui", "batch", "cairo", "render", "bootchart", "trace", "graphics"], "state": 2, "file_id": 1500, "knowledge_revision": 14649, "git_revision": "", "ctags": [{"_type": "tag", "name": "render", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/pybootchartgui/pybootchartgui/batch.py", "pattern": "/^def render(writer, trace, app_options, filename):$/", "language": "Python", "kind": "function", "signature": "(writer, trace, app_options, filename)"}], "hash": "d4b01e18d8306bde824053d379f1177f", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "openembedded-core/scripts/pybootchartgui/pybootchartgui/batch.py", "revision_history": [{"14649": ""}]}