{"is_source_file": true, "format": "shell script", "description": "This is a shell script (DCMscript.sh) used in the device management system for performing configuration management tasks such as fetching device info, handling network connections, managing retries for HTTP requests, and triggering telemetry and firmware checks during system startup.", "external_files": ["/etc/include.properties", "/etc/device.properties", "/etc/log_timestamp.sh", "/lib/rdk/getpartnerid.sh", "/lib/rdk/getaccountid.sh", "/etc/dcm.properties", "/lib/rdk/utils.sh", "/etc/mount-utils/getConfigFile.sh"], "external_methods": ["getECMMac", "getConfigFile", "syscfg get PeriodicFWCheck_Enable"], "published": ["getFWVersion", "getBuildType", "getECMMacAddress", "getReceiverId", "getControllerId", "getChannelMapId", "getVODId", "IsDirectBlocked", "get_Codebigconfig", "useDirectRequest", "useCodebigRequest", "sendHttpRequestToServer", "dropbearRecovery"], "classes": [], "methods": [{"name": "getFWVersion", "description": "Retrieves the firmware version from /version.txt by parsing the imagename line."}, {"name": "getBuildType", "description": "Returns the build type of the device, such as 'prod' or other."}, {"name": "getECMMacAddress", "description": "Fetches the ECM MAC address, trims spaces and quotes."}, {"name": "getReceiverId", "description": "Reads the receiver ID from a specific data file if it exists."}, {"name": "getControllerId", "description": "Returns a static controller ID '2504'."}, {"name": "getChannelMapId", "description": "Returns a static channel map ID '2345'."}, {"name": "getVODId", "description": "Returns a static VOD ID '15660'."}, {"name": "IsDirectBlocked", "description": "Checks if the direct connection was recently blocked based on a timestamp stored in a file."}, {"name": "get_Codebigconfig", "description": "Determines whether Codebig is available and enabled, adjusting connection preferences accordingly."}, {"name": "useDirectRequest", "description": "Attempts to perform a direct HTTP request to the server with retries, considering block status."}, {"name": "useCodebigRequest", "description": "Attempts a Codebig secure request with retries; used as fallback or primary based on configuration."}, {"name": "sendHttpRequestToServer", "description": "Performs an HTTP request using curl, includes retry logic on failure, and processes server response."}, {"name": "dropbearRecovery", "description": "Checks for a running dropbear SSH process; if missing, it restarts the dropbear SSH server."}], "calls": ["getECMMac", "getConfigFile", "syscfg get PeriodicFWCheck_Enable", "kill -9", "ssh", "ps", "grep", "kill", "rm", "touch", "echo", "sleep", "eval", "awk", "expr"], "search-terms": ["DCMscript", "shell script", "device management", "configuration fetch", "telemetry trigger", "firmware check", "retry logic", "getpartnerid", "getaccountid"], "state": 2, "file_id": 7080, "knowledge_revision": 20170, "git_revision": "", "hash": "80ae2f14398f0889792a9316e84698be", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "rdkb/components/opensource/ccsp/sysint/device/lib/rdk/DCMscript.sh", "revision_history": [{"20170": ""}]}