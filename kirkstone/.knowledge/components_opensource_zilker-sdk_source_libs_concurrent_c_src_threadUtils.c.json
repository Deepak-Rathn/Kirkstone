{"is_source_file": true, "format": "C", "description": "This file implements utility functions for thread management, including creating threads with specific names, retrieving thread names, and managing mutexes. It includes platform-specific handling for different operating systems such as Linux, macOS, Android, and uClibc.", "external_files": ["<pthread.h>", "<icBuildtime.h>", "<sys/prctl.h>", "<stdbool.h>", "<icLog/logging.h>", "<icTypes/sbrm.h>", "<icUtil/stringUtils.h>", "<string.h>", "<errno.h>", "<signal.h>", "<assert.h>"], "external_methods": ["pthread_setname_np", "pthread_create", "pthread_mutex_init", "pthread_mutex_lock", "pthread_mutex_unlock", "pthread_mutexattr_init", "pthread_mutexattr_settype", "pthread_mutexattr_destroy", "pthread_getname_np", "prctl"], "published": ["createDetachedThread", "createThread", "getThreadName", "mutexInitWithType", " _mutexLock", " _mutexUnlock"], "classes": [], "methods": [{"name": "void setThreadName(const pthread_t * tid,const char * name)", "description": "Sets the name of a thread specified by thread ID, with platform-specific implementations and name length considerations.", "scope": "", "scopeKind": ""}, {"name": "void * wrappedTask(void * taskWrapper)", "description": "Wrapper function for tasks that sets the thread name before executing the actual task.", "scope": "", "scopeKind": ""}, {"name": "bool createDetachedThread(taskFunc task,void * taskArg,const char * name)", "description": "Creates a new thread in detached state, optionally wrapping the task to set the thread name.", "scope": "", "scopeKind": ""}, {"name": "bool createThread(pthread_t * tid,taskFunc task,void * taskArg,const char * name)", "description": "Creates a new thread with a specified thread ID and sets its name.", "scope": "", "scopeKind": ""}, {"name": "char * getThreadName(const pthread_t tid)", "description": "Retrieves the name of the specified thread, platform-specific.", "scope": "", "scopeKind": ""}, {"name": "void mutexInitWithType(pthread_mutex_t * mtx,int type)", "description": "Initializes a pthread mutex with a specified type, upgrading to error-checking if needed.", "scope": "", "scopeKind": ""}, {"name": "void _mutexLock(pthread_mutex_t * mtx,const char * file,const int line)", "description": "Locks a mutex, with error handling and logging.", "scope": "", "scopeKind": ""}, {"name": "void _mutexUnlock(pthread_mutex_t * mtx,const char * file,const int line)", "description": "Unlocks a mutex, with error handling and logging.", "scope": "", "scopeKind": ""}], "calls": ["pthread_setname_np", "prctl", "pthread_create", "strncpy", "strlen", "strerrorSafe", "pthread_getname_np", "pthread_mutex_lock", "pthread_mutex_unlock", "pthread_mutexattr_init", "pthread_mutexattr_settype", "pthread_mutexattr_destroy"], "search-terms": ["threadUtils", "createThread", "setThreadName", "mutex", "pthread", "platform-specific thread naming", "task wrapper", "detached thread", "thread name", "mutex initialization"], "state": 2, "file_id": 885, "knowledge_revision": 14046, "git_revision": "", "ctags": [{"_type": "tag", "name": "LOG_TAG", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/src/threadUtils.c", "pattern": "/^#define LOG_TAG /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "TASK_COMM_LEN", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/src/threadUtils.c", "pattern": "/^#define TASK_COMM_LEN /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "TaskWrapper", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/src/threadUtils.c", "pattern": "/^} TaskWrapper;$/", "file": true, "language": "C", "typeref": "struct:__anonec80ebbe0108", "kind": "typedef"}, {"_type": "tag", "name": "USE_TASK_WRAPPER", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/src/threadUtils.c", "pattern": "/^#define USE_TASK_WRAPPER$/", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "__anonec80ebbe0108", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/src/threadUtils.c", "pattern": "/^{$/", "file": true, "language": "C", "kind": "struct"}, {"_type": "tag", "name": "_mutexLock", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/src/threadUtils.c", "pattern": "/^void _mutexLock(pthread_mutex_t *mtx, const char *file, const int line)$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(pthread_mutex_t * mtx,const char * file,const int line)"}, {"_type": "tag", "name": "_mutexUnlock", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/src/threadUtils.c", "pattern": "/^void _mutexUnlock(pthread_mutex_t *mtx, const char *file, const int line)$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(pthread_mutex_t * mtx,const char * file,const int line)"}, {"_type": "tag", "name": "createDetachedThread", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/src/threadUtils.c", "pattern": "/^bool createDetachedThread(taskFunc task, void *taskArg, const char *name)$/", "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(taskFunc task,void * taskArg,const char * name)"}, {"_type": "tag", "name": "createThread", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/src/threadUtils.c", "pattern": "/^bool createThread(pthread_t *tid, taskFunc task, void *taskArg, const char *name)$/", "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(pthread_t * tid,taskFunc task,void * taskArg,const char * name)"}, {"_type": "tag", "name": "getThreadName", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/src/threadUtils.c", "pattern": "/^char *getThreadName(const pthread_t tid)$/", "language": "C", "typeref": "typename:char *", "kind": "function", "signature": "(const pthread_t tid)"}, {"_type": "tag", "name": "mutexInitWithType", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/src/threadUtils.c", "pattern": "/^void mutexInitWithType(pthread_mutex_t *mtx, int type)$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(pthread_mutex_t * mtx,int type)"}, {"_type": "tag", "name": "name", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/src/threadUtils.c", "pattern": "/^    char *name;$/", "file": true, "language": "C", "typeref": "typename:char *", "kind": "member", "scope": "__anonec80ebbe0108", "scopeKind": "struct"}, {"_type": "tag", "name": "setThreadName", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/src/threadUtils.c", "pattern": "/^static void setThreadName(const pthread_t *tid, const char *name)$/", "file": true, "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(const pthread_t * tid,const char * name)"}, {"_type": "tag", "name": "task", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/src/threadUtils.c", "pattern": "/^    taskFunc task;$/", "file": true, "language": "C", "typeref": "typename:taskFunc", "kind": "member", "scope": "__anonec80ebbe0108", "scopeKind": "struct"}, {"_type": "tag", "name": "taskArg", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/src/threadUtils.c", "pattern": "/^    void *taskArg;$/", "file": true, "language": "C", "typeref": "typename:void *", "kind": "member", "scope": "__anonec80ebbe0108", "scopeKind": "struct"}, {"_type": "tag", "name": "wrappedTask", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/src/threadUtils.c", "pattern": "/^static void *wrappedTask(void *taskWrapper)$/", "file": true, "language": "C", "typeref": "typename:void *", "kind": "function", "signature": "(void * taskWrapper)"}], "hash": "28a47a83d57713c639102d12cce996bd", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "components/opensource/zilker-sdk/source/libs/concurrent/c/src/threadUtils.c", "fields": [{"name": "char * name", "scope": "__anonec80ebbe0108", "scopeKind": "struct", "description": "unavailable"}, {"name": "taskFunc task", "scope": "__anonec80ebbe0108", "scopeKind": "struct", "description": "unavailable"}, {"name": "void * taskArg", "scope": "__anonec80ebbe0108", "scopeKind": "struct", "description": "unavailable"}], "revision_history": [{"14046": ""}]}