{"is_source_file": true, "format": "Python", "description": "This file defines an abstract class 'Manifest' used for managing package manifests within a build system, including functionalities for creating, parsing, and handling package data for different manifest types.", "external_files": ["bb"], "external_methods": ["bb.utils.mkdirhier", "bb.note"], "published": ["Manifest", "create_manifest"], "classes": [{"name": "Manifest", "description": "An abstract class that manages package manifest files, providing methods to create initial, full, and final manifests, as well as parsing features."}], "methods": [{"name": "_create_dummy_initial(self)", "description": "Creates a dummy initial manifest based on the 'IMAGE_ROOTFS' variable, primarily for testing purposes.", "scope": "Manifest", "scopeKind": "class"}, {"name": "create_initial(self)", "description": "Abstract method meant to implement creation of the initial manifest.", "scope": "Manifest", "scopeKind": "class"}, {"name": "create_final(self)", "description": "Abstract method meant to implement creation of the final manifest.", "scope": "Manifest", "scopeKind": "class"}, {"name": "create_full(self, pm)", "description": "Abstract method intended to create a full manifest after full installation, listing all packages.", "scope": "Manifest", "scopeKind": "class"}, {"name": "parse_initial_manifest(self)", "description": "Parses the initial manifest file and returns a dictionary categorizing packages by type.", "scope": "Manifest", "scopeKind": "class"}, {"name": "parse_full_manifest(self)", "description": "Parses the full manifest file and returns a list of installed packages.", "scope": "Manifest", "scopeKind": "class"}, {"name": "__init__(self, d, manifest_dir=None, manifest_type=MANIFEST_TYPE_IMAGE)", "scope": "Manifest", "scopeKind": "class", "description": "unavailable"}, {"name": "create_manifest(d, final_manifest=False, manifest_dir=None, manifest_type=Manifest.MANIFEST_TYPE_IMAGE)", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["bb.utils.mkdirhier", "bb.note"], "search-terms": ["Manifest", "initial_manifest", "full_manifest", "create_dummy_initial", "parse_initial_manifest", "parse_full_manifest", "manifest_type", "create_final"], "state": 2, "file_id": 1824, "knowledge_revision": 14964, "git_revision": "", "ctags": [{"_type": "tag", "name": "INSTALL_ORDER", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/manifest.py", "pattern": "/^    INSTALL_ORDER = [$/", "language": "Python", "kind": "variable", "scope": "Manifest", "scopeKind": "class"}, {"_type": "tag", "name": "MANIFEST_TYPE_IMAGE", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/manifest.py", "pattern": "/^    MANIFEST_TYPE_IMAGE = \"image\"$/", "language": "Python", "kind": "variable", "scope": "Manifest", "scopeKind": "class"}, {"_type": "tag", "name": "MANIFEST_TYPE_SDK_HOST", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/manifest.py", "pattern": "/^    MANIFEST_TYPE_SDK_HOST = \"sdk_host\"$/", "language": "Python", "kind": "variable", "scope": "Manifest", "scopeKind": "class"}, {"_type": "tag", "name": "MANIFEST_TYPE_SDK_TARGET", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/manifest.py", "pattern": "/^    MANIFEST_TYPE_SDK_TARGET = \"sdk_target\"$/", "language": "Python", "kind": "variable", "scope": "Manifest", "scopeKind": "class"}, {"_type": "tag", "name": "Manifest", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/manifest.py", "pattern": "/^class Manifest(object, metaclass=ABCMeta):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "PKG_TYPE_ATTEMPT_ONLY", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/manifest.py", "pattern": "/^    PKG_TYPE_ATTEMPT_ONLY = \"aop\"$/", "language": "Python", "kind": "variable", "scope": "Manifest", "scopeKind": "class"}, {"_type": "tag", "name": "PKG_TYPE_LANGUAGE", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/manifest.py", "pattern": "/^    PKG_TYPE_LANGUAGE = \"lgp\"$/", "language": "Python", "kind": "variable", "scope": "Manifest", "scopeKind": "class"}, {"_type": "tag", "name": "PKG_TYPE_MULTILIB", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/manifest.py", "pattern": "/^    PKG_TYPE_MULTILIB = \"mlp\"$/", "language": "Python", "kind": "variable", "scope": "Manifest", "scopeKind": "class"}, {"_type": "tag", "name": "PKG_TYPE_MUST_INSTALL", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/manifest.py", "pattern": "/^    PKG_TYPE_MUST_INSTALL = \"mip\"$/", "language": "Python", "kind": "variable", "scope": "Manifest", "scopeKind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/manifest.py", "pattern": "/^    def __init__(self, d, manifest_dir=None, manifest_type=MANIFEST_TYPE_IMAGE):$/", "language": "Python", "kind": "member", "signature": "(self, d, manifest_dir=None, manifest_type=MANIFEST_TYPE_IMAGE)", "scope": "Manifest", "scopeKind": "class"}, {"_type": "tag", "name": "_create_dummy_initial", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/manifest.py", "pattern": "/^    def _create_dummy_initial(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "Manifest", "scopeKind": "class"}, {"_type": "tag", "name": "create_final", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/manifest.py", "pattern": "/^    def create_final(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "Manifest", "scopeKind": "class"}, {"_type": "tag", "name": "create_full", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/manifest.py", "pattern": "/^    def create_full(self, pm):$/", "language": "Python", "kind": "member", "signature": "(self, pm)", "scope": "Manifest", "scopeKind": "class"}, {"_type": "tag", "name": "create_initial", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/manifest.py", "pattern": "/^    def create_initial(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "Manifest", "scopeKind": "class"}, {"_type": "tag", "name": "create_manifest", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/manifest.py", "pattern": "/^def create_manifest(d, final_manifest=False, manifest_dir=None,$/", "language": "Python", "kind": "function", "signature": "(d, final_manifest=False, manifest_dir=None, manifest_type=Manifest.MANIFEST_TYPE_IMAGE)"}, {"_type": "tag", "name": "initial_manifest_file_header", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/manifest.py", "pattern": "/^    initial_manifest_file_header = \\\\$/", "language": "Python", "kind": "variable", "scope": "Manifest", "scopeKind": "class"}, {"_type": "tag", "name": "parse_full_manifest", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/manifest.py", "pattern": "/^    def parse_full_manifest(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "Manifest", "scopeKind": "class"}, {"_type": "tag", "name": "parse_initial_manifest", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/manifest.py", "pattern": "/^    def parse_initial_manifest(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "Manifest", "scopeKind": "class"}, {"_type": "tag", "name": "var_maps", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/manifest.py", "pattern": "/^    var_maps = {$/", "language": "Python", "kind": "variable", "scope": "Manifest", "scopeKind": "class"}], "hash": "164e5016eb3ea2edff44d10a175a8d31", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "openembedded-core/meta/lib/oe/manifest.py", "fields": [{"name": "INSTALL_ORDER = [", "scope": "Manifest", "scopeKind": "class", "description": "unavailable"}, {"name": "MANIFEST_TYPE_IMAGE = \"image\"", "scope": "Manifest", "scopeKind": "class", "description": "unavailable"}, {"name": "MANIFEST_TYPE_SDK_HOST = \"sdk_host\"", "scope": "Manifest", "scopeKind": "class", "description": "unavailable"}, {"name": "MANIFEST_TYPE_SDK_TARGET = \"sdk_target\"", "scope": "Manifest", "scopeKind": "class", "description": "unavailable"}, {"name": "PKG_TYPE_ATTEMPT_ONLY = \"aop\"", "scope": "Manifest", "scopeKind": "class", "description": "unavailable"}, {"name": "PKG_TYPE_LANGUAGE = \"lgp\"", "scope": "Manifest", "scopeKind": "class", "description": "unavailable"}, {"name": "PKG_TYPE_MULTILIB = \"mlp\"", "scope": "Manifest", "scopeKind": "class", "description": "unavailable"}, {"name": "PKG_TYPE_MUST_INSTALL = \"mip\"", "scope": "Manifest", "scopeKind": "class", "description": "unavailable"}, {"name": "initial_manifest_file_header = \\\\", "scope": "Manifest", "scopeKind": "class", "description": "unavailable"}, {"name": "var_maps = {", "scope": "Manifest", "scopeKind": "class", "description": "unavailable"}], "revision_history": [{"14964": ""}]}