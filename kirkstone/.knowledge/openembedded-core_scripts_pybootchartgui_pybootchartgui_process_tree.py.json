{"is_source_file": true, "format": "Python", "description": "This source file defines the 'ProcessTree' class used for constructing, pruning, merging, and analyzing process trees based on log data during system boot. It includes methods for building the tree, sorting, calculating time metrics, pruning idle or short-lived processes, and merging related process nodes like siblings, exploders, and runs.", "external_files": [], "external_methods": [], "published": ["ProcessTree"], "classes": [{"name": "ProcessTree", "description": "Encapsulates a process tree built from boot log files, providing functionalities for construction, pruning, merging, and analysis of process hierarchies."}], "methods": [{"name": "build(self)", "description": "Builds the process tree from a list of process objects.", "scope": "ProcessTree", "scopeKind": "class"}, {"name": "sort(self, process_subtree)", "description": "Sorts the process tree nodes based on PID.", "scope": "ProcessTree", "scopeKind": "class"}, {"name": "num_nodes(self, process_list)", "description": "Counts total nodes in a process subtree.", "scope": "ProcessTree", "scopeKind": "class"}, {"name": "get_start_time(self, process_subtree)", "description": "Determines the earliest start time in a process subtree.", "scope": "ProcessTree", "scopeKind": "class"}, {"name": "get_end_time(self, process_subtree)", "description": "Finds the latest end time in a process subtree.", "scope": "ProcessTree", "scopeKind": "class"}, {"name": "get_max_pid(self, process_subtree)", "description": "Returns the maximum PID in a process subtree.", "scope": "ProcessTree", "scopeKind": "class"}, {"name": "update_ppids_for_daemons(self, process_list)", "description": "Adjusts PPIDs of system daemon processes for correctness based on heuristics.", "scope": "ProcessTree", "scopeKind": "class"}, {"name": "prune(self, process_subtree, parent)", "description": "Removes idle, short-lived, or background processes from the tree, merging sibling processes as needed.", "scope": "ProcessTree", "scopeKind": "class"}, {"name": "merge_logger(self, process_subtree, logger_proc, monitored_app, app_tree)", "description": "Merges processes spawned by the logger to reduce clutter.", "scope": "ProcessTree", "scopeKind": "class"}, {"name": "merge_exploders(self, process_subtree, processes)", "description": "Merges large meaningless process subtrees spawned by known exploders.", "scope": "ProcessTree", "scopeKind": "class"}, {"name": "merge_siblings(self, process_subtree)", "description": "Merges sibling processes with the same command line.", "scope": "ProcessTree", "scopeKind": "class"}, {"name": "merge_runs(self, process_subtree)", "description": "Merges process runs where a process with a single child shares the same command line.", "scope": "ProcessTree", "scopeKind": "class"}, {"name": "merge_processes(self, p1, p2)", "description": "Combines two process objects into one by merging their samples and recalculating time bounds.", "scope": "ProcessTree", "scopeKind": "class"}, {"name": "__init__(self, writer, kernel, psstats, sample_period, monitoredApp, prune, idle, taskstats, accurate_parentage, for_testing = False)", "scope": "ProcessTree", "scopeKind": "class", "description": "unavailable"}, {"name": "is_idle_background_process_without_children(p)", "scope": "ProcessTree.prune", "scopeKind": "member", "description": "unavailable"}], "calls": ["self.get_start_time", "self.get_end_time", "self.num_nodes", "self.get_max_pid", "self.build"], "search-terms": ["ProcessTree", "boot process log", "process hierarchy", "pruning processes", "merging siblings", "exploders", "process tree analysis", "system boot logs", "process merge"], "state": 2, "file_id": 1494, "knowledge_revision": 14642, "git_revision": "", "ctags": [{"_type": "tag", "name": "EXPLODER_PROCESSES", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/pybootchartgui/pybootchartgui/process_tree.py", "pattern": "/^    EXPLODER_PROCESSES = set(['hwup'])$/", "language": "Python", "kind": "variable", "scope": "ProcessTree", "scopeKind": "class"}, {"_type": "tag", "name": "LOGGER_PROC", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/pybootchartgui/pybootchartgui/process_tree.py", "pattern": "/^    LOGGER_PROC = 'bootchart-colle'$/", "language": "Python", "kind": "variable", "scope": "ProcessTree", "scopeKind": "class"}, {"_type": "tag", "name": "ProcessTree", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/pybootchartgui/pybootchartgui/process_tree.py", "pattern": "/^class ProcessTree:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/pybootchartgui/pybootchartgui/process_tree.py", "pattern": "/^    def __init__(self, writer, kernel, psstats, sample_period,$/", "language": "Python", "kind": "member", "signature": "(self, writer, kernel, psstats, sample_period, monitoredApp, prune, idle, taskstats, accurate_parentage, for_testing = False)", "scope": "ProcessTree", "scopeKind": "class"}, {"_type": "tag", "name": "build", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/pybootchartgui/pybootchartgui/process_tree.py", "pattern": "/^    def build(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "ProcessTree", "scopeKind": "class"}, {"_type": "tag", "name": "get_end_time", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/pybootchartgui/pybootchartgui/process_tree.py", "pattern": "/^    def get_end_time(self, process_subtree):$/", "language": "Python", "kind": "member", "signature": "(self, process_subtree)", "scope": "ProcessTree", "scopeKind": "class"}, {"_type": "tag", "name": "get_max_pid", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/pybootchartgui/pybootchartgui/process_tree.py", "pattern": "/^    def get_max_pid(self, process_subtree):$/", "language": "Python", "kind": "member", "signature": "(self, process_subtree)", "scope": "ProcessTree", "scopeKind": "class"}, {"_type": "tag", "name": "get_start_time", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/pybootchartgui/pybootchartgui/process_tree.py", "pattern": "/^    def get_start_time(self, process_subtree):$/", "language": "Python", "kind": "member", "signature": "(self, process_subtree)", "scope": "ProcessTree", "scopeKind": "class"}, {"_type": "tag", "name": "is_idle_background_process_without_children", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/pybootchartgui/pybootchartgui/process_tree.py", "pattern": "/^        def is_idle_background_process_without_children(p):$/", "file": true, "language": "Python", "kind": "function", "signature": "(p)", "scope": "ProcessTree.prune", "scopeKind": "member"}, {"_type": "tag", "name": "merge_exploders", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/pybootchartgui/pybootchartgui/process_tree.py", "pattern": "/^    def merge_exploders(self, process_subtree, processes):$/", "language": "Python", "kind": "member", "signature": "(self, process_subtree, processes)", "scope": "ProcessTree", "scopeKind": "class"}, {"_type": "tag", "name": "merge_logger", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/pybootchartgui/pybootchartgui/process_tree.py", "pattern": "/^    def merge_logger(self, process_subtree, logger_proc, monitored_app, app_tree):$/", "language": "Python", "kind": "member", "signature": "(self, process_subtree, logger_proc, monitored_app, app_tree)", "scope": "ProcessTree", "scopeKind": "class"}, {"_type": "tag", "name": "merge_processes", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/pybootchartgui/pybootchartgui/process_tree.py", "pattern": "/^    def merge_processes(self, p1, p2):$/", "language": "Python", "kind": "member", "signature": "(self, p1, p2)", "scope": "ProcessTree", "scopeKind": "class"}, {"_type": "tag", "name": "merge_runs", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/pybootchartgui/pybootchartgui/process_tree.py", "pattern": "/^    def merge_runs(self, process_subtree):$/", "language": "Python", "kind": "member", "signature": "(self, process_subtree)", "scope": "ProcessTree", "scopeKind": "class"}, {"_type": "tag", "name": "merge_siblings", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/pybootchartgui/pybootchartgui/process_tree.py", "pattern": "/^    def merge_siblings(self, process_subtree):$/", "language": "Python", "kind": "member", "signature": "(self, process_subtree)", "scope": "ProcessTree", "scopeKind": "class"}, {"_type": "tag", "name": "num_nodes", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/pybootchartgui/pybootchartgui/process_tree.py", "pattern": "/^    def num_nodes(self, process_list):$/", "language": "Python", "kind": "member", "signature": "(self, process_list)", "scope": "ProcessTree", "scopeKind": "class"}, {"_type": "tag", "name": "prune", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/pybootchartgui/pybootchartgui/process_tree.py", "pattern": "/^    def prune(self, process_subtree, parent):$/", "language": "Python", "kind": "member", "signature": "(self, process_subtree, parent)", "scope": "ProcessTree", "scopeKind": "class"}, {"_type": "tag", "name": "sort", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/pybootchartgui/pybootchartgui/process_tree.py", "pattern": "/^    def sort(self, process_subtree):$/", "language": "Python", "kind": "member", "signature": "(self, process_subtree)", "scope": "ProcessTree", "scopeKind": "class"}, {"_type": "tag", "name": "update_ppids_for_daemons", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/pybootchartgui/pybootchartgui/process_tree.py", "pattern": "/^    def update_ppids_for_daemons(self, process_list):$/", "language": "Python", "kind": "member", "signature": "(self, process_list)", "scope": "ProcessTree", "scopeKind": "class"}], "hash": "1022a3a23da4e34695f96c5c0fea47fd", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "openembedded-core/scripts/pybootchartgui/pybootchartgui/process_tree.py", "fields": [{"name": "EXPLODER_PROCESSES = set(['hwup'])", "scope": "ProcessTree", "scopeKind": "class", "description": "unavailable"}, {"name": "LOGGER_PROC = 'bootchart-colle'", "scope": "ProcessTree", "scopeKind": "class", "description": "unavailable"}], "revision_history": [{"14642": ""}]}