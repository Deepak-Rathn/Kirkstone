{"is_source_file": true, "format": "Java", "description": "This file defines the 'InvocationHandlerBase' class, which implements the 'InvocationHandler' interface. It provides a generic invocation mechanism that calls methods via reflection, serving as a base class for proxies or dynamic invocation management.", "external_files": ["java.lang.reflect.InvocationHandler", "java.lang.reflect.InvocationTargetException", "java.lang.reflect.Method"], "external_methods": ["java.lang.reflect.Method.getName", "java.lang.reflect.Method.getParameterTypes", "java.lang.reflect.Method.invoke"], "published": ["InvocationHandlerBase"], "classes": [{"name": "InvocationHandlerBase", "description": "A base class that implements InvocationHandler to delegate method calls dynamically via reflection."}], "methods": [{"name": "invoke", "description": "Invokes the specified method with the provided arguments, handling exceptions and setting method accessibility."}], "calls": ["java.lang.reflect.Method.getMethod", "java.lang.reflect.Method.setAccessible", "java.lang.reflect.Method.invoke"], "search-terms": ["InvocationHandler", "reflection", "dynamic proxy", "java.lang.reflect", "InvocationTargetException"], "state": 2, "file_id": 754, "knowledge_revision": 13911, "git_revision": "", "hash": "d745c4eb5473764f9e329ddefee286bd", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "components/opensource/zilker-sdk/source/libs/ipc/java/src/main/java/com/icontrol/api/InvocationHandlerBase.java", "revision_history": [{"13911": ""}]}