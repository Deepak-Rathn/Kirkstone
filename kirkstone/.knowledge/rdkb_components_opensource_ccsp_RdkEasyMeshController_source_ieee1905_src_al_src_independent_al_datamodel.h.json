{"is_source_file": true, "format": "C header (.h)", "description": "This file defines the interface for the AL Data Model in the IEEE 1905.1/1a stack, including functions for initialization, device management, topology discovery, and network topology updates.", "external_files": ["1905_tlvs.h"], "external_methods": [], "published": ["DMinit", "DMfini", "DMalMacSet", "DMalMacGet", "DMregistrarMacSet", "DMregistrarMacGet", "DMmapWholeNetworkSet", "DMmapWholeNetworkGet", "DMfindInterface", "DMinsertInterface", "DMmacToInterfaceName", "DMinterfaceNameToMac", "DMupdateDiscoveryTimeStamps", "DMisLinkBridged", "DMisNeighborBridged", "DMisInterfaceBridged", "DMmacToAlMac", "DMupdateNetworkDeviceInfo", "DMnetworkDeviceInfoNeedsUpdate", "DMupdateNetworkDeviceMetrics", "DMdumpNetworkDevices", "DMrunGarbageCollector", "DMremoveALNeighborFromInterface", "DMextensionsGet"], "classes": [], "methods": [{"name": "DMinit", "description": "Initializes the data model before any other function can be used."}, {"name": "DMfini", "description": "De-initializes the data model, releasing resources."}, {"name": "DMalMacSet", "description": "Sets the AL MAC address in the data model."}, {"name": "DMalMacGet", "description": "Retrieves the AL MAC address from the data model."}, {"name": "DMregistrarMacSet", "description": "Sets the registrar MAC address."}, {"name": "DMregistrarMacGet", "description": "Retrieves the registrar MAC address."}, {"name": "DMmapWholeNetworkSet", "description": "Sets whether to map the whole network or only direct neighbors."}, {"name": "DMmapWholeNetworkGet", "description": "Checks if mapping the whole network is enabled."}, {"name": "DMfindInterface", "description": "Checks if a given interface name and MAC address pair exists in the database."}, {"name": "DMinsertInterface", "description": "Inserts a new network interface with its name and MAC address into the database."}, {"name": "DMmacToInterfaceName", "description": "Converts a MAC address to its associated interface name."}, {"name": "DMinterfaceNameToMac", "description": "Converts an interface name to its MAC address."}, {"name": "DMupdateDiscoveryTimeStamps", "description": "Updates timestamps for topology and bridge discovery messages received on an interface."}, {"name": "DMisLinkBridged", "description": "Determines if a link between local interface and neighbor is bridged based on discovery messages."}, {"name": "DMisNeighborBridged", "description": "Checks if a neighbor is bridged."}, {"name": "DMisInterfaceBridged", "description": "Checks if a local interface is bridged."}, {"name": "DMmacToAlMac", "description": "Returns the AL MAC associated with a given MAC address, if any."}, {"name": "DMupdateNetworkDeviceInfo", "description": "Updates network device information in the data model with various TLVs."}, {"name": "DMnetworkDeviceInfoNeedsUpdate", "description": "Determines if a device's info needs re-updating based on last update age."}, {"name": "DMupdateNetworkDeviceMetrics", "description": "Updates link metrics for a network device."}, {"name": "DMdumpNetworkDevices", "description": "Prints the current network devices database."}, {"name": "DMrunGarbageCollector", "description": "Removes outdated device entries from the database."}, {"name": "DMremoveALNeighborFromInterface", "description": "Removes a neighbor from a specific local interface."}, {"name": "DMextensionsGet", "description": "Retrieves the list of vendor-specific TLVs/extensions for a specific device."}], "calls": ["1905_tlvs.h"], "search-terms": ["al_datamodel", "1905", "topology", "device", "MAC", "TLV", "IEEE 1905.1", "network device", "discovery", "garbage collector"], "state": 2, "file_id": 8643, "knowledge_revision": 26142, "git_revision": "", "ctags": [{"_type": "tag", "name": "AL_DATAMODEL_H_", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/RdkEasyMeshController/source/ieee1905/src/al/src_independent/al_datamodel.h", "pattern": "/^#define AL_DATAMODEL_H_$/", "language": "C++", "kind": "macro"}, {"_type": "tag", "name": "DISCOVERY_THRESHOLD_MS", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/RdkEasyMeshController/source/ieee1905/src/al/src_independent/al_datamodel.h", "pattern": "/^#define DISCOVERY_THRESHOLD_MS /", "language": "C++", "kind": "macro"}, {"_type": "tag", "name": "GC_MAX_AGE", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/RdkEasyMeshController/source/ieee1905/src/al/src_independent/al_datamodel.h", "pattern": "/^#define GC_MAX_AGE /", "language": "C++", "kind": "macro"}, {"_type": "tag", "name": "MAX_AGE", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/RdkEasyMeshController/source/ieee1905/src/al/src_independent/al_datamodel.h", "pattern": "/^#define MAX_AGE /", "language": "C++", "kind": "macro"}, {"_type": "tag", "name": "TIMESTAMP_BRIDGE_DISCOVERY", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/RdkEasyMeshController/source/ieee1905/src/al/src_independent/al_datamodel.h", "pattern": "/^#define TIMESTAMP_BRIDGE_DISCOVERY /", "language": "C++", "kind": "macro"}, {"_type": "tag", "name": "TIMESTAMP_TOPOLOGY_DISCOVERY", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/RdkEasyMeshController/source/ieee1905/src/al/src_independent/al_datamodel.h", "pattern": "/^#define TIMESTAMP_TOPOLOGY_DISCOVERY /", "language": "C++", "kind": "macro"}], "hash": "4c944c32def672ea52a3be42c47649da", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "rdkb/components/opensource/ccsp/RdkEasyMeshController/source/ieee1905/src/al/src_independent/al_datamodel.h", "revision_history": [{"26142": ""}]}