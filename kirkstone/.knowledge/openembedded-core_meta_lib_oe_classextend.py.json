{"is_source_file": true, "format": "Python", "description": "This file defines a class 'ClassExtender' and a subclass 'NativesdkClassExtender' used for manipulating package names, dependencies, and variables within a build system, likely in a Yocto or OpenEmbedded context. It includes functions for renaming packages, mapping variables, and managing dependency strings with a focus on extending or modifying package and dependency names based on specific rules.", "external_files": ["bb.utils"], "external_methods": ["bb.utils.explode_dep_versions2", "bb.utils.join_deps"], "published": ["oe.classextend"], "classes": [{"name": "ClassExtender", "description": "A class for extending package names and dependencies in a build environment, handling package name transformations, variable mappings, and dependency management."}, {"name": "NativesdkClassExtender", "description": "A subclass of ClassExtender that specifically handles dependency mappings for native SDK packages, adding cross SDK suffixes when appropriate."}], "methods": [{"name": "get_packages(d)", "description": "Retrieves and returns renamed package list from a data object.", "scope": "", "scopeKind": ""}, {"name": "get_depends(varprefix, d)", "description": "Get dependencies based on a variable prefix and data object.", "scope": "", "scopeKind": ""}, {"name": "extend_name(self, name)", "description": "Extends a package name with an extender prefix or modifies special cases like virtual or cross kernels.", "scope": "ClassExtender", "scopeKind": "class"}, {"name": "map_variable(self, varname, setvar = True)", "description": "Maps and extends package names in a variable, optionally updating the variable.", "scope": "ClassExtender", "scopeKind": "class"}, {"name": "map_regexp_variable(self, varname, setvar = True)", "description": "Maps variables containing regular expressions, extending names as needed with special comparisons.", "scope": "ClassExtender", "scopeKind": "class"}, {"name": "map_depends(self, dep)", "description": "Maps dependency names, adding extensions unless they match specific exclusion patterns.", "scope": "NativesdkClassExtender", "scopeKind": "class"}, {"name": "map_depends_variable(self, varname, suffix = \"\")", "description": "Maps dependencies listed in a variable, replacing it with extended dependencies, handling version and variable expansion.", "scope": "ClassExtender", "scopeKind": "class"}, {"name": "map_packagevars(self)", "description": "Maps dependency variables for multiple package-related variables (RDEPENDS, RRECOMMENDS, etc.).", "scope": "ClassExtender", "scopeKind": "class"}, {"name": "rename_packages(self)", "description": "Renames the list of packages, storing the original as PACKAGES_NONML and setting extended names.", "scope": "ClassExtender", "scopeKind": "class"}, {"name": "rename_packages_internal(self, pkgs)", "description": "Internal function that generates extended package names from a list.", "scope": "ClassExtender", "scopeKind": "class"}, {"name": "rename_packagevariables", "description": "Renames package-related variables based on package name mappings."}, {"name": "__init__(self, extname, d)", "scope": "ClassExtender", "scopeKind": "class", "description": "unavailable"}, {"name": "rename_package_variables(self, variables)", "scope": "ClassExtender", "scopeKind": "class", "description": "unavailable"}], "calls": ["d.getVar", "d.setVar", "d.renameVar", "d.expand", "d.appendVarFlag"], "search-terms": ["ClassExtender", "map_depends_variable", "rename_packages", "get_packages", "EXTENDERCLASS"], "state": 2, "file_id": 1823, "knowledge_revision": 14963, "git_revision": "", "ctags": [{"_type": "tag", "name": "ClassExtender", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/classextend.py", "pattern": "/^class ClassExtender(object):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "NativesdkClassExtender", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/classextend.py", "pattern": "/^class NativesdkClassExtender(ClassExtender):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/classextend.py", "pattern": "/^    def __init__(self, extname, d):$/", "language": "Python", "kind": "member", "signature": "(self, extname, d)", "scope": "ClassExtender", "scopeKind": "class"}, {"_type": "tag", "name": "extend_name", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/classextend.py", "pattern": "/^    def extend_name(self, name):$/", "language": "Python", "kind": "member", "signature": "(self, name)", "scope": "ClassExtender", "scopeKind": "class"}, {"_type": "tag", "name": "get_depends", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/classextend.py", "pattern": "/^def get_depends(varprefix, d):$/", "language": "Python", "kind": "function", "signature": "(varprefix, d)"}, {"_type": "tag", "name": "get_packages", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/classextend.py", "pattern": "/^def get_packages(d):$/", "language": "Python", "kind": "function", "signature": "(d)"}, {"_type": "tag", "name": "map_depends", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/classextend.py", "pattern": "/^    def map_depends(self, dep):$/", "language": "Python", "kind": "member", "signature": "(self, dep)", "scope": "ClassExtender", "scopeKind": "class"}, {"_type": "tag", "name": "map_depends", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/classextend.py", "pattern": "/^    def map_depends(self, dep):$/", "language": "Python", "kind": "member", "signature": "(self, dep)", "scope": "NativesdkClassExtender", "scopeKind": "class"}, {"_type": "tag", "name": "map_depends_variable", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/classextend.py", "pattern": "/^    def map_depends_variable(self, varname, suffix = \"\"):$/", "language": "Python", "kind": "member", "signature": "(self, varname, suffix = \"\")", "scope": "ClassExtender", "scopeKind": "class"}, {"_type": "tag", "name": "map_packagevars", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/classextend.py", "pattern": "/^    def map_packagevars(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "ClassExtender", "scopeKind": "class"}, {"_type": "tag", "name": "map_regexp_variable", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/classextend.py", "pattern": "/^    def map_regexp_variable(self, varname, setvar = True):$/", "language": "Python", "kind": "member", "signature": "(self, varname, setvar = True)", "scope": "ClassExtender", "scopeKind": "class"}, {"_type": "tag", "name": "map_variable", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/classextend.py", "pattern": "/^    def map_variable(self, varname, setvar = True):$/", "language": "Python", "kind": "member", "signature": "(self, varname, setvar = True)", "scope": "ClassExtender", "scopeKind": "class"}, {"_type": "tag", "name": "rename_package_variables", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/classextend.py", "pattern": "/^    def rename_package_variables(self, variables):$/", "language": "Python", "kind": "member", "signature": "(self, variables)", "scope": "ClassExtender", "scopeKind": "class"}, {"_type": "tag", "name": "rename_packages", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/classextend.py", "pattern": "/^    def rename_packages(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "ClassExtender", "scopeKind": "class"}, {"_type": "tag", "name": "rename_packages_internal", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/classextend.py", "pattern": "/^    def rename_packages_internal(self, pkgs):$/", "language": "Python", "kind": "member", "signature": "(self, pkgs)", "scope": "ClassExtender", "scopeKind": "class"}], "hash": "af88d7d6db767889725edb543ef23ed6", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "openembedded-core/meta/lib/oe/classextend.py", "revision_history": [{"14963": ""}]}