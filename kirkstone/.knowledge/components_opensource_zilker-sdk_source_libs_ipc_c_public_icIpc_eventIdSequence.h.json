{"is_source_file": true, "format": "C header file", "description": "This header file provides support for a shared memory segment that functions as a unique event ID sequencer. It declares functions and includes necessary headers to create, destroy, and retrieve the next event ID in a concurrent environment using System V shared memory and semaphores, primarily to ensure unique, sequential event identifiers across multiple processes.", "external_files": ["<stdint.h>", "<stdbool.h>"], "external_methods": [], "published": ["getNextEventId"], "classes": [], "methods": [{"name": "getNextEventId", "description": "Returns the next available unique event ID as a 64-bit unsigned integer, ensuring concurrency control across multiple processes."}], "calls": [], "search-terms": ["shared memory", "eventId", "System V semaphore", "concurrent", "sequential identifiers", "inter-process communication"], "state": 2, "file_id": 751, "knowledge_revision": 13908, "git_revision": "", "ctags": [{"_type": "tag", "name": "IC_EVENT_ID_SEQUENCE_H", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/ipc/c/public/icIpc/eventIdSequence.h", "pattern": "/^#define IC_EVENT_ID_SEQUENCE_H$/", "language": "C++", "kind": "macro"}], "hash": "05cb294754f161aa62246976fa352a37", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "components/opensource/zilker-sdk/source/libs/ipc/c/public/icIpc/eventIdSequence.h", "revision_history": [{"13908": ""}]}