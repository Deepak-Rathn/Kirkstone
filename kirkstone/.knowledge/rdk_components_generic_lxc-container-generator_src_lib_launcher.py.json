{"is_source_file": true, "format": "Python", "description": "This file defines classes related to managing and generating launcher scripts for LXC containers, including container configuration validation, process attachment, systemd notification setup, and script creation for container start/stop procedures.", "external_files": ["os"], "external_methods": [], "published": ["cLauncher"], "classes": [{"name": "cLauncher", "description": "Main class responsible for container launcher configuration, script generation, and process handling, including methods to validate container and launcher names, generate systemd notification scripts, and create shell scripts for container management."}, {"name": "cLauncher.FunctionList", "description": "Inner class representing a list of functions with associated commands and notification settings, used within cLauncher to manage different container management actions."}], "methods": [{"name": "__init__(self, launcherCommand, commandLine, pidFile, processName, shouldNotifySystemd, isProcessForking=False)", "description": "Constructor for cLauncher, initializing configuration parameters related to container management, such as sanity checks, root filesystem, launcher name, and sleep duration.", "scope": "cLauncher.FunctionList", "scopeKind": "class"}, {"name": "matchVersion(self, parentNode, nodeName)", "description": "Finds and returns a specific XML node within a parent node by name.", "scope": "cLauncher", "scopeKind": "class"}, {"name": "getContainerName(self, lxcParams)", "description": "Determines and sets the container name, either from provided parameters or defaults in rootfs.", "scope": "cLauncher", "scopeKind": "class"}, {"name": "getLauncherParams(self, lxcParams)", "description": "Extracts launcher parameters from XML data, setting launcher name, executable name, and output options.", "scope": "cLauncher", "scopeKind": "class"}, {"name": "verifyContainerName(self, lxcParams)", "description": "Validates that the container name matches between configuration and existing data, raises error if mismatch.", "scope": "cLauncher", "scopeKind": "class"}, {"name": "verifyLauncherName(self, lxcParams)", "description": "Validates that the launcher name matches expected values, if specified.", "scope": "cLauncher", "scopeKind": "class"}, {"name": "genAttachParams(self, attachEntry)", "description": "Generates attachment parameters, including user and group IDs, based on XML data and privilege status.", "scope": "cLauncher", "scopeKind": "class"}, {"name": "appendFunctionList(self, functionName, function)", "description": "Appends a function command to the list of container operations, maintaining order and including 'stop'.", "scope": "cLauncher", "scopeKind": "class"}, {"name": "generateSystemdNotify(self, node, command, isExec)", "description": "Creates a launcher entry with systemd notification settings based on XML configuration, supporting forking and create notifications.", "scope": "cLauncher", "scopeKind": "class"}, {"name": "createScript(self)", "description": "Generates a shell script that manages container start/stop commands, including systemd notifications and fork handling.", "scope": "cLauncher", "scopeKind": "class"}, {"name": "generateScriptToFindPidOfForkingProcess(self, fd, processName)", "description": "Helper function to generate script code for identifying PID of a forking process within a container.", "scope": "cLauncher", "scopeKind": "class"}, {"name": "createLauncher(self, lxcParams)", "description": "Main method to initiate launcher creation, including setting parameters, validating, and generating scripts.", "scope": "cLauncher", "scopeKind": "class"}, {"name": "createAttached(self, lxcParams)", "description": "Handles setting up attached processes inside the container, including notifications and stop configuration.", "scope": "cLauncher", "scopeKind": "class"}, {"name": "appendLauncher(self, lxcParams)", "description": "Extends existing launcher configuration, validating and generating related commands and scripts.", "scope": "cLauncher", "scopeKind": "class"}, {"name": "__init__(self, sanityCheck, rootfs, sleepUs)", "scope": "cLauncher", "scopeKind": "class", "description": "unavailable"}], "calls": ["self.rootfs.getSandboxName()", "lxcParams.find", "lxcParams.iter", "self.rootfs.userNameToUid", "self.rootfs.groupNameToGid", "/usr/bin/lxc-execute", "/usr/bin/lxc-attach", "/usr/bin/lxc-stop", "/usr/bin/lxccpid", "self.rootfs.getLauncherFileHost()", "self.rootfs.getConfFileTarget()"], "search-terms": ["cLauncher", "systemdNotify", "generateSystemdNotify", "createScript", "lxc-execute", "lxc-attach", "PidFile", "ContainerName", "Attach", "stop"], "state": 2, "file_id": 13029, "knowledge_revision": 25924, "git_revision": "", "ctags": [{"_type": "tag", "name": "FunctionList", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/lxc-container-generator/src/lib/launcher.py", "pattern": "/^    class FunctionList(object):$/", "language": "Python", "kind": "class", "scope": "cLauncher", "scopeKind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/lxc-container-generator/src/lib/launcher.py", "pattern": "/^        def __init__(self, launcherCommand, commandLine, pidFile, processName, shouldNotifySyste/", "language": "Python", "kind": "member", "signature": "(self, launcherCommand, commandLine, pidFile, processName, shouldNotifySystemd, isProcessForking=False)", "scope": "cLauncher.FunctionList", "scopeKind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/lxc-container-generator/src/lib/launcher.py", "pattern": "/^    def __init__(self, sanityCheck, rootfs, sleepUs):$/", "language": "Python", "kind": "member", "signature": "(self, sanityCheck, rootfs, sleepUs)", "scope": "cLauncher", "scopeKind": "class"}, {"_type": "tag", "name": "appendFunctionList", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/lxc-container-generator/src/lib/launcher.py", "pattern": "/^    def appendFunctionList(self, functionName, function):$/", "language": "Python", "kind": "member", "signature": "(self, functionName, function)", "scope": "cLauncher", "scopeKind": "class"}, {"_type": "tag", "name": "appendLauncher", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/lxc-container-generator/src/lib/launcher.py", "pattern": "/^    def appendLauncher(self, lxcParams):$/", "language": "Python", "kind": "member", "signature": "(self, lxcParams)", "scope": "cLauncher", "scopeKind": "class"}, {"_type": "tag", "name": "cLauncher", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/lxc-container-generator/src/lib/launcher.py", "pattern": "/^class cLauncher(object):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "createAttached", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/lxc-container-generator/src/lib/launcher.py", "pattern": "/^    def createAttached(self, lxcParams):$/", "language": "Python", "kind": "member", "signature": "(self, lxcParams)", "scope": "cLauncher", "scopeKind": "class"}, {"_type": "tag", "name": "createLauncher", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/lxc-container-generator/src/lib/launcher.py", "pattern": "/^    def createLauncher(self, lxcParams):$/", "language": "Python", "kind": "member", "signature": "(self, lxcParams)", "scope": "cLauncher", "scopeKind": "class"}, {"_type": "tag", "name": "createScript", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/lxc-container-generator/src/lib/launcher.py", "pattern": "/^    def createScript(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "cLauncher", "scopeKind": "class"}, {"_type": "tag", "name": "genAttachParams", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/lxc-container-generator/src/lib/launcher.py", "pattern": "/^    def genAttachParams(self, attachEntry):$/", "language": "Python", "kind": "member", "signature": "(self, attachEntry)", "scope": "cLauncher", "scopeKind": "class"}, {"_type": "tag", "name": "generateScriptToFindPidOfForkingProcess", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/lxc-container-generator/src/lib/launcher.py", "pattern": "/^    def generateScriptToFindPidOfForkingProcess(self, fd, processName):$/", "language": "Python", "kind": "member", "signature": "(self, fd, processName)", "scope": "cLauncher", "scopeKind": "class"}, {"_type": "tag", "name": "generateSystemdNotify", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/lxc-container-generator/src/lib/launcher.py", "pattern": "/^    def generateSystemdNotify(self, node, command, isExec):$/", "language": "Python", "kind": "member", "signature": "(self, node, command, isExec)", "scope": "cLauncher", "scopeKind": "class"}, {"_type": "tag", "name": "getContainerName", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/lxc-container-generator/src/lib/launcher.py", "pattern": "/^    def getContainerName(self, lxcParams):$/", "language": "Python", "kind": "member", "signature": "(self, lxcParams)", "scope": "cLauncher", "scopeKind": "class"}, {"_type": "tag", "name": "getLauncherParams", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/lxc-container-generator/src/lib/launcher.py", "pattern": "/^    def getLauncherParams(self, lxcParams):$/", "language": "Python", "kind": "member", "signature": "(self, lxcParams)", "scope": "cLauncher", "scopeKind": "class"}, {"_type": "tag", "name": "matchVersion", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/lxc-container-generator/src/lib/launcher.py", "pattern": "/^    def matchVersion(self, parentNode, nodeName):$/", "language": "Python", "kind": "member", "signature": "(self, parentNode, nodeName)", "scope": "cLauncher", "scopeKind": "class"}, {"_type": "tag", "name": "verifyContainerName", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/lxc-container-generator/src/lib/launcher.py", "pattern": "/^    def verifyContainerName(self, lxcParams):$/", "language": "Python", "kind": "member", "signature": "(self, lxcParams)", "scope": "cLauncher", "scopeKind": "class"}, {"_type": "tag", "name": "verifyLauncherName", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/lxc-container-generator/src/lib/launcher.py", "pattern": "/^    def verifyLauncherName(self, lxcParams):$/", "language": "Python", "kind": "member", "signature": "(self, lxcParams)", "scope": "cLauncher", "scopeKind": "class"}], "hash": "de5005ccf541ede7041240940d65e842", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "rdk/components/generic/lxc-container-generator/src/lib/launcher.py", "revision_history": [{"25924": ""}]}