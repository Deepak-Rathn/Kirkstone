{"is_source_file": true, "format": "C", "description": "This source file provides compatibility workarounds for different OpenSSL versions, including lock management for thread safety with older OpenSSL versions, and initialization routines for SSL/TLS functionalities.", "external_files": ["<openssl/opensslv.h>", "<pthread.h>", "<openssl/evp.h>", "<openssl/ssl.h>", "<icLog/logging.h>", "<openssl/err.h>", "<icIpc/eventConsumer.h>"], "external_methods": ["mutexLock", "mutexUnlock", "mutexInitWithType", "CRYPTO_num_locks", "CRYPTO_set_id_callback", "CRYPTO_set_locking_callback", "SSL_library_init", "ERR_load_crypto_strings", "OpenSSL_add_all_algorithms", "ERR_load_CRYPTO_strings", "OPENSSL_malloc", "atexit", "shutdownEventListener", "OPENSSL_init_crypto", "OPENSSL_init_ssl"], "published": ["doInit", "cryptoLock", "cryptoThreadId"], "classes": [], "methods": [{"name": "void doInit(void)", "description": "Initializes the OpenSSL library, sets up thread locks if using an older OpenSSL version, and registers cleanup routines for SSL/TLS.", "scope": "", "scopeKind": ""}, {"name": "void cryptoLock(int mode,int type,const char * file,int line)", "description": "Handles locking and unlocking of OpenSSL internal locks for thread safety in older OpenSSL versions.", "scope": "", "scopeKind": ""}, {"name": "unsigned long cryptoThreadId(void)", "description": "Returns the current thread ID, used as a callback for OpenSSL lock management.", "scope": "", "scopeKind": ""}], "calls": ["mutexLock", "mutexUnlock", "mutexInitWithType", "CRYPTO_num_locks", "CRYPTO_set_id_callback", "CRYPTO_set_locking_callback", "SSL_library_init", "ERR_load_crypto_strings", "OpenSSL_add_all_algorithms", "ERR_load_CRYPTO_strings", "OPENSSL_malloc", "atexit", "shutdownEventListener", "OPENSSL_init_crypto", "OPENSSL_init_ssl"], "search-terms": ["compat.c", "OpenSSL version compatibility", "thread safety OpenSSL", "openssl initialization", "compatibility layer", "openssl 1.0 legacy support", "cryptographic lock handling"], "state": 2, "file_id": 844, "knowledge_revision": 14000, "git_revision": "", "ctags": [{"_type": "tag", "name": "OLD_OPENSSL", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/crypto/c/src/compat.c", "pattern": "/^#define OLD_OPENSSL$/", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "cryptoLock", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/crypto/c/src/compat.c", "pattern": "/^static void cryptoLock(int mode, int type, const char * file, int line)$/", "file": true, "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(int mode,int type,const char * file,int line)"}, {"_type": "tag", "name": "cryptoThreadId", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/crypto/c/src/compat.c", "pattern": "/^static unsigned long cryptoThreadId(void)$/", "file": true, "language": "C", "typeref": "typename:unsigned long", "kind": "function", "signature": "(void)"}, {"_type": "tag", "name": "doInit", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/crypto/c/src/compat.c", "pattern": "/^__attribute__ ((constructor)) static inline void doInit(void)$/", "file": true, "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(void)"}, {"_type": "tag", "name": "libcryptoLocks", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/crypto/c/src/compat.c", "pattern": "/^static pthread_mutex_t *libcryptoLocks;$/", "file": true, "language": "C", "typeref": "typename:pthread_mutex_t *", "kind": "variable"}], "hash": "5f7c8c0fa479f329ac730168d2bafbea", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "components/opensource/zilker-sdk/source/libs/crypto/c/src/compat.c", "fields": [{"name": "pthread_mutex_t * libcryptoLocks", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"14000": ""}]}