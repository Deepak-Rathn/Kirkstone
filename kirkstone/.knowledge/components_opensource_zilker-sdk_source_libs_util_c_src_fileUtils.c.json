{"is_source_file": true, "format": "C", "description": "This file contains utility functions for filesystem operations such as file deletion, copying, moving, directory creation, reading file contents, and handling symbolic links. It also includes functions for directory traversal, deletion, and marker file creation, primarily used for file management tasks within a C project.", "external_files": ["<stdlib.h>", "<string.h>", "<errno.h>", "<stdio.h>", "<stdbool.h>", "<unistd.h>", "<sys/types.h>", "<sys/stat.h>", "<fcntl.h>", "<time.h>", "<dirent.h>", "<libgen.h>", "<icBuildtime.h>", "<icLog/logging.h>", "<icUtil/fileUtils.h>", "<icUtil/stringUtils.h>", "<sys/syslimits.h>"], "external_methods": ["listDirectory", "strerrorSafe", "stringBuilder", "moveFile", "copyFile", "safeStringCopy", "safeStringAppend"], "published": ["deleteDirHandler", "copyDirHandler", "mkdir_p", "readFileContents", "readFileContentsWithTrim", "writeContentsToFileName", "copyFile", "copyFileByPath", "moveFile", "doesNonEmptyFileExist", "doesFileExist", "doesDirExist", "listDirectory", "deleteDirectory", "deleteFile", "copyDirectory", "createMarkerFile"], "classes": [], "methods": [{"name": "int deleteDirHandler(const char * pathname,const char * dname,unsigned char dtype,void * private)", "description": "Deletes a directory, file, or symlink based on the provided type. Used as a callback for directory listing operations to recursively delete files and directories.", "scope": "", "scopeKind": ""}, {"name": "int copyDirHandler(const char * pathname,const char * dname,unsigned char dtype,void * private)", "description": "Copies a directory, symlink, or file from source to destination, handling permissions and special types like symlinks.", "scope": "", "scopeKind": ""}, {"name": "int mkdir_p(const char * path,mode_t mode)", "description": "Creates a directory and all parent directories as needed, similar to 'mkdir -p' in Unix.", "scope": "", "scopeKind": ""}, {"name": "char * readFileContents(const char * filename)", "description": "Reads the entire content of a file into a malloc'ed string, returning NULL on failure.", "scope": "", "scopeKind": ""}, {"name": "char * readFileContentsWithTrim(const char * filename)", "description": "Reads a file and trims the trailing newline character if present.", "scope": "", "scopeKind": ""}, {"name": "bool writeContentsToFileName(const char * filename,const char * contents)", "description": "Writes data to a specified file atomically using a temporary file and renaming.", "scope": "", "scopeKind": ""}, {"name": "bool copyFile(FILE * source,FILE * dest)", "description": "Copies data from one FILE stream to another.", "scope": "", "scopeKind": ""}, {"name": "bool copyFileByPath(const char * sourcePath,const char * destPath)", "description": "Copies a file from source path to destination path.", "scope": "", "scopeKind": ""}, {"name": "bool moveFile(const char * sourcePath,const char * destPath)", "description": "Moves a file from one location to another, using rename if possible or copy + delete if across filesystems.", "scope": "", "scopeKind": ""}, {"name": "bool doesNonEmptyFileExist(const char * filename)", "description": "Checks if a non-empty file exists at the given path.", "scope": "", "scopeKind": ""}, {"name": "bool doesFileExist(const char * filename)", "description": "Checks if a file exists at the given path.", "scope": "", "scopeKind": ""}, {"name": "bool doesDirExist(const char * dirPath)", "description": "Checks if a directory exists at the given path.", "scope": "", "scopeKind": ""}, {"name": "int listDirectory(const char * dir,directoryHandler handler,void * private)", "description": "Lists files and directories within a directory, invoking a handler callback for each entry.", "scope": "", "scopeKind": ""}, {"name": "bool deleteDirectory(const char * path)", "description": "Recursively deletes a directory and its contents.", "scope": "", "scopeKind": ""}, {"name": "bool deleteFile(const char * filename)", "description": "Deletes a specified file.", "scope": "", "scopeKind": ""}, {"name": "bool copyDirectory(const char * src,const char * dst)", "description": "Copies a directory and its contents from source to destination.", "scope": "", "scopeKind": ""}, {"name": "bool createMarkerFile(const char * path)", "description": "Creates an empty (zero-length) marker file at the specified path.", "scope": "", "scopeKind": ""}], "calls": ["listDirectory", "strerrorSafe", "stringBuilder", "moveFile", "copyFile", "safeStringCopy", "safeStringAppend", "mkdir", "fseek", "ftell", "fread", "fwrite", "fflush", "fsync", "close", "unlink", "rename", "stat", "mkdir", "opendir", "readdir", "closedir", "rmdir", "creat", "close"], "search-terms": ["fileUtils.c", "filesystem", "file copying", "directory deletion", "recursive directory copy", "file reading", "atomic write", "symlink handling", "create marker file", "cross-filesystem move"], "state": 2, "file_id": 701, "knowledge_revision": 13874, "git_revision": "", "ctags": [{"_type": "tag", "name": "LOG_TAG", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/util/c/src/fileUtils.c", "pattern": "/^#define LOG_TAG /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "copyDirHandler", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/util/c/src/fileUtils.c", "pattern": "/^static int copyDirHandler(const char* pathname, const char* dname, unsigned char dtype, void* pr/", "file": true, "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(const char * pathname,const char * dname,unsigned char dtype,void * private)"}, {"_type": "tag", "name": "copyDirectory", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/util/c/src/fileUtils.c", "pattern": "/^bool copyDirectory(const char* src, const char* dst)$/", "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(const char * src,const char * dst)"}, {"_type": "tag", "name": "copyFile", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/util/c/src/fileUtils.c", "pattern": "/^bool copyFile(FILE *source, FILE *dest)$/", "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(FILE * source,FILE * dest)"}, {"_type": "tag", "name": "copyFileByPath", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/util/c/src/fileUtils.c", "pattern": "/^bool copyFileByPath(const char *sourcePath, const char *destPath)$/", "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(const char * sourcePath,const char * destPath)"}, {"_type": "tag", "name": "createMarkerFile", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/util/c/src/fileUtils.c", "pattern": "/^bool createMarkerFile(const char *path)$/", "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(const char * path)"}, {"_type": "tag", "name": "deleteDirHandler", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/util/c/src/fileUtils.c", "pattern": "/^int deleteDirHandler(const char* pathname, const char* dname, unsigned char dtype, void* private/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(const char * pathname,const char * dname,unsigned char dtype,void * private)"}, {"_type": "tag", "name": "deleteDirectory", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/util/c/src/fileUtils.c", "pattern": "/^bool deleteDirectory(const char *path)$/", "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(const char * path)"}, {"_type": "tag", "name": "deleteFile", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/util/c/src/fileUtils.c", "pattern": "/^bool deleteFile(const char *filename)$/", "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(const char * filename)"}, {"_type": "tag", "name": "doesDirExist", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/util/c/src/fileUtils.c", "pattern": "/^bool doesDirExist(const char *dirPath)$/", "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(const char * dirPath)"}, {"_type": "tag", "name": "doesFileExist", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/util/c/src/fileUtils.c", "pattern": "/^bool doesFileExist(const char *filename)$/", "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(const char * filename)"}, {"_type": "tag", "name": "doesNonEmptyFileExist", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/util/c/src/fileUtils.c", "pattern": "/^bool doesNonEmptyFileExist(const char *filename)$/", "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(const char * filename)"}, {"_type": "tag", "name": "listDirectory", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/util/c/src/fileUtils.c", "pattern": "/^int listDirectory(const char* dir, directoryHandler handler, void* private)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(const char * dir,directoryHandler handler,void * private)"}, {"_type": "tag", "name": "mkdir_p", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/util/c/src/fileUtils.c", "pattern": "/^int mkdir_p(const char *path, mode_t mode)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(const char * path,mode_t mode)"}, {"_type": "tag", "name": "moveFile", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/util/c/src/fileUtils.c", "pattern": "/^bool moveFile(const char *sourcePath, const char *destPath)$/", "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(const char * sourcePath,const char * destPath)"}, {"_type": "tag", "name": "readFileContents", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/util/c/src/fileUtils.c", "pattern": "/^char *readFileContents(const char *filename)$/", "language": "C", "typeref": "typename:char *", "kind": "function", "signature": "(const char * filename)"}, {"_type": "tag", "name": "readFileContentsWithTrim", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/util/c/src/fileUtils.c", "pattern": "/^char *readFileContentsWithTrim(const char *filename)$/", "language": "C", "typeref": "typename:char *", "kind": "function", "signature": "(const char * filename)"}, {"_type": "tag", "name": "writeContentsToFileName", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/util/c/src/fileUtils.c", "pattern": "/^bool writeContentsToFileName(const char *filename, const char *contents)$/", "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(const char * filename,const char * contents)"}], "hash": "cd6765ebbb5d06c16134a22df6e4de68", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "components/opensource/zilker-sdk/source/libs/util/c/src/fileUtils.c", "revision_history": [{"13874": ""}]}