{"is_source_file": true, "format": "C header file", "description": "This file declares functions, constants, and includes related to device descriptors management in a C project. It provides functions for initializing, cleanup, retrieval, and validation of device descriptors based on manufacturer and model information.", "external_files": ["<libxml/parser.h>", "<icTypes/icLinkedList.h>", "<icTypes/icHashMap.h>", "<deviceDescriptor.h>"], "external_methods": ["xmlParserInit()", "icLinkedList()", "icHashMap()", "deviceDescriptor()"], "published": ["deviceDescriptorsInit", "deviceDescriptorsCleanup", "deviceDescriptorsGet", "getWhiteListPath", "getBlackListPath", "checkWhiteListValid", "checkBlackListValid"], "classes": [], "methods": [{"name": "deviceDescriptorsInit", "description": "Initializes the device descriptors library, setting paths for whitelist and blacklist files."}, {"name": "deviceDescriptorsCleanup", "description": "Releases all resources associated with the device descriptors library."}, {"name": "deviceDescriptorsGet", "description": "Returns a DeviceDescriptor pointer matching the provided manufacturer, model, hardware version, and firmware version."}, {"name": "getWhiteListPath", "description": "Returns the current whitelist file path. Caller is responsible for freeing the returned string."}, {"name": "getBlackListPath", "description": "Returns the current blacklist file path. Caller is responsible for freeing the returned string."}, {"name": "checkWhiteListValid", "description": "Checks if the specified whitelist file path is valid and parsable without needing to initialize the whole device descriptors library."}, {"name": "checkBlackListValid", "description": "Checks if the specified blacklist file path is valid and parsable without needing to initialize the whole device descriptors library."}], "calls": ["xmlParseDoc()", "icLinkedListCreate()", "icHashMapCreate()", "deviceDescriptorCreate()"], "search-terms": ["device descriptors", "deviceDescriptorsGet", "deviceDescriptorsInit", "deviceDescriptorsCleanup", "deviceDescriptor.h"], "state": 2, "file_id": 593, "knowledge_revision": 13759, "git_revision": "", "ctags": [{"_type": "tag", "name": "ZILKER_DEVICEDESCRIPTORS_H", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/device/descriptors/c/public/deviceDescriptors.h", "pattern": "/^#define ZILKER_DEVICEDESCRIPTORS_H$/", "language": "C++", "kind": "macro"}], "hash": "8d39b469837ea9084257eddcd06a54d3", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "components/opensource/zilker-sdk/source/libs/device/descriptors/c/public/deviceDescriptors.h", "revision_history": [{"13759": ""}]}