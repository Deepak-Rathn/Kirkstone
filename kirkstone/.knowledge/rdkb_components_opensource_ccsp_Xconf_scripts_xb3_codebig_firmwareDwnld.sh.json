{"is_source_file": true, "format": "shell script (/bin/sh)", "description": "This file is a shell script designed to manage firmware updates over the network for a device, handling tasks such as querying for firmware updates, downloading firmware, verifying conditions for reboot, and executing reboots. It includes functions for signing URLs, processing server responses, managing scheduled reboots, and interacting with device hardware and configuration.", "external_files": ["/etc/utopia/service.d/log_capture_path.sh", "/etc/utopia/service.d/log_env_var.sh", "/lib/rdk/getpartnerid.sh", "/lib/rdk/getaccountid.sh", "/lib/rdk/t2Shared_api.sh", "/etc/waninfo.sh", "/etc/device.properties", "/etc/bundleUtils.sh", "/usr/ccsp/tad/check_gw_health.sh"], "external_methods": ["getWanInterfaceName", "getWanMacInterfaceName", "getPartnerId", "getAccountId", "getInstalledBundleList", "dmcli eRT getv", "syscfg get", "LTime H", "LTime M"], "published": ["getFirmwareUpgDetail", "fetchFirmwareDetail", "checkFirmwareUpgCriteria", "checkFirmwareUpgCriteria_temp", "getRequestType", "adjustDate", "calcRandTime", "removeLegacyResources", "checkMaintenanceWindow"], "classes": [], "methods": [{"name": "IsCodebigBlocked", "description": "Checks if the Codebig server is currently blocked due to recent failures based on the timestamp of the last failure recorded in a file."}, {"name": "get_Codebigconfig", "description": "Configures whether to use Codebig or direct connection based on available configuration and server readiness."}, {"name": "checkFirmwareUpgCriteria", "description": "Compares the current firmware version with the target version to decide if an upgrade is needed based on release numbering rules."}, {"name": "checkFirmwareUpgCriteria_temp", "description": "Temporary function to verify if the current firmware matches the requested firmware, primarily for testing purposes."}, {"name": "getRequestType", "description": "Determines the request type code based on the server domain name."}, {"name": "adjustDate", "description": "Adjusts the device date/time for OAuth or signature computations, retrying if necessary."}, {"name": "calcRandTime", "description": "Calculates random wait times within a maintenance window, used to stagger update checks or reboots."}, {"name": "removeLegacyResources", "description": "Removes old or legacy log files and performs cleanup tasks."}, {"name": "checkMaintenanceWindow", "description": "Determines if the current time falls within the scheduled firmware upgrade maintenance window."}], "calls": ["getWanInterfaceName", "getWanMacInterfaceName", "getPartnerId", "getAccountId", "getInstalledBundleList", "dmcli eRT getv", "syscfg get", "LTime H", "LTime M", "cat", "sed", "awk", "date", "sleep", "/etc/rdkfwupgrader_message.sh", "/etc/xconfssrdownloadurl"], "search-terms": ["xb3_codebig_firmwareDwnld", "firmwareUpgrade", "Xconf", "FirmwareDownload", "Reboot", "ScheduleReboot", "Codebig", "OTA", "FirmwareVersion", "FirmwareLocation", "firmwareDownloadProtocol", "getFirmwareUpgDetail", "fetchFirmwareDetail", "checkFirmwareUpgCriteria"], "state": 2, "file_id": 8167, "knowledge_revision": 21227, "git_revision": "", "hash": "d4289dded9852598ca0fe6daf91e4b2b", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "rdkb/components/opensource/ccsp/Xconf/scripts/xb3_codebig_firmwareDwnld.sh", "revision_history": [{"21227": ""}]}