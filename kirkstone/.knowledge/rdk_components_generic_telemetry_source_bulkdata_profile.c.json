{"is_source_file": true, "format": "C", "description": "This file implements profile management, reporting, and event handling for a telemetry system. It includes functions for initializing profiles, enabling/disabling/deleting profiles, storing events, generating reports, and handling trigger conditions. It appears to be a core component of a telemetry or monitoring subsystem, with references to external APIs and modules for report processing, event reception, and scheduling.", "external_files": ["profile.h", "reportprofiles.h", "t2eventreceiver.h", "t2markers.h", "t2log_wrapper.h", "busInterface.h", "curlinterface.h", "rbusmethodinterface.h", "scheduler.h", "persistence.h", "vector.h", "dcautil.h", "t2parser.h", "rbusInterface.h"], "external_methods": ["registerConditionalReportCallBack", "getComponentMarkerList", "T2RbusReportEventConsumer", "T2ER_StartDispatchThread", "getProfileParameterValues", "encodeStaticParamsInJSON", "encodeParamResultInJSON", "getGrepResults", "prepareJSONReport", "destroyJSONReport", "sendReportOverHTTP", "sendReportsOverRBUSMethod", "sendCachedReportsOverHTTP", "sendCachedReportsOverRBUSMethod", "removeProfileFromDisk", "saveCachedReportToPersistenceFolder", "fetchLocalConfigs", "processConfiguration", "populateCachedReportList", "deleteProfile", "unregisterProfileFromScheduler", "registerProfileWithScheduler", "T2totalmem_calculate", "removeProfileFromDisk", "clearPersistenceFolder", "fetchLocalConfigs", "hash_map_create", "hash_map_put", "T2Debug", "T2Error", "T2Info", "T2Warning", "t2_queue_create", "t2_queue_destroy", "t2_queue_push", "t2_queue_pop", "t2_queue_count", "SendInterruptToTimeoutThread", "rbusCheckMethodExists", "deleteProfile", "removeGrepConfig", "loadReportProfilesFromDisk"], "published": ["loadReportProfilesFromDisk", "initProfileList", "uninitProfileList", "addProfile", "enableProfile", "disableProfile", "deleteProfile", "getProfileCount", "getProfileHashMap", "profileWithNameExists", "isProfileEnabled", "NotifyTimeout", "NotifySchedulerstart", "appendTriggerCondition", "triggerReportOnCondtion", "reportGenerationCompleteReceiver", "getMinThresholdDuration"], "classes": [{"name": "triggerConditionObj", "description": "Data structure representing a trigger condition with references to a name and value."}], "methods": [{"name": "void freeRequestURIparam(void * data)", "description": "Frees memory allocated for HTTP request parameters.", "scope": "", "scopeKind": ""}, {"name": "void freeReportProfileConfig(void * data)", "description": "Frees memory associated with a report profile configuration.", "scope": "", "scopeKind": ""}, {"name": "void freeProfile(void * data)", "description": "Frees memory allocated for a Profile object and its internal elements.", "scope": "", "scopeKind": ""}, {"name": "T2ERROR getProfile(const char * profileName,Profile ** profile)", "description": "Retrieves a profile by name from the profile list.", "scope": "", "scopeKind": ""}, {"name": "T2ERROR initJSONReportProfile(cJSON ** jsonObj,cJSON ** valArray,char * rootname)", "description": "Initializes a JSON object for report generation.", "scope": "", "scopeKind": ""}, {"name": "T2ERROR profileWithNameExists(const char * profileName,bool * bProfileExists)", "description": "Checks if a profile with a specific name exists.", "scope": "", "scopeKind": ""}, {"name": "void getMarkerCompRbusSub(bool subscription)", "description": "Subscribes or unsubscribes from component markers via RBUS.", "scope": "", "scopeKind": ""}, {"name": "void * CollectAndReport(void * data)", "description": "Gathers data and generates a report for a profile, sending it via HTTP or RBUS.", "scope": "", "scopeKind": ""}, {"name": "void NotifyTimeout(const char * profileName,bool isClearSeekMap)", "description": "Handles timeout notification for a profile, triggering report collection.", "scope": "", "scopeKind": ""}, {"name": "T2ERROR addProfile(Profile * profile)", "description": "Adds a new profile to the profile list.", "scope": "", "scopeKind": ""}, {"name": "T2ERROR enableProfile(const char * profileName)", "description": "Enables a profile and registers it with the scheduler.", "scope": "", "scopeKind": ""}, {"name": "void updateMarkerComponentMap()", "description": "Updates mapping of markers to components for all enabled profiles.", "scope": "", "scopeKind": ""}, {"name": "T2ERROR disableProfile(const char * profileName,bool * isDeleteRequired)", "description": "Disables a profile, stopping its reporting activity.", "scope": "", "scopeKind": ""}, {"name": "T2ERROR deleteAllProfiles(bool delFromDisk)", "description": "Deletes all profiles, optionally removing from disk.", "scope": "", "scopeKind": ""}, {"name": "bool isProfileEnabled(const char * profileName)", "description": "Checks if a specific profile is enabled.", "scope": "", "scopeKind": ""}, {"name": "T2ERROR deleteProfile(const char * profileName)", "description": "Removes a profile from the list and cleans up resources.", "scope": "", "scopeKind": ""}, {"name": "void sendLogUploadInterruptToScheduler()", "description": "Triggers log upload requests across profiles by signaling their timers.", "scope": "", "scopeKind": ""}, {"name": "void loadReportProfilesFromDisk()", "description": "Loads profiles from disk including saved reports and configs.", "scope": "", "scopeKind": ""}, {"name": "T2ERROR initProfileList()", "description": "Initializes the profile list and loads existing profiles.", "scope": "", "scopeKind": ""}, {"name": "int getProfileCount()", "description": "Returns the total number of profiles.", "scope": "", "scopeKind": ""}, {"name": "hash_map_t * getProfileHashMap()", "description": "Creates a hash map of profile names to hashes.", "scope": "", "scopeKind": ""}, {"name": "T2ERROR uninitProfileList()", "description": "Uninitializes the profile list and releases resources.", "scope": "", "scopeKind": ""}, {"name": "T2ERROR registerTriggerConditionConsumer()", "description": "Registers RBUS consumers for trigger conditions.", "scope": "", "scopeKind": ""}, {"name": "void NotifySchedulerstart(char * profileName,bool isschedulerstarted)", "description": "Notifies that a profile scheduler has started.", "scope": "", "scopeKind": ""}, {"name": "T2ERROR appendTriggerCondition(Profile * tempProfile,const char * referenceName,const char * referenceValue)", "description": "Appends a trigger condition to a profile.", "scope": "", "scopeKind": ""}, {"name": "void reportGenerationCompleteReceiver(char * profileName)", "description": "Callback invoked after report generation completes.", "scope": "", "scopeKind": ""}, {"name": "T2ERROR triggerReportOnCondtion(const char * referenceName,const char * referenceValue)", "description": "Triggers report generation based on a condition.", "scope": "", "scopeKind": ""}, {"name": "unsigned int getMinThresholdDuration(char * profileName)", "description": "Retrieves and resets the minimum threshold duration for a profile.", "scope": "", "scopeKind": ""}, {"name": "T2ERROR Profile_storeMarkerEvent(const char * profileName,T2Event * eventInfo)", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["getProfile", "Vector_Size", "Vector_At", "Vector_Destroy", "Vector_Create", "registerConditionalReportCallBack", "fetchLocalConfigs", "processConfiguration", "populateCachedReportList", "removeGrepConfig", "saveCachedReportToPersistenceFolder", "deleteProfile", "unregisterProfileFromScheduler", "registerProfileWithScheduler", "T2totalmem_calculate", "removeProfileFromDisk", "clearPersistenceFolder", "hash_map_create", "hash_map_put", "t2_queue_create", "t2_queue_destroy", "t2_queue_push", "t2_queue_pop", "t2_queue_count", "SendInterruptToTimeoutThread", "rbusCheckMethodExists"], "search-terms": ["profile management", "report generation", "event marker", "trigger condition", "snapshot profiling", "RBUS", "HTTP", "callback", "scheduler", "persistent storage", "trigger condition queue", "profile load/save", "static and dynamic parameters", "gMarkers", "eMarkers", "reporting profiles"], "state": 2, "file_id": 12891, "knowledge_revision": 26149, "git_revision": "", "ctags": [{"_type": "tag", "name": "CollectAndReport", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/bulkdata/profile.c", "pattern": "/^static void* CollectAndReport(void* data)$/", "file": true, "language": "C", "typeref": "typename:void *", "kind": "function", "signature": "(void * data)"}, {"_type": "tag", "name": "MAX_LEN", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/bulkdata/profile.c", "pattern": "/^#define MAX_LEN /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "MAX_RETRY_COUNT", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/bulkdata/profile.c", "pattern": "/^    #define MAX_RETRY_COUNT /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "NotifySchedulerstart", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/bulkdata/profile.c", "pattern": "/^void NotifySchedulerstart(char* profileName, bool isschedulerstarted)$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(char * profileName,bool isschedulerstarted)"}, {"_type": "tag", "name": "NotifyTimeout", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/bulkdata/profile.c", "pattern": "/^void NotifyTimeout(const char* profileName, bool isClearSeekMap)$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(const char * profileName,bool isClearSeekMap)"}, {"_type": "tag", "name": "Profile_storeMarkerEvent", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/bulkdata/profile.c", "pattern": "/^T2ERROR Profile_storeMarkerEvent(const char *profileName, T2Event *eventInfo)$/", "language": "C", "typeref": "typename:T2ERROR", "kind": "function", "signature": "(const char * profileName,T2Event * eventInfo)"}, {"_type": "tag", "name": "__triggerConditionObj__", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/bulkdata/profile.c", "pattern": "/^typedef struct __triggerConditionObj__ {$/", "file": true, "language": "C", "kind": "struct"}, {"_type": "tag", "name": "addProfile", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/bulkdata/profile.c", "pattern": "/^T2ERROR addProfile(Profile *profile)$/", "language": "C", "typeref": "typename:T2ERROR", "kind": "function", "signature": "(Profile * profile)"}, {"_type": "tag", "name": "appendTriggerCondition", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/bulkdata/profile.c", "pattern": "/^T2ERROR appendTriggerCondition (Profile *tempProfile, const char *referenceName, const char *ref/", "language": "C", "typeref": "typename:T2ERROR", "kind": "function", "signature": "(Profile * tempProfile,const char * referenceName,const char * referenceValue)"}, {"_type": "tag", "name": "deleteAllProfiles", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/bulkdata/profile.c", "pattern": "/^T2ERROR deleteAllProfiles(bool delFromDisk) {$/", "language": "C", "typeref": "typename:T2ERROR", "kind": "function", "signature": "(bool delFromDisk)"}, {"_type": "tag", "name": "deleteProfile", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/bulkdata/profile.c", "pattern": "/^T2ERROR deleteProfile(const char *profileName)$/", "language": "C", "typeref": "typename:T2ERROR", "kind": "function", "signature": "(const char * profileName)"}, {"_type": "tag", "name": "disableProfile", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/bulkdata/profile.c", "pattern": "/^T2ERROR disableProfile(const char *profileName, bool *isDeleteRequired) {$/", "language": "C", "typeref": "typename:T2ERROR", "kind": "function", "signature": "(const char * profileName,bool * isDeleteRequired)"}, {"_type": "tag", "name": "enableProfile", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/bulkdata/profile.c", "pattern": "/^T2ERROR enableProfile(const char *profileName)$/", "language": "C", "typeref": "typename:T2ERROR", "kind": "function", "signature": "(const char * profileName)"}, {"_type": "tag", "name": "freeProfile", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/bulkdata/profile.c", "pattern": "/^static void freeProfile(void *data)$/", "file": true, "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(void * data)"}, {"_type": "tag", "name": "freeReportProfileConfig", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/bulkdata/profile.c", "pattern": "/^static void freeReportProfileConfig(void *data)$/", "file": true, "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(void * data)"}, {"_type": "tag", "name": "freeRequestURIparam", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/bulkdata/profile.c", "pattern": "/^static void freeRequestURIparam(void *data)$/", "file": true, "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(void * data)"}, {"_type": "tag", "name": "getMarkerCompRbusSub", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/bulkdata/profile.c", "pattern": "/^void getMarkerCompRbusSub(bool subscription){$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(bool subscription)"}, {"_type": "tag", "name": "getMinThresholdDuration", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/bulkdata/profile.c", "pattern": "/^unsigned int getMinThresholdDuration(char *profileName)$/", "language": "C", "typeref": "typename:unsigned int", "kind": "function", "signature": "(char * profileName)"}, {"_type": "tag", "name": "getProfile", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/bulkdata/profile.c", "pattern": "/^static T2ERROR getProfile(const char *profileName, Profile **profile)$/", "file": true, "language": "C", "typeref": "typename:T2ERROR", "kind": "function", "signature": "(const char * profileName,Profile ** profile)"}, {"_type": "tag", "name": "getProfileCount", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/bulkdata/profile.c", "pattern": "/^int getProfileCount()$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "getProfileHashMap", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/bulkdata/profile.c", "pattern": "/^hash_map_t *getProfileHashMap()$/", "language": "C", "typeref": "typename:hash_map_t *", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "initJSONReportProfile", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/bulkdata/profile.c", "pattern": "/^static T2ERROR initJSONReportProfile(cJSON** jsonObj, cJSON **valArray, char *rootname)$/", "file": true, "language": "C", "typeref": "typename:T2ERROR", "kind": "function", "signature": "(cJSON ** jsonObj,cJSON ** valArray,char * rootname)"}, {"_type": "tag", "name": "initProfileList", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/bulkdata/profile.c", "pattern": "/^T2ERROR initProfileList()$/", "language": "C", "typeref": "typename:T2ERROR", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "initialized", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/bulkdata/profile.c", "pattern": "/^static bool initialized = false;$/", "file": true, "language": "C", "typeref": "typename:bool", "kind": "variable"}, {"_type": "tag", "name": "isProfileEnabled", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/bulkdata/profile.c", "pattern": "/^bool isProfileEnabled(const char *profileName)$/", "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(const char * profileName)"}, {"_type": "tag", "name": "loadReportProfilesFromDisk", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/bulkdata/profile.c", "pattern": "/^static void loadReportProfilesFromDisk()$/", "file": true, "language": "C", "typeref": "typename:void", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "plMutex", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/bulkdata/profile.c", "pattern": "/^static pthread_mutex_t plMutex;$/", "file": true, "language": "C", "typeref": "typename:pthread_mutex_t", "kind": "variable"}, {"_type": "tag", "name": "profileList", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/bulkdata/profile.c", "pattern": "/^static Vector *profileList;$/", "file": true, "language": "C", "typeref": "typename:Vector *", "kind": "variable"}, {"_type": "tag", "name": "profileWithNameExists", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/bulkdata/profile.c", "pattern": "/^T2ERROR profileWithNameExists(const char *profileName, bool *bProfileExists)$/", "language": "C", "typeref": "typename:T2ERROR", "kind": "function", "signature": "(const char * profileName,bool * bProfileExists)"}, {"_type": "tag", "name": "referenceName", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/bulkdata/profile.c", "pattern": "/^    char referenceName[MAX_LEN];$/", "file": true, "language": "C", "typeref": "typename:char[]", "kind": "member", "scope": "__triggerConditionObj__", "scopeKind": "struct"}, {"_type": "tag", "name": "referenceValue", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/bulkdata/profile.c", "pattern": "/^    char referenceValue[MAX_LEN];$/", "file": true, "language": "C", "typeref": "typename:char[]", "kind": "member", "scope": "__triggerConditionObj__", "scopeKind": "struct"}, {"_type": "tag", "name": "registerTriggerConditionConsumer", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/bulkdata/profile.c", "pattern": "/^T2ERROR registerTriggerConditionConsumer()$/", "language": "C", "typeref": "typename:T2ERROR", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "reportGenerationCompleteReceiver", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/bulkdata/profile.c", "pattern": "/^void reportGenerationCompleteReceiver(char *profileName) {$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(char * profileName)"}, {"_type": "tag", "name": "reportLock", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/bulkdata/profile.c", "pattern": "/^static pthread_mutex_t reportLock;$/", "file": true, "language": "C", "typeref": "typename:pthread_mutex_t", "kind": "variable"}, {"_type": "tag", "name": "reportMutex", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/bulkdata/profile.c", "pattern": "/^static pthread_mutex_t reportMutex = PTHREAD_MUTEX_INITIALIZER;$/", "file": true, "language": "C", "typeref": "typename:pthread_mutex_t", "kind": "variable"}, {"_type": "tag", "name": "reportcond", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/bulkdata/profile.c", "pattern": "/^static pthread_cond_t reportcond;$/", "file": true, "language": "C", "typeref": "typename:pthread_cond_t", "kind": "variable"}, {"_type": "tag", "name": "sendLogUploadInterruptToScheduler", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/bulkdata/profile.c", "pattern": "/^void sendLogUploadInterruptToScheduler()$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "triggerConditionObj", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/bulkdata/profile.c", "pattern": "/^} triggerConditionObj ;$/", "file": true, "language": "C", "typeref": "struct:__triggerConditionObj__", "kind": "typedef"}, {"_type": "tag", "name": "triggerConditionQueMutex", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/bulkdata/profile.c", "pattern": "/^static pthread_mutex_t triggerConditionQueMutex = PTHREAD_MUTEX_INITIALIZER;$/", "file": true, "language": "C", "typeref": "typename:pthread_mutex_t", "kind": "variable"}, {"_type": "tag", "name": "triggerConditionQueue", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/bulkdata/profile.c", "pattern": "/^static queue_t *triggerConditionQueue = NULL;$/", "file": true, "language": "C", "typeref": "typename:queue_t *", "kind": "variable"}, {"_type": "tag", "name": "triggerReportOnCondtion", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/bulkdata/profile.c", "pattern": "/^T2ERROR triggerReportOnCondtion(const char *referenceName, const char *referenceValue)$/", "language": "C", "typeref": "typename:T2ERROR", "kind": "function", "signature": "(const char * referenceName,const char * referenceValue)"}, {"_type": "tag", "name": "uninitProfileList", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/bulkdata/profile.c", "pattern": "/^T2ERROR uninitProfileList()$/", "language": "C", "typeref": "typename:T2ERROR", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "updateMarkerComponentMap", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/bulkdata/profile.c", "pattern": "/^void updateMarkerComponentMap()$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "()"}], "hash": "9550a41215eeb4bba42b7e6d8f4f3801", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "rdk/components/generic/telemetry/source/bulkdata/profile.c", "fields": [{"name": "bool initialized", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "pthread_mutex_t plMutex", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "Vector * profileList", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "char[] referenceName", "scope": "__triggerConditionObj__", "scopeKind": "struct", "description": "unavailable"}, {"name": "char[] referenceValue", "scope": "__triggerConditionObj__", "scopeKind": "struct", "description": "unavailable"}, {"name": "pthread_mutex_t reportLock", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "pthread_mutex_t reportMutex", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "pthread_cond_t reportcond", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "pthread_mutex_t triggerConditionQueMutex", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "queue_t * triggerConditionQueue", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"26149": ""}]}