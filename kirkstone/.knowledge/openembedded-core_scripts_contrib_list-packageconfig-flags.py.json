{"is_source_file": true, "format": "Python", "description": "A script for listing and analyzing PACKAGECONFIG flags in build recipes within a build environment, likely using the BitBake build system. It provides functionalities to list recipes with PACKAGECONFIG, flags, and all related information.", "external_files": ["lib/scriptpath.py", "bb/cooker.py", "bb/providers.py", "bb/tinfoil.py"], "external_methods": ["scriptpath.add_bitbake_lib_path()", "bb.providers.findProviders()", "bbhandler.parse_recipe_file()", "data.getVarFlags()", "data.getVar()", "bb.tinfoil.Tinfoil()"], "published": ["get_fnlist", "get_recipesdata", "collect_pkgs", "collect_flags", "display_pkgs", "display_flags", "display_all", "main"], "classes": [{"name": "Tinfoil", "description": "A class within the bb.tinfoil module that facilitates interaction with the BitBake environment."}], "methods": [{"name": "get_fnlist(bbhandler, pkg_pn, preferred)", "description": "Retrieves all recipe filenames, considering preferred versions if specified.", "scope": "", "scopeKind": ""}, {"name": "get_recipesdata(bbhandler, preferred)", "description": "Gathers data of all recipes that include PACKAGECONFIG flags.", "scope": "", "scopeKind": ""}, {"name": "collect_pkgs(data_dict)", "description": "Collects available packages with their PACKAGECONFIG flags from recipe data.", "scope": "", "scopeKind": ""}, {"name": "collect_flags(pkg_dict)", "description": "Creates a mapping of flags to the packages that use them.", "scope": "", "scopeKind": ""}, {"name": "display_pkgs(pkg_dict)", "description": "Displays the list of packages and their PACKAGECONFIG flags.", "scope": "", "scopeKind": ""}, {"name": "display_flags(flag_dict)", "description": "Displays the PACKAGECONFIG flags and the recipes that use them.", "scope": "", "scopeKind": ""}, {"name": "display_all(data_dict)", "description": "Displays comprehensive information on recipes and their PACKAGECONFIG settings.", "scope": "", "scopeKind": ""}, {"name": "main()", "description": "Main execution function handling argument parsing and invoking relevant display functions.", "scope": "", "scopeKind": ""}], "calls": ["scriptpath.add_bitbake_lib_path()", "bb.providers.findProviders()", "bbhandler.parse_recipe_file()", "data.getVarFlags()", "data.getVar()", "bb.tinfoil.Tinfoil()", "get_recipesdata()", "collect_pkgs()", "collect_flags()", "display_flags()", "display_pkgs()", "display_all()"], "search-terms": ["list-packageconfig-flags", "PACKAGECONFIG", "recipes", "bitbake", "lib_path", "recipe data", "PACKAGECONFIG flags listing"], "state": 2, "file_id": 1519, "knowledge_revision": 14673, "git_revision": "", "ctags": [{"_type": "tag", "name": "bitbakepath", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/contrib/list-packageconfig-flags.py", "pattern": "/^bitbakepath = scriptpath.add_bitbake_lib_path()$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "collect_flags", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/contrib/list-packageconfig-flags.py", "pattern": "/^def collect_flags(pkg_dict):$/", "language": "Python", "kind": "function", "signature": "(pkg_dict)"}, {"_type": "tag", "name": "collect_pkgs", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/contrib/list-packageconfig-flags.py", "pattern": "/^def collect_pkgs(data_dict):$/", "language": "Python", "kind": "function", "signature": "(data_dict)"}, {"_type": "tag", "name": "display_all", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/contrib/list-packageconfig-flags.py", "pattern": "/^def display_all(data_dict):$/", "language": "Python", "kind": "function", "signature": "(data_dict)"}, {"_type": "tag", "name": "display_flags", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/contrib/list-packageconfig-flags.py", "pattern": "/^def display_flags(flag_dict):$/", "language": "Python", "kind": "function", "signature": "(flag_dict)"}, {"_type": "tag", "name": "display_pkgs", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/contrib/list-packageconfig-flags.py", "pattern": "/^def display_pkgs(pkg_dict):$/", "language": "Python", "kind": "function", "signature": "(pkg_dict)"}, {"_type": "tag", "name": "get_fnlist", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/contrib/list-packageconfig-flags.py", "pattern": "/^def get_fnlist(bbhandler, pkg_pn, preferred):$/", "language": "Python", "kind": "function", "signature": "(bbhandler, pkg_pn, preferred)"}, {"_type": "tag", "name": "get_recipesdata", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/contrib/list-packageconfig-flags.py", "pattern": "/^def get_recipesdata(bbhandler, preferred):$/", "language": "Python", "kind": "function", "signature": "(bbhandler, preferred)"}, {"_type": "tag", "name": "lib_path", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/contrib/list-packageconfig-flags.py", "pattern": "/^lib_path = os.path.abspath(scripts_path + '\\/..\\/lib')$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "main", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/contrib/list-packageconfig-flags.py", "pattern": "/^def main():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "scripts_path", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/contrib/list-packageconfig-flags.py", "pattern": "/^scripts_path = os.path.abspath(os.path.dirname(os.path.abspath(sys.argv[0])))$/", "language": "Python", "kind": "variable"}], "hash": "dd76a888a0d1e923b989d3fe9486d59d", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "openembedded-core/scripts/contrib/list-packageconfig-flags.py", "fields": [{"name": "bitbakepath = scriptpath.add_bitbake_lib_path()", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "lib_path = os.path.abspath(scripts_path + '\\/..\\/lib')", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "scripts_path = os.path.abspath(os.path.dirname(os.path.abspath(sys.argv[0])))", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"14673": ""}]}