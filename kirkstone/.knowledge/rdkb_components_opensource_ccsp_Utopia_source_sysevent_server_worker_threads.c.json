{"is_source_file": true, "format": "C", "description": "This source file implements a worker thread system for handling inter-thread messages, client connections, and command execution within a sys event framework. It includes functions for sending messages, executing programs via fork helpers, handling client requests (e.g., get, set, notifications), and managing internal data structures such as actions and triggers. The code is part of a larger system for event-driven operations and asynchronous command execution, with extensive message handling and inter-thread communication logic.", "external_files": ["libsysevent_internal.h", "sysevent/sysevent.h", "clientsMgr.h", "syseventd.h", "triggerMgr.h", "dataMgr.h", "syscfg/syscfg.h", "secure_wrapper.h", "ulog/ulog.h"], "external_methods": ["thread_get_id", "thread_get_private_pipe_read", "thread_set_state", "thread_get_state", "sysevent_malloc", "sysevent_free", "sysevent_strdup", "sysevent_get_binmsg_maxsize", "DATA_MGR_get", "DATA_MGR_set", "DATA_MGR_set_bin", "DATA_MGR_get_unique", "DATA_MGR_del_unique", "DATA_MGR_get_next_iterator", "TRIGGER_MGR_get_cloned_action", "TRIGGER_MGR_free_cloned_action", "CLI_MGR_remove_client_by_fd", "CLI_MGR_add_notification_to_client_by_fd", "SE_msg_prepare", "SE_msg_send", "SE_string2size", "SE_msg_get_string", "SE_msg_add_string", "SE_msg_add_data", "SE_print_mtype", "SE_print_message_hdr", "ULOG_SYSTEM", "ULOG_MESSAGE", "ULOG_ERROR", "incr_stat_info", "log_to_file", "getTime", "getUpTime", "write_to_file"], "published": ["send_msg_to_fork_helper", "_eval", "handle_close_connection_request", "handle_ping_request", "handle_get_request", "handle_get_request_data", "handle_set_request", "handle_set_request_data", "handle_set_unique_request", "handle_get_unique_request", "handle_del_unique_request", "handle_get_next_unique_iterator", "handle_set_options_request", "handle_set_async_action_request", "handle_set_async_message_request", "handle_remove_async_request", "handle_send_notification_msg", "handle_send_notification_msg_data", "handle_show_data_elements", "make_blocked_exec_link", "free_blocked_exec_link", "add_executing_action_to_list", "find_executing_action", "get_next_to_execute"], "classes": [{"name": "blocked_exec_link_t", "description": "A linked list node used to manage actions and triggers for execution, including fields for previous and next links, associated action, and wait flags."}], "methods": [{"name": "blocked_exec_link_t * make_blocked_exec_link(const int trigger_id,const int action_id,const int wait,const char * const name,const char * const value)", "description": "Creates and initializes a blocked_exec_link_t structure with trigger and action IDs, wait flag, and associated name and value strings.", "scope": "", "scopeKind": ""}, {"name": "void free_blocked_exec_link(blocked_exec_link_t * link)", "description": "Deallocates memory associated with a blocked_exec_link_t structure, including its strings and action.", "scope": "", "scopeKind": ""}, {"name": "void add_executing_action_to_list(blocked_exec_link_t * link,blocked_exec_link_t * list,const int collapse)", "description": "Adds a new action link to an existing list, optionally collapsing multiple entries into a single list element.", "scope": "", "scopeKind": ""}, {"name": "blocked_exec_link_t * find_executing_action(blocked_exec_link_t * link,int collapse)", "description": "Searches for an existing executing action in the list, and adds the new action to its bucket if found.", "scope": "", "scopeKind": ""}, {"name": "blocked_exec_link_t * get_next_to_execute(blocked_exec_link_t * link,int collapse)", "description": "Identifies the next action to execute, considering existing actions of the same type and their wait flags.", "scope": "", "scopeKind": ""}, {"name": "int _eval(char * const prog,const char * const name,const char * const value,char * argv[],int wait)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "serial_msg_link_t * get_next_to_execute_serially(serial_msg_link_t * link)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int handle_close_connection_request(const int fd,const token_t who)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int handle_del_unique_request(const int fd,const token_t who,se_del_unique_msg * msg)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int handle_execute_serially(const int local_fd,const token_t who,se_run_serially_msg * msg)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int handle_get_next_unique_iterator(const int fd,const token_t who,se_iterate_get_iterator_msg * msg)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int handle_get_request(const int fd,const token_t who,se_get_msg * msg)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int handle_get_request_data(const int fd,const token_t who,se_get_msg * msg)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int handle_get_unique_request(const int fd,const token_t who,se_iterate_get_msg * msg)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int handle_message_from_client(const int fd)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int handle_message_from_main_thread(int fd)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int handle_message_from_trigger_thread(int fd)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int handle_messagedata_from_client(const int fd)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int handle_messagedata_from_trigger_thread(int fd)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int handle_ping_request(const int fd,const token_t who,se_ping_msg * msg)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int handle_remove_async_request(const int fd,const token_t who,se_remove_async_msg * msg)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int handle_run_executable_msg(const int local_fd,const token_t who,se_run_executable_msg * msg,int wait)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int handle_send_notification_msg(const int local_fd,const token_t who,se_send_notification_msg * msg)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int handle_send_notification_msg_data(const int local_fd,const token_t who,se_send_notification_msg * msg)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int handle_set_async_action_request(const int fd,const token_t who,se_set_async_action_msg * msg)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int handle_set_async_message_request(const int fd,const token_t who,se_set_async_message_msg * msg)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int handle_set_options_request(const int fd,const token_t who,se_set_options_msg * msg)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int handle_set_request(const int fd,const token_t who,se_set_msg * msg)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int handle_set_request_data(const int fd,const token_t who,se_set_msg * msg)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int handle_set_unique_request(const int fd,const token_t who,se_set_unique_msg * msg)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int handle_show_data_elements(const token_t who,se_show_data_elements_msg * msg)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int send_msg_to_fork_helper(int fd,const void * buf,size_t count,int * error)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "void * worker_thread_main(void * arg)", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["send_msg_to_fork_helper", "_eval", "DATA_MGR_get", "DATA_MGR_set", "DATA_MGR_set_bin", "DATA_MGR_get_unique", "DATA_MGR_del_unique", "DATA_MGR_get_next_iterator", "TRIGGER_MGR_get_cloned_action", "TRIGGER_MGR_free_cloned_action", "CLI_MGR_remove_client_by_fd", "CLI_MGR_add_notification_to_client_by_fd", "SE_msg_prepare", "SE_msg_send", "SE_msg_get_string", "SE_msg_add_string", "SE_msg_add_data", "sysevent_malloc", "sysevent_free", "sysevent_strdup", "sysevent_get_binmsg_maxsize", "ULOG_SYSTEM", "ULOG_MESSAGE", "ULOG_ERROR", "incr_stat_info", "log_to_file", "getTime", "getUpTime"], "search-terms": ["worker_threads", "sys_event", "message handling", "program execution", "asynchronous notifications", "client request processing", "trigger/action management", "inter-thread communication", "fork helper", "semaphore", "thread management"], "state": 2, "file_id": 7725, "knowledge_revision": 20800, "git_revision": "", "ctags": [{"_type": "tag", "name": "_eval", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/sysevent/server/worker_threads.c", "pattern": "/^static int _eval(char *const prog, const char *const name, const char *const value, char *argv[]/", "file": true, "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(char * const prog,const char * const name,const char * const value,char * argv[],int wait)"}, {"_type": "tag", "name": "add_executing_action_to_list", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/sysevent/server/worker_threads.c", "pattern": "/^static void add_executing_action_to_list(blocked_exec_link_t * link, blocked_exec_link_t * list,/", "file": true, "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(blocked_exec_link_t * link,blocked_exec_link_t * list,const int collapse)"}, {"_type": "tag", "name": "emptystr", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/sysevent/server/worker_threads.c", "pattern": "/^static const char *emptystr = \"\";$/", "file": true, "language": "C", "typeref": "typename:const char *", "kind": "variable"}, {"_type": "tag", "name": "find_executing_action", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/sysevent/server/worker_threads.c", "pattern": "/^static blocked_exec_link_t * find_executing_action(blocked_exec_link_t * link, int collapse)$/", "file": true, "language": "C", "typeref": "typename:blocked_exec_link_t *", "kind": "function", "signature": "(blocked_exec_link_t * link,int collapse)"}, {"_type": "tag", "name": "free_blocked_exec_link", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/sysevent/server/worker_threads.c", "pattern": "/^static void free_blocked_exec_link(blocked_exec_link_t * link)$/", "file": true, "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(blocked_exec_link_t * link)"}, {"_type": "tag", "name": "get_next_to_execute", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/sysevent/server/worker_threads.c", "pattern": "/^static blocked_exec_link_t * get_next_to_execute(blocked_exec_link_t * link, int collapse)$/", "file": true, "language": "C", "typeref": "typename:blocked_exec_link_t *", "kind": "function", "signature": "(blocked_exec_link_t * link,int collapse)"}, {"_type": "tag", "name": "get_next_to_execute_serially", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/sysevent/server/worker_threads.c", "pattern": "/^static serial_msg_link_t * get_next_to_execute_serially(serial_msg_link_t * link)$/", "file": true, "language": "C", "typeref": "typename:serial_msg_link_t *", "kind": "function", "signature": "(serial_msg_link_t * link)"}, {"_type": "tag", "name": "handle_close_connection_request", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/sysevent/server/worker_threads.c", "pattern": "/^static int handle_close_connection_request(const int fd, const token_t who)$/", "file": true, "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(const int fd,const token_t who)"}, {"_type": "tag", "name": "handle_del_unique_request", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/sysevent/server/worker_threads.c", "pattern": "/^static int handle_del_unique_request(const int fd, const token_t who, se_del_unique_msg *msg)$/", "file": true, "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(const int fd,const token_t who,se_del_unique_msg * msg)"}, {"_type": "tag", "name": "handle_execute_serially", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/sysevent/server/worker_threads.c", "pattern": "/^static int handle_execute_serially(const int local_fd, const token_t who, se_run_serially_msg *m/", "file": true, "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(const int local_fd,const token_t who,se_run_serially_msg * msg)"}, {"_type": "tag", "name": "handle_get_next_unique_iterator", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/sysevent/server/worker_threads.c", "pattern": "/^static int handle_get_next_unique_iterator(const int fd, const token_t who, se_iterate_get_itera/", "file": true, "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(const int fd,const token_t who,se_iterate_get_iterator_msg * msg)"}, {"_type": "tag", "name": "handle_get_request", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/sysevent/server/worker_threads.c", "pattern": "/^static int handle_get_request(const int fd, const token_t who, se_get_msg *msg)$/", "file": true, "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(const int fd,const token_t who,se_get_msg * msg)"}, {"_type": "tag", "name": "handle_get_request_data", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/sysevent/server/worker_threads.c", "pattern": "/^static int handle_get_request_data(const int fd, const token_t who, se_get_msg *msg)$/", "file": true, "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(const int fd,const token_t who,se_get_msg * msg)"}, {"_type": "tag", "name": "handle_get_unique_request", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/sysevent/server/worker_threads.c", "pattern": "/^static int handle_get_unique_request(const int fd, const token_t who, se_iterate_get_msg *msg)$/", "file": true, "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(const int fd,const token_t who,se_iterate_get_msg * msg)"}, {"_type": "tag", "name": "handle_message_from_client", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/sysevent/server/worker_threads.c", "pattern": "/^static int handle_message_from_client(const int fd)$/", "file": true, "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(const int fd)"}, {"_type": "tag", "name": "handle_message_from_main_thread", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/sysevent/server/worker_threads.c", "pattern": "/^static int handle_message_from_main_thread(int fd)$/", "file": true, "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(int fd)"}, {"_type": "tag", "name": "handle_message_from_trigger_thread", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/sysevent/server/worker_threads.c", "pattern": "/^static int handle_message_from_trigger_thread(int fd)$/", "file": true, "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(int fd)"}, {"_type": "tag", "name": "handle_messagedata_from_client", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/sysevent/server/worker_threads.c", "pattern": "/^static int handle_messagedata_from_client(const int fd)$/", "file": true, "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(const int fd)"}, {"_type": "tag", "name": "handle_messagedata_from_trigger_thread", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/sysevent/server/worker_threads.c", "pattern": "/^static int handle_messagedata_from_trigger_thread(int fd)$/", "file": true, "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(int fd)"}, {"_type": "tag", "name": "handle_ping_request", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/sysevent/server/worker_threads.c", "pattern": "/^static int handle_ping_request(const int fd, const token_t who, se_ping_msg *msg)$/", "file": true, "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(const int fd,const token_t who,se_ping_msg * msg)"}, {"_type": "tag", "name": "handle_remove_async_request", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/sysevent/server/worker_threads.c", "pattern": "/^static int handle_remove_async_request(const int fd, const token_t who, se_remove_async_msg *msg/", "file": true, "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(const int fd,const token_t who,se_remove_async_msg * msg)"}, {"_type": "tag", "name": "handle_run_executable_msg", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/sysevent/server/worker_threads.c", "pattern": "/^static int handle_run_executable_msg(const int local_fd, const token_t who, se_run_executable_ms/", "file": true, "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(const int local_fd,const token_t who,se_run_executable_msg * msg,int wait)"}, {"_type": "tag", "name": "handle_send_notification_msg", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/sysevent/server/worker_threads.c", "pattern": "/^static int handle_send_notification_msg(const int local_fd, const token_t who, se_send_notificat/", "file": true, "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(const int local_fd,const token_t who,se_send_notification_msg * msg)"}, {"_type": "tag", "name": "handle_send_notification_msg_data", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/sysevent/server/worker_threads.c", "pattern": "/^static int handle_send_notification_msg_data(const int local_fd, const token_t who, se_send_noti/", "file": true, "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(const int local_fd,const token_t who,se_send_notification_msg * msg)"}, {"_type": "tag", "name": "handle_set_async_action_request", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/sysevent/server/worker_threads.c", "pattern": "/^static int handle_set_async_action_request(const int fd, const token_t who, se_set_async_action_/", "file": true, "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(const int fd,const token_t who,se_set_async_action_msg * msg)"}, {"_type": "tag", "name": "handle_set_async_message_request", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/sysevent/server/worker_threads.c", "pattern": "/^static int handle_set_async_message_request(const int fd, const token_t who, se_set_async_messag/", "file": true, "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(const int fd,const token_t who,se_set_async_message_msg * msg)"}, {"_type": "tag", "name": "handle_set_options_request", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/sysevent/server/worker_threads.c", "pattern": "/^static int handle_set_options_request(const int fd, const token_t who, se_set_options_msg *msg)$/", "file": true, "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(const int fd,const token_t who,se_set_options_msg * msg)"}, {"_type": "tag", "name": "handle_set_request", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/sysevent/server/worker_threads.c", "pattern": "/^static int handle_set_request(const int fd, const token_t who, se_set_msg *msg)$/", "file": true, "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(const int fd,const token_t who,se_set_msg * msg)"}, {"_type": "tag", "name": "handle_set_request_data", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/sysevent/server/worker_threads.c", "pattern": "/^static int handle_set_request_data(const int fd, const token_t who, se_set_msg *msg)$/", "file": true, "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(const int fd,const token_t who,se_set_msg * msg)"}, {"_type": "tag", "name": "handle_set_unique_request", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/sysevent/server/worker_threads.c", "pattern": "/^static int handle_set_unique_request(const int fd, const token_t who, se_set_unique_msg *msg)$/", "file": true, "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(const int fd,const token_t who,se_set_unique_msg * msg)"}, {"_type": "tag", "name": "handle_show_data_elements", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/sysevent/server/worker_threads.c", "pattern": "/^static int handle_show_data_elements(const token_t who, se_show_data_elements_msg *msg)$/", "file": true, "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(const token_t who,se_show_data_elements_msg * msg)"}, {"_type": "tag", "name": "make_blocked_exec_link", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/sysevent/server/worker_threads.c", "pattern": "/^static blocked_exec_link_t * make_blocked_exec_link(const int trigger_id, const int action_id, c/", "file": true, "language": "C", "typeref": "typename:blocked_exec_link_t *", "kind": "function", "signature": "(const int trigger_id,const int action_id,const int wait,const char * const name,const char * const value)"}, {"_type": "tag", "name": "send_msg_to_fork_helper", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/sysevent/server/worker_threads.c", "pattern": "/^int send_msg_to_fork_helper(int fd, const void *buf, size_t count, int *error)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(int fd,const void * buf,size_t count,int * error)"}, {"_type": "tag", "name": "worker_thread_main", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/sysevent/server/worker_threads.c", "pattern": "/^void *worker_thread_main(void *arg)$/", "language": "C", "typeref": "typename:void *", "kind": "function", "signature": "(void * arg)"}], "hash": "58111434fdd5e53e0f9542bc446967ce", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "rdkb/components/opensource/ccsp/Utopia/source/sysevent/server/worker_threads.c", "fields": [{"name": "const char * emptystr", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"20800": ""}]}