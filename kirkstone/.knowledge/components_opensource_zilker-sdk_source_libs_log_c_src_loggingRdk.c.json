{"is_source_file": true, "format": "C", "description": "This file implements a logging mechanism for RDK-B platform, providing initialization, deinitialization, and logging functions that wrap around the RDK debugging API. It offers conditional compilation based on build configurations, manages internal state for logger initialization, and maps custom log levels to RDK log levels.", "external_files": ["<icBuildtime.h>", "<stdio.h>", "<stdarg.h>", "<stdlib.h>", "<stdbool.h>", "<pthread.h>", "<string.h>", "<rdk_debug.h>", "<icLog/logging.h>", "loggingCommon.h"], "external_methods": ["rdk_logger_init", "rdk_logger_deinit", "rdk_LogLevel rdk_dbg_MsgRaw"], "published": ["initIcLogger", "closeIcLogger", "icLogMsg"], "classes": [], "methods": [{"name": "void initIcLogger()", "description": "Initializes the RDK logger if it hasn't been initialized already.", "scope": "", "scopeKind": ""}, {"name": "void closeIcLogger()", "description": "Deinitializes the RDK logger if it was initialized.", "scope": "", "scopeKind": ""}, {"name": "void icLogMsg(const char * file,size_t filelen,const char * func,size_t funclen,long line,const char * categoryName,logPriority priority,const char * format,...)", "description": "Logs a formatted message at a specified priority, translating custom log levels to RDK levels and handling variable arguments.", "scope": "", "scopeKind": ""}], "calls": ["rdk_logger_init", "rdk_logger_deinit", "vsnprintf", "strlen", "sprintf"], "search-terms": ["logging", "RDK-B", "rdk_logger", "loggingRdk", "logPriority", "icLogMsg", "initIcLogger", "closeIcLogger"], "state": 2, "file_id": 558, "knowledge_revision": 13721, "git_revision": "", "ctags": [{"_type": "tag", "name": "BUFFER_SIZE", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/log/c/src/loggingRdk.c", "pattern": "/^#define BUFFER_SIZE /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "MODULE_NAME", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/log/c/src/loggingRdk.c", "pattern": "/^#define MODULE_NAME /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "buffer", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/log/c/src/loggingRdk.c", "pattern": "/^static char buffer[BUFFER_SIZE];$/", "file": true, "language": "C", "typeref": "typename:char[]", "kind": "variable"}, {"_type": "tag", "name": "closeIcLogger", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/log/c/src/loggingRdk.c", "pattern": "/^void closeIcLogger()$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "didInit", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/log/c/src/loggingRdk.c", "pattern": "/^static bool didInit = false;$/", "file": true, "language": "C", "typeref": "typename:bool", "kind": "variable"}, {"_type": "tag", "name": "icLogMsg", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/log/c/src/loggingRdk.c", "pattern": "/^void icLogMsg(const char *file, size_t filelen,$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(const char * file,size_t filelen,const char * func,size_t funclen,long line,const char * categoryName,logPriority priority,const char * format,...)"}, {"_type": "tag", "name": "initIcLogger", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/log/c/src/loggingRdk.c", "pattern": "/^void initIcLogger()$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "()"}], "hash": "3732693ba31b4a8b488dc4c0542880df", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "components/opensource/zilker-sdk/source/libs/log/c/src/loggingRdk.c", "fields": [{"name": "char[] buffer", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "bool didInit", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"13721": ""}]}