{"is_source_file": true, "format": "Python", "description": "This Python source file defines a class QemuTinyRunner that extends QemuRunner, providing methods to manage and run QEMU virtual machines specifically configured for tiny system images. It includes methods for starting QEMU, creating sockets for serial communication, and identifying processes related to QEMU instances.", "external_files": ["bb", ".qemurunner"], "external_methods": ["bb.note", "bb.fatal", "bb.error"], "published": ["QemuTinyRunner"], "classes": [{"name": "QemuTinyRunner", "description": "A specialized subclass of QemuRunner for launching and interacting with tiny QEMU images, managing serial console sockets, and process ID tracking."}], "methods": [{"name": "__init__(self, machine, rootfs, display, tmpdir, deploy_dir_image, logfile, kernel, boottime, logger, tmpfsdir=None)", "description": "Constructor initializing instance variables for managing QEMU invocation parameters and configuration.", "scope": "QemuTinyRunner", "scopeKind": "class"}, {"name": "create_socket(self)", "description": "Creates a UNIX socket connection to communicate with the QEMU serial console.", "scope": "QemuTinyRunner", "scopeKind": "class"}, {"name": "log(self, msg)", "description": "Appends log messages to the specified logfile.", "scope": "QemuTinyRunner", "scopeKind": "class"}, {"name": "start(self, qemuparams = None, ssh=True, extra_bootparams=None, runqemuparams='', discard_writes=True)", "description": "Starts the QEMU process with the specified parameters, sets environment variables, and waits for QEMU to initialize.", "scope": "QemuTinyRunner", "scopeKind": "class"}, {"name": "run_serial(self, command, timeout=60)", "description": "Sends a command through the serial console and reads the response, with a timeout mechanism.", "scope": "QemuTinyRunner", "scopeKind": "class"}, {"name": "find_child(self,parent_pid)", "description": "Traverses the process tree to locate child processes of a given parent PID, specifically identifying qemu-system processes running with serial connections.", "scope": "QemuTinyRunner", "scopeKind": "class"}], "calls": ["subprocess.Popen", "socket.socket", "select.select", "time.sleep", "os.environ", "os.path.exists", "os.setpgrp", "os.path.basename", "time.time", "time.time() + self.runqemutime", "time.sleep(1)"], "search-terms": ["QemuTinyRunner", "start", "create_socket", "qemu-system-i386", "serial socket", "QEMU_DONT_GRAB", "ps axww"], "state": 2, "file_id": 1887, "knowledge_revision": 15032, "git_revision": "", "ctags": [{"_type": "tag", "name": "QemuTinyRunner", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oeqa/utils/qemutinyrunner.py", "pattern": "/^class QemuTinyRunner(QemuRunner):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oeqa/utils/qemutinyrunner.py", "pattern": "/^    def __init__(self, machine, rootfs, display, tmpdir, deploy_dir_image, logfile, kernel, boot/", "language": "Python", "kind": "member", "signature": "(self, machine, rootfs, display, tmpdir, deploy_dir_image, logfile, kernel, boottime, logger, tmpfsdir=None)", "scope": "QemuTinyRunner", "scopeKind": "class"}, {"_type": "tag", "name": "create_socket", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oeqa/utils/qemutinyrunner.py", "pattern": "/^    def create_socket(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "QemuTinyRunner", "scopeKind": "class"}, {"_type": "tag", "name": "find_child", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oeqa/utils/qemutinyrunner.py", "pattern": "/^    def find_child(self,parent_pid):$/", "language": "Python", "kind": "member", "signature": "(self,parent_pid)", "scope": "QemuTinyRunner", "scopeKind": "class"}, {"_type": "tag", "name": "log", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oeqa/utils/qemutinyrunner.py", "pattern": "/^    def log(self, msg):$/", "language": "Python", "kind": "member", "signature": "(self, msg)", "scope": "QemuTinyRunner", "scopeKind": "class"}, {"_type": "tag", "name": "run_serial", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oeqa/utils/qemutinyrunner.py", "pattern": "/^    def run_serial(self, command, timeout=60):$/", "language": "Python", "kind": "member", "signature": "(self, command, timeout=60)", "scope": "QemuTinyRunner", "scopeKind": "class"}, {"_type": "tag", "name": "start", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oeqa/utils/qemutinyrunner.py", "pattern": "/^    def start(self, qemuparams = None, ssh=True, extra_bootparams=None, runqemuparams='', discar/", "language": "Python", "kind": "member", "signature": "(self, qemuparams = None, ssh=True, extra_bootparams=None, runqemuparams='', discard_writes=True)", "scope": "QemuTinyRunner", "scopeKind": "class"}], "hash": "3b54d42464cd71ac3c0fcd2967d48c2e", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "openembedded-core/meta/lib/oeqa/utils/qemutinyrunner.py", "revision_history": [{"15032": ""}]}