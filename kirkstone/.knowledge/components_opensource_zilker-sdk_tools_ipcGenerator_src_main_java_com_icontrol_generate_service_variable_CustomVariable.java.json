{"is_source_file": true, "format": "Java", "description": "This file defines the CustomVariable class, representing a custom object in XML used within a code generation context. It includes methods for generating C and Java code snippets, managing internal fields, and handling serialization/deserialization logic.", "external_files": ["com.icontrol.generate.service.TemplateMappings", "com.icontrol.generate.service.context.ContextNative", "com.icontrol.generate.service.io.CodeFormater", "com.icontrol.generate.service.io.MacroSource", "com.icontrol.generate.service.parse.EventWrapper", "com.icontrol.generate.service.parse.PojoWrapper", "com.icontrol.generate.service.parse.Processor", "com.icontrol.generate.service.parse.Wrapper", "com.icontrol.util.StringUtils", "com.icontrol.xmlns.service.ICArrayVariable", "com.icontrol.xmlns.service.ICBoolVariable", "com.icontrol.xmlns.service.ICCustomObject", "com.icontrol.xmlns.service.ICDateVariable", "com.icontrol.xmlns.service.ICEnumVariable", "com.icontrol.xmlns.service.ICJsonVariable", "com.icontrol.xmlns.service.ICMapVariable", "com.icontrol.xmlns.service.ICNumVariable", "com.icontrol.xmlns.service.ICStringVariable"], "external_methods": ["Processor.getOrCreateVariable()", "Processor.getCustomForName()", "StringUtils.camelCase()", "StringUtils.isEmpty()", "BaseVariable.getName()", "BaseVariable.isArray()", "BaseVariable.isCustom()", "BaseVariable.isMap()", "BaseVariable.isString()", "BaseVariable.isEnum()", "BaseVariable.isDate()", "BaseVariable.isEvent()", "BaseVariable.isSensitive()", "BaseVariable.getDescription()", "BaseVariable.getCtype()", "BaseVariable.getJavaType()", "BaseVariable.getNativeEncodeLines()", "BaseVariable.getNativeDecodeLines()", "BaseVariable.getName()", "ArrayVariable.getFirstElement()", "MapVariable.getCtype()", "MapVariable.getJavaType()", "MapVariable.getJavaTypesType()", "MapVariable.getValuesVarName()", "MapVariable.getTypesVarName()", "EnumVariable.getVarName()", "EnumVariable.getJavaType()", "JsonVariable.getJavaType()", "JsonVariable.getName()", "JsonVariable.isJson()", "StringUtils.camelCase()", "CodeFormater.toStringBuffer()", "CodeFormater.nextRow()", "CodeFormater.setValue()", "BaseVariable.getJavaGetter()", "BaseVariable.getJavaSetter()", "BaseVariable.getJavaEncodeLines()", "BaseVariable.getJavaDecodeLines()", "BaseVariable.getNativeEncodeLines()", "BaseVariable.getNativeDecodeLines()", "BaseVariable.getNativeStructString()"], "published": ["getName()", "getDescription()", "isArray()", "isCustom()", "isMap()", "isString()", "isEnum()", "isDate()", "isEvent()", "isSensitive()", "getCtype()", "getJavaType()", "getJsonKey()", "getInterfaceString()", "getLocalName()", "getParentClassName()", "isParentClassAbstract()", "isCloneable()"], "classes": [{"name": "CustomVariable", "description": "Represents a custom object defined in XML, with methods for code generation for C and Java, managing internal fields, cloning, and reference resolution."}], "methods": [{"name": "CustomVariable(ICCustomObject bean)", "description": "Constructor initializing from an ICCustomObject, populating fields based on its variables and references."}, {"name": "CustomVariable(String varName)", "description": "Constructs a CustomVariable with a specified variable name."}, {"name": "shallowClone", "description": "Creates a shallow copy of this CustomVariable, optionally based on internal node."}, {"name": "getLocalName", "description": "Returns the local name if set, otherwise the variable name."}, {"name": "getParentClassName", "description": "Returns the name of the parent class."}, {"name": "setParentClassName", "description": "Sets the parent class name and whether it is abstract."}, {"name": "isParentClassAbstract", "description": "Checks if the parent class is abstract."}, {"name": "isCloneable", "description": "Checks if the object is cloneable."}, {"name": "setCloneable", "description": "Sets the cloneable flag."}, {"name": "addVariable", "description": "Adds a variable to the custom fields if not already present."}, {"name": "getVariables", "description": "Returns the list of contained variables."}, {"name": "resolveReferences", "description": "Resolves references, overridden as no operation needed here."}, {"name": "isCustom", "description": "Confirms that this variable is custom."}, {"name": "isPtr", "description": "Indicates if this variable is a pointer."}, {"name": "doesCustomHaveArray", "description": "Checks if any field within this custom is an array, optionally recursively."}, {"name": "getArrayVariables", "description": "Returns all ArrayVariable contained within this custom, recursively if specified."}, {"name": "doesCustomHaveMap", "description": "Checks if any field within this custom is a Map, optionally recursively."}, {"name": "getMapVariables", "description": "Returns all MapVariable contained within this custom, recursively if specified."}, {"name": "getStringVariables", "description": "Returns all StringVariable contained within this custom."}, {"name": "getJsonVariables", "description": "Returns all JsonVariable contained within this custom."}, {"name": "getCustomVariables", "description": "Returns all CustomVariable contained within this custom."}, {"name": "getCtype", "description": "Returns the C type representation for this variable."}, {"name": "getInterfaceString", "description": "Returns the interface string for Java generation."}, {"name": "getNativeStructString", "description": "Generates the C struct definition for this custom variable."}, {"name": "getJavaType", "description": "Returns the Java type (camel case) for this variable."}, {"name": "getJsonKey", "description": "Returns the JSON key (usually same as name)."}, {"name": "getJavaGetter", "description": "Returns Java code for the getter method."}, {"name": "getJavaSetter", "description": "Returns Java code for the setter method."}, {"name": "getNativeEncodeLines", "description": "Generates C code for encoding this object into JSON."}, {"name": "createNativeEncodeForWrapper", "description": "Creates C code for encoding a wrapped object into JSON with a custom encoder."}, {"name": "getNativeDecodeLines", "description": "Generates C code for decoding this object from JSON."}, {"name": "createNativeDecodeForWrapper", "description": "Creates C code for decoding a wrapped object from JSON with a custom decoder."}, {"name": "generateJavaPojo", "description": "Generates Java POJO code with fields, getters, setters, and encode/decode methods."}, {"name": "getJavaEncodeLines", "description": "Generates Java code for encoding this object into JSON."}, {"name": "getJavaDecodeLines", "description": "Generates Java code for decoding this object from JSON."}, {"name": "getJavaIpcObjectType", "description": "Returns the Java IPC object type (camel case of name)."}], "search-terms": ["CustomVariable", "ICCustomObject", "xml custom object", "Java code generation", "C struct generation", "native encode lines", "native decode lines", "generate Java POJO", "internal fields management", "XML custom definition"], "state": 2, "file_id": 491, "knowledge_revision": 26107, "git_revision": "", "hash": "79d6d612e1864b24cbecb8cfbf5fc6e5", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "components/opensource/zilker-sdk/tools/ipcGenerator/src/main/java/com/icontrol/generate/service/variable/CustomVariable.java", "revision_history": [{"26107": ""}]}