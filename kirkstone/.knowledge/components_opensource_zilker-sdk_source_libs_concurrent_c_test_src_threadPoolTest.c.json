{"is_source_file": true, "format": "C", "description": "This file is a C source file containing unit tests for the icThreadPool object, which manages a thread pool implementation. It includes test cases for thread pool creation, task execution, growth, cleanup, and edge cases. It relies on external C libraries such as cmocka for testing, as well as project-specific headers like icLog/logging.h and icConcurrent/threadPool.h.", "external_files": ["icLog/logging.h", "icConcurrent/threadPool.h", "icConcurrent/icBlockingQueue.h", "icConcurrent/timedWait.h", "<stddef.h>", "<setjmp.h>", "<stdarg.h>", "<string.h>", "<stdbool.h>", "<stdlib.h>", "<unistd.h>", "<errno.h>", "<pthread.h>", "<inttypes.h>"], "external_methods": ["threadPoolCreate", "threadPoolDestroy", "threadPoolAddTask", "threadPoolGetBacklogCount", "threadPoolGetActiveCount", "threadPoolGetThreadCount", "blockingQueueCreate", "blockingQueueDestroy", "blockingQueuePushTimeout", "blockingQueuePopTimeout", "initIcLogger", "closeIcLogger", "initTimedWaitCond", "incrementalCondTimedWait", "fail_msg", "assert_true", "assert_non_null"], "published": ["main", "test_doesPreventStupidity", "test_canRunJobs", "test_canQueueJobs", "test_canGrowJobs", "test_canHaveZeroMinThreads", "test_threadsAreCleanedUp", "test_taskCanDestroyPool"], "classes": [], "methods": [{"name": "void test_doesPreventStupidity(void ** state)", "description": "Tests whether creating a thread pool with invalid parameters (max less than min) fails as expected.", "scope": "", "scopeKind": ""}, {"name": "void test_canRunJobs(void ** state)", "description": "Creates a thread pool, submits tasks, and verifies they run and complete properly.", "scope": "", "scopeKind": ""}, {"name": "void test_canQueueJobs(void ** state)", "description": "Tests the queuing behavior when the thread pool is overloaded beyond its initial capacity.", "scope": "", "scopeKind": ""}, {"name": "void test_canGrowJobs(void ** state)", "description": "Verifies that the thread pool can dynamically grow up to its maximum specified size when overloaded.", "scope": "", "scopeKind": ""}, {"name": "void test_canHaveZeroMinThreads(void ** state)", "description": "Checks that the thread pool can be initiated with zero minimum threads and still process tasks correctly.", "scope": "", "scopeKind": ""}, {"name": "void test_threadsAreCleanedUp(void ** state)", "description": "Ensures that threads in the pool are properly joined and cleaned up after completion.", "scope": "", "scopeKind": ""}, {"name": "void test_taskCanDestroyPool(void ** state)", "description": "Tests the ability of a task to destroy the thread pool itself, simulating self-terminating behavior.", "scope": "", "scopeKind": ""}, {"name": "void blockingTask(void * arg)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "void doNotDestroyQueueItemFunc(void * item)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "void doNotFreeArgFunc(void * arg)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int main(int argc,const char ** argv)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "void selfDestroyTask(void * arg)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "void simpleTask(void * arg)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "bool waitForThreadCount(icThreadPool * pool,int amount,uint16_t maxTimeSeconds)", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["threadPoolCreate", "threadPoolDestroy", "threadPoolAddTask", "blockingQueueCreate", "blockingQueueDestroy", "blockingQueuePushTimeout", "blockingQueuePopTimeout", "initIcLogger", "closeIcLogger", "initTimedWaitCond", "incrementalCondTimedWait", "fail_msg", "assert_true", "assert_non_null", "threadPoolGetBacklogCount", "threadPoolGetActiveCount", "threadPoolGetThreadCount"], "search-terms": ["threadPoolUnitTest", "concurrentThreadPool", "cmocka_tests", "threadPoolCreate", "threadPoolDestroy", "taskScheduling", "threadPoolGrowth", "threadCleanup"], "state": 2, "file_id": 881, "knowledge_revision": 14037, "git_revision": "", "ctags": [{"_type": "tag", "name": "LOG_CAT", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/test/src/threadPoolTest.c", "pattern": "/^#define LOG_CAT /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "TaskArg", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/test/src/threadPoolTest.c", "pattern": "/^} TaskArg;$/", "file": true, "language": "C", "typeref": "struct:__anon0c82fa560108", "kind": "typedef"}, {"_type": "tag", "name": "__anon0c82fa560108", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/test/src/threadPoolTest.c", "pattern": "/^typedef struct {$/", "file": true, "language": "C", "kind": "struct"}, {"_type": "tag", "name": "awoken", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/test/src/threadPoolTest.c", "pattern": "/^static bool awoken = false;$/", "file": true, "language": "C", "typeref": "typename:bool", "kind": "variable"}, {"_type": "tag", "name": "blockingTask", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/test/src/threadPoolTest.c", "pattern": "/^static void blockingTask(void *arg)$/", "file": true, "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(void * arg)"}, {"_type": "tag", "name": "cond", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/test/src/threadPoolTest.c", "pattern": "/^static pthread_cond_t cond = PTHREAD_COND_INITIALIZER;$/", "file": true, "language": "C", "typeref": "typename:pthread_cond_t", "kind": "variable"}, {"_type": "tag", "name": "counter", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/test/src/threadPoolTest.c", "pattern": "/^static int counter = 0;$/", "file": true, "language": "C", "typeref": "typename:int", "kind": "variable"}, {"_type": "tag", "name": "doNotDestroyQueueItemFunc", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/test/src/threadPoolTest.c", "pattern": "/^static void doNotDestroyQueueItemFunc(void *item)$/", "file": true, "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(void * item)"}, {"_type": "tag", "name": "doNotFreeArgFunc", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/test/src/threadPoolTest.c", "pattern": "/^static void doNotFreeArgFunc(void *arg)$/", "file": true, "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(void * arg)"}, {"_type": "tag", "name": "main", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/test/src/threadPoolTest.c", "pattern": "/^int main(int argc, const char **argv)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(int argc,const char ** argv)"}, {"_type": "tag", "name": "mutex", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/test/src/threadPoolTest.c", "pattern": "/^static pthread_mutex_t mutex = PTHREAD_MUTEX_INITIALIZER;$/", "file": true, "language": "C", "typeref": "typename:pthread_mutex_t", "kind": "variable"}, {"_type": "tag", "name": "resultQueue", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/test/src/threadPoolTest.c", "pattern": "/^    icBlockingQueue *resultQueue;$/", "file": true, "language": "C", "typeref": "typename:icBlockingQueue *", "kind": "member", "scope": "__anon0c82fa560108", "scopeKind": "struct"}, {"_type": "tag", "name": "selfDestroyTask", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/test/src/threadPoolTest.c", "pattern": "/^static void selfDestroyTask(void *arg)$/", "file": true, "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(void * arg)"}, {"_type": "tag", "name": "simpleTask", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/test/src/threadPoolTest.c", "pattern": "/^static void simpleTask(void *arg)$/", "file": true, "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(void * arg)"}, {"_type": "tag", "name": "str", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/test/src/threadPoolTest.c", "pattern": "/^    char *str;$/", "file": true, "language": "C", "typeref": "typename:char *", "kind": "member", "scope": "__anon0c82fa560108", "scopeKind": "struct"}, {"_type": "tag", "name": "test_canGrowJobs", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/test/src/threadPoolTest.c", "pattern": "/^static void test_canGrowJobs(void **state)$/", "file": true, "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(void ** state)"}, {"_type": "tag", "name": "test_canHaveZeroMinThreads", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/test/src/threadPoolTest.c", "pattern": "/^static void test_canHaveZeroMinThreads(void **state)$/", "file": true, "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(void ** state)"}, {"_type": "tag", "name": "test_canQueueJobs", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/test/src/threadPoolTest.c", "pattern": "/^static void test_canQueueJobs(void **state)$/", "file": true, "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(void ** state)"}, {"_type": "tag", "name": "test_canRunJobs", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/test/src/threadPoolTest.c", "pattern": "/^static void test_canRunJobs(void **state)$/", "file": true, "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(void ** state)"}, {"_type": "tag", "name": "test_doesPreventStupidity", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/test/src/threadPoolTest.c", "pattern": "/^static void test_doesPreventStupidity(void **state)$/", "file": true, "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(void ** state)"}, {"_type": "tag", "name": "test_taskCanDestroyPool", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/test/src/threadPoolTest.c", "pattern": "/^static void test_taskCanDestroyPool(void **state)$/", "file": true, "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(void ** state)"}, {"_type": "tag", "name": "test_threadsAreCleanedUp", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/test/src/threadPoolTest.c", "pattern": "/^static void test_threadsAreCleanedUp(void **state)$/", "file": true, "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(void ** state)"}, {"_type": "tag", "name": "waitForThreadCount", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/test/src/threadPoolTest.c", "pattern": "/^static bool waitForThreadCount(icThreadPool *pool, int amount, uint16_t maxTimeSeconds)$/", "file": true, "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(icThreadPool * pool,int amount,uint16_t maxTimeSeconds)"}], "hash": "90fbcfb139b6db38fc4913f35d00209f", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "components/opensource/zilker-sdk/source/libs/concurrent/c/test/src/threadPoolTest.c", "fields": [{"name": "bool awoken", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "pthread_cond_t cond", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int counter", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "pthread_mutex_t mutex", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "icBlockingQueue * resultQueue", "scope": "__anon0c82fa560108", "scopeKind": "struct", "description": "unavailable"}, {"name": "char * str", "scope": "__anon0c82fa560108", "scopeKind": "struct", "description": "unavailable"}], "revision_history": [{"14037": ""}]}