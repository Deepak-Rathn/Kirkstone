{"is_source_file": true, "format": "Java", "description": "This Java source file defines the MockCluster class, which simulates a network device cluster for testing purposes within a Zigbee-based environment. It includes methods for attribute manipulation, command handling, and reporting, along with internal data structures for managing attribute and command info.", "external_files": ["com.comcast.xh.zith.device.EventWaitHelper", "com.comcast.xh.zith.mockzigbeecore.MockZigbeeCore", "com.comcast.xh.zith.mockzigbeecore.event.AttributeReportEvent", "com.comcast.xh.zith.mockzigbeecore.request.AttributeReportingConfig", "org.slf4j.Logger", "org.slf4j.LoggerFactory"], "external_methods": ["com.comcast.xh.zith.mockzigbeecore.MockZigbeeCore.getInstance", "com.comcast.xh.zith.mockzigbeecore.event.AttributeReportEvent.send"], "published": ["MockCluster.Status", "MockCluster.getClusterName", "MockCluster.getEui64", "MockCluster.getEndpointId", "MockCluster.getClusterId", "MockCluster.isServer", "MockCluster.readAttribute", "MockCluster.writeAttribute", "MockCluster.getReportingConfigs", "MockCluster.getReportingConfig", "MockCluster.handleCommand", "MockCluster.handleMfgCommand", "MockCluster.getMfgCommandWait", "MockCluster.addReportingConfigs"], "classes": [{"name": "MockCluster", "description": "A class to mock and simulate a device cluster in a Zigbee network for testing purposes. It manages attributes, commands, and reports for a specific cluster endpoint.", "methods": [{"name": "MockCluster", "description": "Constructor to initialize a MockCluster with specific identifiers and role (server/client)."}, {"name": "getClusterName", "description": "Returns the name of the cluster."}, {"name": "getEui64", "description": "Returns the EUI64 identifier of the device."}, {"name": "getEndpointId", "description": "Returns the endpoint ID."}, {"name": "getClusterId", "description": "Returns the cluster ID."}, {"name": "isServer", "description": "Indicates whether the cluster acts as a server."}, {"name": "readAttribute", "description": "Reads an attribute value by attribute ID."}, {"name": "readMfgAttribute", "description": "Reads a manufacturer-specific attribute by manufacturer ID and attribute ID."}, {"name": "writeAttribute", "description": "Writes a value to an attribute."}, {"name": "getAttributeData", "description": "Protected method meant to retrieve attribute data bytes, to be overridden if needed."}, {"name": "setAttributeData", "description": "Protected method to set attribute data bytes, returns status, to be overridden for actual data storage."}, {"name": "addAttribute", "description": "Adds an attribute to the cluster with specified ID and type."}, {"name": "addMfgAttribute", "description": "Adds a manufacturer-specific attribute."}, {"name": "getAttributeInfo", "description": "Retrieves attribute info for a standard attribute ID."}, {"name": "getMfgAttributeInfo", "description": "Retrieves attribute info for a manufacturer-specific attribute."}, {"name": "getAttributeInfos", "description": "Returns all attribute infos for a given manufacturer ID."}, {"name": "getAttributeBytes", "description": "Converts a string into a length-prefixed byte array."}, {"name": "handleCommand", "description": "Handles unimplemented commands."}, {"name": "handleMfgCommand", "description": "Handles manufacturer-specific commands."}, {"name": "getMfgCommandWait", "description": "Retrieves or creates an EventWaitHelper for a specific manufacturer command."}, {"name": "addReportingConfigs", "description": "Adds reporting configurations for attributes."}, {"name": "getReportingConfigs", "description": "Returns all reporting configurations."}, {"name": "getReportingConfig", "description": "Returns reporting config for a specific attribute."}, {"name": "notifyMfgCommandWait", "description": "Notifies waiters for a specific manufacturer command."}, {"name": "sendAttributeReport", "description": "Sends an attribute report for a specific attribute ID."}, {"name": "sendMfgAttributeReport", "description": "Sends a manufacturer-specific attribute report."}], "calls": ["com.comcast.xh.zith.mockzigbeecore.MockZigbeeCore.getInstance", "com.comcast.xh.zith.mockzigbeecore.event.AttributeReportEvent.send"]}], "search-terms": ["MockCluster", "Zigbee mock device", "attribute management", "manufacturer ID", "cluster simulation", "attribute reporting"], "state": 2, "file_id": 363, "knowledge_revision": 13538, "git_revision": "", "hash": "d2c33b898ea27359d258133241e87b26", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "components/opensource/zilker-sdk/tools/zith/src/main/java/com/comcast/xh/zith/device/cluster/MockCluster.java", "revision_history": [{"13538": ""}]}