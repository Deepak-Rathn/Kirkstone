{"is_source_file": true, "format": "Python", "description": "This is a Python source file implementing a command-line utility as part of the 'recipetool' script, primarily for creating or updating recipe append files (bbappend) in a build system. It includes functions for file analysis, recipe detection, and command registration, used to simplify modifications of build recipes in a Yocto Project or similar environment.", "external_files": ["scriptutils", "oe.recipeutils", "bb.process", "bb.fetch2", "bb.data", "bb.codeparser", "bb.providers"], "external_methods": ["bb.process.run", "bb.process.ExecutionError", "bb.fetch2.localpath", "bb.recipeutils.get_recipe_patched_files", "bb.recipeutils.bbappend_recipe", "bb.data.inherits_class", "bb.codeparser.ShellParser"], "published": ["appendfile", "appendsrc", "appendsrcfiles", "appendsrcfile", "register_commands", "layer", "existing_path", "existing_file", "destination_path", "target_path"], "classes": [{"name": "InvalidTargetFileError", "description": "Custom exception class used for handling invalid target files during recipe processing"}], "methods": [{"name": "find_target_file(targetpath, d, pkglist=None)", "description": "Locates the recipe package(s) that install a specific target path, potentially filtering by package list", "scope": "", "scopeKind": ""}, {"name": "determine_file_source(targetpath, rd)", "description": "Determines the origin of a file within a recipe, including source path and patches applied", "scope": "", "scopeKind": ""}, {"name": "get_source_path(cmdelements)", "description": "Extracts the source file path from a command in a recipe", "scope": "", "scopeKind": ""}, {"name": "get_func_deps(func, d)", "description": "Finds dependencies of a shell function based on its content", "scope": "", "scopeKind": ""}, {"name": "check_do_install(rd, targetpath)", "description": "Inspects the do_install function content to see if it copies or installs the target file, returning relevant command elements", "scope": "", "scopeKind": ""}, {"name": "appendfile(args)", "description": "Main function for handling the 'appendfile' command, creating or updating a bbappend to replace a target file", "scope": "", "scopeKind": ""}, {"name": "appendsrc(args, files, rd, extralines=None)", "description": "Creates or updates a bbappend to add or replace source files in a recipe, handling multiple sources", "scope": "", "scopeKind": ""}, {"name": "appendsrcfiles(parser, args)", "description": "Command handler to append multiple source files specified by the user", "scope": "", "scopeKind": ""}, {"name": "appendsrcfile(parser, args)", "description": "Command handler to append a single source file with optional destination filename", "scope": "", "scopeKind": ""}, {"name": "layer(layerpath)", "description": "Validates and returns a layer directory path", "scope": "", "scopeKind": ""}, {"name": "existing_path(filepath)", "description": "Validates if a filepath exists", "scope": "", "scopeKind": ""}, {"name": "existing_file(filepath)", "description": "Validates if a filepath exists and is a file", "scope": "", "scopeKind": ""}, {"name": "destination_path(destpath)", "description": "Ensures a path is relative and valid for destination specification", "scope": "", "scopeKind": ""}, {"name": "target_path(targetpath)", "description": "Ensures a path is absolute for target specification", "scope": "", "scopeKind": ""}, {"name": "register_commands(subparsers)", "description": "Registers command-line subcommands for 'appendfile', 'appendsrcfiles', and 'appendsrcfile' with argument parsers", "scope": "", "scopeKind": ""}, {"name": "_parse_recipe(pn, tinfoil)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "tinfoil_init(instance)", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["bb.process.run", "bb.process.ExecutionError", "bb.fetch2.localpath", "oe.recipeutils.get_recipe_patched_files", "bb.recipeutils.bbappend_recipe", "bb.data.inherits_class", "bb.codeparser.ShellParser"], "search-terms": ["recipetool append", "bbappend creation", "recipe source modification", "Yocto layer recipe tools", "create or update bbappend", "source file replacement", "recipe dependency analysis", "do_install inspection"], "state": 2, "file_id": 1439, "knowledge_revision": 14585, "git_revision": "", "ctags": [{"_type": "tag", "name": "InvalidTargetFileError", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/recipetool/append.py", "pattern": "/^class InvalidTargetFileError(Exception):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "_parse_recipe", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/recipetool/append.py", "pattern": "/^def _parse_recipe(pn, tinfoil):$/", "language": "Python", "kind": "function", "signature": "(pn, tinfoil)"}, {"_type": "tag", "name": "appendfile", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/recipetool/append.py", "pattern": "/^def appendfile(args):$/", "language": "Python", "kind": "function", "signature": "(args)"}, {"_type": "tag", "name": "appendsrc", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/recipetool/append.py", "pattern": "/^def appendsrc(args, files, rd, extralines=None):$/", "language": "Python", "kind": "function", "signature": "(args, files, rd, extralines=None)"}, {"_type": "tag", "name": "appendsrcfile", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/recipetool/append.py", "pattern": "/^def appendsrcfile(parser, args):$/", "language": "Python", "kind": "function", "signature": "(parser, args)"}, {"_type": "tag", "name": "appendsrcfiles", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/recipetool/append.py", "pattern": "/^def appendsrcfiles(parser, args):$/", "language": "Python", "kind": "function", "signature": "(parser, args)"}, {"_type": "tag", "name": "check_do_install", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/recipetool/append.py", "pattern": "/^def check_do_install(rd, targetpath):$/", "language": "Python", "kind": "function", "signature": "(rd, targetpath)"}, {"_type": "tag", "name": "destination_path", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/recipetool/append.py", "pattern": "/^def destination_path(destpath):$/", "language": "Python", "kind": "function", "signature": "(destpath)"}, {"_type": "tag", "name": "determine_file_source", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/recipetool/append.py", "pattern": "/^def determine_file_source(targetpath, rd):$/", "language": "Python", "kind": "function", "signature": "(targetpath, rd)"}, {"_type": "tag", "name": "existing_file", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/recipetool/append.py", "pattern": "/^def existing_file(filepath):$/", "language": "Python", "kind": "function", "signature": "(filepath)"}, {"_type": "tag", "name": "existing_path", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/recipetool/append.py", "pattern": "/^def existing_path(filepath):$/", "language": "Python", "kind": "function", "signature": "(filepath)"}, {"_type": "tag", "name": "find_target_file", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/recipetool/append.py", "pattern": "/^def find_target_file(targetpath, d, pkglist=None):$/", "language": "Python", "kind": "function", "signature": "(targetpath, d, pkglist=None)"}, {"_type": "tag", "name": "get_func_deps", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/recipetool/append.py", "pattern": "/^def get_func_deps(func, d):$/", "language": "Python", "kind": "function", "signature": "(func, d)"}, {"_type": "tag", "name": "get_source_path", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/recipetool/append.py", "pattern": "/^def get_source_path(cmdelements):$/", "language": "Python", "kind": "function", "signature": "(cmdelements)"}, {"_type": "tag", "name": "layer", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/recipetool/append.py", "pattern": "/^def layer(layerpath):$/", "language": "Python", "kind": "function", "signature": "(layerpath)"}, {"_type": "tag", "name": "logger", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/recipetool/append.py", "pattern": "/^logger = logging.getLogger('recipetool')$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "register_commands", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/recipetool/append.py", "pattern": "/^def register_commands(subparsers):$/", "language": "Python", "kind": "function", "signature": "(subparsers)"}, {"_type": "tag", "name": "target_path", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/recipetool/append.py", "pattern": "/^def target_path(targetpath):$/", "language": "Python", "kind": "function", "signature": "(targetpath)"}, {"_type": "tag", "name": "tinfoil", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/recipetool/append.py", "pattern": "/^tinfoil = None$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "tinfoil_init", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/recipetool/append.py", "pattern": "/^def tinfoil_init(instance):$/", "language": "Python", "kind": "function", "signature": "(instance)"}], "hash": "3cb4efbac2d43680cb5ab2799af0e9d1", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "openembedded-core/scripts/lib/recipetool/append.py", "fields": [{"name": "logger = logging.getLogger('recipetool')", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "tinfoil = None", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"14585": ""}]}