{"is_source_file": true, "format": "Python", "description": "This Python source file defines a test case class 'Archiver' which contains multiple automated tests for verifying the behavior of the 'archiver' feature in the Yocto Project's bitbake build environment. The tests check filtering capabilities, archive generation modes, exclusion rules, and handling of git submodules related to the archiver functionality.", "external_files": ["oeqa.utils.commands", "oeqa.selftest.case"], "external_methods": ["bitbake", "get_bb_vars"], "published": ["OESelftestTestCase", "Archiver"], "classes": [{"name": "Archiver", "description": "A test case class inheriting from 'OESelftestTestCase' that verifies various aspects of the 'archiver' functionality within the build system, including filtering, modes, exclusions, and git submodules handling."}], "methods": [{"name": "test_archiver_allows_to_filter_on_recipe_name(self)", "description": "Tests if the archiver can filter archives based on recipe name, including inclusion and exclusion.", "scope": "Archiver", "scopeKind": "class"}, {"name": "test_archiver_filters_by_type(self)", "description": "Tests if the archiver filters recipes based on the recipe type (e.g., target) correctly.", "scope": "Archiver", "scopeKind": "class"}, {"name": "test_archiver_filters_by_type_and_name(self)", "description": "Tests combined filtering by recipe type and name, including overriding decisions.", "scope": "Archiver", "scopeKind": "class"}, {"name": "test_archiver_srpm_mode(self)", "description": "Tests if the archiver behaves correctly in srpm mode, ensuring dependencies are handled.", "scope": "Archiver", "scopeKind": "class"}, {"name": "_test_archiver_mode(self, mode, target_file_name, extra_config=None)", "description": "Internal helper to verify different archiver modes by checking for expected archive files.", "scope": "Archiver", "scopeKind": "class"}, {"name": "test_archiver_mode_original(self)", "description": "Tests archiver with 'original' mode for src.", "scope": "Archiver", "scopeKind": "class"}, {"name": "test_archiver_mode_patched(self)", "description": "Tests archiver with 'patched' mode for src.", "scope": "Archiver", "scopeKind": "class"}, {"name": "test_archiver_mode_configured(self)", "description": "Tests archiver with 'configured' mode for src.", "scope": "Archiver", "scopeKind": "class"}, {"name": "test_archiver_mode_recipe(self)", "description": "Tests archiver with 'recipe' mode.", "scope": "Archiver", "scopeKind": "class"}, {"name": "test_archiver_mode_diff(self)", "description": "Tests archiver with 'diff' mode.", "scope": "Archiver", "scopeKind": "class"}, {"name": "test_archiver_mode_dumpdata(self)", "description": "Tests archiver with 'dumpdata' mode.", "scope": "Archiver", "scopeKind": "class"}, {"name": "test_archiver_mode_mirror(self)", "description": "Tests archiver with 'mirror' mode, verifying archive creation.", "scope": "Archiver", "scopeKind": "class"}, {"name": "test_archiver_mode_mirror_excludes(self)", "description": "Verifies that archives matching exclusion patterns are not created in mirror mode.", "scope": "Archiver", "scopeKind": "class"}, {"name": "test_archiver_mode_mirror_combined(self)", "description": "Verifies that archives for multiple recipes end up in a combined mirror directory.", "scope": "Archiver", "scopeKind": "class"}, {"name": "test_archiver_mode_mirror_gitsm(self)", "description": "Tests handling of git submodules with mirror mode.", "scope": "Archiver", "scopeKind": "class"}, {"name": "test_archiver_mode_mirror_gitsm_shallow(self)", "description": "Tests shallow clone handling with mirror mode for git submodules.", "scope": "Archiver", "scopeKind": "class"}], "calls": ["bitbake", "get_bb_vars", "os.path.join", "glob.glob", "self.write_config", "self.assertTrue", "self.assertFalse", "self.assertExists", "self.assertDoesNotExist"], "search-terms": ["archiver", "oeqa selftest", "deploy_archives", "ARCHIVER_MODE", "mirror", "filter recipe", "git submodules", "translation: Python"], "state": 2, "file_id": 1920, "knowledge_revision": 15071, "git_revision": "", "ctags": [{"_type": "tag", "name": "Archiver", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oeqa/selftest/cases/archiver.py", "pattern": "/^class Archiver(OESelftestTestCase):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "_test_archiver_mode", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oeqa/selftest/cases/archiver.py", "pattern": "/^    def _test_archiver_mode(self, mode, target_file_name, extra_config=None):$/", "language": "Python", "kind": "member", "signature": "(self, mode, target_file_name, extra_config=None)", "scope": "Archiver", "scopeKind": "class"}, {"_type": "tag", "name": "test_archiver_allows_to_filter_on_recipe_name", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oeqa/selftest/cases/archiver.py", "pattern": "/^    def test_archiver_allows_to_filter_on_recipe_name(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "Archiver", "scopeKind": "class"}, {"_type": "tag", "name": "test_archiver_filters_by_type", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oeqa/selftest/cases/archiver.py", "pattern": "/^    def test_archiver_filters_by_type(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "Archiver", "scopeKind": "class"}, {"_type": "tag", "name": "test_archiver_filters_by_type_and_name", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oeqa/selftest/cases/archiver.py", "pattern": "/^    def test_archiver_filters_by_type_and_name(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "Archiver", "scopeKind": "class"}, {"_type": "tag", "name": "test_archiver_mode_configured", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oeqa/selftest/cases/archiver.py", "pattern": "/^    def test_archiver_mode_configured(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "Archiver", "scopeKind": "class"}, {"_type": "tag", "name": "test_archiver_mode_diff", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oeqa/selftest/cases/archiver.py", "pattern": "/^    def test_archiver_mode_diff(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "Archiver", "scopeKind": "class"}, {"_type": "tag", "name": "test_archiver_mode_dumpdata", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oeqa/selftest/cases/archiver.py", "pattern": "/^    def test_archiver_mode_dumpdata(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "Archiver", "scopeKind": "class"}, {"_type": "tag", "name": "test_archiver_mode_mirror", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oeqa/selftest/cases/archiver.py", "pattern": "/^    def test_archiver_mode_mirror(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "Archiver", "scopeKind": "class"}, {"_type": "tag", "name": "test_archiver_mode_mirror_combined", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oeqa/selftest/cases/archiver.py", "pattern": "/^    def test_archiver_mode_mirror_combined(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "Archiver", "scopeKind": "class"}, {"_type": "tag", "name": "test_archiver_mode_mirror_excludes", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oeqa/selftest/cases/archiver.py", "pattern": "/^    def test_archiver_mode_mirror_excludes(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "Archiver", "scopeKind": "class"}, {"_type": "tag", "name": "test_archiver_mode_mirror_gitsm", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oeqa/selftest/cases/archiver.py", "pattern": "/^    def test_archiver_mode_mirror_gitsm(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "Archiver", "scopeKind": "class"}, {"_type": "tag", "name": "test_archiver_mode_mirror_gitsm_shallow", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oeqa/selftest/cases/archiver.py", "pattern": "/^    def test_archiver_mode_mirror_gitsm_shallow(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "Archiver", "scopeKind": "class"}, {"_type": "tag", "name": "test_archiver_mode_original", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oeqa/selftest/cases/archiver.py", "pattern": "/^    def test_archiver_mode_original(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "Archiver", "scopeKind": "class"}, {"_type": "tag", "name": "test_archiver_mode_patched", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oeqa/selftest/cases/archiver.py", "pattern": "/^    def test_archiver_mode_patched(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "Archiver", "scopeKind": "class"}, {"_type": "tag", "name": "test_archiver_mode_recipe", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oeqa/selftest/cases/archiver.py", "pattern": "/^    def test_archiver_mode_recipe(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "Archiver", "scopeKind": "class"}, {"_type": "tag", "name": "test_archiver_srpm_mode", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oeqa/selftest/cases/archiver.py", "pattern": "/^    def test_archiver_srpm_mode(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "Archiver", "scopeKind": "class"}], "hash": "6345e754e1332c6cea80fe8d92d6a2bf", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "openembedded-core/meta/lib/oeqa/selftest/cases/archiver.py", "revision_history": [{"15071": ""}]}