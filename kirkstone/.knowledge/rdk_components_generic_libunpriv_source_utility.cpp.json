{"is_source_file": true, "format": "C++", "description": "This source file implements utility functions for handling JSON configurations, logging capabilities, and managing process capabilities related to security features in a Linux environment. It includes functions for formatting time, logging, trimming strings, populating capability lists from JSON configs, and retrieving process capabilities.", "external_files": ["utility.h", "<iostream>", "<json/json.h>", "<json/value.h>", "<fstream>", "<algorithm>", "<cctype>", "<cstdarg>", "<time.h>"], "external_methods": ["vsnprintf", "va_copy", "va_end", "va_start", "time", "strftime", "get_capabilities", "cap_from_name", "exit", "log_cap"], "published": [], "classes": [], "methods": [{"name": "const std::string currentDateTime()", "description": "Returns the current date and time as a formatted string.", "scope": "", "scopeKind": ""}, {"name": "int _vscprintf(const char * format,va_list pargs)", "description": "Calculates the length of a formatted string for printf without actually printing it.", "scope": "", "scopeKind": ""}, {"name": "void log_cap(const char * format,...)", "description": "Logs a formatted message to the log file with a timestamp.", "scope": "", "scopeKind": ""}, {"name": "std::string & trim(std::string & args)", "description": "Removes non-alphanumeric characters, underscores, and commas from a string.", "scope": "", "scopeKind": ""}, {"name": "void populate_capabilities(Json::Value cfg_root,std::string caps_list,cap_value_t * appcaps_list,short int * cap_count)", "description": "Populates a list of capabilities based on JSON configuration and a list string.", "scope": "", "scopeKind": ""}, {"name": "void get_capabilities(const char * processname,cap_user * appcaps)", "description": "Retrieves process capabilities from a JSON config file and populates the capability structure.", "scope": "", "scopeKind": ""}, {"name": "__anon2e9a051a0102(char &c)", "scope": "trim", "scopeKind": "function", "description": "unavailable"}], "calls": ["time", "gmtime", "strftime", "va_copy", "vsnprintf", "currentDateTime", "exit", "log_cap", "cap_from_name"], "search-terms": ["utility.cpp", "capabilities", "json configuration", "process permissions", "security capabilities", "populate_capabilities", "get_capabilities", "logging"], "state": 2, "file_id": 12925, "knowledge_revision": 25831, "git_revision": "", "ctags": [{"_type": "tag", "name": "__anon2e9a051a0102", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/libunpriv/source/utility.cpp", "pattern": "/^    args.erase(std::remove_if(args.begin(),args.end(),[](char &c) {$/", "file": true, "language": "C++", "kind": "function", "signature": "(char &c) ", "scope": "trim", "scopeKind": "function"}, {"_type": "tag", "name": "_vscprintf", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/libunpriv/source/utility.cpp", "pattern": "/^int _vscprintf (const char * format, va_list pargs) {$/", "language": "C++", "typeref": "typename:int", "kind": "function", "signature": "(const char * format,va_list pargs)"}, {"_type": "tag", "name": "currentDateTime", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/libunpriv/source/utility.cpp", "pattern": "/^const std::string currentDateTime()$/", "language": "C++", "typeref": "typename:const std::string", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "get_capabilities", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/libunpriv/source/utility.cpp", "pattern": "/^void get_capabilities(const char *processname, cap_user *appcaps)$/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(const char * processname,cap_user * appcaps)"}, {"_type": "tag", "name": "log_cap", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/libunpriv/source/utility.cpp", "pattern": "/^void log_cap(const char * format, ...)$/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(const char * format,...)"}, {"_type": "tag", "name": "m_sCapFileName", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/libunpriv/source/utility.cpp", "pattern": "/^const string m_sCapFileName = \"\\/etc\\/security\\/caps\\/process-capabilities.json\";$/", "language": "C++", "typeref": "typename:const string", "kind": "variable"}, {"_type": "tag", "name": "populate_capabilities", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/libunpriv/source/utility.cpp", "pattern": "/^void populate_capabilities(Json::Value cfg_root, std::string caps_list, cap_value_t* appcaps_lis/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(Json::Value cfg_root,std::string caps_list,cap_value_t * appcaps_list,short int * cap_count)"}, {"_type": "tag", "name": "trim", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/libunpriv/source/utility.cpp", "pattern": "/^inline std::string& trim(std::string& args)$/", "language": "C++", "typeref": "typename:std::string &", "kind": "function", "signature": "(std::string & args)"}], "hash": "500f09516a59a1d09f67eb5a4d9be2e1", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "rdk/components/generic/libunpriv/source/utility.cpp", "fields": [{"name": "const string m_sCapFileName", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"25831": ""}]}