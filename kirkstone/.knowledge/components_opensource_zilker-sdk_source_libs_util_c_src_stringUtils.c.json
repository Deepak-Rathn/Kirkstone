{"is_source_file": true, "format": "C", "description": "This file is a source code file written in C that provides utility functions for string manipulation, including string replacement, editing, comparison, trimming, splitting, case conversion, random token generation, safe copying/ appending, type conversions, and bitmap string conversion.", "external_files": ["<stddef.h>", "<stdlib.h>", "<string.h>", "<stdint.h>", "<time.h>", "<stdio.h>", "<stdarg.h>", "<ctype.h>", "<errno.h>", "icLog/logging.h", "icUtil/stringUtils.h", "icUtil/array.h", "icTypes/icStringBuffer.h"], "external_methods": ["stringIsEmpty", "stringBufferCreate", "stringBufferAppendLength", "stringBufferAppend", "stringBufferToString", "stringBufferDestroy", "icLogError"], "published": ["stringReplace", "stringEdit", "generateRandomToken", "safeStringCopy", "safeStringAppend", "stringCompare", "stringStartsWith", "stringEndsWith", "trimString", "stringSplitOnToken", "stringToLowerCase", "stringToUpperCase", "stringToCamelCase", "stringBuilder", "strerrorSafe", "stringToUint8", "stringToUint16", "stringToUint32", "stringToUint64", "stringToInt8", "stringToInt16", "stringToInt32", "stringToInt64", "stringToBoolStrict", "stringToBool", "stringValueOfBool", "bitmapToStr", "stringIsEmpty"], "classes": [], "methods": [{"name": "char * bitmapToStr(const uint64_t bitmap,const size_t mapSize)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int copyAndTrimBuffer(char * dest,const char * src,char * stop)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "char * generateRandomToken(uint16_t minLength,uint16_t maxLength,int seedAdder)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "bool safeStringAppend(char * dest,uint16_t maxDestChars,const char * src)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "bool safeStringCopy(char * dest,uint16_t maxDestChars,const char * src)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "char * strerrorSafe(int errnum)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "char * stringBuilder(const char * format,...)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int8_t stringCompare(const char * left,const char * right,bool ignoreCase)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "char * stringEdit(char * str,const size_t offset,const size_t removeCount,const char * newText)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "bool stringEndsWith(const char * string,const char * suffix,bool ignoreCase)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "char * stringReplace(const char * orig,const char * rep,const char * with)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "bool stringSplitOnToken(const char * inputStr,const char token,char * leftOut,char * rightOut)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "bool stringStartsWith(const char * string,const char * prefix,bool ignoreCase)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "bool stringToBool(const char * str)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "bool stringToBoolStrict(const char * str,bool * result)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "char * stringToCamelCase(const char * inputStr)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "bool stringToInt16(const char * str,int16_t * num)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "bool stringToInt32(const char * str,int32_t * num)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "bool stringToInt64(const char * str,int64_t * num)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "bool stringToInt8(const char * str,int8_t * num)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "void stringToLowerCase(char * inputStr)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "bool stringToNumberWithinRange(const char * str,int64_t * num,uint8_t base,int64_t minValue,int64_t maxValue)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "bool stringToUint16(const char * str,uint16_t * num)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "bool stringToUint32(const char * str,uint32_t * num)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "bool stringToUint64(const char * str,uint64_t * num)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "bool stringToUint8(const char * str,uint8_t * num)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "bool stringToUnsignedNumberWithinRange(const char * str,uint64_t * num,uint8_t base,uint64_t minValue,uint64_t maxValue)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "void stringToUpperCase(char * inputStr)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "const char * stringValueOfBool(bool flag)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "char * trimString(const char * src)", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["strstr", "stringIsEmpty", "strlen", "strdup", "stringBufferCreate", "stringBufferAppendLength", "stringBufferAppend", "stringBufferToString", "stringBufferDestroy", "icLogError", "strchr", "memmove", "realloc", "calloc", "memcpy", "strcasecmp", "strncasecmp", "strncmp", "strcasecmp", "strcat", "strncat", "vsnprintf", "strtoull", "strtoll", "strerror_r"], "search-terms": ["stringUtils", "stringReplace", "stringBuffer", "stringConvert", "stringManipulation", "stringComparison", "stringTrim", "stringSplit", "caseConversion", "randomToken", "safeCopy", "safeAppend", "uintConversion", "intConversion", "bitmapString"], "state": 2, "file_id": 700, "knowledge_revision": 13866, "git_revision": "", "ctags": [{"_type": "tag", "name": "LOG_TAG", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/util/c/src/stringUtils.c", "pattern": "/^#define LOG_TAG /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "bitmapToStr", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/util/c/src/stringUtils.c", "pattern": "/^char *bitmapToStr(const uint64_t bitmap, const size_t mapSize)$/", "language": "C", "typeref": "typename:char *", "kind": "function", "signature": "(const uint64_t bitmap,const size_t mapSize)"}, {"_type": "tag", "name": "copyAndTrimBuffer", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/util/c/src/stringUtils.c", "pattern": "/^static int copyAndTrimBuffer(char *dest, const char *src, char *stop)$/", "file": true, "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(char * dest,const char * src,char * stop)"}, {"_type": "tag", "name": "generateRandomToken", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/util/c/src/stringUtils.c", "pattern": "/^char *generateRandomToken(uint16_t minLength, uint16_t maxLength, int seedAdder)$/", "language": "C", "typeref": "typename:char *", "kind": "function", "signature": "(uint16_t minLength,uint16_t maxLength,int seedAdder)"}, {"_type": "tag", "name": "safeStringAppend", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/util/c/src/stringUtils.c", "pattern": "/^bool safeStringAppend(char *dest, uint16_t maxDestChars, const char *src)$/", "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(char * dest,uint16_t maxDestChars,const char * src)"}, {"_type": "tag", "name": "safeStringCopy", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/util/c/src/stringUtils.c", "pattern": "/^bool safeStringCopy(char *dest, uint16_t maxDestChars, const char *src)$/", "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(char * dest,uint16_t maxDestChars,const char * src)"}, {"_type": "tag", "name": "strerrorSafe", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/util/c/src/stringUtils.c", "pattern": "/^char *strerrorSafe(int errnum)$/", "language": "C", "typeref": "typename:char *", "kind": "function", "signature": "(int errnum)"}, {"_type": "tag", "name": "stringBuilder", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/util/c/src/stringUtils.c", "pattern": "/^char *stringBuilder(const char *format, ...)$/", "language": "C", "typeref": "typename:char *", "kind": "function", "signature": "(const char * format,...)"}, {"_type": "tag", "name": "stringCompare", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/util/c/src/stringUtils.c", "pattern": "/^int8_t stringCompare(const char *left, const char *right, bool ignoreCase)$/", "language": "C", "typeref": "typename:int8_t", "kind": "function", "signature": "(const char * left,const char * right,bool ignoreCase)"}, {"_type": "tag", "name": "stringEdit", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/util/c/src/stringUtils.c", "pattern": "/^char *stringEdit(char *str, const size_t offset, const size_t removeCount, const char *newText)$/", "language": "C", "typeref": "typename:char *", "kind": "function", "signature": "(char * str,const size_t offset,const size_t removeCount,const char * newText)"}, {"_type": "tag", "name": "stringEndsWith", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/util/c/src/stringUtils.c", "pattern": "/^bool stringEndsWith(const char *string, const char *suffix, bool ignoreCase)$/", "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(const char * string,const char * suffix,bool ignoreCase)"}, {"_type": "tag", "name": "stringReplace", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/util/c/src/stringUtils.c", "pattern": "/^char *stringReplace(const char *orig, const char *rep, const char *with)$/", "language": "C", "typeref": "typename:char *", "kind": "function", "signature": "(const char * orig,const char * rep,const char * with)"}, {"_type": "tag", "name": "stringSplitOnToken", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/util/c/src/stringUtils.c", "pattern": "/^bool stringSplitOnToken(const char *inputStr, const char token, char *leftOut, char *rightOut)$/", "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(const char * inputStr,const char token,char * leftOut,char * rightOut)"}, {"_type": "tag", "name": "stringStartsWith", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/util/c/src/stringUtils.c", "pattern": "/^bool stringStartsWith(const char *string, const char *prefix, bool ignoreCase)$/", "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(const char * string,const char * prefix,bool ignoreCase)"}, {"_type": "tag", "name": "stringToBool", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/util/c/src/stringUtils.c", "pattern": "/^bool stringToBool(const char *str)$/", "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(const char * str)"}, {"_type": "tag", "name": "stringToBoolStrict", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/util/c/src/stringUtils.c", "pattern": "/^bool stringToBoolStrict(const char *str, bool *result)$/", "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(const char * str,bool * result)"}, {"_type": "tag", "name": "stringToCamelCase", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/util/c/src/stringUtils.c", "pattern": "/^char *stringToCamelCase(const char *inputStr)$/", "language": "C", "typeref": "typename:char *", "kind": "function", "signature": "(const char * inputStr)"}, {"_type": "tag", "name": "stringToInt16", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/util/c/src/stringUtils.c", "pattern": "/^bool stringToInt16(const char *str, int16_t *num)$/", "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(const char * str,int16_t * num)"}, {"_type": "tag", "name": "stringToInt32", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/util/c/src/stringUtils.c", "pattern": "/^bool stringToInt32(const char *str, int32_t *num)$/", "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(const char * str,int32_t * num)"}, {"_type": "tag", "name": "stringToInt64", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/util/c/src/stringUtils.c", "pattern": "/^bool stringToInt64(const char *str, int64_t *num)$/", "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(const char * str,int64_t * num)"}, {"_type": "tag", "name": "stringToInt8", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/util/c/src/stringUtils.c", "pattern": "/^bool stringToInt8(const char *str, int8_t *num)$/", "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(const char * str,int8_t * num)"}, {"_type": "tag", "name": "stringToLowerCase", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/util/c/src/stringUtils.c", "pattern": "/^void stringToLowerCase(char *inputStr)$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(char * inputStr)"}, {"_type": "tag", "name": "stringToNumberWithinRange", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/util/c/src/stringUtils.c", "pattern": "/^bool stringToNumberWithinRange(const char *str, int64_t *num, uint8_t base, int64_t minValue, in/", "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(const char * str,int64_t * num,uint8_t base,int64_t minValue,int64_t maxValue)"}, {"_type": "tag", "name": "stringToUint16", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/util/c/src/stringUtils.c", "pattern": "/^bool stringToUint16(const char *str, uint16_t *num)$/", "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(const char * str,uint16_t * num)"}, {"_type": "tag", "name": "stringToUint32", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/util/c/src/stringUtils.c", "pattern": "/^bool stringToUint32(const char *str, uint32_t *num)$/", "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(const char * str,uint32_t * num)"}, {"_type": "tag", "name": "stringToUint64", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/util/c/src/stringUtils.c", "pattern": "/^bool stringToUint64(const char *str, uint64_t *num)$/", "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(const char * str,uint64_t * num)"}, {"_type": "tag", "name": "stringToUint8", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/util/c/src/stringUtils.c", "pattern": "/^bool stringToUint8(const char *str, uint8_t *num)$/", "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(const char * str,uint8_t * num)"}, {"_type": "tag", "name": "stringToUnsignedNumberWithinRange", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/util/c/src/stringUtils.c", "pattern": "/^bool stringToUnsignedNumberWithinRange(const char *str, uint64_t *num, uint8_t base, uint64_t mi/", "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(const char * str,uint64_t * num,uint8_t base,uint64_t minValue,uint64_t maxValue)"}, {"_type": "tag", "name": "stringToUpperCase", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/util/c/src/stringUtils.c", "pattern": "/^void stringToUpperCase(char *inputStr)$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(char * inputStr)"}, {"_type": "tag", "name": "stringValueOfBool", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/util/c/src/stringUtils.c", "pattern": "/^const char *stringValueOfBool(bool flag)$/", "language": "C", "typeref": "typename:const char *", "kind": "function", "signature": "(bool flag)"}, {"_type": "tag", "name": "trimString", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/util/c/src/stringUtils.c", "pattern": "/^char *trimString(const char *src)$/", "language": "C", "typeref": "typename:char *", "kind": "function", "signature": "(const char * src)"}], "hash": "f76c4d3569b617c25740f7dd97ec4bda", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "components/opensource/zilker-sdk/source/libs/util/c/src/stringUtils.c", "revision_history": [{"13866": ""}]}