{"is_source_file": true, "format": "C header file", "description": "This file defines the interface for RBUS-related operations used within a telemetry component, including function declarations for parameter retrieval, event listener registration, method calling, and checking method existence, along with external includes and type definitions.", "external_files": ["<stdio.h>", "<stdbool.h>", "<vector.h>", "<rbus/rbus.h>", "\"busInterface.h\"", "\"telemetry2_0.h\""], "external_methods": ["rbus/rbus.h functions (e.g., rbusHandle_t, rbusError_t, rbusObject_t)", "getRbusParameterVal", "registerRbusT2EventListener", "unregisterRbusT2EventListener", "rbusT2ConsumerReg", "rbusT2ConsumerUnReg", "rbusMethodCaller", "rbusCheckMethodExists", "T2RbusReportEventConsumer"], "published": ["getRbusParameterVal", "registerRbusT2EventListener", "unregisterRbusT2EventListener", "rbusT2ConsumerReg", "rbusT2ConsumerUnReg", "rbusMethodCaller", "rbusCheckMethodExists", "T2RbusReportEventConsumer"], "classes": [], "methods": [{"name": "getRbusParameterVal", "description": "Retrieves the value of a specified RBUS parameter."}, {"name": "registerRbusT2EventListener", "description": "Registers an event listener callback for RBUS telemetry events."}, {"name": "unregisterRbusT2EventListener", "description": "Unregisters the previously registered RBUS telemetry event listener."}, {"name": "rbusT2ConsumerReg", "description": "Registers a consumer for RBUS telemetry triggers based on a list of conditions."}, {"name": "rbusT2ConsumerUnReg", "description": "Unregisters a previously registered RBUS telemetry consumer."}, {"name": "rbusMethodCaller", "description": "Invokes an RBUS method with specified input parameters and payload, with a callback for the result."}, {"name": "rbusCheckMethodExists", "description": "Checks if a specified RBUS method exists."}, {"name": "T2RbusReportEventConsumer", "description": "Reports an event for an RBUS consumer subscription, with reference and subscription status."}], "calls": ["rbus/rbus.h functions", "getRbusParameterVal", "registerRbusT2EventListener", "unregisterRbusT2EventListener", "rbusT2ConsumerReg", "rbusT2ConsumerUnReg", "rbusMethodCaller", "rbusCheckMethodExists", "T2RbusReportEventConsumer"], "search-terms": ["rbus", "telemetry", "rbusMethodCallBackPtr", "T2ERROR", "registerRbusT2EventListener", "rbusCheckMethodExists", "T2RbusReportEventConsumer"], "state": 2, "file_id": 12832, "knowledge_revision": 25732, "git_revision": "", "ctags": [{"_type": "tag", "name": "_RBUSINTERFACE_H_", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/ccspinterface/rbusInterface.h", "pattern": "/^#define _RBUSINTERFACE_H_$/", "language": "C++", "kind": "macro"}, {"_type": "tag", "name": "rbusMethodCallBackPtr", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/ccspinterface/rbusInterface.h", "pattern": "/^typedef void (*rbusMethodCallBackPtr) (rbusHandle_t handle, char const* methodName, rbusError_t /", "language": "C++", "typeref": "typename:void (*)(rbusHandle_t handle,char const * methodName,rbusError_t retStatus,rbusObject_t params)", "kind": "typedef"}], "hash": "35f6427cf5b2700bafec3fae3084ad94", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "rdk/components/generic/telemetry/source/ccspinterface/rbusInterface.h", "revision_history": [{"25732": ""}]}