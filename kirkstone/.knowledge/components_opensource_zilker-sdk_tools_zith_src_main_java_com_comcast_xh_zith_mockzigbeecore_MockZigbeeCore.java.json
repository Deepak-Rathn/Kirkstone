{"is_source_file": true, "format": "Java", "description": "This file contains the implementation of the MockZigbeeCore class, a Java class that simulates a Zigbee network core for testing or development purposes. It includes methods for network configuration, device management, event handling, and network status reporting.", "external_files": ["com.comcast.xh.zith.device.EventWaitHelper", "com.comcast.xh.zith.device.MockZigbeeDevice", "com.comcast.xh.zith.mockzigbeecore.event.NetworkConfigChangedEvent", "com.comcast.xh.zith.mockzigbeecore.event.ZhalStartupEvent", "com.comcast.xh.zith.mockzigbeecore.event.NetworkHealthProblemEvent", "com.comcast.xh.zith.mockzigbeecore.event.NetworkHealthProblemRestoredEvent", "com.comcast.xh.zith.mockzigbeecore.event.ZigbeePanIdAttack", "com.comcast.xh.zith.mockzigbeecore.request.RequestReceiver", "org.springframework.shell.standard.ShellComponent", "org.springframework.shell.standard.ShellMethod", "org.springframework.shell.standard.ShellOption", "org.springframework.shell.table.*"], "external_methods": ["String.format", "new ArrayList", "new HashMap", "System.nanoTime", "TimeUnit.NANOSECONDS.convert"], "published": ["getInstance", "getEui64", "getOriginalEui64", "networkChange", "getNetworkStatus", "setStatusListener", "start", "listDevices", "stop", "sendStartupIfNecessary", "sendNetworkHealthProblem", "sendPanIdAttack", "sendNetworkHealthProblemRestored", "getDevicesByType", "getDeviceByNameAndType", "addDevice", "addPairedDevice", "removeDevice", "isPaired", "enableJoin", "isNetworkOpenForJoin", "getDevice", "getAllDevices", "getPairedDevices", "getUnpairedDevices", "getRefreshOtaFilesEventWaitHelper", "refreshOtaFiles", "networkHealthCheckConfigure"], "classes": [{"name": "MockZigbeeCore", "description": "A singleton class that simulates a Zigbee network core, providing methods for configuration, device management, event simulation, and status reporting within a testing environment."}], "methods": [{"name": "getInstance", "description": "Returns the singleton instance of MockZigbeeCore."}, {"name": "getEui64", "description": "Retrieves the EUI64 address of the mock Zigbee network."}, {"name": "getOriginalEui64", "description": "Retrieves the original EUI64 address assigned at creation."}, {"name": "networkChange", "description": "Changes the Zigbee network configuration such as channel, PAN ID, and network key."}, {"name": "getNetworkStatus", "description": "Returns a table containing the current network status information."}, {"name": "setStatusListener", "description": "Sets a listener to receive status change notifications."}, {"name": "start", "description": "Starts the mock Zigbee network core, initializing device lists and request handling."}, {"name": "listDevices", "description": "Returns a table listing all known devices with their details."}, {"name": "stop", "description": "Stops the mock Zigbee network core, cleaning up resources."}, {"name": "sendStartupIfNecessary", "description": "Sends the startup event if it hasn't been sent already."}, {"name": "sendNetworkHealthProblem", "description": "Simulates a network health problem event."}, {"name": "sendPanIdAttack", "description": "Simulates a PAN ID attack event."}, {"name": "sendNetworkHealthProblemRestored", "description": "Simulates restoration of network health."}, {"name": "getDevicesByType", "description": "Fetches devices filtered by class type."}, {"name": "getDeviceByNameAndType", "description": "Retrieves a device by name and type."}, {"name": "addDevice", "description": "Adds a device to the network, unpaired or paired based on timing."}, {"name": "addPairedDevice", "description": "Adds a device as a paired device."}, {"name": "removeDevice", "description": "Removes a device from the paired list and adds it to unpaired."}, {"name": "isPaired", "description": "Checks if a device is currently paired."}, {"name": "enableJoin", "description": "Enables or disables joining of devices for a set duration."}, {"name": "isNetworkOpenForJoin", "description": "Returns whether the network is open for device joining."}, {"name": "getDevice", "description": "Retrieves a device by its EUI64."}, {"name": "getAllDevices", "description": "Returns a list of all devices, paired and unpaired."}, {"name": "getPairedDevices", "description": "Returns a list of all paired devices."}, {"name": "getUnpairedDevices", "description": "Returns a list of devices that are not yet paired."}, {"name": "getRefreshOtaFilesEventWaitHelper", "description": "Provides access to the event helper for OTA file refresh."}, {"name": "refreshOtaFiles", "description": "Notifies waiters to refresh OTA files."}, {"name": "networkHealthCheckConfigure", "description": "Configures network health check parameters (stub implementation)."}], "calls": ["String.format", "new ArrayList", "new HashMap", "System.nanoTime", "TimeUnit.NANOSECONDS.convert", "new NetworkConfigChangedEvent().send", "new ZhalStartupEvent().send", "new DeviceJoinedEvent().send", "new DeviceCommunicationSucceededEvent().send", "new DeviceAnnouncedEvent().send", "System.out.println"], "search-terms": ["MockZigbeeCore", "networkChange", "deviceManagement", "simulate events", "start and stop", "device listing", "enable join", "status reporting", "singleton pattern", "device pairing"], "state": 2, "file_id": 446, "knowledge_revision": 13631, "git_revision": "", "hash": "32c57005c7b5f2d624a907c2f8c83a74", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "components/opensource/zilker-sdk/tools/zith/src/main/java/com/comcast/xh/zith/mockzigbeecore/MockZigbeeCore.java", "revision_history": [{"13631": ""}]}