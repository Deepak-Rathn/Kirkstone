{"is_source_file": true, "format": "C++", "description": "This file implements the OmiService class which manages mounting and unmounting containers via D-Bus, handles related events, and configures privileges within the omi project. It includes D-Bus interface handling, mount management, error handling, and privileges dropping.", "external_files": ["omi_dbus_api.h", "omi_log.hpp", "omi_mount.hpp", "omi_service.hpp", "omi_unmount.hpp", "dropprivileges/dropprivileges.h"], "external_methods": ["g_dbus_interface_skeleton_export", "g_dbus_method_invocation_return_dbus_error", "omi1_complete_mount", "omi1_complete_umount", "omi1_emit_verity_failed", "drop_root_privileges", "g_bus_unown_name"], "published": ["OmiService"], "classes": [{"name": "OmiService", "description": "A class managing the lifecycle of the OMI service, handling DBus communication, mount/unmount requests, and privilege management."}], "methods": [{"name": "gboolean OnMount(Omi1 * object,GDBusMethodInvocation * invocation,const gchar * arg_id,const gchar * arg_rootfs_path,const gchar * arg_config_json_path,gpointer user_data)", "description": "Handles mount requests over D-Bus, checks for duplicate IDs or rootfs paths, performs the mount, and updates internal state.", "scope": "omi::OmiService", "scopeKind": "class"}, {"name": "gboolean OnUnmount(Omi1 * object,GDBusMethodInvocation * invocation,const gchar * arg_id,gpointer user_data)", "description": "Handles unmount requests over D-Bus, verifies the container ID exists, performs unmount, and updates internal state.", "scope": "omi::OmiService", "scopeKind": "class"}, {"name": "void OnBusAcquired(GDBusConnection * connection,const gchar * name,gpointer user_data)", "description": "Initializes D-Bus interface and exports the skeleton when a connection is acquired.", "scope": "omi::OmiService", "scopeKind": "class"}, {"name": "void OnNameAcquired(GDBusConnection * connection,const gchar * name,gpointer user_data)", "description": "Callback for when the service name is acquired on D-Bus.", "scope": "omi::OmiService", "scopeKind": "class"}, {"name": "void OnNameLost(GDBusConnection * connection,const gchar * name,gpointer user_data)", "description": "Callback for when the service name is lost on D-Bus.", "scope": "omi::OmiService", "scopeKind": "class"}, {"name": "void OnDestroyNotify(gpointer user_data)", "description": "Handles cleanup when the service is destroyed.", "scope": "omi::OmiService", "scopeKind": "class"}, {"name": "void OnDmVerityError(const char * device,void * user_data)", "description": "Handles errors related to device-mapper verity devices, emitting a VerityFailed signal if relevant.", "scope": "omi::OmiService", "scopeKind": "class"}, {"name": "OmiService()", "description": "Constructor setting initial state and logging, initializing members.", "scope": "omi::OmiService", "scopeKind": "class"}, {"name": "~OmiService()", "description": "Destructor with logging.", "scope": "omi::OmiService", "scopeKind": "class"}, {"name": "void Shutdown()", "description": "Waits for SIGTERM signal and initiates service shutdown.", "scope": "omi::OmiService", "scopeKind": "class"}, {"name": "bool ChangeRoot()", "description": "Changes root directory and user privileges based on environment variables for sandboxing.", "scope": "omi::OmiService", "scopeKind": "class"}, {"name": "int Run()", "description": "Starts the main event loop, sets up privilege dropping, and manages service lifetime.", "scope": "omi::OmiService", "scopeKind": "class"}, {"name": "__anon24f9f6920102(const Mount& mount)", "scope": "omi::OmiService::OnMount", "scopeKind": "function", "description": "unavailable"}, {"name": "__anon24f9f6920202(const Mount& mount)", "scope": "omi::OmiService::OnMount", "scopeKind": "function", "description": "unavailable"}, {"name": "__anon24f9f6920302(const Mount& mount)", "scope": "omi::OmiService::OnUnmount", "scopeKind": "function", "description": "unavailable"}, {"name": "__anon24f9f6920402(const Mount& mount)", "scope": "omi::OmiService::OnDmVerityError", "scopeKind": "function", "description": "unavailable"}], "calls": ["DoMount", "DoUnmount", "g_signal_connect", "g_dbus_interface_skeleton_export", "g_main_loop_run", "g_main_loop_unref", "g_bus_own_name", "g_main_loop_new", "g_main_loop_quit", "g_error_free"], "search-terms": ["OmiService", "OnMount", "OnUnmount", "DMVerity", "g_dbus_interface_skeleton_export", "mounts", "DropPrivileges", "Sandbox", "ContainerID", "DBus", "Privileges"], "state": 2, "file_id": 305, "knowledge_revision": 13479, "git_revision": "", "ctags": [{"_type": "tag", "name": "ChangeRoot", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/OMI/src/omi_service.cpp", "pattern": "/^bool OmiService::ChangeRoot()$/", "language": "C++", "typeref": "typename:bool", "kind": "function", "signature": "()", "scope": "omi::OmiService", "scopeKind": "class"}, {"_type": "tag", "name": "OmiService", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/OMI/src/omi_service.cpp", "pattern": "/^OmiService::OmiService():$/", "language": "C++", "kind": "function", "signature": "()", "scope": "omi::OmiService", "scopeKind": "class"}, {"_type": "tag", "name": "OnBusAcquired", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/OMI/src/omi_service.cpp", "pattern": "/^void OmiService::OnBusAcquired(GDBusConnection* connection,$/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(GDBusConnection * connection,const gchar * name,gpointer user_data)", "scope": "omi::OmiService", "scopeKind": "class"}, {"_type": "tag", "name": "OnDestroyNotify", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/OMI/src/omi_service.cpp", "pattern": "/^void OmiService::OnDestroyNotify(gpointer user_data)$/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(gpointer user_data)", "scope": "omi::OmiService", "scopeKind": "class"}, {"_type": "tag", "name": "OnDmVerityError", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/OMI/src/omi_service.cpp", "pattern": "/^void OmiService::OnDmVerityError(const char* device,$/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(const char * device,void * user_data)", "scope": "omi::OmiService", "scopeKind": "class"}, {"_type": "tag", "name": "OnMount", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/OMI/src/omi_service.cpp", "pattern": "/^gboolean OmiService::OnMount(Omi1* object,$/", "language": "C++", "typeref": "typename:gboolean", "kind": "function", "signature": "(Omi1 * object,GDBusMethodInvocation * invocation,const gchar * arg_id,const gchar * arg_rootfs_path,const gchar * arg_config_json_path,gpointer user_data)", "scope": "omi::OmiService", "scopeKind": "class"}, {"_type": "tag", "name": "OnNameAcquired", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/OMI/src/omi_service.cpp", "pattern": "/^void OmiService::OnNameAcquired(GDBusConnection* connection,$/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(GDBusConnection * connection,const gchar * name,gpointer user_data)", "scope": "omi::OmiService", "scopeKind": "class"}, {"_type": "tag", "name": "OnNameLost", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/OMI/src/omi_service.cpp", "pattern": "/^void OmiService::OnNameLost(GDBusConnection* connection,$/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(GDBusConnection * connection,const gchar * name,gpointer user_data)", "scope": "omi::OmiService", "scopeKind": "class"}, {"_type": "tag", "name": "OnUnmount", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/OMI/src/omi_service.cpp", "pattern": "/^gboolean OmiService::OnUnmount(Omi1* object,$/", "language": "C++", "typeref": "typename:gboolean", "kind": "function", "signature": "(Omi1 * object,GDBusMethodInvocation * invocation,const gchar * arg_id,gpointer user_data)", "scope": "omi::OmiService", "scopeKind": "class"}, {"_type": "tag", "name": "Run", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/OMI/src/omi_service.cpp", "pattern": "/^int OmiService::Run()$/", "language": "C++", "typeref": "typename:int", "kind": "function", "signature": "()", "scope": "omi::OmiService", "scopeKind": "class"}, {"_type": "tag", "name": "Shutdown", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/OMI/src/omi_service.cpp", "pattern": "/^void OmiService::Shutdown()$/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "()", "scope": "omi::OmiService", "scopeKind": "class"}, {"_type": "tag", "name": "__anon24f9f6920102", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/OMI/src/omi_service.cpp", "pattern": "/^    auto id_in_use = [&arg_id](const Mount& mount){ return arg_id == mount.id; };$/", "file": true, "language": "C++", "kind": "function", "signature": "(const Mount& mount)", "scope": "omi::OmiService::OnMount", "scopeKind": "function"}, {"_type": "tag", "name": "__anon24f9f6920202", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/OMI/src/omi_service.cpp", "pattern": "/^    auto rootfs_path_in_use = [&arg_rootfs_path](const Mount& mount){ return arg_rootfs_path == /", "file": true, "language": "C++", "kind": "function", "signature": "(const Mount& mount)", "scope": "omi::OmiService::OnMount", "scopeKind": "function"}, {"_type": "tag", "name": "__anon24f9f6920302", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/OMI/src/omi_service.cpp", "pattern": "/^    auto id_in_use = [&arg_id](const Mount& mount){ return arg_id == mount.id; };$/", "file": true, "language": "C++", "kind": "function", "signature": "(const Mount& mount)", "scope": "omi::OmiService::OnUnmount", "scopeKind": "function"}, {"_type": "tag", "name": "__anon24f9f6920402", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/OMI/src/omi_service.cpp", "pattern": "/^        auto id_in_use = [&id](const Mount& mount){ return id == mount.id; };$/", "file": true, "language": "C++", "kind": "function", "signature": "(const Mount& mount)", "scope": "omi::OmiService::OnDmVerityError", "scopeKind": "function"}, {"_type": "tag", "name": "omi", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/OMI/src/omi_service.cpp", "pattern": "/^namespace omi$/", "file": true, "language": "C++", "kind": "namespace"}, {"_type": "tag", "name": "~OmiService", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/OMI/src/omi_service.cpp", "pattern": "/^OmiService::~OmiService()$/", "language": "C++", "kind": "function", "signature": "()", "scope": "omi::OmiService", "scopeKind": "class"}], "hash": "94eb46848d4381a7038feb3aa164a14b", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "components/opensource/OMI/src/omi_service.cpp", "revision_history": [{"13479": ""}]}