{"is_source_file": true, "format": "C", "description": "This file contains functions for managing system shutdown and reboot procedures, including reading/writing shutdown reasons and status codes, and initiating system reboots or service restarts. It handles interactions with system files, external services, and system signals to facilitate controlled shutdown sequences.", "external_files": ["stdlib.h", "stdio.h", "string.h", "signal.h", "errno.h", "pthread.h", "unistd.h", "sys/reboot.h", "sys/stat.h", "inttypes.h", "icBuildtime.h", "icReset/shutdown.h", "icLog/logging.h", "icUtil/stringUtils.h", "icUtil/array.h", "icTime/timeUtils.h", "icConcurrent/delayedTask.h", "icConcurrent/timedWait.h", "watchdog/watchdogService_ipc.h", "propsMgr/paths.h", "icConcurrent/threadUtils.h", "deviceService/deviceService_pojo.h", "commMgr/commService_pojo.h"], "external_methods": ["watchdogService_request_STOP_SERVICE_timeout", "watchdogService_request_STOP_SERVICE", "watchdogService_request_RESTART_ALL_SERVICES", "sync", "reboot", "scheduleDelayTask", "initTimedWaitCond", "incrementalCondTimedWait", "createDetachedThread", "stringBuilder", "getDynamicConfigPath", "signal"], "published": ["icShutdown", "delayedShutdownCallback", "icDelayedShutdown", "getShutdownReasonCode", "peekShutdownReasonCode", "getShutdownStatusCode", "peekShutdownStatusCode", "getShutdownCodeForString", "recordShutdownReason", "recordShutdownReasonOnStartUp", "recordShutdownStatusCode"], "classes": [], "methods": [{"name": "void icShutdown(shutdownReason reason)", "description": "Performs system shutdown or service restart based on compile-time configuration. Handles saving shutdown reasons, stopping core services, syncing filesystem, and rebooting system.", "scope": "", "scopeKind": ""}, {"name": "void delayedShutdownCallback(void * arg)", "description": "Callback function invoked after a delay, initiates shutdown process.", "scope": "", "scopeKind": ""}, {"name": "void icDelayedShutdown(shutdownReason reason,uint16_t delaySecs)", "description": "Schedules a shutdown operation to occur after a specified delay in seconds.", "scope": "", "scopeKind": ""}, {"name": "shutdownReason getShutdownReasonCode(bool forTelemetry)", "description": "Reads and deletes the shutdown reason from a system file, returning as an enum.", "scope": "", "scopeKind": ""}, {"name": "shutdownReason peekShutdownReasonCode(bool forTelemetry)", "description": "Reads the shutdown reason from the file without deleting it.", "scope": "", "scopeKind": ""}, {"name": "uint32_t getShutdownStatusCode(bool forTelemetry)", "description": "Reads and deletes the shutdown status code from the system files.", "scope": "", "scopeKind": ""}, {"name": "uint32_t peekShutdownStatusCode(bool forTelemetry)", "description": "Reads the shutdown status code without deleting the file.", "scope": "", "scopeKind": ""}, {"name": "shutdownReason getShutdownCodeForString(const char * reason)", "description": "Converts a string into a shutdownReason enum value.", "scope": "", "scopeKind": ""}, {"name": "void recordShutdownReason(shutdownReason reason)", "description": "Records a shutdown reason asynchronously via a dedicated thread, also stores in system files.", "scope": "", "scopeKind": ""}, {"name": "void recordShutdownReasonOnStartUp(shutdownReason reason)", "description": "Removes existing shutdown reason files and records a new shutdown reason at system startup.", "scope": "", "scopeKind": ""}, {"name": "void recordShutdownStatusCode(uint32_t statusCode)", "description": "Records shutdown status code in system files for normal and telemetry purposes.", "scope": "", "scopeKind": ""}, {"name": "shutdownReason readShutdownReasonCode(const char * inputFile)", "description": "Internal function that reads a shutdown reason enum value from a specified file.", "scope": "", "scopeKind": ""}, {"name": "uint32_t readShutdownStatusCode(const char * inputFile)", "description": "Internal function that reads a shutdown status code from a specified file.", "scope": "", "scopeKind": ""}, {"name": "char * getShutdownReasonFilePath(bool forTelemetry)", "description": "Constructs the full path to the shutdown reason file, considering telemetry variant.", "scope": "", "scopeKind": ""}, {"name": "char * getShutdownStatusCodeFilePath(bool forTelemetry)", "description": "Constructs the full path to the shutdown status code file, considering telemetry variant.", "scope": "", "scopeKind": ""}, {"name": "void writeToFile(const char * fileName,void * input,size_t smemb,size_t nmemb)", "description": "Utility function that writes binary data to a specified file.", "scope": "", "scopeKind": ""}, {"name": "void * recordShutdownReasonThread(void * targs)", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["watchdogService_request_STOP_SERVICE_timeout", "watchdogService_request_STOP_SERVICE", "watchdogService_request_RESTART_ALL_SERVICES", "sync", "reboot", "scheduleDelayTask", "initTimedWaitCond", "incrementalCondTimedWait", "createDetachedThread", "getDynamicConfigPath", "stringBuilder", "signal"], "search-terms": ["shutdown", "reboot", "shutdownReason", "shutdownStatusCode", "system restart", "core services stop", "delayed shutdown", "system files shutdown reasons", "watchdog", "system reboot"], "state": 2, "file_id": 906, "knowledge_revision": 14070, "git_revision": "", "ctags": [{"_type": "tag", "name": "LOG_TAG", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/reset/c/src/shutdown.c", "pattern": "/^#define LOG_TAG /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "REASON_COND", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/reset/c/src/shutdown.c", "pattern": "/^static pthread_cond_t REASON_COND = PTHREAD_COND_INITIALIZER;$/", "file": true, "language": "C", "typeref": "typename:pthread_cond_t", "kind": "variable"}, {"_type": "tag", "name": "REASON_MTX", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/reset/c/src/shutdown.c", "pattern": "/^static pthread_mutex_t REASON_MTX = PTHREAD_MUTEX_INITIALIZER;$/", "file": true, "language": "C", "typeref": "typename:pthread_mutex_t", "kind": "variable"}, {"_type": "tag", "name": "REBOOT_REASON_FILE", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/reset/c/src/shutdown.c", "pattern": "/^#define REBOOT_REASON_FILE /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "REBOOT_REASON_XCONF_FILE", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/reset/c/src/shutdown.c", "pattern": "/^#define REBOOT_REASON_XCONF_FILE /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "REBOOT_STATUS_CODE_FILE", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/reset/c/src/shutdown.c", "pattern": "/^#define REBOOT_STATUS_CODE_FILE /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "REBOOT_STATUS_CODE_XCONF_FILE", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/reset/c/src/shutdown.c", "pattern": "/^#define REBOOT_STATUS_CODE_XCONF_FILE /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "delayedShutdownCallback", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/reset/c/src/shutdown.c", "pattern": "/^void delayedShutdownCallback(void *arg)$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(void * arg)"}, {"_type": "tag", "name": "getShutdownCodeForString", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/reset/c/src/shutdown.c", "pattern": "/^shutdownReason getShutdownCodeForString(const char *reason)$/", "language": "C", "typeref": "typename:shutdownReason", "kind": "function", "signature": "(const char * reason)"}, {"_type": "tag", "name": "getShutdownReasonCode", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/reset/c/src/shutdown.c", "pattern": "/^shutdownReason getShutdownReasonCode(bool forTelemetry)$/", "language": "C", "typeref": "typename:shutdownReason", "kind": "function", "signature": "(bool forTelemetry)"}, {"_type": "tag", "name": "getShutdownReasonFilePath", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/reset/c/src/shutdown.c", "pattern": "/^static char *getShutdownReasonFilePath(bool forTelemetry)$/", "file": true, "language": "C", "typeref": "typename:char *", "kind": "function", "signature": "(bool forTelemetry)"}, {"_type": "tag", "name": "getShutdownStatusCode", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/reset/c/src/shutdown.c", "pattern": "/^uint32_t getShutdownStatusCode(bool forTelemetry)$/", "language": "C", "typeref": "typename:uint32_t", "kind": "function", "signature": "(bool forTelemetry)"}, {"_type": "tag", "name": "getShutdownStatusCodeFilePath", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/reset/c/src/shutdown.c", "pattern": "/^static char *getShutdownStatusCodeFilePath(bool forTelemetry)$/", "file": true, "language": "C", "typeref": "typename:char *", "kind": "function", "signature": "(bool forTelemetry)"}, {"_type": "tag", "name": "icDelayedShutdown", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/reset/c/src/shutdown.c", "pattern": "/^void icDelayedShutdown(shutdownReason reason, uint16_t delaySecs)$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(shutdownReason reason,uint16_t delaySecs)"}, {"_type": "tag", "name": "icShutdown", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/reset/c/src/shutdown.c", "pattern": "/^void icShutdown(shutdownReason reason)$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(shutdownReason reason)"}, {"_type": "tag", "name": "peekShutdownReasonCode", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/reset/c/src/shutdown.c", "pattern": "/^shutdownReason peekShutdownReasonCode(bool forTelemetry)$/", "language": "C", "typeref": "typename:shutdownReason", "kind": "function", "signature": "(bool forTelemetry)"}, {"_type": "tag", "name": "peekShutdownStatusCode", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/reset/c/src/shutdown.c", "pattern": "/^uint32_t peekShutdownStatusCode(bool forTelemetry)$/", "language": "C", "typeref": "typename:uint32_t", "kind": "function", "signature": "(bool forTelemetry)"}, {"_type": "tag", "name": "readShutdownReasonCode", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/reset/c/src/shutdown.c", "pattern": "/^static shutdownReason readShutdownReasonCode(const char *inputFile)$/", "file": true, "language": "C", "typeref": "typename:shutdownReason", "kind": "function", "signature": "(const char * inputFile)"}, {"_type": "tag", "name": "readShutdownStatusCode", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/reset/c/src/shutdown.c", "pattern": "/^static uint32_t readShutdownStatusCode(const char *inputFile)$/", "file": true, "language": "C", "typeref": "typename:uint32_t", "kind": "function", "signature": "(const char * inputFile)"}, {"_type": "tag", "name": "recordShutdownReason", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/reset/c/src/shutdown.c", "pattern": "/^void recordShutdownReason(shutdownReason reason)$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(shutdownReason reason)"}, {"_type": "tag", "name": "recordShutdownReasonOnStartUp", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/reset/c/src/shutdown.c", "pattern": "/^void recordShutdownReasonOnStartUp(shutdownReason reason)$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(shutdownReason reason)"}, {"_type": "tag", "name": "recordShutdownReasonThread", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/reset/c/src/shutdown.c", "pattern": "/^static void *recordShutdownReasonThread(void *targs)$/", "file": true, "language": "C", "typeref": "typename:void *", "kind": "function", "signature": "(void * targs)"}, {"_type": "tag", "name": "recordShutdownStatusCode", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/reset/c/src/shutdown.c", "pattern": "/^void recordShutdownStatusCode(uint32_t statusCode)$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(uint32_t statusCode)"}, {"_type": "tag", "name": "writeToFile", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/reset/c/src/shutdown.c", "pattern": "/^static void writeToFile(const char *fileName, void *input, size_t smemb, size_t nmemb)$/", "file": true, "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(const char * fileName,void * input,size_t smemb,size_t nmemb)"}], "hash": "87b60801096b0ee2e74d1285623c11b3", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "components/opensource/zilker-sdk/source/libs/reset/c/src/shutdown.c", "fields": [{"name": "pthread_cond_t REASON_COND", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "pthread_mutex_t REASON_MTX", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"14070": ""}]}