{"is_source_file": true, "format": "C header file", "description": "This file defines the interface for a simple, dynamic FIFO (First In - First Out) buffer implemented in C. It provides functions for creating, cloning, destroying, clearing, appending data, and directly accessing internal buffer pointers, all intended for temporary memory storage between components or threads. It does not include implementation details or algorithms, only function declarations and type definitions.", "external_files": ["<stdbool.h>", "<stdint.h>"], "external_methods": [], "published": ["fifoBuffCreate", "fifoBuffClone", "fifoBuffDestroy", "fifoBuffClear", "fifoBuffGetPushAvailable", "fifoBuffPush", "fifoBuffPushByte", "fifoBuffPushPointer", "fifoBuffAfterPushPointer", "fifoBuffGetPullAvailable", "fifoBuffPull", "fifoBuffPullPointer", "fifoBuffAfterPullPointer"], "classes": [], "methods": [{"name": "fifoBuffCreate", "description": "Creates a new FIFO buffer with a specified initial size or default size if non-positive."}, {"name": "fifoBuffClone", "description": "Creates a deep copy of an existing FIFO buffer."}, {"name": "fifoBuffDestroy", "description": "Destroys and frees memory associated with a FIFO buffer."}, {"name": "fifoBuffClear", "description": "Resets the FIFO buffer contents without freeing the allocated memory."}, {"name": "fifoBuffGetPushAvailable", "description": "Returns the available space for additional data to be pushed into the buffer."}, {"name": "fifoBuffPush", "description": "Appends data to the end of the buffer, expanding internal storage as needed."}, {"name": "fifoBuffPushByte", "description": "Appends a single byte to the buffer, useful for building strings."}, {"name": "fifoBuffPushPointer", "description": "Provides direct access to internal buffer space for efficient appending."}, {"name": "fifoBuffAfterPushPointer", "description": "Updates internal structure after direct buffer access via 'fifoBuffPushPointer'."}, {"name": "fifoBuffGetPullAvailable", "description": "Returns the total data available to be read from the buffer."}, {"name": "fifoBuffPull", "description": "Extracts data from the buffer into a destination memory area."}, {"name": "fifoBuffPullPointer", "description": "Provides direct access to internal buffer data for reading."}, {"name": "fifoBuffAfterPullPointer", "description": "Updates internal structure after direct data reading via 'fifoBuffPullPointer'."}], "calls": ["fifoBuffCreate", "fifoBuffClone", "fifoBuffDestroy", "fifoBuffClear", "fifoBuffGetPushAvailable", "fifoBuffPush", "fifoBuffPushByte", "fifoBuffPushPointer", "fifoBuffAfterPushPointer", "fifoBuffGetPullAvailable", "fifoBuffPull", "fifoBuffPullPointer", "fifoBuffAfterPullPointer"], "search-terms": ["icFifoBuffer", "FIFO", "circular buffer", "stream buffer", "temp memory buffer", "dynamic buffer"], "state": 2, "file_id": 654, "knowledge_revision": 13827, "git_revision": "", "ctags": [{"_type": "tag", "name": "IC_FIFOBUFFER_H", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/types/c/public/icTypes/icFifoBuffer.h", "pattern": "/^#define IC_FIFOBUFFER_H$/", "language": "C++", "kind": "macro"}, {"_type": "tag", "name": "icFifoBuff", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/types/c/public/icTypes/icFifoBuffer.h", "pattern": "/^typedef struct _icFifoBuff icFifoBuff;$/", "language": "C++", "typeref": "struct:_icFifoBuff", "kind": "typedef"}], "hash": "468068cd6c53cf54e0524604cfd217bd", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "components/opensource/zilker-sdk/source/libs/types/c/public/icTypes/icFifoBuffer.h", "revision_history": [{"13827": ""}]}