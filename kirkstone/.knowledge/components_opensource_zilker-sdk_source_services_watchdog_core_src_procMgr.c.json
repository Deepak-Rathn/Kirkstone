{"is_source_file": true, "format": "C", "description": "This file implements a process manager for services, including starting, stopping, restarting services, handling process death, acknowledgment tracking during startup, and orchestrating a startup sequence. It manages a list of service definitions and their states, communicates via IPC, and handles restart policies, logging, and events.", "external_files": ["unistd.h", "stdio.h", "stdlib.h", "stdint.h", "inttypes.h", "string.h", "errno.h", "time.h", "limits.h", "pthread.h", "signal.h", "sys/types.h", "sys/wait.h", "sys/reboot.h", "sys/resource.h", "icBuildtime.h", "icLog/logging.h", "icIpc/ipcStockMessages.h", "icTypes/icLinkedList.h", "icTime/timeUtils.h", "icConcurrent/timedWait.h", "icConcurrent/delayedTask.h", "icUtil/stringUtils.h", "propsMgr/logLevel.h", "watchdog/serviceStatsHelper.h", "watchdog/watchdogChild.h", "diagService/softwareTroubleHelper.h", "procMgr.h", "configParser.h", "broadcastEvent.h", "common.h", "systemStatsCollector.h", "watchdogService_ipc_handler.h", "ipcHandler.h"], "external_methods": ["loadServiceConfig", "readMisbehavingService", "scheduleDelayTask", "cancelDelayTask", "startInitialization", "broadcastWatchdogEvent", "requestServiceShutdown", "get_watchdogService_ipc_receiver", "waitForRequestHandlerToShutdown", "autoAdjustCustomLogLevel", "saveMisbehavingService", "createMiniDiagForLater", "linkedListFind", "linkedListCreate", "linkedListAppend", "linkedListDestroy", "linkedListIteratorCreate", "linkedListIteratorHasNext", "linkedListIteratorGetNext", "linkedListIteratorDestroy", "countServicesToBeAcknowledged", "incrementalCondTimedWait", "startInitialization"], "published": ["operationOnAllProcesses", "operationOnSingleProcesses", "operationOnGroupOfProcesses", "acknowledgeServiceStarted", "areAllServicesStarted", "stopMonitoringService", "getServiceForName", "getAllServiceProcessInfo", "getAllServiceNames"], "classes": [{"name": "serviceDefinition", "description": "Struct representing a service with its configuration, runtime state, acknowledgment handling, and restart policies."}, {"name": "processInfo", "description": "Struct used for returning process-related information about services."}, {"name": "ackServiceDef", "description": "Struct representing acknowledgment data received from a service."}, {"name": "operationAction", "description": "Enum or constant indicating the type of operation: start, stop, restart."}], "methods": [{"name": "void startProcess(serviceDefinition * procDef,bool restartAfterCrash)", "description": "Internal callback to start a service process based on its definition.", "scope": "", "scopeKind": ""}, {"name": "void startConfiguredProcessesAndWait(const char * configDir,const char * homeDir)", "description": "Main function to initiate starting all configured services and wait for their lifecycle events.", "scope": "", "scopeKind": ""}, {"name": "bool findServiceByNameInList(void * searchVal,void * item)", "description": "Helper function to find a service in the list by name.", "scope": "", "scopeKind": ""}, {"name": "bool findServiceByPidInList(void * searchVal,void * item)", "description": "Helper function to find a service in the list by process ID.", "scope": "", "scopeKind": ""}, {"name": "bool executeStartOperation(char * name,scopeFilter scope)", "description": "Starts services matching certain criteria defined by scope and name.", "scope": "", "scopeKind": ""}, {"name": "bool executeStopOperation(const char * name,scopeFilter scope,uint8_t flags)", "description": "Stops services matching scope and name, with optional flags for kill and core dump.", "scope": "", "scopeKind": ""}, {"name": "void handleDeadChild(pid_t childPid)", "description": "Handles cleanup and restart logic when a child process dies.", "scope": "", "scopeKind": ""}, {"name": "void performStartupSequence(icLinkedList * serviceNames)", "description": "Coordinates the orchestrated startup of services with acknowledgment tracking.", "scope": "", "scopeKind": ""}, {"name": "void allAcksReceived(bool gaveUp)", "description": "Finalizes startup sequence after acknowledgments are received or timeout occurs.", "scope": "", "scopeKind": ""}, {"name": "bool acknowledgeServiceStarted(ackServiceDef * proc)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "bool areAllServicesStarted()", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "bool countNonSinglePhaseIterateFunc(void * item,void * arg)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "uint16_t countServicesToBeAcknowledged()", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "bool countSinglePhaseIterateFunc(void * item,void * arg)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "uint16_t countSinglePhaseServicesToBeAcknowledged()", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "void getAllServiceNames(icLinkedList * target)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "void getAllServiceProcessInfo(icLinkedList * target)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "serviceDefinition * getServiceForName(const char * serviceName)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "icLinkedList * getServiceNamesToBounce()", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "void ignoreAllProcDeaths()", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "uint16_t internalCountServicesToBeAcknowledged()", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "uint16_t internalCountSinglePhaseServicesToBeAcknowledged()", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "bool isProcessAlive(pid_t pid)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "void monitorAckDelayCallback(void * arg)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "void operationOnAllProcesses(operationAction action,bool forceKill)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "void operationOnGroupOfProcesses(operationAction action,char * groupName)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "bool operationOnSingleProcesses(operationAction action,char * serviceName)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "void resetBadServiceDelayCallback(void * arg)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "void startMonitorAckThread()", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "bool stopMonitoringService(const char * serviceName)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "bool waitForDeath(pid_t pid,serviceDefinition * target)", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["startInitialization", "broadcastWatchdogEvent", "requestServiceShutdown", "scheduleDelayTask", "cancelDelayTask", "linkedListFind", "linkedListCreate", "linkedListAppend", "linkedListIteratorCreate", "linkedListIteratorHasNext", "linkedListIteratorGetNext", "linkedListIteratorDestroy", "countServicesToBeAcknowledged", "incrementalCondTimedWait", "reboot"], "search-terms": ["service process management", "service acknowledgment sequence", "service start/stop/restart", "watchdog startup sequence", "service death handling", "process restart policies", "service configuration list", "service definition struct", "orchestrated service startup"], "state": 2, "file_id": 1228, "knowledge_revision": 14382, "git_revision": "", "ctags": [{"_type": "tag", "name": "ACK_MONITOR_MTX", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/watchdog/core/src/procMgr.c", "pattern": "/^static pthread_mutex_t ACK_MONITOR_MTX = PTHREAD_MUTEX_INITIALIZER;$/", "file": true, "language": "C", "typeref": "typename:pthread_mutex_t", "kind": "variable"}, {"_type": "tag", "name": "ALL_PROC_FILTER", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/watchdog/core/src/procMgr.c", "pattern": "/^    ALL_PROC_FILTER,$/", "file": true, "language": "C", "kind": "enumerator", "scope": "__anon283e731d0103", "scopeKind": "enum"}, {"_type": "tag", "name": "DEATH_WAIT_SECS", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/watchdog/core/src/procMgr.c", "pattern": "/^#define DEATH_WAIT_SECS /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "DUMP_CORE", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/watchdog/core/src/procMgr.c", "pattern": "/^#define DUMP_CORE /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "FORCE_KILL", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/watchdog/core/src/procMgr.c", "pattern": "/^#define FORCE_KILL /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "GROUP_PROC_FILTER", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/watchdog/core/src/procMgr.c", "pattern": "/^    GROUP_PROC_FILTER,$/", "file": true, "language": "C", "kind": "enumerator", "scope": "__anon283e731d0103", "scopeKind": "enum"}, {"_type": "tag", "name": "IGNORE_DEATH", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/watchdog/core/src/procMgr.c", "pattern": "/^#define IGNORE_DEATH /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "NON_SINGLE_PHASE_FILTER", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/watchdog/core/src/procMgr.c", "pattern": "/^    NON_SINGLE_PHASE_FILTER$/", "file": true, "language": "C", "kind": "enumerator", "scope": "__anon283e731d0103", "scopeKind": "enum"}, {"_type": "tag", "name": "OOM_ADJ_DISABLE", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/watchdog/core/src/procMgr.c", "pattern": "/^#define OOM_ADJ_DISABLE /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "OOM_ADJ_PROC_ENTRY", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/watchdog/core/src/procMgr.c", "pattern": "/^#define OOM_ADJ_PROC_ENTRY /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "OOM_SCORE_ADJ_DISABLE", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/watchdog/core/src/procMgr.c", "pattern": "/^#define OOM_SCORE_ADJ_DISABLE /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "OOM_SCORE_ADJ_PROC_ENTRY", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/watchdog/core/src/procMgr.c", "pattern": "/^#define OOM_SCORE_ADJ_PROC_ENTRY /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "RESET_ACK", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/watchdog/core/src/procMgr.c", "pattern": "/^#define RESET_ACK /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "SERVICE_COND", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/watchdog/core/src/procMgr.c", "pattern": "/^static pthread_cond_t  SERVICE_COND = PTHREAD_COND_INITIALIZER;$/", "file": true, "language": "C", "typeref": "typename:pthread_cond_t", "kind": "variable"}, {"_type": "tag", "name": "SERVICE_MTX", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/watchdog/core/src/procMgr.c", "pattern": "/^static pthread_mutex_t SERVICE_MTX = PTHREAD_MUTEX_INITIALIZER;$/", "file": true, "language": "C", "typeref": "typename:pthread_mutex_t", "kind": "variable"}, {"_type": "tag", "name": "SINGLE_PHASE_FILTER", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/watchdog/core/src/procMgr.c", "pattern": "/^    SINGLE_PHASE_FILTER,$/", "file": true, "language": "C", "kind": "enumerator", "scope": "__anon283e731d0103", "scopeKind": "enum"}, {"_type": "tag", "name": "SINGLE_PHASE_STARTUP_WAIT_SECS", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/watchdog/core/src/procMgr.c", "pattern": "/^#define SINGLE_PHASE_STARTUP_WAIT_SECS /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "SINGLE_PHASE_START_COMPLETE_COND", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/watchdog/core/src/procMgr.c", "pattern": "/^static pthread_cond_t  SINGLE_PHASE_START_COMPLETE_COND = PTHREAD_COND_INITIALIZER;$/", "file": true, "language": "C", "typeref": "typename:pthread_cond_t", "kind": "variable"}, {"_type": "tag", "name": "SINGLE_PROC_FILTER", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/watchdog/core/src/procMgr.c", "pattern": "/^    SINGLE_PROC_FILTER,$/", "file": true, "language": "C", "kind": "enumerator", "scope": "__anon283e731d0103", "scopeKind": "enum"}, {"_type": "tag", "name": "START_INIT_TIMEOUT_SECS", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/watchdog/core/src/procMgr.c", "pattern": "/^#define START_INIT_TIMEOUT_SECS /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "__anon283e731d0103", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/watchdog/core/src/procMgr.c", "pattern": "/^{$/", "file": true, "language": "C", "kind": "enum"}, {"_type": "tag", "name": "acknowledgeServiceStarted", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/watchdog/core/src/procMgr.c", "pattern": "/^bool acknowledgeServiceStarted(ackServiceDef *proc)$/", "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(ackServiceDef * proc)"}, {"_type": "tag", "name": "allAcksReceived", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/watchdog/core/src/procMgr.c", "pattern": "/^static void allAcksReceived(bool gaveUp)$/", "file": true, "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(bool gaveUp)"}, {"_type": "tag", "name": "areAllServicesStarted", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/watchdog/core/src/procMgr.c", "pattern": "/^bool areAllServicesStarted()$/", "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "countNonSinglePhaseIterateFunc", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/watchdog/core/src/procMgr.c", "pattern": "/^static bool countNonSinglePhaseIterateFunc(void *item, void *arg)$/", "file": true, "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(void * item,void * arg)"}, {"_type": "tag", "name": "countServicesToBeAcknowledged", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/watchdog/core/src/procMgr.c", "pattern": "/^uint16_t countServicesToBeAcknowledged()$/", "language": "C", "typeref": "typename:uint16_t", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "countSinglePhaseIterateFunc", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/watchdog/core/src/procMgr.c", "pattern": "/^static bool countSinglePhaseIterateFunc(void *item, void *arg)$/", "file": true, "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(void * item,void * arg)"}, {"_type": "tag", "name": "countSinglePhaseServicesToBeAcknowledged", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/watchdog/core/src/procMgr.c", "pattern": "/^uint16_t countSinglePhaseServicesToBeAcknowledged()$/", "language": "C", "typeref": "typename:uint16_t", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "executeStartOperation", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/watchdog/core/src/procMgr.c", "pattern": "/^static bool executeStartOperation(char *name, scopeFilter scope)$/", "file": true, "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(char * name,scopeFilter scope)"}, {"_type": "tag", "name": "executeStopOperation", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/watchdog/core/src/procMgr.c", "pattern": "/^static bool executeStopOperation(const char *name, scopeFilter scope, uint8_t flags)$/", "file": true, "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(const char * name,scopeFilter scope,uint8_t flags)"}, {"_type": "tag", "name": "findServiceByNameInList", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/watchdog/core/src/procMgr.c", "pattern": "/^static bool findServiceByNameInList(void *searchVal, void *item)$/", "file": true, "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(void * searchVal,void * item)"}, {"_type": "tag", "name": "findServiceByPidInList", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/watchdog/core/src/procMgr.c", "pattern": "/^static bool findServiceByPidInList(void *searchVal, void *item)$/", "file": true, "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(void * searchVal,void * item)"}, {"_type": "tag", "name": "getAllServiceNames", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/watchdog/core/src/procMgr.c", "pattern": "/^void getAllServiceNames(icLinkedList *target)$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(icLinkedList * target)"}, {"_type": "tag", "name": "getAllServiceProcessInfo", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/watchdog/core/src/procMgr.c", "pattern": "/^void getAllServiceProcessInfo(icLinkedList *target)$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(icLinkedList * target)"}, {"_type": "tag", "name": "getServiceForName", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/watchdog/core/src/procMgr.c", "pattern": "/^serviceDefinition *getServiceForName(const char *serviceName)$/", "language": "C", "typeref": "typename:serviceDefinition *", "kind": "function", "signature": "(const char * serviceName)"}, {"_type": "tag", "name": "getServiceNamesToBounce", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/watchdog/core/src/procMgr.c", "pattern": "/^static icLinkedList *getServiceNamesToBounce()$/", "file": true, "language": "C", "typeref": "typename:icLinkedList *", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "handleDeadChild", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/watchdog/core/src/procMgr.c", "pattern": "/^static void handleDeadChild(pid_t childPid)$/", "file": true, "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(pid_t childPid)"}, {"_type": "tag", "name": "ignoreAllProcDeaths", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/watchdog/core/src/procMgr.c", "pattern": "/^static void ignoreAllProcDeaths()$/", "file": true, "language": "C", "typeref": "typename:void", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "internalCountServicesToBeAcknowledged", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/watchdog/core/src/procMgr.c", "pattern": "/^static uint16_t internalCountServicesToBeAcknowledged()$/", "file": true, "language": "C", "typeref": "typename:uint16_t", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "internalCountSinglePhaseServicesToBeAcknowledged", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/watchdog/core/src/procMgr.c", "pattern": "/^static uint16_t internalCountSinglePhaseServicesToBeAcknowledged()$/", "file": true, "language": "C", "typeref": "typename:uint16_t", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "isProcessAlive", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/watchdog/core/src/procMgr.c", "pattern": "/^static bool isProcessAlive(pid_t pid)$/", "file": true, "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(pid_t pid)"}, {"_type": "tag", "name": "managerList", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/watchdog/core/src/procMgr.c", "pattern": "/^icLinkedList *managerList = NULL;   \\/\\/ allow visibility to main.c$/", "language": "C", "typeref": "typename:icLinkedList *", "kind": "variable"}, {"_type": "tag", "name": "managerList", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/watchdog/core/src/procMgr.c", "pattern": "/^static icLinkedList *managerList = NULL;$/", "file": true, "language": "C", "typeref": "typename:icLinkedList *", "kind": "variable"}, {"_type": "tag", "name": "monitorAckDelayCallback", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/watchdog/core/src/procMgr.c", "pattern": "/^static void monitorAckDelayCallback(void *arg)$/", "file": true, "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(void * arg)"}, {"_type": "tag", "name": "monitorAckTask", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/watchdog/core/src/procMgr.c", "pattern": "/^static uint32_t monitorAckTask = 0;$/", "file": true, "language": "C", "typeref": "typename:uint32_t", "kind": "variable"}, {"_type": "tag", "name": "operationOnAllProcesses", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/watchdog/core/src/procMgr.c", "pattern": "/^void operationOnAllProcesses(operationAction action, bool forceKill)$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(operationAction action,bool forceKill)"}, {"_type": "tag", "name": "operationOnGroupOfProcesses", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/watchdog/core/src/procMgr.c", "pattern": "/^void operationOnGroupOfProcesses(operationAction action, char *groupName)$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(operationAction action,char * groupName)"}, {"_type": "tag", "name": "operationOnSingleProcesses", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/watchdog/core/src/procMgr.c", "pattern": "/^bool operationOnSingleProcesses(operationAction action, char *serviceName)$/", "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(operationAction action,char * serviceName)"}, {"_type": "tag", "name": "performStartupSequence", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/watchdog/core/src/procMgr.c", "pattern": "/^static void performStartupSequence(icLinkedList *serviceNames)$/", "file": true, "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(icLinkedList * serviceNames)"}, {"_type": "tag", "name": "resetBadServiceDelayCallback", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/watchdog/core/src/procMgr.c", "pattern": "/^static void resetBadServiceDelayCallback(void *arg)$/", "file": true, "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(void * arg)"}, {"_type": "tag", "name": "resetBadServiceTask", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/watchdog/core/src/procMgr.c", "pattern": "/^static uint32_t resetBadServiceTask = 0;$/", "file": true, "language": "C", "typeref": "typename:uint32_t", "kind": "variable"}, {"_type": "tag", "name": "scopeFilter", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/watchdog/core/src/procMgr.c", "pattern": "/^} scopeFilter;$/", "file": true, "language": "C", "typeref": "enum:__anon283e731d0103", "kind": "typedef"}, {"_type": "tag", "name": "startConfiguredProcessesAndWait", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/watchdog/core/src/procMgr.c", "pattern": "/^void startConfiguredProcessesAndWait(const char *configDir, const char *homeDir)$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(const char * configDir,const char * homeDir)"}, {"_type": "tag", "name": "startMonitorAckThread", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/watchdog/core/src/procMgr.c", "pattern": "/^static void startMonitorAckThread()$/", "file": true, "language": "C", "typeref": "typename:void", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "startProcess", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/watchdog/core/src/procMgr.c", "pattern": "/^void startProcess(serviceDefinition *procDef, bool restartAfterCrash)$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(serviceDefinition * procDef,bool restartAfterCrash)"}, {"_type": "tag", "name": "startupSequenceFinalized", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/watchdog/core/src/procMgr.c", "pattern": "/^static bool startupSequenceFinalized = false;$/", "file": true, "language": "C", "typeref": "typename:bool", "kind": "variable"}, {"_type": "tag", "name": "stopMonitoringService", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/watchdog/core/src/procMgr.c", "pattern": "/^bool stopMonitoringService(const char *serviceName)$/", "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(const char * serviceName)"}, {"_type": "tag", "name": "waitForDeath", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/watchdog/core/src/procMgr.c", "pattern": "/^static bool waitForDeath(pid_t pid, serviceDefinition *target)$/", "file": true, "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(pid_t pid,serviceDefinition * target)"}], "hash": "80c4b90ddee4f5557ae1b0c8a00cf9e7", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "components/opensource/zilker-sdk/source/services/watchdog/core/src/procMgr.c", "fields": [{"name": "pthread_mutex_t ACK_MONITOR_MTX", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "pthread_cond_t SERVICE_COND", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "pthread_mutex_t SERVICE_MTX", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "pthread_cond_t SINGLE_PHASE_START_COMPLETE_COND", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "icLinkedList * managerList", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "uint32_t monitorAckTask", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "uint32_t resetBadServiceTask", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "bool startupSequenceFinalized", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"14382": ""}]}