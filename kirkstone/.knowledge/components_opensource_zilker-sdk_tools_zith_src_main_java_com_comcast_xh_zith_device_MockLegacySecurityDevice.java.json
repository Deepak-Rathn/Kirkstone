{"is_source_file": true, "format": "Java", "description": "Source file defining the MockLegacySecurityDevice class, a mock implementation of a Zigbee security device, including capabilities, device info, firmware management, and security cluster interactions.", "external_files": ["com.comcast.xh.zith.device.capability.BatteryPowered", "com.comcast.xh.zith.device.capability.TemperatureMeasurable", "com.comcast.xh.zith.device.cluster.MockLegacySecurityCluster", "com.comcast.xh.zith.mockzigbeecore.event.LegacySecurityDeviceInfoEvent"], "external_methods": ["getMockSecurityCluster()", "findServerClusterOfType(Class)"], "published": ["getZigbeeFirmwareVersion", "setFirmwareVersion", "getDeviceType", "getStatus", "getLowTempLimit", "getHighTempLimit", "getLowBatteryThreshold", "getDeviceNumber", "getEnablesBitmap", "getHibernationDuration", "getNapDuration", "getRegion", "getMfgId", "getModelId", "getModel", "getManufacturer", "getZigbeeHardwareVersion", "joinComplete", "setLowBattery", "sendCheckin", "isLowBattery", "setBatteryVoltage", "getBatteryVoltage", "upgrade", "getUpgradeRouterEui64", "getMeasuredTemperature", "setMeasuredTemperature"], "classes": [{"name": "EnablesBitmap", "description": "Defines bitmap bits for device enables state, such as magnetic switch, contact, tamper, armed status, and sensor pairing."}, {"name": "StatusBitmap", "description": "Defines bitmap bits for device status indicators including alarms, temperature, tamper, battery, trouble, and power failure."}, {"name": "DeviceType", "description": "Enumeration for various device types like door/window sensors, smoke detectors, keyfobs, keypads, and repeaters."}, {"name": "UCTemp", "description": "Represents temperature with degrees in Celsius and tenths, with methods to convert to byte array."}, {"name": "LegacyRegion", "description": "Enumeration for regional codes such as US, CH (Europe), JP (Japan), and AU (Australia)."}], "methods": [{"name": "getZigbeeFirmwareVersion", "description": "Returns the firmware version of the device in legacy format."}, {"name": "setFirmwareVersion", "description": "Updates the device firmware version."}, {"name": "getDeviceType", "description": "Returns the device type enumeration."}, {"name": "getStatus", "description": "Returns the status bitmaps from the security cluster."}, {"name": "getLowTempLimit", "description": "Returns the low temperature limit."}, {"name": "getHighTempLimit", "description": "Returns the high temperature limit."}, {"name": "getLowBatteryThreshold", "description": "Returns the voltage threshold for low battery warning."}, {"name": "getDeviceNumber", "description": "Retrieves the device number from the security cluster."}, {"name": "getEnablesBitmap", "description": "Returns the enables bitmap indicating device capabilities."}, {"name": "getHibernationDuration", "description": "Returns the hibernation duration in seconds."}, {"name": "getNapDuration", "description": "Returns the nap duration in seconds."}, {"name": "getRegion", "description": "Returns the regional setting of the device."}, {"name": "getMfgId", "description": "Returns the manufacturer ID."}, {"name": "getModelId", "description": "Returns the model ID."}, {"name": "getModel", "description": "Returns the device model string."}, {"name": "getManufacturer", "description": "Returns the manufacturer string."}, {"name": "getZigbeeHardwareVersion", "description": "Returns the hardware version as an integer."}, {"name": "joinComplete", "description": "Handles post-join procedures, such as sending device info event."}, {"name": "setLowBattery", "description": "Sets the low battery state in the cluster."}, {"name": "sendCheckin", "description": "Sends a check-in command via the security cluster."}, {"name": "isLowBattery", "description": "Returns whether the device reports low battery."}, {"name": "setBatteryVoltage", "description": "Updates the battery voltage in the cluster."}, {"name": "getBatteryVoltage", "description": "Returns the current battery voltage."}, {"name": "upgrade", "description": "Sets upgrade parameters for firmware upgrade."}, {"name": "getUpgradeRouterEui64", "description": "Retrieves router EUI64 used for upgrade."}, {"name": "getMeasuredTemperature", "description": "Returns current temperature measurement."}, {"name": "setMeasuredTemperature", "description": "Sets temperature measurement value."}], "calls": ["getMockSecurityCluster()", "findServerClusterOfType(Class)"], "search-terms": ["MockLegacySecurityDevice", "Zigbee security device", "Security cluster", "firmware management", "temperature measurement", "battery status", "region codes", "device upgrade"], "state": 2, "file_id": 318, "knowledge_revision": 13484, "git_revision": "", "hash": "dec7a2f0748440f5b1704043df9560a1", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "components/opensource/zilker-sdk/tools/zith/src/main/java/com/comcast/xh/zith/device/MockLegacySecurityDevice.java", "revision_history": [{"13484": ""}]}