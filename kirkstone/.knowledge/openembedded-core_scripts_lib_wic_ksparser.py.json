{"is_source_file": true, "format": "Python", "description": "This file is a Python script implementing a parser for a custom 'kickstart' configuration format used for disk partitioning and bootloader setup. It includes classes and functions for parsing, error handling, and processing related command-line arguments, with specific focus on interpreting partition specifications, bootloader configs, and including external configuration files.", "external_files": ["wic.engine", "wic.partition", "wic.misc", "../../.. (relative path for canned wks files)"], "external_methods": ["find_canned", "get_bitbake_var"], "published": ["KickStart", "sizetype", "overheadtype", "cannedpathtype", "systemidtype", "expand_line", "KickStartError"], "classes": [{"name": "KickStartParser", "description": "A subclass of ArgumentParser that overrides the error method to throw exceptions instead of printing usage messages."}, {"name": "KickStart", "description": "Main class implementing the parsing of a custom 'kickstart' configuration file, including handling of partition and bootloader configuration sections, error handling, and recursive inclusion of other config files."}], "methods": [{"name": "expand_line(line)", "description": "Expands variables within a line based on a regex pattern, replacing variables with their values obtained via get_bitbake_var.", "scope": "", "scopeKind": ""}, {"name": "sizetype(default, size_in_bytes=False)", "description": "Creates a custom argument type for parsing size strings with optional suffixes (S, K, M, G) and converting to integer bytes.", "scope": "", "scopeKind": ""}, {"name": "overheadtype(arg)", "description": "Creates a custom argument type for parsing a float overhead factor, ensuring it is greater than 1.0.", "scope": "", "scopeKind": ""}, {"name": "cannedpathtype(arg)", "description": "Designs a custom argument type to locate and validate a canned configuration file path.", "scope": "", "scopeKind": ""}, {"name": "systemidtype(arg)", "description": "Creates a custom argument type to validate a system ID argument as a hexadecimal byte value.", "scope": "", "scopeKind": ""}, {"name": "__init__(self, confpath)", "scope": "KickStart", "scopeKind": "class", "description": "unavailable"}, {"name": "_parse(self, parser, confpath)", "scope": "KickStart", "scopeKind": "class", "description": "unavailable"}, {"name": "error(self, message)", "scope": "KickStartParser", "scopeKind": "class", "description": "unavailable"}, {"name": "f(arg)", "scope": "sizetype", "scopeKind": "function", "description": "unavailable"}], "calls": ["find_canned", "get_bitbake_var"], "search-terms": ["KickStart", "kickstart parser", "partition", "bootloader", "wks configuration", "ArgumentParser subclass", "variable expansion", "size argument", "system id validation"], "state": 2, "file_id": 1445, "knowledge_revision": 14590, "git_revision": "", "ctags": [{"_type": "tag", "name": "DEFAULT_EXTRA_SPACE", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/wic/ksparser.py", "pattern": "/^    DEFAULT_EXTRA_SPACE = 10*1024$/", "language": "Python", "kind": "variable", "scope": "KickStart", "scopeKind": "class"}, {"_type": "tag", "name": "DEFAULT_OVERHEAD_FACTOR", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/wic/ksparser.py", "pattern": "/^    DEFAULT_OVERHEAD_FACTOR = 1.3$/", "language": "Python", "kind": "variable", "scope": "KickStart", "scopeKind": "class"}, {"_type": "tag", "name": "KickStart", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/wic/ksparser.py", "pattern": "/^class KickStart():$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "KickStartError", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/wic/ksparser.py", "pattern": "/^class KickStartError(Exception):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "KickStartParser", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/wic/ksparser.py", "pattern": "/^class KickStartParser(ArgumentParser):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "__expand_var_regexp__", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/wic/ksparser.py", "pattern": "/^__expand_var_regexp__ = re.compile(r\"\\\\${[^{}@\\\\n\\\\t :]+}\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/wic/ksparser.py", "pattern": "/^    def __init__(self, confpath):$/", "language": "Python", "kind": "member", "signature": "(self, confpath)", "scope": "KickStart", "scopeKind": "class"}, {"_type": "tag", "name": "_parse", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/wic/ksparser.py", "pattern": "/^    def _parse(self, parser, confpath):$/", "language": "Python", "kind": "member", "signature": "(self, parser, confpath)", "scope": "KickStart", "scopeKind": "class"}, {"_type": "tag", "name": "cannedpathtype", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/wic/ksparser.py", "pattern": "/^def cannedpathtype(arg):$/", "language": "Python", "kind": "function", "signature": "(arg)"}, {"_type": "tag", "name": "error", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/wic/ksparser.py", "pattern": "/^    def error(self, message):$/", "language": "Python", "kind": "member", "signature": "(self, message)", "scope": "KickStartParser", "scopeKind": "class"}, {"_type": "tag", "name": "expand_line", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/wic/ksparser.py", "pattern": "/^def expand_line(line):$/", "language": "Python", "kind": "function", "signature": "(line)"}, {"_type": "tag", "name": "f", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/wic/ksparser.py", "pattern": "/^    def f(arg):$/", "file": true, "language": "Python", "kind": "function", "signature": "(arg)", "scope": "sizetype", "scopeKind": "function"}, {"_type": "tag", "name": "logger", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/wic/ksparser.py", "pattern": "/^logger = logging.getLogger('wic')$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "overheadtype", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/wic/ksparser.py", "pattern": "/^def overheadtype(arg):$/", "language": "Python", "kind": "function", "signature": "(arg)"}, {"_type": "tag", "name": "sizetype", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/wic/ksparser.py", "pattern": "/^def sizetype(default, size_in_bytes=False):$/", "language": "Python", "kind": "function", "signature": "(default, size_in_bytes=False)"}, {"_type": "tag", "name": "systemidtype", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/wic/ksparser.py", "pattern": "/^def systemidtype(arg):$/", "language": "Python", "kind": "function", "signature": "(arg)"}], "hash": "a34063d8544faf66819228db2dbee066", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "openembedded-core/scripts/lib/wic/ksparser.py", "fields": [{"name": "DEFAULT_EXTRA_SPACE = 10*1024", "scope": "KickStart", "scopeKind": "class", "description": "unavailable"}, {"name": "DEFAULT_OVERHEAD_FACTOR = 1.3", "scope": "KickStart", "scopeKind": "class", "description": "unavailable"}, {"name": "__expand_var_regexp__ = re.compile(r\"\\\\${[^{}@\\\\n\\\\t :]+}\")", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "logger = logging.getLogger('wic')", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"14590": ""}]}