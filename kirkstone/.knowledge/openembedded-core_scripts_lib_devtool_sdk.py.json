{"is_source_file": true, "format": "Python", "description": "This Python script implements a development tool plugin for managing SDK updates and installation, including functions for parsing signature files, generating update dictionaries, handling sstate objects, checking manifests, and performing SDK update and installation procedures. It also registers related subcommands within a CLI environment.", "external_files": ["bb.utils", "devtool", "oe.recipeutils", "bb.process"], "external_methods": ["exec_build_env_command", "setup_tinfoil", "parse_recipe", "DevtoolError", "bb.utils.sha256_file", "bb.process.ExecutionError"], "published": ["sdk_update", "sdk_install", "register_commands"], "classes": [], "methods": [{"name": "parse_locked_sigs(sigfile_path)", "description": "Parses a signature file to extract a dictionary mapping <pn:task> to hash values.", "scope": "", "scopeKind": ""}, {"name": "generate_update_dict(sigfile_new, sigfile_old)", "description": "Generates a dictionary of components that need to be updated based on new and old signature files.", "scope": "", "scopeKind": ""}, {"name": "get_sstate_objects(update_dict, sstate_dir)", "description": "Retrieves sstate object files corresponding to updated components.", "scope": "", "scopeKind": ""}, {"name": "mkdir(d)", "description": "Creates directories, ignoring errors if they already exist.", "scope": "", "scopeKind": ""}, {"name": "install_sstate_objects(sstate_objects, src_sdk, dest_sdk)", "description": "Copies sstate object files into the destination SDK directory.", "scope": "", "scopeKind": ""}, {"name": "check_manifest(fn, basepath)", "description": "Verifies the checksum integrity of files listed in a manifest, returning files that have changed.", "scope": "", "scopeKind": ""}, {"name": "sdk_update(args, config, basepath, workspace)", "description": "Main function implementing the SDK update process, including fetching manifests, updating metadata, and optionally rebuilding the build environment.", "scope": "", "scopeKind": ""}, {"name": "sdk_install(args, config, basepath, workspace)", "description": "Installs specified recipes into the SDK, checking for existing stamps, and optionally building them.", "scope": "", "scopeKind": ""}, {"name": "register_commands(subparsers, context)", "description": "Registers the 'sdk-update' and 'sdk-install' CLI subcommands for the devtool environment.", "scope": "", "scopeKind": ""}, {"name": "checkstamp(recipe)", "scope": "sdk_install", "scopeKind": "function", "description": "unavailable"}, {"name": "read_uninative_checksums(fn)", "scope": "sdk_update", "scopeKind": "function", "description": "unavailable"}], "calls": ["os.path.join", "os.path.exists", "os.makedirs", "shutil.copy", "shutil.rmtree", "shutil.move", "glob.glob", "subprocess.call", "subprocess.check_output", "logging.getLogger", "logging.debug", "logging.error", "logging.info", "tempfile.mkdtemp", "re.split", "open", "os.remove"], "search-terms": ["sdk-update", "devtool plugin", "sstate cache", "manifest checksum", "layer metadata", "recipe installation", "build environment", "git fetch", "locked signature", "sstate objects"], "state": 2, "file_id": 1472, "knowledge_revision": 14619, "git_revision": "", "ctags": [{"_type": "tag", "name": "check_manifest", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/devtool/sdk.py", "pattern": "/^def check_manifest(fn, basepath):$/", "language": "Python", "kind": "function", "signature": "(fn, basepath)"}, {"_type": "tag", "name": "checkstamp", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/devtool/sdk.py", "pattern": "/^    def checkstamp(recipe):$/", "file": true, "language": "Python", "kind": "function", "signature": "(recipe)", "scope": "sdk_install", "scopeKind": "function"}, {"_type": "tag", "name": "generate_update_dict", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/devtool/sdk.py", "pattern": "/^def generate_update_dict(sigfile_new, sigfile_old):$/", "language": "Python", "kind": "function", "signature": "(sigfile_new, sigfile_old)"}, {"_type": "tag", "name": "get_sstate_objects", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/devtool/sdk.py", "pattern": "/^def get_sstate_objects(update_dict, sstate_dir):$/", "language": "Python", "kind": "function", "signature": "(update_dict, sstate_dir)"}, {"_type": "tag", "name": "install_sstate_objects", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/devtool/sdk.py", "pattern": "/^def install_sstate_objects(sstate_objects, src_sdk, dest_sdk):$/", "language": "Python", "kind": "function", "signature": "(sstate_objects, src_sdk, dest_sdk)"}, {"_type": "tag", "name": "logger", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/devtool/sdk.py", "pattern": "/^logger = logging.getLogger('devtool')$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "mkdir", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/devtool/sdk.py", "pattern": "/^def mkdir(d):$/", "language": "Python", "kind": "function", "signature": "(d)"}, {"_type": "tag", "name": "parse_locked_sigs", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/devtool/sdk.py", "pattern": "/^def parse_locked_sigs(sigfile_path):$/", "language": "Python", "kind": "function", "signature": "(sigfile_path)"}, {"_type": "tag", "name": "read_uninative_checksums", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/devtool/sdk.py", "pattern": "/^            def read_uninative_checksums(fn):$/", "file": true, "language": "Python", "kind": "function", "signature": "(fn)", "scope": "sdk_update", "scopeKind": "function"}, {"_type": "tag", "name": "register_commands", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/devtool/sdk.py", "pattern": "/^def register_commands(subparsers, context):$/", "language": "Python", "kind": "function", "signature": "(subparsers, context)"}, {"_type": "tag", "name": "sdk_install", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/devtool/sdk.py", "pattern": "/^def sdk_install(args, config, basepath, workspace):$/", "language": "Python", "kind": "function", "signature": "(args, config, basepath, workspace)"}, {"_type": "tag", "name": "sdk_update", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/devtool/sdk.py", "pattern": "/^def sdk_update(args, config, basepath, workspace):$/", "language": "Python", "kind": "function", "signature": "(args, config, basepath, workspace)"}], "hash": "9e0f9fa166d57006ac09e0fd23141977", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "openembedded-core/scripts/lib/devtool/sdk.py", "fields": [{"name": "logger = logging.getLogger('devtool')", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"14619": ""}]}