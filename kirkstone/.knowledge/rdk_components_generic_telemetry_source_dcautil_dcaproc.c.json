{"is_source_file": true, "format": "C language (dcaproc.c)", "description": "This file is a C source code file implementing process and system monitoring utilities for a telemetry component. It includes functions for retrieving process usage, process statistics, CPU and memory info, as well as handling of system commands like 'top' and 'ps' to gather runtime system data.", "external_files": ["vector.h", "dcautil.h", "legacyutils.h", "t2log_wrapper.h", "secure_wrapper.h"], "external_methods": ["Vector_PushBack", "v_secure_popen", "v_secure_pclose", "v_secure_system"], "published": ["getProcUsage", "getProcPidStat", "getProcInfo", "getMemInfo", "saveTopOutput", "removeTopOutput", "getCPUInfo", "getTotalCpuTimes", "getProcessCpuUtilization"], "classes": [], "methods": [{"name": "int getProcUsage(char * processName,Vector * grepResultList,bool trim)", "description": "Retrieves usage statistics (CPU and memory) for a specified process name, populating a vector with results.", "scope": "", "scopeKind": ""}, {"name": "int getProcPidStat(int pid,procinfo * pinfo)", "description": "Obtains runtime statistics for a process identified by PID, including CPU time, memory, and process state.", "scope": "", "scopeKind": ""}, {"name": "int getProcInfo(procMemCpuInfo * pmInfo)", "description": "Aggregates process memory and CPU information for the provided process info structure.", "scope": "", "scopeKind": ""}, {"name": "int getMemInfo(procMemCpuInfo * pmInfo)", "description": "Calculates total memory usage of a set of processes based on their PIDs and updates the process info structure.", "scope": "", "scopeKind": ""}, {"name": "void saveTopOutput()", "description": "Executes 'top' command and saves output to a temporary file for later analysis.", "scope": "", "scopeKind": ""}, {"name": "void removeTopOutput()", "description": "Deletes the temporary file created for 'top' command output.", "scope": "", "scopeKind": ""}, {"name": "int getCPUInfo(procMemCpuInfo * pInfo)", "description": "Gathers CPU utilization data by parsing system 'top' output or system files, updating the process info structure.", "scope": "", "scopeKind": ""}, {"name": "int getTotalCpuTimes(int * totalTime)", "description": "Reads total CPU time from '/proc/stat' for system-wide CPU utilization analysis.", "scope": "", "scopeKind": ""}, {"name": "int getProcessCpuUtilization(int pid,float * procCpuUtil)", "description": "Calculates CPU utilization percentage for a specific process by comparing CPU time over a time interval.", "scope": "", "scopeKind": ""}, {"name": "int getCPUInfo(procMemCpuInfo * pmInfo)", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["popen", "pclose", "system", "v_secure_popen", "v_secure_pclose", "v_secure_system", "access", "fscanf", "sscanf", "fgets", "sleep", "system"], "search-terms": ["dcaproc", "process usage", "system monitoring", "getProcUsage", "saveTopOutput", "getCPUInfo", "getMemInfo", "total CPU times"], "state": 2, "file_id": 12910, "knowledge_revision": 25813, "git_revision": "", "ctags": [{"_type": "tag", "name": "CMD_LEN", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/dcautil/dcaproc.c", "pattern": "/^#define CMD_LEN /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "LEN", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/dcautil/dcaproc.c", "pattern": "/^#define LEN /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "MAXLEN", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/dcautil/dcaproc.c", "pattern": "/^#define MAXLEN /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "MEM_STRING_SIZE", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/dcautil/dcaproc.c", "pattern": "/^#define MEM_STRING_SIZE /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "PIDOF_SIZE", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/dcautil/dcaproc.c", "pattern": "/^#define PIDOF_SIZE /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "PID_SIZE", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/dcautil/dcaproc.c", "pattern": "/^#define PID_SIZE /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "PROC_PATH_SIZE", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/dcautil/dcaproc.c", "pattern": "/^#define PROC_PATH_SIZE /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "TOPITERATION", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/dcautil/dcaproc.c", "pattern": "/^#define TOPITERATION /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "getCPUInfo", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/dcautil/dcaproc.c", "pattern": "/^int getCPUInfo(procMemCpuInfo *pInfo) {$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(procMemCpuInfo * pInfo)"}, {"_type": "tag", "name": "getCPUInfo", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/dcautil/dcaproc.c", "pattern": "/^int getCPUInfo(procMemCpuInfo *pmInfo) {$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(procMemCpuInfo * pmInfo)"}, {"_type": "tag", "name": "getMemInfo", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/dcautil/dcaproc.c", "pattern": "/^int getMemInfo(procMemCpuInfo *pmInfo) {$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(procMemCpuInfo * pmInfo)"}, {"_type": "tag", "name": "getProcInfo", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/dcautil/dcaproc.c", "pattern": "/^int getProcInfo(procMemCpuInfo *pmInfo) {$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(procMemCpuInfo * pmInfo)"}, {"_type": "tag", "name": "getProcPidStat", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/dcautil/dcaproc.c", "pattern": "/^int getProcPidStat(int pid, procinfo * pinfo) {$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(int pid,procinfo * pinfo)"}, {"_type": "tag", "name": "getProcUsage", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/dcautil/dcaproc.c", "pattern": "/^int getProcUsage(char *processName, Vector* grepResultList, bool trim) {$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(char * processName,Vector * grepResultList,bool trim)"}, {"_type": "tag", "name": "getProcessCpuUtilization", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/dcautil/dcaproc.c", "pattern": "/^int getProcessCpuUtilization(int pid, float *procCpuUtil)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(int pid,float * procCpuUtil)"}, {"_type": "tag", "name": "getTotalCpuTimes", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/dcautil/dcaproc.c", "pattern": "/^int getTotalCpuTimes(int * totalTime)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(int * totalTime)"}, {"_type": "tag", "name": "removeTopOutput", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/dcautil/dcaproc.c", "pattern": "/^void removeTopOutput()$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "saveTopOutput", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/dcautil/dcaproc.c", "pattern": "/^void saveTopOutput(){$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "()"}], "hash": "e206b44b3b7441fa84ae6541c213f65e", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "rdk/components/generic/telemetry/source/dcautil/dcaproc.c", "revision_history": [{"25813": ""}]}