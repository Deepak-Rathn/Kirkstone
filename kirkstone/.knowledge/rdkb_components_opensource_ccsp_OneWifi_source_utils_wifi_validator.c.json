{"is_source_file": true, "format": "C", "description": "A source C file implementing validation logic for Wi-Fi configurations, including interworking, passpoint, radius, enterprise/security, SSID, and other related parameters in a Wi-Fi management context.", "external_files": ["cosa_apis.h", "cosa_dbus_api.h", "cosa_wifi_apis.h", "cosa_wifi_internal.h", "wifi_webconfig.h", "platform-logger.h", "wifi_hal.h", "cJSON.h", "wifi_passpoint.h", "webconfig_framework.h"], "external_methods": ["inet_pton", "WiFi_IsValidMacAddr", "copy_string", "platform_trace_error", "wifi_util_dbg_print"], "published": ["validate_ipv4_address", "validate_anqp", "validate_passpoint", "validate_interworking", "early_validate_interworking", "validate_radius_settings", "validate_enterprise_security", "validate_personal_security", "validate_ssid_name", "validate_xfinity_secure_vap", "validate_xfinity_open_vap", "validate_private_vap", "validate_xhome_vap"], "classes": [], "methods": [{"name": "int validate_ipv4_address(char * ip)", "description": "Validates if the provided string is a valid IPv4 address.", "scope": "", "scopeKind": ""}, {"name": "int validate_anqp(const cJSON * anqp,wifi_interworking_t * vap_info,pErr execRetVal)", "description": "Validates and processes ANQP (Access Network Query Protocol) information from JSON input, populating vif_info structure.", "scope": "", "scopeKind": ""}, {"name": "int validate_passpoint(const cJSON * passpoint,wifi_interworking_t * vap_info,pErr execRetVal)", "description": "Validates and applies passpoint configuration from JSON input to internal data structures.", "scope": "", "scopeKind": ""}, {"name": "int validate_interworking(const cJSON * interworking,wifi_vap_info_t * vap_info,pErr execRetVal)", "description": "Validates and applies Interworking parameters, including venue info and associated ANQP data.", "scope": "", "scopeKind": ""}, {"name": "int early_validate_interworking(const cJSON * interworking,pErr execRetVal)", "description": "Performs preliminary validation of interworking JSON data with minimal checks.", "scope": "", "scopeKind": ""}, {"name": "int validate_radius_settings(const cJSON * radius,wifi_vap_info_t * vap_info,pErr execRetVal)", "description": "Validates radius server configuration parameters.", "scope": "", "scopeKind": ""}, {"name": "int validate_enterprise_security(const cJSON * security,wifi_vap_info_t * vap_info,pErr execRetVal)", "description": "Validates enterprise security settings for Wi-Fi vapor configuration.", "scope": "", "scopeKind": ""}, {"name": "int validate_personal_security(const cJSON * security,wifi_vap_info_t * vap_info,pErr execRetVal)", "description": "Validates personal security settings including encryption and passphrase.", "scope": "", "scopeKind": ""}, {"name": "int validate_ssid_name(char * ssid_name,pErr execRetVal)", "description": "Validates the SSID name for proper length and character content.", "scope": "", "scopeKind": ""}, {"name": "int validate_xfinity_secure_vap(const cJSON * vap,wifi_vap_info_t * vap_info,pErr execRetVal)", "description": "Validates configuration for a secure Xfinity Wi-Fi VAP configuration.", "scope": "", "scopeKind": ""}, {"name": "int validate_xfinity_open_vap(const cJSON * vap,wifi_vap_info_t * vap_info,pErr execRetVal)", "description": "Validates configuration for an open Xfinity Wi-Fi VAP.", "scope": "", "scopeKind": ""}, {"name": "int validate_private_vap(const cJSON * vap,wifi_vap_info_t * vap_info,pErr execRetVal)", "description": "Validates configuration for a private (enterprise or personal security) Wi-Fi VAP.", "scope": "", "scopeKind": ""}, {"name": "int validate_xhome_vap(const cJSON * vap,wifi_vap_info_t * vap_info,pErr execRetVal)", "description": "Validates configuration for an XHome Wi-Fi VAP.", "scope": "", "scopeKind": ""}, {"name": "int validate_contry_code(wifi_countrycode_type_t * contry_code,char * contry)", "description": "Validates country code string against known country map and sets the country code if valid.", "scope": "", "scopeKind": ""}, {"name": "int validate_vap(const cJSON * vap,wifi_vap_info_t * vap_info,wifi_platform_property_t * wifi_prop,pErr execRetVal)", "description": "Validates and populates VAP (Virtual Access Point) configuration from JSON input.", "scope": "", "scopeKind": ""}, {"name": "int validate_wifi_global_config(const cJSON * global_cfg,wifi_global_param_t * global_info,pErr execRetVal)", "description": "Validates global Wi-Fi configuration parameters from JSON input.", "scope": "", "scopeKind": ""}, {"name": "int validate_gas_config(const cJSON * gas,wifi_GASConfiguration_t * gas_info,pErr execRetVal)", "description": "Validates GAS (Generic Advertisement Service) configuration parameters from JSON input.", "scope": "", "scopeKind": ""}, {"name": "int validate_wifi_channel(wifi_freq_bands_t wifi_band,UINT * wifi_radio_channel,UINT wifi_channel)", "description": "Validates Wi-Fi channel number against frequency band and allowed channels.", "scope": "", "scopeKind": ""}, {"name": "int validate_radio_vap(const cJSON * wifi,wifi_radio_operationParam_t * wifi_radio_info,wifi_vap_info_map_t * vap_map,wifi_radio_feature_param_t * wifi_radio_feat_info,pErr execRetVal)", "description": "Validates radio and VAP configuration including frequency band, channels, and other radio parameters.", "scope": "", "scopeKind": ""}, {"name": "int validate_wifi_config(const cJSON * wifi,wifi_global_config_t * wifi_info,pErr execRetVal)", "description": "Validates overall Wi-Fi configuration including GAS and global parameters.", "scope": "", "scopeKind": ""}, {"name": "int wifi_validate_config(const cJSON * root_json,wifi_global_config_t * wifi_config,wifi_vap_info_map_t * vap_map,wifi_radio_operationParam_t * radio_vap_map,wifi_radio_feature_param_t * radio_feat_map,char * num_of_radio,wifi_platform_property_t * wifi_prop,pErr execRetVal)", "description": "Top-level validation of entire Wi-Fi configuration JSON, including radios, VAPs, and global settings.", "scope": "", "scopeKind": ""}, {"name": "int checkVenueParams(const uint8_t venueGroup,const uint8_t venueType,pErr execRetVal)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "void validation_error_msg(const uint8_t group,const uint8_t type,pErr execRetVal)", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["inet_pton", "WiFi_IsValidMacAddr", "copy_string", "platform_trace_error", "wifi_util_dbg_print", "convert_freq_band_to_radio_index", "get_wifi_radio_config", "get_wifi_vap_config", "getVAPIndexFromName", "get_vap_and_radio_index_from_vap_instance", "isVapHotspot", "isVapHotspotSecure", "isVapPrivate", "isVapXhs", "isVapLnfSecure"], "search-terms": ["wifi validation", "interworking validation", "passpoint validation", "VAP configuration", "Wi-Fi radio parameters", "GAS configuration", "country code validation", "Wi-Fi global parameters", "SSID validation", "security mode", "channel validation", "validation functions"], "state": 2, "file_id": 5947, "knowledge_revision": 19053, "git_revision": "", "ctags": [{"_type": "tag", "name": "ONE_WIFI_CHANGES", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/utils/wifi_validator.c", "pattern": "/^#define ONE_WIFI_CHANGES$/", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "checkVenueParams", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/utils/wifi_validator.c", "pattern": "/^static int checkVenueParams(const uint8_t venueGroup, const uint8_t venueType, pErr execRetVal)$/", "file": true, "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(const uint8_t venueGroup,const uint8_t venueType,pErr execRetVal)"}, {"_type": "tag", "name": "early_validate_interworking", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/utils/wifi_validator.c", "pattern": "/^int early_validate_interworking(const cJSON *interworking, pErr execRetVal)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(const cJSON * interworking,pErr execRetVal)"}, {"_type": "tag", "name": "g_interworking_RFC", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/utils/wifi_validator.c", "pattern": "/^bool g_interworking_RFC;$/", "language": "C", "typeref": "typename:bool", "kind": "variable"}, {"_type": "tag", "name": "g_passpoint_RFC", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/utils/wifi_validator.c", "pattern": "/^bool g_passpoint_RFC;$/", "language": "C", "typeref": "typename:bool", "kind": "variable"}, {"_type": "tag", "name": "validate_anqp", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/utils/wifi_validator.c", "pattern": "/^int validate_anqp(const cJSON *anqp, wifi_interworking_t *vap_info, pErr execRetVal)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(const cJSON * anqp,wifi_interworking_t * vap_info,pErr execRetVal)"}, {"_type": "tag", "name": "validate_contry_code", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/utils/wifi_validator.c", "pattern": "/^int validate_contry_code(wifi_countrycode_type_t *contry_code, char *contry)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(wifi_countrycode_type_t * contry_code,char * contry)"}, {"_type": "tag", "name": "validate_enterprise_security", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/utils/wifi_validator.c", "pattern": "/^int validate_enterprise_security(const cJSON *security, wifi_vap_info_t *vap_info, pErr execRetV/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(const cJSON * security,wifi_vap_info_t * vap_info,pErr execRetVal)"}, {"_type": "tag", "name": "validate_gas_config", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/utils/wifi_validator.c", "pattern": "/^int validate_gas_config(const cJSON *gas, wifi_GASConfiguration_t *gas_info, pErr execRetVal)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(const cJSON * gas,wifi_GASConfiguration_t * gas_info,pErr execRetVal)"}, {"_type": "tag", "name": "validate_interworking", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/utils/wifi_validator.c", "pattern": "/^int validate_interworking(const cJSON *interworking, wifi_vap_info_t *vap_info, pErr execRetVal)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(const cJSON * interworking,wifi_vap_info_t * vap_info,pErr execRetVal)"}, {"_type": "tag", "name": "validate_ipv4_address", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/utils/wifi_validator.c", "pattern": "/^int validate_ipv4_address(char *ip) {$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(char * ip)"}, {"_type": "tag", "name": "validate_param_array", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/utils/wifi_validator.c", "pattern": "/^#define validate_param_array(/", "file": true, "language": "C", "kind": "macro", "signature": "(json,key,value)"}, {"_type": "tag", "name": "validate_param_bool", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/utils/wifi_validator.c", "pattern": "/^#define validate_param_bool(/", "file": true, "language": "C", "kind": "macro", "signature": "(json,key,value)"}, {"_type": "tag", "name": "validate_param_integer", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/utils/wifi_validator.c", "pattern": "/^#define validate_param_integer(/", "file": true, "language": "C", "kind": "macro", "signature": "(json,key,value)"}, {"_type": "tag", "name": "validate_param_object", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/utils/wifi_validator.c", "pattern": "/^#define validate_param_object(/", "file": true, "language": "C", "kind": "macro", "signature": "(json,key,value)"}, {"_type": "tag", "name": "validate_param_string", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/utils/wifi_validator.c", "pattern": "/^#define validate_param_string(/", "file": true, "language": "C", "kind": "macro", "signature": "(json,key,value)"}, {"_type": "tag", "name": "validate_passpoint", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/utils/wifi_validator.c", "pattern": "/^int validate_passpoint(const cJSON *passpoint, wifi_interworking_t *vap_info, pErr execRetVal) $/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(const cJSON * passpoint,wifi_interworking_t * vap_info,pErr execRetVal)"}, {"_type": "tag", "name": "validate_personal_security", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/utils/wifi_validator.c", "pattern": "/^int validate_personal_security(const cJSON *security, wifi_vap_info_t *vap_info, pErr execRetVal/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(const cJSON * security,wifi_vap_info_t * vap_info,pErr execRetVal)"}, {"_type": "tag", "name": "validate_private_vap", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/utils/wifi_validator.c", "pattern": "/^int validate_private_vap(const cJSON *vap, wifi_vap_info_t *vap_info, pErr execRetVal)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(const cJSON * vap,wifi_vap_info_t * vap_info,pErr execRetVal)"}, {"_type": "tag", "name": "validate_radio_vap", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/utils/wifi_validator.c", "pattern": "/^int validate_radio_vap(const cJSON *wifi, wifi_radio_operationParam_t *wifi_radio_info, wifi_vap/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(const cJSON * wifi,wifi_radio_operationParam_t * wifi_radio_info,wifi_vap_info_map_t * vap_map,wifi_radio_feature_param_t * wifi_radio_feat_info,pErr execRetVal)"}, {"_type": "tag", "name": "validate_radius_settings", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/utils/wifi_validator.c", "pattern": "/^int validate_radius_settings(const cJSON *radius, wifi_vap_info_t *vap_info, pErr execRetVal)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(const cJSON * radius,wifi_vap_info_t * vap_info,pErr execRetVal)"}, {"_type": "tag", "name": "validate_ssid_name", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/utils/wifi_validator.c", "pattern": "/^int validate_ssid_name(char *ssid_name, pErr execRetVal) $/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(char * ssid_name,pErr execRetVal)"}, {"_type": "tag", "name": "validate_vap", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/utils/wifi_validator.c", "pattern": "/^int validate_vap(const cJSON *vap, wifi_vap_info_t *vap_info, wifi_platform_property_t *wifi_pro/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(const cJSON * vap,wifi_vap_info_t * vap_info,wifi_platform_property_t * wifi_prop,pErr execRetVal)"}, {"_type": "tag", "name": "validate_wifi_channel", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/utils/wifi_validator.c", "pattern": "/^int validate_wifi_channel(wifi_freq_bands_t wifi_band, UINT *wifi_radio_channel, UINT wifi_chann/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(wifi_freq_bands_t wifi_band,UINT * wifi_radio_channel,UINT wifi_channel)"}, {"_type": "tag", "name": "validate_wifi_config", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/utils/wifi_validator.c", "pattern": "/^int validate_wifi_config(const cJSON *wifi, wifi_global_config_t *wifi_info, pErr execRetVal)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(const cJSON * wifi,wifi_global_config_t * wifi_info,pErr execRetVal)"}, {"_type": "tag", "name": "validate_wifi_global_config", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/utils/wifi_validator.c", "pattern": "/^int validate_wifi_global_config(const cJSON *global_cfg, wifi_global_param_t *global_info, pErr /", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(const cJSON * global_cfg,wifi_global_param_t * global_info,pErr execRetVal)"}, {"_type": "tag", "name": "validate_xfinity_open_vap", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/utils/wifi_validator.c", "pattern": "/^int validate_xfinity_open_vap(const cJSON *vap, wifi_vap_info_t *vap_info, pErr execRetVal)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(const cJSON * vap,wifi_vap_info_t * vap_info,pErr execRetVal)"}, {"_type": "tag", "name": "validate_xfinity_secure_vap", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/utils/wifi_validator.c", "pattern": "/^int validate_xfinity_secure_vap(const cJSON *vap, wifi_vap_info_t *vap_info, pErr execRetVal)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(const cJSON * vap,wifi_vap_info_t * vap_info,pErr execRetVal)"}, {"_type": "tag", "name": "validate_xhome_vap", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/utils/wifi_validator.c", "pattern": "/^int validate_xhome_vap(const cJSON *vap, wifi_vap_info_t *vap_info, pErr execRetVal)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(const cJSON * vap,wifi_vap_info_t * vap_info,pErr execRetVal)"}, {"_type": "tag", "name": "validation_error_msg", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/utils/wifi_validator.c", "pattern": "/^static void validation_error_msg(const uint8_t group, const uint8_t type, pErr execRetVal)$/", "file": true, "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(const uint8_t group,const uint8_t type,pErr execRetVal)"}, {"_type": "tag", "name": "wifi_validate_config", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/utils/wifi_validator.c", "pattern": "/^int wifi_validate_config(const cJSON *root_json, wifi_global_config_t *wifi_config, wifi_vap_inf/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(const cJSON * root_json,wifi_global_config_t * wifi_config,wifi_vap_info_map_t * vap_map,wifi_radio_operationParam_t * radio_vap_map,wifi_radio_feature_param_t * radio_feat_map,char * num_of_radio,wifi_platform_property_t * wifi_prop,pErr execRetVal)"}], "hash": "73883cbaa3b3110c391e4524794216f9", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "rdkb/components/opensource/ccsp/OneWifi/source/utils/wifi_validator.c", "fields": [{"name": "bool g_interworking_RFC", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "bool g_passpoint_RFC", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"19053": ""}]}