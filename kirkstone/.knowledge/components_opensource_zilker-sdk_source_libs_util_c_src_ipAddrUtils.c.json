{"is_source_file": true, "format": "C", "description": "This source file provides utility functions for IP address handling, including retrieving IPv4 addresses for network interfaces, resolving hostnames to IP addresses, checking hostname resolvability, and validating IP address strings. It is part of a larger IP Address utilities module within a network-related codebase.", "external_files": ["<stdio.h>", "<stdlib.h>", "<string.h>", "<netdb.h>", "<errno.h>", "<arpa/inet.h>", "<sys/types.h>", "<ifaddrs.h>", "icUtil/ipAddrUtils.h"], "external_methods": ["getifaddrs", "freeifaddrs", "getnameinfo", "getaddrinfo", "freeaddrinfo", "getnameinfo", "inet_pton", "inet_ntop", "strdup", "strlen", "strcmp"], "published": ["getInterfaceIpAddressV4", "isHostnameResolvable", "resolveHostname", "isValidIpAddress"], "classes": [], "methods": [{"name": "char * getInterfaceIpAddressV4(const char * ifname)", "description": "Retrieves the IPv4 address of a specified network interface (e.g., eth0, wifi0). The caller must free the returned string.", "scope": "", "scopeKind": ""}, {"name": "bool isHostnameResolvable(const char * hostname)", "description": "Checks if the provided hostname can be resolved to an IP address.", "scope": "", "scopeKind": ""}, {"name": "char * resolveHostname(const char * hostname)", "description": "Resolves a hostname to its IP address string. The caller must free the returned string.", "scope": "", "scopeKind": ""}, {"name": "bool isValidIpAddress(const char * ipAddr)", "description": "Validates whether a string is a correctly formatted IPv4 or IPv6 address.", "scope": "", "scopeKind": ""}], "calls": ["getifaddrs", "freeifaddrs", "getnameinfo", "getaddrinfo", "freeaddrinfo", "inet_pton", "inet_ntop", "strcmp"], "search-terms": ["ipAddrUtils", "getInterfaceIpAddressV4", "resolveHostname", "isHostnameResolvable", "isValidIpAddress", "network interfaces", "IP address validation"], "state": 2, "file_id": 705, "knowledge_revision": 13867, "git_revision": "", "ctags": [{"_type": "tag", "name": "getInterfaceIpAddressV4", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/util/c/src/ipAddrUtils.c", "pattern": "/^char *getInterfaceIpAddressV4(const char *ifname)$/", "language": "C", "typeref": "typename:char *", "kind": "function", "signature": "(const char * ifname)"}, {"_type": "tag", "name": "isHostnameResolvable", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/util/c/src/ipAddrUtils.c", "pattern": "/^bool isHostnameResolvable(const char *hostname)$/", "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(const char * hostname)"}, {"_type": "tag", "name": "isValidIpAddress", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/util/c/src/ipAddrUtils.c", "pattern": "/^bool isValidIpAddress(const char *ipAddr)$/", "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(const char * ipAddr)"}, {"_type": "tag", "name": "resolveHostname", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/util/c/src/ipAddrUtils.c", "pattern": "/^char *resolveHostname(const char *hostname)$/", "language": "C", "typeref": "typename:char *", "kind": "function", "signature": "(const char * hostname)"}], "hash": "08dd01c640fbca7da609d840dec754b0", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "components/opensource/zilker-sdk/source/libs/util/c/src/ipAddrUtils.c", "revision_history": [{"13867": ""}]}