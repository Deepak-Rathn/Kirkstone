{"is_source_file": true, "format": "shell script", "description": "This file contains a shell script for managing Dynamic DNS updates on a router. It includes functions for starting, stopping, retrying, and checking the status of DDNS updates, as well as configuring and executing the update process based on WAN IP changes and other conditions.", "external_files": ["/etc/utopia/service.d/date_functions.sh", "/etc/utopia/service.d/ulog_functions.sh", "/etc/utopia/service.d/event_handler_functions.sh", "/lib/rdk/utils.sh"], "external_methods": ["sysevent get", "sysevent set", "syscfg get", "syscfg set", "syscfg commit", "sysevent get current_wan_ipaddr", "sysevent get ddns_return_status", "sysevent set ddns_return_status", "sysevent set ddns_failure_time", "sysevent set ddns_updated_time", "sysevent set ddns_check_maxretries", "sysevent set ddns_host_status_1", "sysevent set ddns_client_Status", "sysevent set ddns_return_status\"${DnsIdx}\"", "sysevent set ddns_failure_time\"`date \"+%s\"`\"", "sysevent set ddns_updated_time\"`date \"+%s\"`\"", "sysevent set ddns_check_maxretries", "sysevent get wan-status", "sysevent get current_wan_ipaddr", "sysevent get ddns_return_status\"${DnsIdx}\"", "sysevent set ddns_return_status", "sysevent set ddns_failure_time", "sysevent set ddns_updated_time", "sysevent set ddns_check_maxretries", "sysevent get ddns_failure_time", "sysevent get ddns_check_maxretries", "sysevent set ddns_return_status\"${DnsIdx}\" success"], "published": ["service_dynamic_dns.sh"], "classes": [], "methods": [{"name": "update_ddns_server", "description": "Function to configure and invoke the DDNS update process based on the current WAN IP address and configuration settings."}, {"name": "do_start", "description": "Initializes the update process if WAN IP has changed or if a startup update is needed."}, {"name": "update_ddns_if_needed", "description": "Checks whether an update is necessary and triggers the update process if so."}, {"name": "service_check_interval", "description": "Periodically checks if the update interval has elapsed to trigger an update."}, {"name": "service_retry", "description": "Implements logic to retry DDNS update after failures based on configured intervals and retry limits."}, {"name": "service_init", "description": "Initializes the service, e.g., retrieves WAN last IP address."}, {"name": "service_start", "description": "Starts the DDNS service, performs initial update if needed."}, {"name": "service_stop", "description": "Stops the DDNS service (although in this script it only logs status)."}], "calls": ["sysevent get current_wan_ipaddr", "sysevent get ddns_return_status", "sysevent set ddns_return_status", "syscfg get arddnsclient_${DnsIdx}::Username", "syscfg get arddnsclient_${DnsIdx}::Password", "syscfg get ddns_host_name_${DnsIdx}", "syscfg get ddns_host_enable_${DnsIdx}", "syscfg get arddnsclient_${DnsIdx}::enable", "syscfg get ddns_server_servicename_${DnsIdx}", "syscfg get ddns_server_enable_${DnsIdx}", "sysevent get wan-status", "sysevent get ddns_failure_time", "sysevent get ddns_check_maxretries", "sysevent get ddns_updated_time", "sysevent set ddns_return_status", "sysevent set ddns_failure_time", "sysevent set ddns_updated_time", "sysevent set ddns_check_maxretries", "sysevent get ddns_host_status_1", "sysevent get ddns_client_Status", "sysevent set ddns_host_status_1", "sysevent set ddns_client_Status"], "search-terms": ["DynamicDNS", "ddns", "update_server", "wan_ip_change", "service_start", "service_stop", "retry_logic", "ddns_config", "router_ddns", "dns_update_script"], "state": 2, "file_id": 7635, "knowledge_revision": 20720, "git_revision": "", "hash": "c567d73b8b003a0d15f9e2dbaa15715b", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "rdkb/components/opensource/ccsp/Utopia/source/scripts/init/service.d/service_dynamic_dns.sh", "revision_history": [{"20720": ""}]}