{"is_source_file": true, "format": "Python", "description": "Test script for checking the presence of significant error log messages in device logs, involving reboot and log analysis.", "external_files": ["tdklib"], "external_methods": ["tdklib.TDKScriptingLibrary", "tdklib.TDKScriptingLibrary.configureTestCase", "tdklib.TDKScriptingLibrary.getLoadModuleResult", "tdklib.TDKScriptingLibrary.setLoadModuleStatus", "tdklib.TDKScriptingLibrary.initiateReboot", "tdklib.TDKScriptingLibrary.createTestStep", "tdklib.TDKScriptingLibrary.executeTestCase", "tdklib.TDKScriptingLibrary.getResult", "tdklib.TDKScriptingLibrary.getResultDetails", "tdklib.TDKScriptingLibrary.unloadModule"], "published": ["TS_SANITY_CheckForSignificantErrorLogMsg"], "classes": [{"name": "tdklib.TDKScriptingLibrary", "description": "Wrapper library for TDK test scripts to interact with test environment"}], "methods": [{"name": "configureTestCase", "description": "Sets up the test case with IP, port, and test name."}, {"name": "getLoadModuleResult", "description": "Checks if the required module loads successfully."}, {"name": "setLoadModuleStatus", "description": "Sets the status of module loading to SUCCESS or FAILURE."}, {"name": "initiateReboot", "description": "Triggers device reboot as part of the test process."}, {"name": "createTestStep", "description": "Creates a test step object for executing commands."}, {"name": "executeTestCase", "description": "Executes the test command and stores the result."}, {"name": "getResult", "description": "Retrieves the result (SUCCESS/FAILURE) of the executed test command."}, {"name": "getResultDetails", "description": "Gets detailed output of the executed command."}, {"name": "unloadModule", "description": "Unloads the tested module from the environment."}], "calls": ["grep -rin \"%s\" \"%s\""], "search-terms": ["TS_SANITY_CheckForSignificantErrorLogMsg", "sysutil", "log analysis", "error logs", "reboot device", "log search"], "state": 2, "file_id": 4899, "knowledge_revision": 18021, "git_revision": "", "ctags": [{"_type": "tag", "name": "actualresult", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/testscripts/RDKB/component/sysutil/TS_SANITY_CheckForSignificantErrorLogMsg.py", "pattern": "/^        actualresult = tdkTestObj.getResult();$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "details", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/testscripts/RDKB/component/sysutil/TS_SANITY_CheckForSignificantErrorLogMsg.py", "pattern": "/^        details = tdkTestObj.getResultDetails().strip().replace(\"\\\\\\\\n\",\"\");$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "expectedresult", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/testscripts/RDKB/component/sysutil/TS_SANITY_CheckForSignificantErrorLogMsg.py", "pattern": "/^        expectedresult=\"SUCCESS\";$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "ip", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/testscripts/RDKB/component/sysutil/TS_SANITY_CheckForSignificantErrorLogMsg.py", "pattern": "/^ip = <ipaddress>$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "loadmodulestatus", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/testscripts/RDKB/component/sysutil/TS_SANITY_CheckForSignificantErrorLogMsg.py", "pattern": "/^loadmodulestatus=obj.getLoadModuleResult();$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "logFile", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/testscripts/RDKB/component/sysutil/TS_SANITY_CheckForSignificantErrorLogMsg.py", "pattern": "/^    logFile = \"\\/rdklogs\\/logs\\/\";$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "logMsg", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/testscripts/RDKB/component/sysutil/TS_SANITY_CheckForSignificantErrorLogMsg.py", "pattern": "/^    logMsg = [\"command not found\" ,\"No such file or directory\",\"syscfg_get failed\" ,\"404 Not Fou/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "markerfound", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/testscripts/RDKB/component/sysutil/TS_SANITY_CheckForSignificantErrorLogMsg.py", "pattern": "/^            markerfound =1;$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "markerfound", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/testscripts/RDKB/component/sysutil/TS_SANITY_CheckForSignificantErrorLogMsg.py", "pattern": "/^    markerfound =0;$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "obj", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/testscripts/RDKB/component/sysutil/TS_SANITY_CheckForSignificantErrorLogMsg.py", "pattern": "/^obj = tdklib.TDKScriptingLibrary(\"sysutil\",\"1\");$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "port", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/testscripts/RDKB/component/sysutil/TS_SANITY_CheckForSignificantErrorLogMsg.py", "pattern": "/^port = <port>$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "query", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/testscripts/RDKB/component/sysutil/TS_SANITY_CheckForSignificantErrorLogMsg.py", "pattern": "/^        query=\"grep -rin \\\\\"%s\\\\\" \\\\\"%s\\\\\"\" %(item,logFile);$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "result", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/testscripts/RDKB/component/sysutil/TS_SANITY_CheckForSignificantErrorLogMsg.py", "pattern": "/^    result = [];$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "tdkTestObj", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/testscripts/RDKB/component/sysutil/TS_SANITY_CheckForSignificantErrorLogMsg.py", "pattern": "/^        tdkTestObj = obj.createTestStep('ExecuteCmd');$/", "language": "Python", "kind": "variable"}], "hash": "ec494c49f46e49dd55455d068b7fdc7d", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "rdkb/tools/tdkb/testscripts/RDKB/component/sysutil/TS_SANITY_CheckForSignificantErrorLogMsg.py", "fields": [{"name": "actualresult = tdkTestObj.getResult();", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "details = tdkTestObj.getResultDetails().strip().replace(\"\\\\\\\\n\",\"\");", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "expectedresult=\"SUCCESS\";", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "ip = <ipaddress>", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "loadmodulestatus=obj.getLoadModuleResult();", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "logFile = \"\\/rdklogs\\/logs\\/\";", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "logMsg = [\"command not found\" ,\"No such file or directory\",\"syscfg_get failed\" ,\"404 Not Fou/", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "markerfound =1;", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "markerfound =0;", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "obj = tdklib.TDKScriptingLibrary(\"sysutil\",\"1\");", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "port = <port>", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "query=\"grep -rin \\\\\"%s\\\\\" \\\\\"%s\\\\\"\" %(item,logFile);", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "result = [];", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "tdkTestObj = obj.createTestStep('ExecuteCmd');", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"18021": ""}]}