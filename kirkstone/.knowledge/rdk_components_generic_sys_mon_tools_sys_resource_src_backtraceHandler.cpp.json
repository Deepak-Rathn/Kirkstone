{"is_source_file": true, "format": "C++", "description": "This file implements the BacktraceHandler class, which manages backtrace logging, filename handling, and scheduling for system monitoring. It contains methods for setting filenames, scheduling backtrace log entries, collecting backtrace data, and logging backtraces to files. The code interacts with other components such as AVL trees, logger functions, and debug macros.", "external_files": ["procInfo.h", "backtraceHandler.h", "dbgMLT.h", "debugRecord.h"], "external_methods": ["SysResLogger::SetFilename", "fileExists", "Log", "basename"], "published": [], "classes": [{"name": "BacktraceHandler", "description": "A class responsible for managing backtrace logging, including setting filenames, scheduling logs, collecting backtrace data, and performing the actual logging."}], "methods": [{"name": "void setFilename(const char * postfix,const char * ext)", "description": "Sets the filename for backtrace logs using a given postfix and extension.", "scope": "BacktraceHandler", "scopeKind": "class"}, {"name": "void schedule_log(unsigned int caller,unsigned int cpart)", "description": "Schedules a backtrace log for a specific caller and component part, updating internal state based on whether the backtrace has been added or needs updating.", "scope": "BacktraceHandler", "scopeKind": "class"}, {"name": "void collect(unsigned int caller)", "description": "Ensures that a backtrace for a specific caller is initialized if it exists and is empty.", "scope": "BacktraceHandler", "scopeKind": "class"}, {"name": "BacktraceHandler::btStatus_t log(AVLNode<int,Backtrace> * btNode,unsigned int caller,unsigned int cpart)", "description": "Performs the actual logging of a backtrace to a file if it does not already exist, appending backtrace data and file information to logs.", "scope": "BacktraceHandler", "scopeKind": "class"}], "calls": ["SysResLogger::SetFilename", "fileExists", "Log", "basename"], "search-terms": ["BacktraceHandler", "schedule_log", "collect", "backtrace", "btNode", "bt", "logBuffer", "fileExists", "btEnable", "btCollected"], "state": 2, "file_id": 12543, "knowledge_revision": 25440, "git_revision": "", "ctags": [{"_type": "tag", "name": "BT_FILENAME_LENGTH", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/sys_mon_tools/sys_resource/src/backtraceHandler.cpp", "pattern": "/^#define\tBT_FILENAME_LENGTH\t/", "file": true, "language": "C++", "kind": "macro"}, {"_type": "tag", "name": "collect", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/sys_mon_tools/sys_resource/src/backtraceHandler.cpp", "pattern": "/^void BacktraceHandler::collect(unsigned int caller)$/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(unsigned int caller)", "scope": "BacktraceHandler", "scopeKind": "class"}, {"_type": "tag", "name": "log", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/sys_mon_tools/sys_resource/src/backtraceHandler.cpp", "pattern": "/^BacktraceHandler::btStatus_t BacktraceHandler::log(AVLNode<int, Backtrace>* btNode, unsigned int/", "language": "C++", "typeref": "typename:BacktraceHandler::btStatus_t", "kind": "function", "signature": "(AVLNode<int,Backtrace> * btNode,unsigned int caller,unsigned int cpart)", "scope": "BacktraceHandler", "scopeKind": "class"}, {"_type": "tag", "name": "schedule_log", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/sys_mon_tools/sys_resource/src/backtraceHandler.cpp", "pattern": "/^void BacktraceHandler::schedule_log(unsigned int caller, unsigned int cpart)$/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(unsigned int caller,unsigned int cpart)", "scope": "BacktraceHandler", "scopeKind": "class"}, {"_type": "tag", "name": "setFilename", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/sys_mon_tools/sys_resource/src/backtraceHandler.cpp", "pattern": "/^void BacktraceHandler::setFilename(const char *postfix, const char *ext)$/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(const char * postfix,const char * ext)", "scope": "BacktraceHandler", "scopeKind": "class"}], "hash": "b3980967a3b02e005346fe44dcf85157", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "rdk/components/generic/sys_mon_tools/sys_resource/src/backtraceHandler.cpp", "revision_history": [{"25440": ""}]}