{"is_source_file": true, "format": "C/C++ header file", "description": "This header file defines an interface for managing a JSON-based device database, including functions for initializing, cleaning up, reloading, restoring, and querying devices, endpoints, resources, and metadata. It provides mechanisms to add, remove, retrieve, and update device-related information in a structured database, supporting operations like filtering by device class, driver, profile, and URI patterns.", "external_files": ["<icTypes/icLinkedList.h>", "<device/icDevice.h>", "<device/icDeviceResource.h>", "<device/icDeviceEndpoint.h>", "<device/icDeviceMetadata.h>"], "external_methods": [], "published": ["jsonDatabaseInitialize", "jsonDatabaseCleanup", "jsonDatabaseReload", "jsonDatabaseRestore", "jsonDatabaseGetSystemProperty", "jsonDatabaseSetSystemProperty", "jsonDatabaseAddDevice", "jsonDatabaseAddEndpoint", "jsonDatabaseGetDevices", "jsonDatabaseGetDevicesByEndpointProfile", "jsonDatabaseGetDevicesByDeviceClass", "jsonDatabaseGetDevicesByDeviceDriver", "jsonDatabaseGetDeviceById", "jsonDatabaseGetDeviceByUri", "jsonDatabaseIsDeviceKnown", "jsonDatabaseRemoveDeviceById", "jsonDatabaseGetEndpointsByProfile", "jsonDatabaseGetEndpointById", "jsonDatabaseGetEndpointByUri", "jsonDatabaseSaveEndpoint", "jsonDatabaseGetResourceByUri", "jsonDatabaseSaveResource", "jsonDatabaseUpdateDateOfLastSyncMillis", "jsonDatabaseGetMetadataByUri", "jsonDatabaseSaveMetadata", "jsonDatabaseGetResourcesByUriRegex", "jsonDatabaseGetMetadataByUriRegex"], "classes": [], "methods": [{"name": "jsonDatabaseInitialize", "description": "Opens or creates the JSON device database, returning true if successful."}, {"name": "jsonDatabaseCleanup", "description": "Closes the database and releases resources; optionally persists data based on the 'persist' flag."}, {"name": "jsonDatabaseReload", "description": "Reloads the database from storage atomically, without flushing current contents."}, {"name": "jsonDatabaseRestore", "description": "Restores the database from a backup directory without flushing current contents."}, {"name": "jsonDatabaseGetSystemProperty", "description": "Retrieves a system property value by key."}, {"name": "jsonDatabaseSetSystemProperty", "description": "Sets a system property value by key."}, {"name": "jsonDatabaseAddDevice", "description": "Adds a new device to the database."}, {"name": "jsonDatabaseAddEndpoint", "description": "Adds a new endpoint to the database."}, {"name": "jsonDatabaseGetDevices", "description": "Retrieves all devices stored in the database."}, {"name": "jsonDatabaseGetDevicesByEndpointProfile", "description": "Retrieves devices with an endpoint matching the specified profile."}, {"name": "jsonDatabaseGetDevicesByDeviceClass", "description": "Retrieves devices with the specified device class."}, {"name": "jsonDatabaseGetDevicesByDeviceDriver", "description": "Retrieves devices operated by the specified driver."}, {"name": "jsonDatabaseGetDeviceById", "description": "Retrieves a device by its UUID."}, {"name": "jsonDatabaseGetDeviceByUri", "description": "Retrieves a device by its URI."}, {"name": "jsonDatabaseIsDeviceKnown", "description": "Checks whether a device UUID is known in the database."}, {"name": "jsonDatabaseRemoveDeviceById", "description": "Removes a device from the database by UUID."}, {"name": "jsonDatabaseGetEndpointsByProfile", "description": "Retrieves endpoints with the specified profile."}, {"name": "jsonDatabaseGetEndpointById", "description": "Retrieves an endpoint by device UUID and endpoint ID."}, {"name": "jsonDatabaseGetEndpointByUri", "description": "Retrieves an endpoint by its URI."}, {"name": "jsonDatabaseSaveEndpoint", "description": "Updates an endpoint's data in the database."}, {"name": "jsonDatabaseGetResourceByUri", "description": "Retrieves a resource by its URI."}, {"name": "jsonDatabaseSaveResource", "description": "Updates a resource in the database."}, {"name": "jsonDatabaseUpdateDateOfLastSyncMillis", "description": "Updates the last sync timestamp of a resource."}, {"name": "jsonDatabaseGetMetadataByUri", "description": "Retrieves metadata by URI."}, {"name": "jsonDatabaseSaveMetadata", "description": "Creates or updates metadata in the database."}, {"name": "jsonDatabaseGetResourcesByUriRegex", "description": "Retrieves resources matching a URI regex."}, {"name": "jsonDatabaseGetMetadataByUriRegex", "description": "Retrieves metadata matching a URI regex."}], "search-terms": ["jsonDatabase", "device", "endpoint", "resource", "metadata", "jsonDatabase.h", "device database", "json schema version", "device management"], "state": 2, "file_id": 972, "knowledge_revision": 14131, "git_revision": "", "ctags": [{"_type": "tag", "name": "JSON_DATABASE_CURRENT_SCHEMA_VERSION", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/device/core/src/database/jsonDatabase.h", "pattern": "/^#define JSON_DATABASE_CURRENT_SCHEMA_VERSION /", "language": "C++", "kind": "macro"}, {"_type": "tag", "name": "JSON_DATABASE_SCHEMA_VERSION_KEY", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/device/core/src/database/jsonDatabase.h", "pattern": "/^#define JSON_DATABASE_SCHEMA_VERSION_KEY /", "language": "C++", "kind": "macro"}, {"_type": "tag", "name": "ZILKER_JSONDATABASE_H", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/device/core/src/database/jsonDatabase.h", "pattern": "/^#define ZILKER_JSONDATABASE_H$/", "language": "C++", "kind": "macro"}], "hash": "9d9df3494ef26fd2566035ad0aecbecd", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "components/opensource/zilker-sdk/source/services/device/core/src/database/jsonDatabase.h", "revision_history": [{"14131": ""}]}