{"is_source_file": true, "format": "C", "description": "This file contains implementation of the UPnP (Universal Plug and Play) protocol stack interface functions for device registration, control, and event notifications. It includes initialization, device registration/unregistration, sending advertisements, handling actions, subscriptions, notifications, and error handling.", "external_files": ["upnp/upnp.h", "upnp/upnptools.h", "pal_upnp.h"], "external_methods": ["UpnpInit2", "UpnpGetServerIpAddress", "UpnpGetServerIp6Address", "UpnpGetServerPort", "UpnpSetWebServerRootDir", "UpnpRegisterRootDevice", "UpnpUnRegisterRootDevice", "UpnpSendAdvertisement", "UpnpRegisterClient", "UpnpUnRegisterClient", "UpnpSearchAsync", "UpnpMakeAction", "UpnpMakeActionResponse", "UpnpAddToAction", "UpnpResolveURL", "UpnpDownloadXmlDoc", "UpnpFinish", "UpnpSubscribe", "UpnpAcceptSubscription", "UpnpNotify", "UpnpGetServerIpAddress", "UpnpGetServerIp6Address", "UpnpGetServerPort", "UpnpUnRegisterRootDevice", "UpnpSendAction"], "published": ["PAL_upnp_init", "PAL_upnp_get_ipaddress", "PAL_upnp_get_ip6address", "PAL_upnp_get_port", "PAL_upnp_register_root_device", "PAL_upnp_unregister_root_device", "PAL_upnp_send_advertisement", "PAL_upnp_register_cp", "PAL_upnp_unregister_cp", "PAL_upnp_search_async", "PAL_upnp_make_action", "PAL_upnp_send_action", "PAL_upnp_download_xmldoc", "PAL_upnp_resolve_url", "PAL_upnp_finish", "PAL_upnp_subscribe", "PAL_upnp_accept_subscription", "PAL_upnp_notify", "PAL_upnp_get_error_message"], "classes": [], "methods": [{"name": "INT32 PAL_upnp_accept_subscription(IN pal_upnp_device_handle handle,IN const CHAR * device_id,IN const CHAR * service_id,IN const CHAR ** var_names,IN const CHAR ** var_vals,IN INT32 var_nb,IN pal_upnp_sid sub_id)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "INT32 PAL_upnp_download_xmldoc(IN const CHAR * url,OUT pal_xml_top ** xml_top)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "INT32 PAL_upnp_finish()", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "const CHAR * PAL_upnp_get_error_message(IN INT32 errno)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "CHAR * PAL_upnp_get_ip6address()", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "CHAR * PAL_upnp_get_ipaddress()", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "UINT16 PAL_upnp_get_port()", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "INT32 PAL_upnp_init(IN const CHAR * if_name,IN UINT16 lo_port)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "INT32 PAL_upnp_make_action(INOUT pal_xml_top ** action,IN const CHAR * action_name,IN const CHAR * service_type,IN INT32 nb_params,IN const pal_string_pair * params,IN pal_upnp_action_type action_type)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "INT32 PAL_upnp_notify(IN pal_upnp_device_handle handle,IN const CHAR * device_id,IN const CHAR * service_name,IN const CHAR ** var_name,IN const CHAR ** new_value,IN INT32 var_number)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "INT32 PAL_upnp_register_cp(IN pal_upnp_func func,IN const VOID * cookie,OUT pal_upnp_cp_handle * handle)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "INT32 PAL_upnp_register_root_device(IN const CHAR * lo_path,IN const CHAR * file_name,IN pal_upnp_func callback_func,IN const VOID * cookie,OUT pal_upnp_device_handle * handle)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "INT32 PAL_upnp_resolve_url(IN const CHAR * base_url,IN const CHAR * rel_url,OUT CHAR ** abs_url)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "INT32 PAL_upnp_search_async(IN pal_upnp_cp_handle handle,IN INT32 max_timeout,IN const CHAR * target,IN const VOID * cookie)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "INT32 PAL_upnp_send_action(IN pal_upnp_cp_handle handle,IN const CHAR * action_url,IN const CHAR * service_type,IN pal_xml_top * action,OUT pal_xml_top ** response)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "INT32 PAL_upnp_send_advertisement(IN pal_upnp_device_handle handle,IN INT32 expire)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "INT32 PAL_upnp_subscribe(IN pal_upnp_cp_handle handle,IN const CHAR * event_url,INOUT INT32 * timeout,OUT pal_upnp_sid sid)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "INT32 PAL_upnp_unregister_cp(IN pal_upnp_cp_handle handle)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "INT32 PAL_upnp_unregister_root_device(IN pal_upnp_device_handle handle)", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["UpnpInit2", "UpnpGetServerIpAddress", "UpnpGetServerIp6Address", "UpnpGetServerPort", "UpnpSetWebServerRootDir", "UpnpRegisterRootDevice", "UpnpUnRegisterRootDevice", "UpnpSendAdvertisement", "UpnpRegisterClient", "UpnpUnRegisterClient", "UpnpSearchAsync", "UpnpMakeAction", "UpnpAddToAction", "UpnpResolveURL", "UpnpDownloadXmlDoc", "UpnpFinish", "UpnpSubscribe", "UpnpAcceptSubscription", "UpnpNotify", "UpnpUnRegisterRootDevice", "UpnpSendAction"], "search-terms": ["upnp", "register_root_device", "send_advertisement", "control_point", "subscribe", "notification", "xml_document", "resolve_url", "error_message"], "state": 2, "file_id": 7763, "knowledge_revision": 20834, "git_revision": "", "ctags": [{"_type": "tag", "name": "PAL_upnp_accept_subscription", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/pal/upnp/src/pal_upnp.c", "pattern": "/^INT32 PAL_upnp_accept_subscription(IN pal_upnp_device_handle handle,$/", "language": "C", "typeref": "typename:INT32", "kind": "function", "signature": "(IN pal_upnp_device_handle handle,IN const CHAR * device_id,IN const CHAR * service_id,IN const CHAR ** var_names,IN const CHAR ** var_vals,IN INT32 var_nb,IN pal_upnp_sid sub_id)"}, {"_type": "tag", "name": "PAL_upnp_download_xmldoc", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/pal/upnp/src/pal_upnp.c", "pattern": "/^INT32 PAL_upnp_download_xmldoc(IN const CHAR *url, OUT pal_xml_top **xml_top)$/", "language": "C", "typeref": "typename:INT32", "kind": "function", "signature": "(IN const CHAR * url,OUT pal_xml_top ** xml_top)"}, {"_type": "tag", "name": "PAL_upnp_finish", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/pal/upnp/src/pal_upnp.c", "pattern": "/^INT32 PAL_upnp_finish()$/", "language": "C", "typeref": "typename:INT32", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "PAL_upnp_get_error_message", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/pal/upnp/src/pal_upnp.c", "pattern": "/^ const CHAR *PAL_upnp_get_error_message(IN INT32 errno)$/", "language": "C", "typeref": "typename:const CHAR *", "kind": "function", "signature": "(IN INT32 errno)"}, {"_type": "tag", "name": "PAL_upnp_get_ip6address", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/pal/upnp/src/pal_upnp.c", "pattern": "/^CHAR *PAL_upnp_get_ip6address()$/", "language": "C", "typeref": "typename:CHAR *", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "PAL_upnp_get_ipaddress", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/pal/upnp/src/pal_upnp.c", "pattern": "/^CHAR *PAL_upnp_get_ipaddress()$/", "language": "C", "typeref": "typename:CHAR *", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "PAL_upnp_get_port", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/pal/upnp/src/pal_upnp.c", "pattern": "/^UINT16 PAL_upnp_get_port()$/", "language": "C", "typeref": "typename:UINT16", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "PAL_upnp_init", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/pal/upnp/src/pal_upnp.c", "pattern": "/^INT32 PAL_upnp_init(IN const CHAR *if_name, IN UINT16 lo_port)$/", "language": "C", "typeref": "typename:INT32", "kind": "function", "signature": "(IN const CHAR * if_name,IN UINT16 lo_port)"}, {"_type": "tag", "name": "PAL_upnp_make_action", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/pal/upnp/src/pal_upnp.c", "pattern": "/^INT32 PAL_upnp_make_action( INOUT pal_xml_top** action,$/", "language": "C", "typeref": "typename:INT32", "kind": "function", "signature": "(INOUT pal_xml_top ** action,IN const CHAR * action_name,IN const CHAR * service_type,IN INT32 nb_params,IN const pal_string_pair * params,IN pal_upnp_action_type action_type)"}, {"_type": "tag", "name": "PAL_upnp_notify", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/pal/upnp/src/pal_upnp.c", "pattern": "/^ INT32 PAL_upnp_notify (IN pal_upnp_device_handle handle,$/", "language": "C", "typeref": "typename:INT32", "kind": "function", "signature": "(IN pal_upnp_device_handle handle,IN const CHAR * device_id,IN const CHAR * service_name,IN const CHAR ** var_name,IN const CHAR ** new_value,IN INT32 var_number)"}, {"_type": "tag", "name": "PAL_upnp_register_cp", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/pal/upnp/src/pal_upnp.c", "pattern": "/^INT32 PAL_upnp_register_cp (IN pal_upnp_func func,$/", "language": "C", "typeref": "typename:INT32", "kind": "function", "signature": "(IN pal_upnp_func func,IN const VOID * cookie,OUT pal_upnp_cp_handle * handle)"}, {"_type": "tag", "name": "PAL_upnp_register_root_device", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/pal/upnp/src/pal_upnp.c", "pattern": "/^INT32 PAL_upnp_register_root_device(IN const CHAR *lo_path,$/", "language": "C", "typeref": "typename:INT32", "kind": "function", "signature": "(IN const CHAR * lo_path,IN const CHAR * file_name,IN pal_upnp_func callback_func,IN const VOID * cookie,OUT pal_upnp_device_handle * handle)"}, {"_type": "tag", "name": "PAL_upnp_resolve_url", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/pal/upnp/src/pal_upnp.c", "pattern": "/^INT32 PAL_upnp_resolve_url(IN const CHAR *base_url,$/", "language": "C", "typeref": "typename:INT32", "kind": "function", "signature": "(IN const CHAR * base_url,IN const CHAR * rel_url,OUT CHAR ** abs_url)"}, {"_type": "tag", "name": "PAL_upnp_search_async", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/pal/upnp/src/pal_upnp.c", "pattern": "/^INT32 PAL_upnp_search_async(IN pal_upnp_cp_handle handle,$/", "language": "C", "typeref": "typename:INT32", "kind": "function", "signature": "(IN pal_upnp_cp_handle handle,IN INT32 max_timeout,IN const CHAR * target,IN const VOID * cookie)"}, {"_type": "tag", "name": "PAL_upnp_send_action", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/pal/upnp/src/pal_upnp.c", "pattern": "/^INT32 PAL_upnp_send_action( IN pal_upnp_cp_handle handle,$/", "language": "C", "typeref": "typename:INT32", "kind": "function", "signature": "(IN pal_upnp_cp_handle handle,IN const CHAR * action_url,IN const CHAR * service_type,IN pal_xml_top * action,OUT pal_xml_top ** response)"}, {"_type": "tag", "name": "PAL_upnp_send_advertisement", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/pal/upnp/src/pal_upnp.c", "pattern": "/^INT32 PAL_upnp_send_advertisement(IN pal_upnp_device_handle handle, IN INT32 expire)$/", "language": "C", "typeref": "typename:INT32", "kind": "function", "signature": "(IN pal_upnp_device_handle handle,IN INT32 expire)"}, {"_type": "tag", "name": "PAL_upnp_subscribe", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/pal/upnp/src/pal_upnp.c", "pattern": "/^INT32 PAL_upnp_subscribe (IN pal_upnp_cp_handle handle,$/", "language": "C", "typeref": "typename:INT32", "kind": "function", "signature": "(IN pal_upnp_cp_handle handle,IN const CHAR * event_url,INOUT INT32 * timeout,OUT pal_upnp_sid sid)"}, {"_type": "tag", "name": "PAL_upnp_unregister_cp", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/pal/upnp/src/pal_upnp.c", "pattern": "/^INT32 PAL_upnp_unregister_cp(IN pal_upnp_cp_handle handle)$/", "language": "C", "typeref": "typename:INT32", "kind": "function", "signature": "(IN pal_upnp_cp_handle handle)"}, {"_type": "tag", "name": "PAL_upnp_unregister_root_device", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/pal/upnp/src/pal_upnp.c", "pattern": "/^INT32 PAL_upnp_unregister_root_device(IN pal_upnp_device_handle handle)$/", "language": "C", "typeref": "typename:INT32", "kind": "function", "signature": "(IN pal_upnp_device_handle handle)"}, {"_type": "tag", "name": "_pal_error_string", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/pal/upnp/src/pal_upnp.c", "pattern": "/^struct _pal_error_string{$/", "file": true, "language": "C", "kind": "struct"}, {"_type": "tag", "name": "g_pal_error_message", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/pal/upnp/src/pal_upnp.c", "pattern": "/^struct _pal_error_string g_pal_error_message[] = { $/", "language": "C", "typeref": "struct:_pal_error_string[]", "kind": "variable"}, {"_type": "tag", "name": "pal_debug", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/pal/upnp/src/pal_upnp.c", "pattern": "/^#define pal_debug(/", "file": true, "language": "C", "kind": "macro", "signature": "(fmt,args...)"}, {"_type": "tag", "name": "rc", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/pal/upnp/src/pal_upnp.c", "pattern": "/^    INT32 rc;                     \\/* error code *\\/$/", "file": true, "language": "C", "typeref": "typename:INT32", "kind": "member", "scope": "_pal_error_string", "scopeKind": "struct"}, {"_type": "tag", "name": "rc_str", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/pal/upnp/src/pal_upnp.c", "pattern": "/^    const CHAR *rc_str;        \\/* error description *\\/$/", "file": true, "language": "C", "typeref": "typename:const CHAR *", "kind": "member", "scope": "_pal_error_string", "scopeKind": "struct"}], "hash": "702b504dedb266b5cf8eea3182ca12e0", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "rdkb/components/opensource/ccsp/Utopia/source/pal/upnp/src/pal_upnp.c", "fields": [{"name": "struct:_pal_error_string[] g_pal_error_message", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "INT32 rc", "scope": "_pal_error_string", "scopeKind": "struct", "description": "unavailable"}, {"name": "const CHAR * rc_str", "scope": "_pal_error_string", "scopeKind": "struct", "description": "unavailable"}], "revision_history": [{"20834": ""}]}