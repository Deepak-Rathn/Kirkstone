{"is_source_file": true, "format": "C", "description": "This file is a C source code file that implements a library of APIs for sending, receiving, and parsing messages between a client and a system event daemon (sysevent). It contains functions for message handling, including preparation, transmission, reception, and debugging, as well as utilities for managing message buffers and types.", "external_files": ["libsysevent_internal.h", "secure_wrapper.h"], "external_methods": ["access", "v_secure_system"], "published": ["init_libsysevent", "SE_msg_receive", "SE_minimal_blocking_msg_receive", "SE_msg_send", "SE_string2size", "SE_msg_add_string", "SE_msg_add_data", "SE_msg_get_data", "SE_msg_get_string", "SE_print_message", "SE_print_message_hdr", "SE_msg_hdr_mbytes_fixup", "SE_msg_prepare", "SE_msg_receive"], "classes": [], "methods": [{"name": "unsigned int align(unsigned int value)", "description": "Static utility function to align an integer value to 4 bytes boundary.", "scope": "", "scopeKind": ""}, {"name": "void init_libsysevent(const char * const name)", "description": "Initializes the library by setting the user name for error messages.", "scope": "", "scopeKind": ""}, {"name": "int msg_receive_internal(int fd,char * replymsg,unsigned int * replymsg_size,token_t * who,struct timeval * wait,int * error)", "description": "Internal function responsible for receiving a message on a specified socket, handling headers, message boundaries, and buffering.", "scope": "", "scopeKind": ""}, {"name": "unsigned int SE_string2size(const char * str)", "description": "Calculates the size in bytes needed to store a string in a message buffer, including padding for alignment.", "scope": "", "scopeKind": ""}, {"name": "int SE_msg_add_string(char * msg,unsigned int size,const char * str)", "description": "Adds a string to a message buffer with proper length indication and 32-bit alignment.", "scope": "", "scopeKind": ""}, {"name": "int SE_msg_add_data(char * msg,unsigned int size,const char * data,const int data_length)", "description": "Adds raw data to a message buffer, ensuring proper size and memory zeroing.", "scope": "", "scopeKind": ""}, {"name": "char * SE_msg_get_data(char * msg,int * size)", "description": "Retrieves a data blob from a message, returning a pointer and size.", "scope": "", "scopeKind": ""}, {"name": "char * SE_msg_get_string(char * msg,int * size)", "description": "Extracts a null-terminated string from a message buffer.", "scope": "", "scopeKind": ""}, {"name": "char * mtype2str(int mtype)", "description": "Converts a message type integer into a human-readable string for debug printing.", "scope": "", "scopeKind": ""}, {"name": "int SE_print_message(char * inmsg,int type)", "description": "Prints detailed information about a message based on its type, useful for debugging.", "scope": "", "scopeKind": ""}, {"name": "int SE_print_message_hdr(char * inhdr)", "description": "Prints a message header and optionally the entire message content, primarily for debugging.", "scope": "", "scopeKind": ""}, {"name": "int SE_msg_hdr_mbytes_fixup(se_msg_hdr * hdr)", "description": "Calculates the total message size based on message type and content, updates the message header.", "scope": "", "scopeKind": ""}, {"name": "char * SE_msg_prepare(char * buf,const unsigned int bufsize,const int mtype,const token_t sender)", "description": "Creates and initializes a message header and prepares to build a message.", "scope": "", "scopeKind": ""}, {"name": "int SE_msg_receive(int fd,char * replymsg,unsigned int * replymsg_size,token_t * who)", "description": "Blocking call to receive a message, returns the message type and fills in sender info.", "scope": "", "scopeKind": ""}, {"name": "int SE_minimal_blocking_msg_receive(int fd,char * replymsg,unsigned int * replymsg_size,token_t * who)", "description": "Attempts to receive a message with a minimal timeout, returning quickly if no message is available.", "scope": "", "scopeKind": ""}, {"name": "int SE_msg_send(int fd,char * sendmsg)", "description": "Sends a prepared message buffer over a socket, with additional message footer for integrity.", "scope": "", "scopeKind": ""}, {"name": "int SE_msg_send_data(int fd,char * sendmsg,int msgsize)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int SE_msg_send_receive(int fd,char * sendmsg,char * replymsg,unsigned int * replymsg_size)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int SE_msg_send_receive_data(int fd,char * sendmsg,int sendmsg_size,char * replymsg,unsigned int * replymsg_size)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "char * SE_print_mtype(int mtype)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "char * SE_strerror(int error)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int connect_to_local_sysevent_daemon(char * target,int * sockfd)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int connect_to_sysevent_daemon(char * ip,unsigned short port,int * sockfd)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int sysevent_close(int fd,token_t token)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int sysevent_debug(char * ip,unsigned short port,int level)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int sysevent_del_unique(const int fd,const token_t token,const char * name,unsigned int * iterator)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int sysevent_get(const int fd,const token_t token,const char * inbuf,char * outbuf,int outbytes)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "unsigned int sysevent_get_binmsg_maxsize()", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int sysevent_get_data(const int fd,const token_t token,const char * inbuf,char * outbuf,int outbytes,int * bufsizecopied)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int sysevent_get_next_iterator(const int fd,const token_t token,const char * name,unsigned int * iterator)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int sysevent_get_unique(const int fd,const token_t token,const char * inbuf,unsigned int * iterator,char * subjectbuf,int subjectbytes,char * valuebuf,int valuebytes)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int sysevent_getnotification(const int fd,const token_t token,char * namebuf,int * namebytes,char * valbuf,int * valbytes,async_id_t * async_id)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int sysevent_getnotification_data(const int fd,const token_t token,char * namebuf,int * namebytes,char * valbuf,int * valbytes,async_id_t * async_id)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int sysevent_local_open(char * target,int version,char * id,token_t * token)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int sysevent_local_open_data(char * target,int version,char * id,token_t * token)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int sysevent_open(char * ip,unsigned short port,int version,char * id,token_t * token)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int sysevent_open_data(char * ip,unsigned short port,int version,char * id,token_t * token)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int sysevent_ping(int fd,token_t token)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int sysevent_ping_test(int fd,token_t token,struct timeval * tv)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int sysevent_rmcallback(const int fd,const token_t token,async_id_t async_id)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int sysevent_rmnotification(const int fd,const token_t token,async_id_t async_id)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int sysevent_set(const int fd,const token_t token,const char * name,const char * value,int conf_req)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int sysevent_set_data(const int fd,const token_t token,const char * name,const char * value,int value_length)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int sysevent_set_data_private(const int fd,const token_t token,const char * name,const char * value,const int value_length,const int source,const int tid)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int sysevent_set_options(const int fd,const token_t token,const char * name,const unsigned int flags)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int sysevent_set_private(const int fd,const token_t token,const char * name,const char * value,const int source,const int tid)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int sysevent_set_unique(const int fd,const token_t token,const char * name,const char * value,char * outbuf,int outbytes)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int sysevent_set_with_tid(const int fd,const token_t token,const char * name,const char * value,const int source,const int tid)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int sysevent_setcallback(const int fd,const token_t token,action_flag_t flags,char * subject,char * function,int numparams,char ** params,async_id_t * async_id)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int sysevent_setnotification(const int fd,const token_t token,char * subject,async_id_t * async_id)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int sysevent_show(const int fd,const token_t token,const char * file)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int sysevent_unset(const int fd,const token_t token,const char * name)", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["select", "read", "nanosleep", "snprintf", "strncpy", "memcpy", "access", "fopen", "fclose"], "search-terms": ["sysevent", "libsysevent", "message protocol", "socket communication", "Linux IPC", "message serialization", "message buffer handling"], "state": 2, "file_id": 7738, "knowledge_revision": 20819, "git_revision": "", "ctags": [{"_type": "tag", "name": "NUM_CONNECT_ATTEMPTS", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/sysevent/lib/libsysevent.c", "pattern": "/^#define NUM_CONNECT_ATTEMPTS /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "SE_minimal_blocking_msg_receive", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/sysevent/lib/libsysevent.c", "pattern": "/^int SE_minimal_blocking_msg_receive (int fd, char *replymsg, unsigned int *replymsg_size, token_/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(int fd,char * replymsg,unsigned int * replymsg_size,token_t * who)"}, {"_type": "tag", "name": "SE_msg_add_data", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/sysevent/lib/libsysevent.c", "pattern": "/^int SE_msg_add_data(char *msg, unsigned int size, const char *data, const int data_length)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(char * msg,unsigned int size,const char * data,const int data_length)"}, {"_type": "tag", "name": "SE_msg_add_string", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/sysevent/lib/libsysevent.c", "pattern": "/^int SE_msg_add_string(char *msg, unsigned int size, const char *str) $/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(char * msg,unsigned int size,const char * str)"}, {"_type": "tag", "name": "SE_msg_get_data", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/sysevent/lib/libsysevent.c", "pattern": "/^char *SE_msg_get_data(char *msg, int *size)$/", "language": "C", "typeref": "typename:char *", "kind": "function", "signature": "(char * msg,int * size)"}, {"_type": "tag", "name": "SE_msg_get_string", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/sysevent/lib/libsysevent.c", "pattern": "/^char *SE_msg_get_string(char *msg, int *size)$/", "language": "C", "typeref": "typename:char *", "kind": "function", "signature": "(char * msg,int * size)"}, {"_type": "tag", "name": "SE_msg_hdr_mbytes_fixup", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/sysevent/lib/libsysevent.c", "pattern": "/^int  SE_msg_hdr_mbytes_fixup (se_msg_hdr *hdr)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(se_msg_hdr * hdr)"}, {"_type": "tag", "name": "SE_msg_prepare", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/sysevent/lib/libsysevent.c", "pattern": "/^char *SE_msg_prepare (char *buf, const unsigned int bufsize, const int mtype, const token_t send/", "language": "C", "typeref": "typename:char *", "kind": "function", "signature": "(char * buf,const unsigned int bufsize,const int mtype,const token_t sender)"}, {"_type": "tag", "name": "SE_msg_receive", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/sysevent/lib/libsysevent.c", "pattern": "/^int SE_msg_receive (int fd, char *replymsg, unsigned int *replymsg_size, token_t *who)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(int fd,char * replymsg,unsigned int * replymsg_size,token_t * who)"}, {"_type": "tag", "name": "SE_msg_send", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/sysevent/lib/libsysevent.c", "pattern": "/^int SE_msg_send (int fd, char *sendmsg)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(int fd,char * sendmsg)"}, {"_type": "tag", "name": "SE_msg_send_data", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/sysevent/lib/libsysevent.c", "pattern": "/^int SE_msg_send_data (int fd, char *sendmsg,int msgsize)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(int fd,char * sendmsg,int msgsize)"}, {"_type": "tag", "name": "SE_msg_send_receive", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/sysevent/lib/libsysevent.c", "pattern": "/^int SE_msg_send_receive (int fd, char *sendmsg, char *replymsg, unsigned int *replymsg_size)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(int fd,char * sendmsg,char * replymsg,unsigned int * replymsg_size)"}, {"_type": "tag", "name": "SE_msg_send_receive_data", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/sysevent/lib/libsysevent.c", "pattern": "/^int SE_msg_send_receive_data (int fd, char *sendmsg, int sendmsg_size, char *replymsg, unsigned /", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(int fd,char * sendmsg,int sendmsg_size,char * replymsg,unsigned int * replymsg_size)"}, {"_type": "tag", "name": "SE_print_message", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/sysevent/lib/libsysevent.c", "pattern": "/^int SE_print_message(char* inmsg, int type)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(char * inmsg,int type)"}, {"_type": "tag", "name": "SE_print_message_hdr", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/sysevent/lib/libsysevent.c", "pattern": "/^int  SE_print_message_hdr (char *inhdr)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(char * inhdr)"}, {"_type": "tag", "name": "SE_print_mtype", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/sysevent/lib/libsysevent.c", "pattern": "/^char *SE_print_mtype (int mtype)$/", "language": "C", "typeref": "typename:char *", "kind": "function", "signature": "(int mtype)"}, {"_type": "tag", "name": "SE_strerror", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/sysevent/lib/libsysevent.c", "pattern": "/^char *SE_strerror (int error)$/", "language": "C", "typeref": "typename:char *", "kind": "function", "signature": "(int error)"}, {"_type": "tag", "name": "SE_string2size", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/sysevent/lib/libsysevent.c", "pattern": "/^unsigned int SE_string2size(const char *str)$/", "language": "C", "typeref": "typename:unsigned int", "kind": "function", "signature": "(const char * str)"}, {"_type": "tag", "name": "align", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/sysevent/lib/libsysevent.c", "pattern": "/^static unsigned int align (unsigned int value)$/", "file": true, "language": "C", "typeref": "typename:unsigned int", "kind": "function", "signature": "(unsigned int value)"}, {"_type": "tag", "name": "connect_to_local_sysevent_daemon", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/sysevent/lib/libsysevent.c", "pattern": "/^static int connect_to_local_sysevent_daemon(char *target, int* sockfd)$/", "file": true, "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(char * target,int * sockfd)"}, {"_type": "tag", "name": "connect_to_sysevent_daemon", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/sysevent/lib/libsysevent.c", "pattern": "/^static int connect_to_sysevent_daemon(char *ip, unsigned short port, int* sockfd)$/", "file": true, "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(char * ip,unsigned short port,int * sockfd)"}, {"_type": "tag", "name": "debug_filename", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/sysevent/lib/libsysevent.c", "pattern": "/^char *debug_filename = \"\\/var\\/log\\/sysevent_lib.err\";$/", "language": "C", "typeref": "typename:char *", "kind": "variable"}, {"_type": "tag", "name": "g_client_fd_mutex", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/sysevent/lib/libsysevent.c", "pattern": "/^pthread_mutex_t g_client_fd_mutex = PTHREAD_MUTEX_INITIALIZER;$/", "language": "C", "typeref": "typename:pthread_mutex_t", "kind": "variable"}, {"_type": "tag", "name": "g_name", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/sysevent/lib/libsysevent.c", "pattern": "/^char g_name[32];$/", "language": "C", "typeref": "typename:char[32]", "kind": "variable"}, {"_type": "tag", "name": "init_libsysevent", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/sysevent/lib/libsysevent.c", "pattern": "/^void init_libsysevent(const char* const name) {$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(const char * const name)"}, {"_type": "tag", "name": "msg_receive_internal", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/sysevent/lib/libsysevent.c", "pattern": "/^static int msg_receive_internal (int fd, char *replymsg, unsigned int *replymsg_size, token_t *w/", "file": true, "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(int fd,char * replymsg,unsigned int * replymsg_size,token_t * who,struct timeval * wait,int * error)"}, {"_type": "tag", "name": "mtype2str", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/sysevent/lib/libsysevent.c", "pattern": "/^static char *mtype2str(int mtype)$/", "file": true, "language": "C", "typeref": "typename:char *", "kind": "function", "signature": "(int mtype)"}, {"_type": "tag", "name": "sysevent_close", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/sysevent/lib/libsysevent.c", "pattern": "/^int sysevent_close (int fd, token_t token)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(int fd,token_t token)"}, {"_type": "tag", "name": "sysevent_debug", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/sysevent/lib/libsysevent.c", "pattern": "/^int sysevent_debug (char *ip, unsigned short port, int level)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(char * ip,unsigned short port,int level)"}, {"_type": "tag", "name": "sysevent_del_unique", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/sysevent/lib/libsysevent.c", "pattern": "/^int sysevent_del_unique(const int fd, const token_t token, const char *name, unsigned int *itera/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(const int fd,const token_t token,const char * name,unsigned int * iterator)"}, {"_type": "tag", "name": "sysevent_get", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/sysevent/lib/libsysevent.c", "pattern": "/^int sysevent_get (const int fd, const token_t token, const char *inbuf, char *outbuf, int outbyt/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(const int fd,const token_t token,const char * inbuf,char * outbuf,int outbytes)"}, {"_type": "tag", "name": "sysevent_get_binmsg_maxsize", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/sysevent/lib/libsysevent.c", "pattern": "/^unsigned int sysevent_get_binmsg_maxsize()$/", "language": "C", "typeref": "typename:unsigned int", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "sysevent_get_data", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/sysevent/lib/libsysevent.c", "pattern": "/^int sysevent_get_data(const int fd, const token_t token, const char *inbuf, char *outbuf, int ou/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(const int fd,const token_t token,const char * inbuf,char * outbuf,int outbytes,int * bufsizecopied)"}, {"_type": "tag", "name": "sysevent_get_next_iterator", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/sysevent/lib/libsysevent.c", "pattern": "/^int sysevent_get_next_iterator(const int fd, const token_t token, const char *name, unsigned int/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(const int fd,const token_t token,const char * name,unsigned int * iterator)"}, {"_type": "tag", "name": "sysevent_get_unique", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/sysevent/lib/libsysevent.c", "pattern": "/^int sysevent_get_unique (const int fd, const token_t token, const char *inbuf, unsigned int *ite/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(const int fd,const token_t token,const char * inbuf,unsigned int * iterator,char * subjectbuf,int subjectbytes,char * valuebuf,int valuebytes)"}, {"_type": "tag", "name": "sysevent_getnotification", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/sysevent/lib/libsysevent.c", "pattern": "/^int sysevent_getnotification (const int fd, const token_t token, char *namebuf, int *namebytes, /", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(const int fd,const token_t token,char * namebuf,int * namebytes,char * valbuf,int * valbytes,async_id_t * async_id)"}, {"_type": "tag", "name": "sysevent_getnotification_data", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/sysevent/lib/libsysevent.c", "pattern": "/^int sysevent_getnotification_data (const int fd, const token_t token, char *namebuf, int *nameby/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(const int fd,const token_t token,char * namebuf,int * namebytes,char * valbuf,int * valbytes,async_id_t * async_id)"}, {"_type": "tag", "name": "sysevent_local_open", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/sysevent/lib/libsysevent.c", "pattern": "/^int sysevent_local_open (char *target, int version, char *id, token_t *token)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(char * target,int version,char * id,token_t * token)"}, {"_type": "tag", "name": "sysevent_local_open_data", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/sysevent/lib/libsysevent.c", "pattern": "/^int sysevent_local_open_data (char *target, int version, char *id, token_t *token)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(char * target,int version,char * id,token_t * token)"}, {"_type": "tag", "name": "sysevent_open", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/sysevent/lib/libsysevent.c", "pattern": "/^int sysevent_open (char *ip, unsigned short port, int version, char *id, token_t *token)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(char * ip,unsigned short port,int version,char * id,token_t * token)"}, {"_type": "tag", "name": "sysevent_open_data", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/sysevent/lib/libsysevent.c", "pattern": "/^int sysevent_open_data (char *ip, unsigned short port, int version, char *id, token_t *token)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(char * ip,unsigned short port,int version,char * id,token_t * token)"}, {"_type": "tag", "name": "sysevent_ping", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/sysevent/lib/libsysevent.c", "pattern": "/^int sysevent_ping (int fd, token_t token)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(int fd,token_t token)"}, {"_type": "tag", "name": "sysevent_ping_test", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/sysevent/lib/libsysevent.c", "pattern": "/^int sysevent_ping_test (int fd, token_t token, struct timeval* tv)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(int fd,token_t token,struct timeval * tv)"}, {"_type": "tag", "name": "sysevent_rmcallback", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/sysevent/lib/libsysevent.c", "pattern": "/^int sysevent_rmcallback(const int fd, const token_t token, async_id_t async_id)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(const int fd,const token_t token,async_id_t async_id)"}, {"_type": "tag", "name": "sysevent_rmnotification", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/sysevent/lib/libsysevent.c", "pattern": "/^int sysevent_rmnotification(const int fd, const token_t token, async_id_t async_id)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(const int fd,const token_t token,async_id_t async_id)"}, {"_type": "tag", "name": "sysevent_set", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/sysevent/lib/libsysevent.c", "pattern": "/^int sysevent_set (const int fd, const token_t token, const char *name, const char *value,  int c/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(const int fd,const token_t token,const char * name,const char * value,int conf_req)"}, {"_type": "tag", "name": "sysevent_set_data", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/sysevent/lib/libsysevent.c", "pattern": "/^int sysevent_set_data (const int fd, const token_t token, const char *name, const char *value, i/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(const int fd,const token_t token,const char * name,const char * value,int value_length)"}, {"_type": "tag", "name": "sysevent_set_data_private", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/sysevent/lib/libsysevent.c", "pattern": "/^static int sysevent_set_data_private (const int fd, const token_t token, const char *name, const/", "file": true, "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(const int fd,const token_t token,const char * name,const char * value,const int value_length,const int source,const int tid)"}, {"_type": "tag", "name": "sysevent_set_options", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/sysevent/lib/libsysevent.c", "pattern": "/^int sysevent_set_options (const int fd, const token_t token, const char *name, const unsigned in/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(const int fd,const token_t token,const char * name,const unsigned int flags)"}, {"_type": "tag", "name": "sysevent_set_private", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/sysevent/lib/libsysevent.c", "pattern": "/^static int sysevent_set_private (const int fd, const token_t token, const char *name, const char/", "file": true, "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(const int fd,const token_t token,const char * name,const char * value,const int source,const int tid)"}, {"_type": "tag", "name": "sysevent_set_unique", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/sysevent/lib/libsysevent.c", "pattern": "/^int sysevent_set_unique (const int fd, const token_t token, const char *name, const char *value,/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(const int fd,const token_t token,const char * name,const char * value,char * outbuf,int outbytes)"}, {"_type": "tag", "name": "sysevent_set_with_tid", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/sysevent/lib/libsysevent.c", "pattern": "/^int sysevent_set_with_tid (const int fd, const token_t token, const char *name, const char *valu/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(const int fd,const token_t token,const char * name,const char * value,const int source,const int tid)"}, {"_type": "tag", "name": "sysevent_setcallback", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/sysevent/lib/libsysevent.c", "pattern": "/^int sysevent_setcallback(const int fd, const token_t token, action_flag_t flags, char *subject, /", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(const int fd,const token_t token,action_flag_t flags,char * subject,char * function,int numparams,char ** params,async_id_t * async_id)"}, {"_type": "tag", "name": "sysevent_setnotification", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/sysevent/lib/libsysevent.c", "pattern": "/^int sysevent_setnotification(const int fd, const token_t token, char *subject, async_id_t *async/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(const int fd,const token_t token,char * subject,async_id_t * async_id)"}, {"_type": "tag", "name": "sysevent_show", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/sysevent/lib/libsysevent.c", "pattern": "/^int sysevent_show (const int fd, const token_t token, const char *file) $/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(const int fd,const token_t token,const char * file)"}, {"_type": "tag", "name": "sysevent_unset", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/sysevent/lib/libsysevent.c", "pattern": "/^int sysevent_unset (const int fd, const token_t token, const char *name)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(const int fd,const token_t token,const char * name)"}], "hash": "1caa505b7e056c5bf6d2678e7fd7372b", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "rdkb/components/opensource/ccsp/Utopia/source/sysevent/lib/libsysevent.c", "fields": [{"name": "char * debug_filename", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "pthread_mutex_t g_client_fd_mutex", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "char[32] g_name", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"20819": ""}]}