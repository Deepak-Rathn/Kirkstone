{"is_source_file": true, "format": "C header file", "description": "This file is a C header file defining interfaces and declarations for the CCSP Message Bus Interface Service, including function prototypes for message bus engagement, initialization, finalization, health checks, resource management, and signal sending related to the CCSP message bus.", "external_files": ["DBusConnection", "DBusMessage", "SLAP_VARIABLE", "name_spaceType_t", "ANSC_STATUS", "ANSC_HANDLE", "DBusHandlerResult"], "external_methods": ["DBusConnection", "DBusMessage", "SLAP_VARIABLE", "ANSC_STATUS", "ANSC_HANDLE", "DBusHandlerResult"], "published": ["ssp_XdnsMbi_MessageBusEngage", "ssp_XdnsMbi_Initialize", "ssp_XdnsMbi_Finalize", "ssp_XdnsMbi_Buscheck", "ssp_XdnsMbi_GetHealth", "ssp_XdnsMbi_FreeResources", "ssp_XdnsMbi_SendParameterValueChangeSignal", "ssp_XdnsMbi_SendTransferCompleteSignal", "CcspTandD_path_message_func", "ssp_XdnsMbi_RegisterToCR", "ssp_XdnsMbi_WaitConditionReady"], "classes": [], "methods": [{"name": "ssp_XdnsMbi_MessageBusEngage", "description": "Engages the message bus for the component with specified configuration."}, {"name": "ssp_XdnsMbi_Initialize", "description": "Initializes the message bus interface with user data."}, {"name": "ssp_XdnsMbi_Finalize", "description": "Finalizes and cleans up the message bus interface with user data."}, {"name": "ssp_XdnsMbi_Buscheck", "description": "Performs a check on the message bus status using user data."}, {"name": "ssp_XdnsMbi_GetHealth", "description": "Retrieves the health status of the message bus."}, {"name": "ssp_XdnsMbi_FreeResources", "description": "Frees resources associated with the message bus, considering priority and user data."}, {"name": "ssp_XdnsMbi_SendParameterValueChangeSignal", "description": "Sends a signal notifying parameter value change, including old and new values, and access list."}, {"name": "ssp_XdnsMbi_SendTransferCompleteSignal", "description": "Sends a signal indicating transfer completion."}, {"name": "CcspTandD_path_message_func", "description": "Handles DBus message for a specific path, processing incoming messages on the message bus."}, {"name": "ssp_XdnsMbi_RegisterToCR", "description": "Registers the interface with the Configuration Registry (CR)."}, {"name": "ssp_XdnsMbi_WaitConditionReady", "description": "Waits until the message bus condition is ready for communication."}], "calls": ["DBusConnection", "DBusMessage", "SLAP_VARIABLE", "DBusHandlerResult"], "search-terms": ["XdnsSsp", "ccsp", "MessageBus", "interface", "signal", "DBus", "CCSP", "sip", "CR", "path_message"], "state": 2, "file_id": 9536, "knowledge_revision": 22556, "git_revision": "", "ctags": [{"_type": "tag", "name": "_SSP_MESSAGEBUS_INTERFACE_", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspXDNS/source/XdnsSsp/ssp_messagebus_interface.h", "pattern": "/^#define  _SSP_MESSAGEBUS_INTERFACE_$/", "language": "C++", "kind": "macro"}], "hash": "ecd22fd050287418bfcab2dc96c9da45", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "rdkb/components/opensource/ccsp/CcspXDNS/source/XdnsSsp/ssp_messagebus_interface.h", "revision_history": [{"22556": ""}]}