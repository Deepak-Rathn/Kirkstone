{"is_source_file": true, "format": "Python", "description": "This file provides utility functions related to NFS server management, specifically creating a temporary NFS server using 'unfsd' with context management to ensure clean setup and teardown.", "external_files": ["oeqa.utils.commands", "oeqa.utils.network"], "external_methods": ["bitbake", "get_bb_var", "Command", "get_free_port"], "published": [], "classes": [{"name": "unfs_server", "description": "A context manager function that sets up and tears down a temporary NFS server using 'unfsd', handling port allocation and cleanup."}], "methods": [{"name": "unfs_server(directory, logger = None)", "description": "A context manager that initializes an NFS server with specified directory, manages port assignment, and cleans up after use.", "scope": "", "scopeKind": ""}], "calls": ["os.path.exists", "os.path.join", "bitbake", "tempfile.NamedTemporaryFile", "exports.write", "get_free_port", "os.environ", "Command", "cmd.run", "cmd.stop", "os.unlink"], "search-terms": ["nfs", "unfsd", "NFS server management", "contextmanager", "temporary NFS server", "oeqa utils"], "state": 2, "file_id": 1876, "knowledge_revision": 15021, "git_revision": "", "ctags": [{"_type": "tag", "name": "unfs_server", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oeqa/utils/nfs.py", "pattern": "/^def unfs_server(directory, logger = None):$/", "language": "Python", "kind": "function", "signature": "(directory, logger = None)"}], "hash": "9ba55958708ea49558f11a3b5fac660e", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "openembedded-core/meta/lib/oeqa/utils/nfs.py", "revision_history": [{"15021": ""}]}