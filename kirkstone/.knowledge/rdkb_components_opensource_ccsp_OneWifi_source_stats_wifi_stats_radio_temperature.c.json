{"is_source_file": true, "format": "C", "description": "The file is a C source code file for managing Wi-Fi radio temperature statistics, including validation, key generation, API execution, and cache copy functionalities for radio temperature metrics.", "external_files": ["wifi_monitor.h", "wifi_ctrl.h", "wifi_util.h"], "external_methods": ["getNumberRadios", "wifi_hal_getRadioTemperature", "getRadioOperationParam"], "published": [], "classes": [], "methods": [{"name": "int validate_radio_temperature_args(wifi_mon_stats_args_t * args)", "description": "Validates the input arguments for radio temperature operations, checking for NULL and valid radio index.", "scope": "", "scopeKind": ""}, {"name": "int generate_radio_temperature_clctr_stats_key(wifi_mon_stats_args_t * args,char * key_str,size_t key_len)", "description": "Generates a key string for collector statistics related to radio temperature based on provided arguments.", "scope": "", "scopeKind": ""}, {"name": "int generate_radio_temperature_provider_stats_key(wifi_mon_stats_config_t * config,char * key_str,size_t key_len)", "description": "Generates a key string for provider statistics related to radio temperature based on configuration.", "scope": "", "scopeKind": ""}, {"name": "int execute_radio_temperature_stats_api(wifi_mon_stats_args_t * args,wifi_monitor_t * mon_data,unsigned long task_interval_ms)", "description": "Executes the API call to retrieve radio temperature data, populating the monitor data structure accordingly.", "scope": "", "scopeKind": ""}, {"name": "int copy_radio_temperature_stats_from_cache(wifi_mon_stats_args_t * args,void ** stats,unsigned int * stat_array_size,wifi_monitor_t * mon_cache)", "description": "Copies radio temperature statistics from cache into a provided stats structure for further use.", "scope": "", "scopeKind": ""}], "calls": ["getNumberRadios", "wifi_hal_getRadioTemperature", "getRadioOperationParam"], "search-terms": ["wifi_stats_radio_temperature", "radio_temperature_stats", "wifi_radioTemperature_t", "radio_data_t", "stats_key", "radio_temperature"], "state": 2, "file_id": 6004, "knowledge_revision": 19104, "git_revision": "", "ctags": [{"_type": "tag", "name": "copy_radio_temperature_stats_from_cache", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/stats/wifi_stats_radio_temperature.c", "pattern": "/^int copy_radio_temperature_stats_from_cache(wifi_mon_stats_args_t *args, void **stats, unsigned /", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(wifi_mon_stats_args_t * args,void ** stats,unsigned int * stat_array_size,wifi_monitor_t * mon_cache)"}, {"_type": "tag", "name": "execute_radio_temperature_stats_api", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/stats/wifi_stats_radio_temperature.c", "pattern": "/^int execute_radio_temperature_stats_api(wifi_mon_stats_args_t *args, wifi_monitor_t *mon_data, u/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(wifi_mon_stats_args_t * args,wifi_monitor_t * mon_data,unsigned long task_interval_ms)"}, {"_type": "tag", "name": "generate_radio_temperature_clctr_stats_key", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/stats/wifi_stats_radio_temperature.c", "pattern": "/^int generate_radio_temperature_clctr_stats_key(wifi_mon_stats_args_t *args, char *key_str, size_/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(wifi_mon_stats_args_t * args,char * key_str,size_t key_len)"}, {"_type": "tag", "name": "generate_radio_temperature_provider_stats_key", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/stats/wifi_stats_radio_temperature.c", "pattern": "/^int generate_radio_temperature_provider_stats_key(wifi_mon_stats_config_t *config, char *key_str/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(wifi_mon_stats_config_t * config,char * key_str,size_t key_len)"}, {"_type": "tag", "name": "validate_radio_temperature_args", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/stats/wifi_stats_radio_temperature.c", "pattern": "/^int validate_radio_temperature_args(wifi_mon_stats_args_t *args)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(wifi_mon_stats_args_t * args)"}], "hash": "23a26c6fa26416c88600c0339a1c2e0f", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "rdkb/components/opensource/ccsp/OneWifi/source/stats/wifi_stats_radio_temperature.c", "revision_history": [{"19104": ""}]}