{"is_source_file": true, "format": "C++", "description": "This source file provides integration with the Breakpad crash reporting library, setting up exception handling and signal handlers for generating minidumps upon crashes or signals.", "external_files": ["<breakpad/client/linux/handler/exception_handler.h>", "breakpad_wrapper.h"], "external_methods": ["google_breakpad::ExceptionHandler::WriteMinidump", "google_breakpad::ExceptionHandler", "google_breakpad::MinidumpDescriptor"], "published": ["breakpadHelperSetup", "breakpadHelperCleanup"], "classes": [], "methods": [{"name": "void breakpadHelperSetup()", "description": "Initializes the Breakpad exception handler and installs signal handlers based on configuration.", "scope": "", "scopeKind": ""}, {"name": "void breakpadHelperCleanup()", "description": "Cleans up the Breakpad exception handler, deleting resources if necessary.", "scope": "", "scopeKind": ""}, {"name": "bool breakpadDumpCallback(const google_breakpad::MinidumpDescriptor & descriptor,void * context,bool succeeded)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "void registerSignalHandler(int signum)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "void sigHandler(int signum,siginfo_t * sigInfo,void * context)", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["printf", "sigaction", "memset", "new google_breakpad::ExceptionHandler", "delete", "registerSignalHandler"], "search-terms": ["breakpad", "crash reporting", "minidump", "exception handler", "signal handling"], "state": 2, "file_id": 676, "knowledge_revision": 13839, "git_revision": "", "ctags": [{"_type": "tag", "name": "breakpadDumpCallback", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/breakpad/c/src/breakpadHelper.cpp", "pattern": "/^static bool breakpadDumpCallback(const google_breakpad::MinidumpDescriptor& descriptor,$/", "file": true, "language": "C++", "typeref": "typename:bool", "kind": "function", "signature": "(const google_breakpad::MinidumpDescriptor & descriptor,void * context,bool succeeded)"}, {"_type": "tag", "name": "breakpadHelperCleanup", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/breakpad/c/src/breakpadHelper.cpp", "pattern": "/^extern \"C\" void breakpadHelperCleanup()$/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "breakpadHelperSetup", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/breakpad/c/src/breakpadHelper.cpp", "pattern": "/^extern \"C\" void breakpadHelperSetup()$/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "excHandler", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/breakpad/c/src/breakpadHelper.cpp", "pattern": "/^static google_breakpad::ExceptionHandler* excHandler = NULL;$/", "file": true, "language": "C++", "typeref": "typename:google_breakpad::ExceptionHandler *", "kind": "variable"}, {"_type": "tag", "name": "refCount", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/breakpad/c/src/breakpadHelper.cpp", "pattern": "/^static std::atomic<int> refCount(0);$/", "file": true, "language": "C++", "typeref": "typename:std::atomic<int>", "kind": "variable"}, {"_type": "tag", "name": "registerSignalHandler", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/breakpad/c/src/breakpadHelper.cpp", "pattern": "/^static void registerSignalHandler(int signum)$/", "file": true, "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(int signum)"}, {"_type": "tag", "name": "sigHandler", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/breakpad/c/src/breakpadHelper.cpp", "pattern": "/^static void sigHandler(int signum, siginfo_t* sigInfo, void* context)$/", "file": true, "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(int signum,siginfo_t * sigInfo,void * context)"}], "hash": "acd241e3495aeede18d34ae506e48498", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "components/opensource/zilker-sdk/source/libs/breakpad/c/src/breakpadHelper.cpp", "fields": [{"name": "google_breakpad::ExceptionHandler * excHandler", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "std::atomic<int> refCount", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"13839": ""}]}