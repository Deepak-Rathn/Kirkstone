{"is_source_file": true, "format": "C", "description": "This source file is a C language implementation of a device driver for 'OpenHomeCamera' devices within a broader camera management system. It handles device discovery via SSDP, device configuration, resource registration, attribute change notifications, firmware upgrades, and media tunnel operations. The code manages device lifecycle, state, and communications with cameras, supporting features such as firmware updates, media URL retrieval, and resource monitoring.", "external_files": ["<stdio.h>", "<stdlib.h>", "<stdbool.h>", "<string.h>", "<inttypes.h>", "<pthread.h>", "<unistd.h>", "<sys/time.h>", "<cjson/cJSON.h>", "<icLog/logging.h>", "<icUtil/stringUtils.h>", "<icUtil/macAddrUtils.h>", "<icConcurrent/delayedTask.h>", "<icSystem/runtimeAttributes.h>", "<commonDeviceDefs.h>", "<resourceTypes.h>", "<device/icDeviceResource.h>", "<deviceDriver.h>", "<propsMgr/commonProperties.h>", "<propsMgr/propsHelper.h>", "<propsMgr/propsService_eventAdapter.h>", "<openHomeCamera/ohcmDiscover.h>", "<openHomeCamera/ohcm.h>", "<deviceDescriptors.h>", "<icConcurrent/repeatingTask.h>", "<ssdp/ssdp.h>", "<icConcurrent/threadUtils.h>", "<icTime/timeUtils.h>"], "external_methods": ["ohcmDiscoverStart", "ohcmDiscoverStop", "isOhcmAlive", "initOhcm", "setOhcmMutualTlsMode", "createCameraDevice", "destroyCameraDeviceFromSet", "findCameraByUuid", "createDetachedThread", "scheduleDelayTask", "cancelDelayTask", "cancelRepeatingTask", "loadCameraPersistenceResources", "cameraDeviceConfigure", "cameraDevicePerformUpgrade", "getPropertyAsUInt32", "stringBuilder", "appendCameraToSet", "createCameraSet", "destroyCameraSet", "moveCameraDeviceToSet", "createEndpoint", "createDeviceResourceIfAvailable", "createEndpointResourceIfAvailable", "createDeviceResource", "createEndpointResource", "updateResource", "getCamInfo", "getMediaUrl", "getVideoInformation", "cameraDeviceTakePicture", "cameraDeviceCreateMediaTunnel", "cameraDeviceDestroyMediaTunnel", "createButtonResource", "destroyMediaTunnelStruct", "destroyOhcmCameraInfo", "getWirlessStatusOhcmCamera", "macAddrToUUID", "getMonotonicMillis"], "published": ["openHomeCameraDeviceDriverInitialize"], "classes": [{"name": "cameraDevice", "description": "Represents a camera device with associated state, configuration, and credentials used internally by the driver."}], "methods": [{"name": "DeviceDriver * openHomeCameraDeviceDriverInitialize(DeviceServiceCallbacks * deviceService)", "description": "Initializes the device driver structure, setting callbacks and supporting features for OpenHomeCamera devices. Supports mutual TLS setup if certificate files are present.", "scope": "", "scopeKind": ""}, {"name": "startupDriver", "description": "Performs startup tasks such as initializing device sets, resuming known cameras, and scheduling delayed tasks based on system uptime."}, {"name": "void shutdownDriver(void * ctx)", "description": "Cleans up resources, cancels scheduled tasks, and destroys device sets during driver shutdown.", "scope": "", "scopeKind": ""}, {"name": "bool discoverStart(void * ctx,const char * deviceClass)", "description": "Begins SSDP discovery process for cameras, with filters based on device class and optional IP prefix.", "scope": "", "scopeKind": ""}, {"name": "void discoverStop(void * ctx,const char * deviceClass)", "description": "Stops discovery, canceling discovery activities and cleaning up internal states.", "scope": "", "scopeKind": ""}, {"name": "void deviceRemoved(void * ctx,icDevice * device)", "description": "Handles device removal, stopping monitoring threads, resetting to factory defaults, and cleaning the internal camera set.", "scope": "", "scopeKind": ""}, {"name": "bool configureDevice(void * ctx,icDevice * device,DeviceDescriptor * descriptor)", "description": "Configures a discovered device, upgrading firmware if necessary, applying user settings, and starting monitoring threads.", "scope": "", "scopeKind": ""}, {"name": "bool fetchInitialResourceValues(void * ctx,icDevice * device,icInitialResourceValues * initialResourceValues)", "description": "Provides initial resource values such as MAC address, IP, firmware version, credentials, and media URLs for a device.", "scope": "", "scopeKind": ""}, {"name": "registerResources", "description": "Registers device and endpoint resources with the device service, defining their types, modes, and caching policies."}, {"name": "readResource", "description": "Reads a resource value, notably obtaining wireless signal strength via camera info if applicable."}, {"name": "void cameraDeviceCallback(cameraDevice * device,cameraAttrChange reason)", "description": "Callback invoked when camera attributes change, e.g., online status, firmware update, motion fault, or button press. Updates corresponding resources.", "scope": "", "scopeKind": ""}, {"name": "bool executeCameraEndpointResource(icDeviceResource * resource,const char * arg,char ** response)", "description": "Executes control operations such as creating media tunnel, capturing images, or uploading videos based on resource commands.", "scope": "", "scopeKind": ""}, {"name": "writeMotionEndpointResource", "description": "Handles updates to motion sensor resource states, enabling or disabling motion detection accordingly."}, {"name": "bool addDiscoveredCamera(const char * ipAddress,const char * macAddress)", "description": "Adds a newly-discovered camera to the device service, creating a device, populating its details, and notifying the system.", "scope": "", "scopeKind": ""}, {"name": "bool addRediscoveredCamera(cameraDevice * camera)", "description": "Re-adds a camera that was reset, replacing the existing device record and reconfiguring resources.", "scope": "", "scopeKind": ""}, {"name": "bool openHomeCameraDeviceDriverAddMigratedCamera(cameraDevice * discovered,DeviceMigrator * migrator)", "description": "Adds a migrated camera to be processed by the device service, optionally starting monitoring.", "scope": "", "scopeKind": ""}, {"name": "cameraDevice * openHomeCameraDeviceDriverCreateCameraDevice(const char * macAddress,const char * ipAddress,const char * adminUserId,const char * adminPassword,bool fetchDetails)", "description": "Creates a camera device structure with specified parameters.", "scope": "", "scopeKind": ""}, {"name": "char * extractStringResource(const char * deviceUuid,const char * endpointId,const char * resourceId)", "description": "Extracts a string resource from the device service for a specific device, endpoint, and resource ID.", "scope": "", "scopeKind": ""}, {"name": "void loadCameraPersistenceResources(cameraDevice * device)", "description": "Loads persisted camera device data during startup, filling in info such as IP, MAC, credentials, and configurations.", "scope": "", "scopeKind": ""}, {"name": "ohcmCameraInfo * getCamInfo(const char * deviceUuid)", "description": "Builds a CameraInfo container with the device's stored information.", "scope": "", "scopeKind": ""}, {"name": "char * getMediaUrl(const char * ipAddress,const char * streamType,const char * codec)", "description": "Builds a media URL for streaming or snapshots based on IP address, stream type, and codec.", "scope": "", "scopeKind": ""}, {"name": "cJSON * getVideoInformation(cameraDevice * camDevice)", "description": "Returns a JSON object containing supported video formats, codecs, and stream URLs for a camera.", "scope": "", "scopeKind": ""}, {"name": "processDeviceDescriptor", "description": "Applies device descriptor info to update camera settings like motion, button presence, speaker, and protocol preferences."}, {"name": "cameraNeedsFirmwareState earlyFirmwareVersionCompare(cameraDevice * camera,DeviceDescriptor * dd)", "description": "Compares camera firmware with device descriptor minimum and latest versions, determining if an upgrade is needed.", "scope": "", "scopeKind": ""}, {"name": "populateEarlyFWUpgradeMetadata", "description": "Adds firmware upgrade status metadata for a device based on firmware version comparison."}, {"name": "void performDelayedCameraUpdates(void * arg)", "description": "Performs scheduled camera firmware checks and initiates upgrades if necessary.", "scope": "", "scopeKind": ""}, {"name": "void delayedUpdateIteratorCallback(cameraDevice * camDevice,void * arg)", "description": "Callback to check individual cameras for firmware upgrade needs and possibly spawn upgrade threads.", "scope": "", "scopeKind": ""}, {"name": "void * performDelayedUpdate(void * arg)", "description": "Thread function to perform firmware upgrade on a camera.", "scope": "", "scopeKind": ""}, {"name": "scheduleDelayedCameraUpdateTask", "description": "Schedules a delayed task to periodically check and upgrade cameras based on property settings."}, {"name": "char * getCameraUpgradeFilename(icLinkedList * filenames)", "description": "Extracts the filename for firmware upgrade from list of filenames.", "scope": "", "scopeKind": ""}, {"name": "void cameraRecoveryCallback(const char * ipAddress,const char * macAddress)", "description": "Callback for SSDP recovery, updates camera IPs if cameras come back online after disconnection.", "scope": "", "scopeKind": ""}, {"name": "void checkCameraForCommFail(cameraDevice * camera,void * arg)", "description": "Checks if a camera is offline to trigger IP recovery.", "scope": "", "scopeKind": ""}, {"name": "void performIpAddressRecovery(void * arg)", "description": "Uses SSDP to recover IP addresses of offline cameras and update their resources.", "scope": "", "scopeKind": ""}, {"name": "startIpAddressRecoveryTask", "description": "Starts periodic task for IP address recovery."}, {"name": "restoreConfig", "description": "Restores configuration during startup; currently a stub returning true."}, {"name": "void delayedStartMonitorThreadIteratorCallback(cameraDevice * camDevice,void * arg)", "description": "Starts monitoring threads for cameras after startup or device addition.", "scope": "", "scopeKind": ""}, {"name": "void delayedStartMonitorThreadCallback()", "description": "Iterates all cameras to start their monitor threads after startup.", "scope": "", "scopeKind": ""}, {"name": "void * addRediscoveredCameraThread(void * arg)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "void cameraDiscoveredCallback(const char * ipAddress,const char * macAddress)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "bool executeResource(void * ctx,icDeviceResource * resource,const char * arg,char ** response)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "bool executeSpeakerEndpointResource(icDeviceResource * resource,const char * arg,char ** response)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "const char * getCameraClassForModel(char * model)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "uint32_t getMotionBlackoutSeconds()", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["ohcmDiscoverStart", "ohcmDiscoverStop", "isOhcmAlive", "createCameraDevice", "destroyCameraDeviceFromSet", "findCameraByUuid", "scheduleDelayTask", "cancelDelayTask", "cancelRepeatingTask", "loadCameraPersistenceResources", "cameraDeviceConfigure", "cameraDevicePerformUpgrade", "getPropertyAsUInt32", "scheduleDelayedCameraUpdateTask", "startIpAddressRecoveryTask", "getCamInfo", "getMediaUrl", "getVideoInformation", "cameraDeviceTakePicture", "cameraDeviceCreateMediaTunnel", "cameraDeviceDestroyMediaTunnel", "createEndpoint", "createDeviceResourceIfAvailable", "createEndpointResourceIfAvailable", "updateResource", "loadCameraPersistenceResources", "setOhcmMutualTlsMode", "createDetachedThread", "getWirlessStatusOhcmCamera", "macAddrToUUID", "getMonotonicMillis"], "search-terms": ["openHomeCamera", "deviceDrivers", "mediaTunnel", "cameraFirmwareUpgrade", "ssdpDiscovery", "motionSensor", "cameraResourceRegistration", "cameraConfiguration", "mutualTls", "cameraCallbacks", "cameraMonitorThread", "firmwareVersionCompare", "delayedCameraUpdate", "cameraDiscovery", "videoStream", "snapshot"], "state": 2, "file_id": 1018, "knowledge_revision": 14181, "git_revision": "", "ctags": [{"_type": "tag", "name": "CAMERA_DISCOVERY_IP_PREFIX_PROP", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/device/core/deviceDrivers/openHomeCamera/openHomeCameraDeviceDriver.c", "pattern": "/^#define CAMERA_DISCOVERY_IP_PREFIX_PROP /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "CAMERA_NEEDS_FIRMWARE_STATE_KEY", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/device/core/deviceDrivers/openHomeCamera/openHomeCameraDeviceDriver.c", "pattern": "/^#define CAMERA_NEEDS_FIRMWARE_STATE_KEY /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "DEFAULT_MAX_CAMERAS_TO_DISCOVER", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/device/core/deviceDrivers/openHomeCamera/openHomeCameraDeviceDriver.c", "pattern": "/^#define DEFAULT_MAX_CAMERAS_TO_DISCOVER /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "FW_UPGRADE_DELAYABLE", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/device/core/deviceDrivers/openHomeCamera/openHomeCameraDeviceDriver.c", "pattern": "/^    FW_UPGRADE_DELAYABLE,       \\/\\/A firmware upgrade is needed, but is not immediately necessa/", "file": true, "language": "C", "kind": "enumerator", "scope": "__anon5e1c149c0103", "scopeKind": "enum"}, {"_type": "tag", "name": "FW_UPGRADE_DELAYABLE_STRING", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/device/core/deviceDrivers/openHomeCamera/openHomeCameraDeviceDriver.c", "pattern": "/^#define FW_UPGRADE_DELAYABLE_STRING /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "FW_UPGRADE_NECESSARY", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/device/core/deviceDrivers/openHomeCamera/openHomeCameraDeviceDriver.c", "pattern": "/^    FW_UPGRADE_NECESSARY,       \\/\\/A firmware upgrade is needed and necessary to do now$/", "file": true, "language": "C", "kind": "enumerator", "scope": "__anon5e1c149c0103", "scopeKind": "enum"}, {"_type": "tag", "name": "FW_UPGRADE_NECESSARY_STRING", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/device/core/deviceDrivers/openHomeCamera/openHomeCameraDeviceDriver.c", "pattern": "/^#define FW_UPGRADE_NECESSARY_STRING /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "FW_UPGRADE_UNNEEDED", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/device/core/deviceDrivers/openHomeCamera/openHomeCameraDeviceDriver.c", "pattern": "/^    FW_UPGRADE_UNNEEDED,        \\/\\/No firmware upgrade is needed$/", "file": true, "language": "C", "kind": "enumerator", "scope": "__anon5e1c149c0103", "scopeKind": "enum"}, {"_type": "tag", "name": "FW_UPGRADE_UNNEEDED_STRING", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/device/core/deviceDrivers/openHomeCamera/openHomeCameraDeviceDriver.c", "pattern": "/^#define FW_UPGRADE_UNNEEDED_STRING /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "IP_RECOVERY_INTERVAL_MINUTES", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/device/core/deviceDrivers/openHomeCamera/openHomeCameraDeviceDriver.c", "pattern": "/^#define IP_RECOVERY_INTERVAL_MINUTES /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "MONITOR_THREAD_DELAYED_STARTUP_INTERVAL_SECS", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/device/core/deviceDrivers/openHomeCamera/openHomeCameraDeviceDriver.c", "pattern": "/^#define MONITOR_THREAD_DELAYED_STARTUP_INTERVAL_SECS /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "MUTUAL_TLS_CERT_FILENAME", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/device/core/deviceDrivers/openHomeCamera/openHomeCameraDeviceDriver.c", "pattern": "/^#define MUTUAL_TLS_CERT_FILENAME /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "MUTUAL_TLS_KEY_FILENAME", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/device/core/deviceDrivers/openHomeCamera/openHomeCameraDeviceDriver.c", "pattern": "/^#define MUTUAL_TLS_KEY_FILENAME /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "OPENHOME_CHANNEL_URL_SLICE", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/device/core/deviceDrivers/openHomeCamera/openHomeCameraDeviceDriver.c", "pattern": "/^#define OPENHOME_CHANNEL_URL_SLICE /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "VIDEO_CODEC_H264", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/device/core/deviceDrivers/openHomeCamera/openHomeCameraDeviceDriver.c", "pattern": "/^#define VIDEO_CODEC_H264 /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "VIDEO_CODEC_MPEG4", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/device/core/deviceDrivers/openHomeCamera/openHomeCameraDeviceDriver.c", "pattern": "/^#define VIDEO_CODEC_MPEG4 /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "VIDEO_STREAM_TYPE_FLV", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/device/core/deviceDrivers/openHomeCamera/openHomeCameraDeviceDriver.c", "pattern": "/^#define VIDEO_STREAM_TYPE_FLV /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "VIDEO_STREAM_TYPE_MJPEG", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/device/core/deviceDrivers/openHomeCamera/openHomeCameraDeviceDriver.c", "pattern": "/^#define VIDEO_STREAM_TYPE_MJPEG /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "VIDEO_STREAM_TYPE_RTSP", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/device/core/deviceDrivers/openHomeCamera/openHomeCameraDeviceDriver.c", "pattern": "/^#define VIDEO_STREAM_TYPE_RTSP /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "VIDEO_STREAM_TYPE_SNAPSHOT", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/device/core/deviceDrivers/openHomeCamera/openHomeCameraDeviceDriver.c", "pattern": "/^#define VIDEO_STREAM_TYPE_SNAPSHOT /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "__anon5e1c149c0103", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/device/core/deviceDrivers/openHomeCamera/openHomeCameraDeviceDriver.c", "pattern": "/^{$/", "file": true, "language": "C", "kind": "enum"}, {"_type": "tag", "name": "_delayedUpdateThreadArgs", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/device/core/deviceDrivers/openHomeCamera/openHomeCameraDeviceDriver.c", "pattern": "/^typedef struct _delayedUpdateThreadArgs$/", "file": true, "language": "C", "kind": "struct"}, {"_type": "tag", "name": "addDiscoveredCamera", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/device/core/deviceDrivers/openHomeCamera/openHomeCameraDeviceDriver.c", "pattern": "/^static bool addDiscoveredCamera(const char* ipAddress, const char* macAddress)$/", "file": true, "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(const char * ipAddress,const char * macAddress)"}, {"_type": "tag", "name": "addRediscoveredCamera", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/device/core/deviceDrivers/openHomeCamera/openHomeCameraDeviceDriver.c", "pattern": "/^static bool addRediscoveredCamera(cameraDevice* camera)$/", "file": true, "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(cameraDevice * camera)"}, {"_type": "tag", "name": "addRediscoveredCameraThread", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/device/core/deviceDrivers/openHomeCamera/openHomeCameraDeviceDriver.c", "pattern": "/^static void* addRediscoveredCameraThread(void* arg)$/", "file": true, "language": "C", "typeref": "typename:void *", "kind": "function", "signature": "(void * arg)"}, {"_type": "tag", "name": "allCameras", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/device/core/deviceDrivers/openHomeCamera/openHomeCameraDeviceDriver.c", "pattern": "/^static cameraSet *allCameras = NULL;        \\/\\/ list of cameraDevice objects - configured \\/ kn/", "file": true, "language": "C", "typeref": "typename:cameraSet *", "kind": "variable"}, {"_type": "tag", "name": "cameraDeviceCallback", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/device/core/deviceDrivers/openHomeCamera/openHomeCameraDeviceDriver.c", "pattern": "/^static void cameraDeviceCallback(cameraDevice* device, cameraAttrChange reason)$/", "file": true, "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(cameraDevice * device,cameraAttrChange reason)"}, {"_type": "tag", "name": "cameraDiscoveredCallback", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/device/core/deviceDrivers/openHomeCamera/openHomeCameraDeviceDriver.c", "pattern": "/^static void cameraDiscoveredCallback(const char* ipAddress, const char* macAddress)$/", "file": true, "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(const char * ipAddress,const char * macAddress)"}, {"_type": "tag", "name": "cameraNeedsFirmwareState", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/device/core/deviceDrivers/openHomeCamera/openHomeCameraDeviceDriver.c", "pattern": "/^} cameraNeedsFirmwareState;$/", "file": true, "language": "C", "typeref": "enum:__anon5e1c149c0103", "kind": "typedef"}, {"_type": "tag", "name": "cameraRecoveryCallback", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/device/core/deviceDrivers/openHomeCamera/openHomeCameraDeviceDriver.c", "pattern": "/^static void cameraRecoveryCallback(const char *ipAddress, const char *macAddress)$/", "file": true, "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(const char * ipAddress,const char * macAddress)"}, {"_type": "tag", "name": "camerasDiscoveredCounter", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/device/core/deviceDrivers/openHomeCamera/openHomeCameraDeviceDriver.c", "pattern": "/^static uint32_t camerasDiscoveredCounter = 0;\\/\\/ a counter for the number of cameras discovered/", "file": true, "language": "C", "typeref": "typename:uint32_t", "kind": "variable"}, {"_type": "tag", "name": "checkCameraForCommFail", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/device/core/deviceDrivers/openHomeCamera/openHomeCameraDeviceDriver.c", "pattern": "/^static void checkCameraForCommFail(cameraDevice *camera, void *arg)$/", "file": true, "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(cameraDevice * camera,void * arg)"}, {"_type": "tag", "name": "configureDevice", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/device/core/deviceDrivers/openHomeCamera/openHomeCameraDeviceDriver.c", "pattern": "/^static bool configureDevice(void* ctx, icDevice* device, DeviceDescriptor* descriptor)$/", "file": true, "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(void * ctx,icDevice * device,DeviceDescriptor * descriptor)"}, {"_type": "tag", "name": "configuringCameras", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/device/core/deviceDrivers/openHomeCamera/openHomeCameraDeviceDriver.c", "pattern": "/^static cameraSet *configuringCameras = NULL;\\/\\/ list of cameraDevice objects - currently in the/", "file": true, "language": "C", "typeref": "typename:cameraSet *", "kind": "variable"}, {"_type": "tag", "name": "delayedCameraMonitorThreadStartupTask", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/device/core/deviceDrivers/openHomeCamera/openHomeCameraDeviceDriver.c", "pattern": "/^static uint32_t delayedCameraMonitorThreadStartupTask = 0; \\/\\/ handle for camera monitor thread/", "file": true, "language": "C", "typeref": "typename:uint32_t", "kind": "variable"}, {"_type": "tag", "name": "delayedStartMonitorThreadCallback", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/device/core/deviceDrivers/openHomeCamera/openHomeCameraDeviceDriver.c", "pattern": "/^static void delayedStartMonitorThreadCallback()$/", "file": true, "language": "C", "typeref": "typename:void", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "delayedStartMonitorThreadIteratorCallback", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/device/core/deviceDrivers/openHomeCamera/openHomeCameraDeviceDriver.c", "pattern": "/^static void delayedStartMonitorThreadIteratorCallback(cameraDevice *camDevice,$/", "file": true, "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(cameraDevice * camDevice,void * arg)"}, {"_type": "tag", "name": "delayedUpdateIteratorCallback", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/device/core/deviceDrivers/openHomeCamera/openHomeCameraDeviceDriver.c", "pattern": "/^static void delayedUpdateIteratorCallback(cameraDevice *camDevice, void *arg)$/", "file": true, "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(cameraDevice * camDevice,void * arg)"}, {"_type": "tag", "name": "delayedUpdateThreadArgs", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/device/core/deviceDrivers/openHomeCamera/openHomeCameraDeviceDriver.c", "pattern": "/^} delayedUpdateThreadArgs;$/", "file": true, "language": "C", "typeref": "struct:_delayedUpdateThreadArgs", "kind": "typedef"}, {"_type": "tag", "name": "descriptor", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/device/core/deviceDrivers/openHomeCamera/openHomeCameraDeviceDriver.c", "pattern": "/^    DeviceDescriptor *descriptor;$/", "file": true, "language": "C", "typeref": "typename:DeviceDescriptor *", "kind": "member", "scope": "_delayedUpdateThreadArgs", "scopeKind": "struct"}, {"_type": "tag", "name": "device", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/device/core/deviceDrivers/openHomeCamera/openHomeCameraDeviceDriver.c", "pattern": "/^    cameraDevice *device;$/", "file": true, "language": "C", "typeref": "typename:cameraDevice *", "kind": "member", "scope": "_delayedUpdateThreadArgs", "scopeKind": "struct"}, {"_type": "tag", "name": "deviceDriver", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/device/core/deviceDrivers/openHomeCamera/openHomeCameraDeviceDriver.c", "pattern": "/^static DeviceDriver* deviceDriver = NULL;$/", "file": true, "language": "C", "typeref": "typename:DeviceDriver *", "kind": "variable"}, {"_type": "tag", "name": "deviceRemoved", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/device/core/deviceDrivers/openHomeCamera/openHomeCameraDeviceDriver.c", "pattern": "/^static void deviceRemoved(void* ctx, icDevice* device)$/", "file": true, "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(void * ctx,icDevice * device)"}, {"_type": "tag", "name": "deviceServiceCallbacks", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/device/core/deviceDrivers/openHomeCamera/openHomeCameraDeviceDriver.c", "pattern": "/^static DeviceServiceCallbacks* deviceServiceCallbacks = NULL;$/", "file": true, "language": "C", "typeref": "typename:DeviceServiceCallbacks *", "kind": "variable"}, {"_type": "tag", "name": "discoverMutex", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/device/core/deviceDrivers/openHomeCamera/openHomeCameraDeviceDriver.c", "pattern": "/^static pthread_mutex_t discoverMutex = PTHREAD_MUTEX_INITIALIZER;    \\/\\/ mutex for discovery st/", "file": true, "language": "C", "typeref": "typename:pthread_mutex_t", "kind": "variable"}, {"_type": "tag", "name": "discoverStart", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/device/core/deviceDrivers/openHomeCamera/openHomeCameraDeviceDriver.c", "pattern": "/^static bool discoverStart(void* ctx, const char* deviceClass)$/", "file": true, "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(void * ctx,const char * deviceClass)"}, {"_type": "tag", "name": "discoverStop", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/device/core/deviceDrivers/openHomeCamera/openHomeCameraDeviceDriver.c", "pattern": "/^static void discoverStop(void* ctx, const char* deviceClass)$/", "file": true, "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(void * ctx,const char * deviceClass)"}, {"_type": "tag", "name": "discoveryRunning", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/device/core/deviceDrivers/openHomeCamera/openHomeCameraDeviceDriver.c", "pattern": "/^static bool discoveryRunning = false;       \\/\\/ keeps track of whether discovery is running or /", "file": true, "language": "C", "typeref": "typename:bool", "kind": "variable"}, {"_type": "tag", "name": "earlyFirmwareVersionCompare", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/device/core/deviceDrivers/openHomeCamera/openHomeCameraDeviceDriver.c", "pattern": "/^static cameraNeedsFirmwareState earlyFirmwareVersionCompare(cameraDevice *camera, DeviceDescript/", "file": true, "language": "C", "typeref": "typename:cameraNeedsFirmwareState", "kind": "function", "signature": "(cameraDevice * camera,DeviceDescriptor * dd)"}, {"_type": "tag", "name": "executeCameraEndpointResource", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/device/core/deviceDrivers/openHomeCamera/openHomeCameraDeviceDriver.c", "pattern": "/^static bool executeCameraEndpointResource(icDeviceResource* resource, const char* arg, char** re/", "file": true, "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(icDeviceResource * resource,const char * arg,char ** response)"}, {"_type": "tag", "name": "executeResource", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/device/core/deviceDrivers/openHomeCamera/openHomeCameraDeviceDriver.c", "pattern": "/^static bool executeResource(void* ctx, icDeviceResource* resource, const char* arg, char** respo/", "file": true, "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(void * ctx,icDeviceResource * resource,const char * arg,char ** response)"}, {"_type": "tag", "name": "executeSpeakerEndpointResource", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/device/core/deviceDrivers/openHomeCamera/openHomeCameraDeviceDriver.c", "pattern": "/^static bool executeSpeakerEndpointResource(icDeviceResource* resource, const char* arg, char** r/", "file": true, "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(icDeviceResource * resource,const char * arg,char ** response)"}, {"_type": "tag", "name": "extractStringResource", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/device/core/deviceDrivers/openHomeCamera/openHomeCameraDeviceDriver.c", "pattern": "/^static char* extractStringResource(const char* deviceUuid, const char* endpointId, const char* r/", "file": true, "language": "C", "typeref": "typename:char *", "kind": "function", "signature": "(const char * deviceUuid,const char * endpointId,const char * resourceId)"}, {"_type": "tag", "name": "fetchInitialResourceValues", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/device/core/deviceDrivers/openHomeCamera/openHomeCameraDeviceDriver.c", "pattern": "/^static bool fetchInitialResourceValues(void* ctx, icDevice* device, icInitialResourceValues *ini/", "file": true, "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(void * ctx,icDevice * device,icInitialResourceValues * initialResourceValues)"}, {"_type": "tag", "name": "getCamInfo", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/device/core/deviceDrivers/openHomeCamera/openHomeCameraDeviceDriver.c", "pattern": "/^static ohcmCameraInfo* getCamInfo(const char* deviceUuid)$/", "file": true, "language": "C", "typeref": "typename:ohcmCameraInfo *", "kind": "function", "signature": "(const char * deviceUuid)"}, {"_type": "tag", "name": "getCameraClassForModel", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/device/core/deviceDrivers/openHomeCamera/openHomeCameraDeviceDriver.c", "pattern": "/^static const char* getCameraClassForModel(char* model)$/", "file": true, "language": "C", "typeref": "typename:const char *", "kind": "function", "signature": "(char * model)"}, {"_type": "tag", "name": "getCameraUpgradeFilename", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/device/core/deviceDrivers/openHomeCamera/openHomeCameraDeviceDriver.c", "pattern": "/^static char* getCameraUpgradeFilename(icLinkedList* filenames)$/", "file": true, "language": "C", "typeref": "typename:char *", "kind": "function", "signature": "(icLinkedList * filenames)"}, {"_type": "tag", "name": "getMediaUrl", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/device/core/deviceDrivers/openHomeCamera/openHomeCameraDeviceDriver.c", "pattern": "/^static char* getMediaUrl(const char* ipAddress, const char* streamType, const char* codec)$/", "file": true, "language": "C", "typeref": "typename:char *", "kind": "function", "signature": "(const char * ipAddress,const char * streamType,const char * codec)"}, {"_type": "tag", "name": "getMotionBlackoutSeconds", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/device/core/deviceDrivers/openHomeCamera/openHomeCameraDeviceDriver.c", "pattern": "/^uint32_t getMotionBlackoutSeconds()$/", "language": "C", "typeref": "typename:uint32_t", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "getVideoInformation", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/device/core/deviceDrivers/openHomeCamera/openHomeCameraDeviceDriver.c", "pattern": "/^static cJSON* getVideoInformation(cameraDevice *camDevice)$/", "file": true, "language": "C", "typeref": "typename:cJSON *", "kind": "function", "signature": "(cameraDevice * camDevice)"}, {"_type": "tag", "name": "ipAddressRecoveryTask", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/device/core/deviceDrivers/openHomeCamera/openHomeCameraDeviceDriver.c", "pattern": "/^static uint32_t ipAddressRecoveryTask = 0;  \\/\\/ handle for the repeating ip address recovery ta/", "file": true, "language": "C", "typeref": "typename:uint32_t", "kind": "variable"}, {"_type": "tag", "name": "loadCameraPersistenceResources", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/device/core/deviceDrivers/openHomeCamera/openHomeCameraDeviceDriver.c", "pattern": "/^static void loadCameraPersistenceResources(cameraDevice* device)$/", "file": true, "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(cameraDevice * device)"}, {"_type": "tag", "name": "motionBlackoutSeconds", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/device/core/deviceDrivers/openHomeCamera/openHomeCameraDeviceDriver.c", "pattern": "/^static uint32_t motionBlackoutSeconds = 0;  \\/\\/ this is overwritten by value from server during/", "file": true, "language": "C", "typeref": "typename:uint32_t", "kind": "variable"}, {"_type": "tag", "name": "openHomeCameraDeviceDriverAddMigratedCamera", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/device/core/deviceDrivers/openHomeCamera/openHomeCameraDeviceDriver.c", "pattern": "/^bool openHomeCameraDeviceDriverAddMigratedCamera(cameraDevice *discovered, DeviceMigrator *migra/", "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(cameraDevice * discovered,DeviceMigrator * migrator)"}, {"_type": "tag", "name": "openHomeCameraDeviceDriverCreateCameraDevice", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/device/core/deviceDrivers/openHomeCamera/openHomeCameraDeviceDriver.c", "pattern": "/^openHomeCameraDeviceDriverCreateCameraDevice(const char *macAddress, const char *ipAddress, cons/", "language": "C", "typeref": "typename:cameraDevice *", "kind": "function", "signature": "(const char * macAddress,const char * ipAddress,const char * adminUserId,const char * adminPassword,bool fetchDetails)"}, {"_type": "tag", "name": "openHomeCameraDeviceDriverInitialize", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/device/core/deviceDrivers/openHomeCamera/openHomeCameraDeviceDriver.c", "pattern": "/^DeviceDriver* openHomeCameraDeviceDriverInitialize(DeviceServiceCallbacks* deviceService)$/", "language": "C", "typeref": "typename:DeviceDriver *", "kind": "function", "signature": "(DeviceServiceCallbacks * deviceService)"}, {"_type": "tag", "name": "pendingCameras", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/device/core/deviceDrivers/openHomeCamera/openHomeCameraDeviceDriver.c", "pattern": "/^static cameraSet *pendingCameras = NULL;    \\/\\/ list of cameraDevice objects - ones discovered /", "file": true, "language": "C", "typeref": "typename:cameraSet *", "kind": "variable"}, {"_type": "tag", "name": "performDelayedCameraUpdates", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/device/core/deviceDrivers/openHomeCamera/openHomeCameraDeviceDriver.c", "pattern": "/^static void performDelayedCameraUpdates(void* arg)$/", "file": true, "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(void * arg)"}, {"_type": "tag", "name": "performDelayedUpdate", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/device/core/deviceDrivers/openHomeCamera/openHomeCameraDeviceDriver.c", "pattern": "/^static void *performDelayedUpdate(void* arg)$/", "file": true, "language": "C", "typeref": "typename:void *", "kind": "function", "signature": "(void * arg)"}, {"_type": "tag", "name": "performIpAddressRecovery", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/device/core/deviceDrivers/openHomeCamera/openHomeCameraDeviceDriver.c", "pattern": "/^static void performIpAddressRecovery(void *arg)$/", "file": true, "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(void * arg)"}, {"_type": "tag", "name": "shutdownDriver", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/device/core/deviceDrivers/openHomeCamera/openHomeCameraDeviceDriver.c", "pattern": "/^static void shutdownDriver(void* ctx)$/", "file": true, "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(void * ctx)"}], "hash": "03db06fcf8c800fbc7c56850356150cd", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "components/opensource/zilker-sdk/source/services/device/core/deviceDrivers/openHomeCamera/openHomeCameraDeviceDriver.c", "fields": [{"name": "cameraSet * allCameras", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "uint32_t camerasDiscoveredCounter", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "cameraSet * configuringCameras", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "uint32_t delayedCameraMonitorThreadStartupTask", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "DeviceDescriptor * descriptor", "scope": "_delayedUpdateThreadArgs", "scopeKind": "struct", "description": "unavailable"}, {"name": "cameraDevice * device", "scope": "_delayedUpdateThreadArgs", "scopeKind": "struct", "description": "unavailable"}, {"name": "DeviceDriver * deviceDriver", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "DeviceServiceCallbacks * deviceServiceCallbacks", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "pthread_mutex_t discoverMutex", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "bool discoveryRunning", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "uint32_t ipAddressRecoveryTask", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "uint32_t motionBlackoutSeconds", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "cameraSet * pendingCameras", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"14181": ""}]}