{"is_source_file": true, "format": "Python", "description": "This file is a Python module for development tools, providing utility functions and classes for plugin management, command execution, version control interactions, and project environment setup within the openembedded-core build system.", "external_files": ["bb", "bb.tinfoil", "bb.process", "oe.patch", "bb.utils", "scriptpath", "errno"], "external_methods": ["bb.process.run", "bb.process.ExecutionError", "bb.process.call", "bb.tinfoil.Tinfoil", "bb.tinfoil.TinfoilUIException", "bb.providers.NoProvider", "bb.utils.edit_metadata", "bb.utils.mkdirhier", "bb.utils.GitApplyTree.gitCommandUserOptions", "bb.data.inherits_class"], "published": ["exec_build_env_command", "exec_watch", "exec_fakeroot", "setup_tinfoil", "parse_recipe", "check_workspace_recipe", "use_external_build", "setup_git_repo", "recipe_to_append", "get_bbclassextend_targets", "replace_from_file", "update_unlockedsigs", "check_prerelease_version", "check_git_repo_dirty", "check_git_repo_op"], "classes": [{"name": "DevtoolError", "description": "Custom exception class for handling errors within the devtool utility"}], "methods": [{"name": "exec_build_env_command(init_path, builddir, cmd, watch=False, **options)", "description": "Executes a command within the bitbake build environment, optionally watching output and handling init scripts.", "scope": "", "scopeKind": ""}, {"name": "exec_watch(cmd, **options)", "description": "Runs a command with real-time output shown on sys.stdout, raising an error if execution fails.", "scope": "", "scopeKind": ""}, {"name": "exec_fakeroot(d, cmd, **kwargs)", "description": "Runs a command under fakeroot to simulate root permissions with proper file permissions setup.", "scope": "", "scopeKind": ""}, {"name": "setup_tinfoil(config_only=False, basepath=None, tracking=False)", "description": "Initializes the tinfoil API for interacting with bitbake environment, optionally in a specific basepath.", "scope": "", "scopeKind": ""}, {"name": "parse_recipe(config, tinfoil, pn, appends, filter_workspace=True)", "description": "Parses a recipe file using the tinfoil interface, with filtering options for workspace appends.", "scope": "", "scopeKind": ""}, {"name": "check_workspace_recipe(workspace, pn, checksrc=True, bbclassextend=False)", "description": "Validates that a recipe exists in the workspace and optionally verifies source code availability.", "scope": "", "scopeKind": ""}, {"name": "use_external_build(same_dir, no_same_dir, d)", "description": "Determines whether to use separate build and source directories based on user options and recipe inheritance.", "scope": "", "scopeKind": ""}, {"name": "setup_git_repo(repodir, version, devbranch, basetag='devtool-base', d=None)", "description": "Initializes and configures a git repository for source code, including setting tags and ignoring specific files.", "scope": "", "scopeKind": ""}, {"name": "recipe_to_append(recipefile, config, wildcard=False)", "description": "Generates the path for the bbappend file corresponding to a given recipe file.", "scope": "", "scopeKind": ""}, {"name": "get_bbclassextend_targets(recipefile, pn)", "description": "Retrieves the list of target machine variants based on the BBCLASSEXTEND variable in a recipe.", "scope": "", "scopeKind": ""}, {"name": "replace_from_file(path, old, new)", "description": "Replaces occurrences of a string in a file with a new string.", "scope": "", "scopeKind": ""}, {"name": "update_unlockedsigs(basepath, workspace, fixed_setup, extra=None)", "description": "Updates the list of unlocked signatures in the configuration, writing changes if needed.", "scope": "", "scopeKind": ""}, {"name": "check_prerelease_version(ver, operation)", "description": "Logs a warning if the provided version string indicates a pre-release version.", "scope": "", "scopeKind": ""}, {"name": "check_git_repo_dirty(repodir)", "description": "Checks if a git repository has uncommitted changes.", "scope": "", "scopeKind": ""}, {"name": "check_git_repo_op(srctree, ignoredirs=None)", "description": "Checks if a git repository is in the middle of a rebase or apply operation.", "scope": "", "scopeKind": ""}, {"name": "__init__(self, message, exitcode=1)", "scope": "DevtoolError", "scopeKind": "class", "description": "unavailable"}, {"name": "get_bbclassextend_varfunc(varname, origvalue, op, newlines)", "scope": "get_bbclassextend_targets", "scopeKind": "function", "description": "unavailable"}, {"name": "get_unlockedsigs_varfunc(varname, origvalue, op, newlines)", "scope": "update_unlockedsigs", "scopeKind": "function", "description": "unavailable"}, {"name": "read_file(path)", "scope": "replace_from_file", "scopeKind": "function", "description": "unavailable"}, {"name": "write_file(path, data)", "scope": "replace_from_file", "scopeKind": "function", "description": "unavailable"}], "calls": ["bb.process.run", "bb.process.ExecutionError", "bb.tinfoil.Tinfoil", "bb.utils.edit_metadata", "bb.utils.mkdirhier", "bb.utils.GitApplyTree.gitCommandUserOptions", "bb.data.inherits_class"], "search-terms": ["devtool", "bb", "tinfoil", "git", "recipe", "workspace", "bbappend", "metadata", "rebase", "fakedroot", "bitbake"], "state": 2, "file_id": 1462, "knowledge_revision": 14611, "git_revision": "", "ctags": [{"_type": "tag", "name": "DevtoolError", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/devtool/__init__.py", "pattern": "/^class DevtoolError(Exception):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/devtool/__init__.py", "pattern": "/^    def __init__(self, message, exitcode=1):$/", "language": "Python", "kind": "member", "signature": "(self, message, exitcode=1)", "scope": "DevtoolError", "scopeKind": "class"}, {"_type": "tag", "name": "check_git_repo_dirty", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/devtool/__init__.py", "pattern": "/^def check_git_repo_dirty(repodir):$/", "language": "Python", "kind": "function", "signature": "(repodir)"}, {"_type": "tag", "name": "check_git_repo_op", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/devtool/__init__.py", "pattern": "/^def check_git_repo_op(srctree, ignoredirs=None):$/", "language": "Python", "kind": "function", "signature": "(srctree, ignoredirs=None)"}, {"_type": "tag", "name": "check_prerelease_version", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/devtool/__init__.py", "pattern": "/^def check_prerelease_version(ver, operation):$/", "language": "Python", "kind": "function", "signature": "(ver, operation)"}, {"_type": "tag", "name": "check_workspace_recipe", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/devtool/__init__.py", "pattern": "/^def check_workspace_recipe(workspace, pn, checksrc=True, bbclassextend=False):$/", "language": "Python", "kind": "function", "signature": "(workspace, pn, checksrc=True, bbclassextend=False)"}, {"_type": "tag", "name": "exec_build_env_command", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/devtool/__init__.py", "pattern": "/^def exec_build_env_command(init_path, builddir, cmd, watch=False, **options):$/", "language": "Python", "kind": "function", "signature": "(init_path, builddir, cmd, watch=False, **options)"}, {"_type": "tag", "name": "exec_fakeroot", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/devtool/__init__.py", "pattern": "/^def exec_fakeroot(d, cmd, **kwargs):$/", "language": "Python", "kind": "function", "signature": "(d, cmd, **kwargs)"}, {"_type": "tag", "name": "exec_watch", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/devtool/__init__.py", "pattern": "/^def exec_watch(cmd, **options):$/", "language": "Python", "kind": "function", "signature": "(cmd, **options)"}, {"_type": "tag", "name": "get_bbclassextend_targets", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/devtool/__init__.py", "pattern": "/^def get_bbclassextend_targets(recipefile, pn):$/", "language": "Python", "kind": "function", "signature": "(recipefile, pn)"}, {"_type": "tag", "name": "get_bbclassextend_varfunc", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/devtool/__init__.py", "pattern": "/^    def get_bbclassextend_varfunc(varname, origvalue, op, newlines):$/", "file": true, "language": "Python", "kind": "function", "signature": "(varname, origvalue, op, newlines)", "scope": "get_bbclassextend_targets", "scopeKind": "function"}, {"_type": "tag", "name": "get_unlockedsigs_varfunc", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/devtool/__init__.py", "pattern": "/^    def get_unlockedsigs_varfunc(varname, origvalue, op, newlines):$/", "file": true, "language": "Python", "kind": "function", "signature": "(varname, origvalue, op, newlines)", "scope": "update_unlockedsigs", "scopeKind": "function"}, {"_type": "tag", "name": "logger", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/devtool/__init__.py", "pattern": "/^logger = logging.getLogger('devtool')$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "parse_recipe", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/devtool/__init__.py", "pattern": "/^def parse_recipe(config, tinfoil, pn, appends, filter_workspace=True):$/", "language": "Python", "kind": "function", "signature": "(config, tinfoil, pn, appends, filter_workspace=True)"}, {"_type": "tag", "name": "read_file", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/devtool/__init__.py", "pattern": "/^    def read_file(path):$/", "file": true, "language": "Python", "kind": "function", "signature": "(path)", "scope": "replace_from_file", "scopeKind": "function"}, {"_type": "tag", "name": "recipe_to_append", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/devtool/__init__.py", "pattern": "/^def recipe_to_append(recipefile, config, wildcard=False):$/", "language": "Python", "kind": "function", "signature": "(recipefile, config, wildcard=False)"}, {"_type": "tag", "name": "replace_from_file", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/devtool/__init__.py", "pattern": "/^def replace_from_file(path, old, new):$/", "language": "Python", "kind": "function", "signature": "(path, old, new)"}, {"_type": "tag", "name": "setup_git_repo", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/devtool/__init__.py", "pattern": "/^def setup_git_repo(repodir, version, devbranch, basetag='devtool-base', d=None):$/", "language": "Python", "kind": "function", "signature": "(repodir, version, devbranch, basetag='devtool-base', d=None)"}, {"_type": "tag", "name": "setup_tinfoil", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/devtool/__init__.py", "pattern": "/^def setup_tinfoil(config_only=False, basepath=None, tracking=False):$/", "language": "Python", "kind": "function", "signature": "(config_only=False, basepath=None, tracking=False)"}, {"_type": "tag", "name": "update_unlockedsigs", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/devtool/__init__.py", "pattern": "/^def update_unlockedsigs(basepath, workspace, fixed_setup, extra=None):$/", "language": "Python", "kind": "function", "signature": "(basepath, workspace, fixed_setup, extra=None)"}, {"_type": "tag", "name": "use_external_build", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/devtool/__init__.py", "pattern": "/^def use_external_build(same_dir, no_same_dir, d):$/", "language": "Python", "kind": "function", "signature": "(same_dir, no_same_dir, d)"}, {"_type": "tag", "name": "write_file", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/devtool/__init__.py", "pattern": "/^    def write_file(path, data):$/", "file": true, "language": "Python", "kind": "function", "signature": "(path, data)", "scope": "replace_from_file", "scopeKind": "function"}], "hash": "be510b63d8bfcfc4cc4ce15d0f5bf17e", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "openembedded-core/scripts/lib/devtool/__init__.py", "fields": [{"name": "logger = logging.getLogger('devtool')", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"14611": ""}]}