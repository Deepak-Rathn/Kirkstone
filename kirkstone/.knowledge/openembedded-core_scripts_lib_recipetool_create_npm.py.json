{"is_source_file": true, "format": "Python", "description": "This file implements a recipe creation support plugin specifically for handling npm modules within a build system. It includes classes and functions for managing npm dependencies, generating shrinkwrap files, and creating recipes for npm-based packages.", "external_files": ["bb", "bb.fetch2.npm", "bb.fetch2.npmsw", "recipetool.create"], "external_methods": ["bb.utils.edit_metadata", "bb.utils.copyfile", "bb.utils.movefile", "bb.utils.remove", "bb.utils.md5_file", "bb.error", "bb.note", "bb.fetch2.Fetch", "bb.data.createCopy", "bb.utils.to_boolean", "logger"], "published": ["NpmRecipeHandler"], "classes": [{"name": "NpmRecipeHandler", "description": "Class to handle the creation of recipes for npm modules, including dependency management, license handling, and shrinkwrap generation."}], "methods": [{"name": "_npm_name(name)", "description": "Generates a Yocto-friendly npm package name by normalizing slashes and removing invalid characters.", "scope": "NpmRecipeHandler", "scopeKind": "class"}, {"name": "_get_registry(lines)", "description": "Extracts the registry URL from the SRC_URI lines.", "scope": "NpmRecipeHandler", "scopeKind": "class"}, {"name": "_ensure_npm()", "description": "Checks if the npm command is available, and attempts to add it to the sysroot if missing.", "scope": "NpmRecipeHandler", "scopeKind": "class"}, {"name": "_npm_global_configs(dev)", "description": "Returns a list of global npm configuration options based on development or production environment.", "scope": "NpmRecipeHandler", "scopeKind": "class"}, {"name": "_run_npm_install(self, d, srctree, registry, dev)", "description": "Runs 'npm install' with appropriate configurations.", "scope": "NpmRecipeHandler", "scopeKind": "class"}, {"name": "_generate_shrinkwrap(self, d, srctree, dev)", "description": "Generates an npm-shrinkwrap.json file if needed.", "scope": "NpmRecipeHandler", "scopeKind": "class"}, {"name": "_handle_licenses(self, srctree, shrinkwrap_file, dev)", "description": "Analyzes license files of installed npm packages and handles fallback README/license files.", "scope": "NpmRecipeHandler", "scopeKind": "class"}, {"name": "process(self, srctree, classes, lines_before, lines_after, handled, extravalues)", "description": "Main method to process a directory for npm package recipe creation, including dependency fetching, license handling, and recipe metadata updates.", "scope": "NpmRecipeHandler", "scopeKind": "class"}, {"name": "_guess_odd_license(licfiles)", "scope": "NpmRecipeHandler.process", "scopeKind": "member", "description": "unavailable"}, {"name": "_handle_dependency(name, params, deptree)", "scope": "NpmRecipeHandler._handle_licenses", "scopeKind": "member", "description": "unavailable"}, {"name": "_handle_registry(varname, origvalue, op, newlines)", "scope": "NpmRecipeHandler._get_registry", "scopeKind": "member", "description": "unavailable"}, {"name": "_handle_srcuri(varname, origvalue, op, newlines)", "scope": "NpmRecipeHandler.process", "scopeKind": "member", "description": "unavailable"}, {"name": "_licfiles_append_fallback_readme_files(destdir)", "scope": "NpmRecipeHandler._handle_licenses", "scopeKind": "member", "description": "unavailable"}, {"name": "register_recipe_handlers(handlers)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "tinfoil_init(instance)", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["bb.utils.edit_metadata", "bb.utils.copyfile", "bb.utils.movefile", "bb.utils.remove", "bb.utils.md5_file", "bb.fetch2.npm.NpmEnvironment", "bb.fetch2.npmsw.foreach_dependencies", "bb.data.createCopy", "bb.utils.to_boolean", "bb.utils.exists", "bb.utils.copyfile", "bb.utils.movefile", "bb.utils.remove", "bb.utils.md5_file", "bb.fetch2.Fetch"], "search-terms": ["npm", "recipe creation", "shrinkwrap", "license handling", "dependency management", "npm-shrinkwrap.json", "npmsw", "create_npm"], "state": 2, "file_id": 1432, "knowledge_revision": 14580, "git_revision": "", "ctags": [{"_type": "tag", "name": "NpmRecipeHandler", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/recipetool/create_npm.py", "pattern": "/^class NpmRecipeHandler(RecipeHandler):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "TINFOIL", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/recipetool/create_npm.py", "pattern": "/^TINFOIL = None$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "_ensure_npm", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/recipetool/create_npm.py", "pattern": "/^    def _ensure_npm():$/", "language": "Python", "kind": "member", "signature": "()", "scope": "NpmRecipeHandler", "scopeKind": "class"}, {"_type": "tag", "name": "_generate_shrinkwrap", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/recipetool/create_npm.py", "pattern": "/^    def _generate_shrinkwrap(self, d, srctree, dev):$/", "language": "Python", "kind": "member", "signature": "(self, d, srctree, dev)", "scope": "NpmRecipeHandler", "scopeKind": "class"}, {"_type": "tag", "name": "_get_registry", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/recipetool/create_npm.py", "pattern": "/^    def _get_registry(lines):$/", "language": "Python", "kind": "member", "signature": "(lines)", "scope": "NpmRecipeHandler", "scopeKind": "class"}, {"_type": "tag", "name": "_guess_odd_license", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/recipetool/create_npm.py", "pattern": "/^        def _guess_odd_license(licfiles):$/", "file": true, "language": "Python", "kind": "function", "signature": "(licfiles)", "scope": "NpmRecipeHandler.process", "scopeKind": "member"}, {"_type": "tag", "name": "_handle_dependency", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/recipetool/create_npm.py", "pattern": "/^        def _handle_dependency(name, params, deptree):$/", "file": true, "language": "Python", "kind": "function", "signature": "(name, params, deptree)", "scope": "NpmRecipeHandler._handle_licenses", "scopeKind": "member"}, {"_type": "tag", "name": "_handle_licenses", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/recipetool/create_npm.py", "pattern": "/^    def _handle_licenses(self, srctree, shrinkwrap_file, dev):$/", "language": "Python", "kind": "member", "signature": "(self, srctree, shrinkwrap_file, dev)", "scope": "NpmRecipeHandler", "scopeKind": "class"}, {"_type": "tag", "name": "_handle_registry", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/recipetool/create_npm.py", "pattern": "/^        def _handle_registry(varname, origvalue, op, newlines):$/", "file": true, "language": "Python", "kind": "function", "signature": "(varname, origvalue, op, newlines)", "scope": "NpmRecipeHandler._get_registry", "scopeKind": "member"}, {"_type": "tag", "name": "_handle_srcuri", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/recipetool/create_npm.py", "pattern": "/^        def _handle_srcuri(varname, origvalue, op, newlines):$/", "file": true, "language": "Python", "kind": "function", "signature": "(varname, origvalue, op, newlines)", "scope": "NpmRecipeHandler.process", "scopeKind": "member"}, {"_type": "tag", "name": "_licfiles_append_fallback_readme_files", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/recipetool/create_npm.py", "pattern": "/^        def _licfiles_append_fallback_readme_files(destdir):$/", "file": true, "language": "Python", "kind": "function", "signature": "(destdir)", "scope": "NpmRecipeHandler._handle_licenses", "scopeKind": "member"}, {"_type": "tag", "name": "_npm_global_configs", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/recipetool/create_npm.py", "pattern": "/^    def _npm_global_configs(dev):$/", "language": "Python", "kind": "member", "signature": "(dev)", "scope": "NpmRecipeHandler", "scopeKind": "class"}, {"_type": "tag", "name": "_npm_name", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/recipetool/create_npm.py", "pattern": "/^    def _npm_name(name):$/", "language": "Python", "kind": "member", "signature": "(name)", "scope": "NpmRecipeHandler", "scopeKind": "class"}, {"_type": "tag", "name": "_run_npm_install", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/recipetool/create_npm.py", "pattern": "/^    def _run_npm_install(self, d, srctree, registry, dev):$/", "language": "Python", "kind": "member", "signature": "(self, d, srctree, registry, dev)", "scope": "NpmRecipeHandler", "scopeKind": "class"}, {"_type": "tag", "name": "logger", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/recipetool/create_npm.py", "pattern": "/^logger = logging.getLogger('recipetool')$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "process", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/recipetool/create_npm.py", "pattern": "/^    def process(self, srctree, classes, lines_before, lines_after, handled, extravalues):$/", "language": "Python", "kind": "member", "signature": "(self, srctree, classes, lines_before, lines_after, handled, extravalues)", "scope": "NpmRecipeHandler", "scopeKind": "class"}, {"_type": "tag", "name": "register_recipe_handlers", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/recipetool/create_npm.py", "pattern": "/^def register_recipe_handlers(handlers):$/", "language": "Python", "kind": "function", "signature": "(handlers)"}, {"_type": "tag", "name": "tinfoil_init", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/recipetool/create_npm.py", "pattern": "/^def tinfoil_init(instance):$/", "language": "Python", "kind": "function", "signature": "(instance)"}], "hash": "d2ae007d98b21096e1e7274cd5248708", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "openembedded-core/scripts/lib/recipetool/create_npm.py", "fields": [{"name": "TINFOIL = None", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "logger = logging.getLogger('recipetool')", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"14580": ""}]}