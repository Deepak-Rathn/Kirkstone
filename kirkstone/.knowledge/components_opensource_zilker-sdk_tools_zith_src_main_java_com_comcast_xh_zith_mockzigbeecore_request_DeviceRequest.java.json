{"is_source_file": true, "format": "Java", "description": "This Java source file defines an abstract class 'DeviceRequest' which extends 'Request'. It manages device-specific requests within a mock Zigbee environment, including invoking requests and handling device availability and online status.", "external_files": ["com.comcast.xh.zith.device.MockZigbeeDevice", "com.comcast.xh.zith.mockzigbeecore.MockZigbeeCore", "org.slf4j.Logger", "org.slf4j.LoggerFactory"], "external_methods": ["MockZigbeeCore.getInstance()", "MockZigbeeCore.getDevice(String eui64)", "device.isOnline()", "new Response(requestId, int, String).send()", "executeDeviceRequest(MockZigbeeDevice)"], "published": ["DeviceRequest"], "classes": [{"name": "DeviceRequest", "description": "An abstract class representing a device-specific request in a mock Zigbee environment, handling execution flow based on device presence and status."}], "methods": [{"name": "DeviceRequest", "description": "Constructor initializing the device request with request ID, device EUI64, and response type."}, {"name": "execute", "description": "Executes the device request, checking device existence and online status, and invoking the device-specific request logic."}, {"name": "executeDeviceRequest", "description": "Abstract method to be implemented in subclasses, defining the specific behavior for the device request."}], "calls": ["MockZigbeeCore.getInstance()", "MockZigbeeCore.getDevice(eui64)", "device.isOnline()", "new Response(requestId, -1, responseType).send()", "executeDeviceRequest(device)"], "search-terms": ["abstract class DeviceRequest", "Zigbee device request", "MockZigbeeCore", "ResponseType", "device execution flow"], "state": 2, "file_id": 414, "knowledge_revision": 13585, "git_revision": "", "hash": "81c683da36b5794049a93e3cc4bc1a55", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "components/opensource/zilker-sdk/tools/zith/src/main/java/com/comcast/xh/zith/mockzigbeecore/request/DeviceRequest.java", "revision_history": [{"13585": ""}]}