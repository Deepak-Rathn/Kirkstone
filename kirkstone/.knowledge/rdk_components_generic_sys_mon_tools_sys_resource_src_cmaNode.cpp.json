{"is_source_file": true, "format": "C++", "description": "This file defines the implementation of the CmaNode class, which manages memory cluster nodes, including tracking memory allocations, associated metadata such as file and line number, and maintaining statistics like total and maximum allocations. It includes methods for inserting new records, copying, and calculating totals.", "external_files": ["cmaNode.h", "dbgMLT.h", "zmalloc.h"], "external_methods": ["zmalloc()", "zfree()", "AVLNode<int,int>::GetDataPtr()", "AVLTreeInOrderIterator<int,int>::operator*()", "AVLTreeInOrderIterator<int,int>::getNode()", "asizes.Insert()"], "published": ["CmaNode"], "classes": [{"name": "CmaNode", "description": "A class representing a node for managing memory allocation metrics, tracking allocation sizes, counts, associated files, lines, and providing statistics on total and maximum allocations."}], "methods": [{"name": "CmaNode::CmaNode", "description": "Constructor initializing a CmaNode with size, count, file, and line information."}, {"name": "CmaNode::CmaNode (copy constructor)", "description": "Creates a copy of an existing CmaNode, duplicating its allocation metrics and metadata."}, {"name": "CmaNode::operator=", "description": "Assignment operator to copy data from another CmaNode."}, {"name": "CmaNode::Insert (char*, int)", "description": "Sets the file and line metadata for the node."}, {"name": "CmaNode::Insert (unsigned int, unsigned int)", "description": "Inserts an allocation size and count into the sizes tracking structure."}, {"name": "CmaNode::SetTotal", "description": "Calculates total allocations and sizes by iterating over stored size classes, updating max and current statistics."}, {"name": "CmaNode::Insert (unsigned int, unsigned int, char*, int)", "description": "Inserts allocation size, count, file, and line metadata into the node."}, {"name": "CmaNode(const CmaNode & rhs)", "scope": "CmaNode", "scopeKind": "class", "description": "unavailable"}, {"name": "CmaNode(unsigned int asize,unsigned int scount,char * _file,int _line)", "scope": "CmaNode", "scopeKind": "class", "description": "unavailable"}, {"name": "void Insert(char * file,int line)", "scope": "CmaNode", "scopeKind": "class", "description": "unavailable"}, {"name": "void Insert(unsigned int asize,unsigned int scount)", "scope": "CmaNode", "scopeKind": "class", "description": "unavailable"}, {"name": "void Insert(unsigned int asize,unsigned int scount,char * file,int line)", "scope": "CmaNode", "scopeKind": "class", "description": "unavailable"}, {"name": "void SetTotal()", "scope": "CmaNode", "scopeKind": "class", "description": "unavailable"}, {"name": "CmaNode & operator =(const CmaNode & rhs)", "scope": "CmaNode", "scopeKind": "class", "description": "unavailable"}], "calls": ["zmalloc()", "zfree()", "sizes.Insert()", "cmaNode->GetDataPtr()", "(*sizesIt).getNode()"], "search-terms": ["CmaNode", "memory allocation metrics", "AVLTreeInOrderIterator", "stats total allocations", "memory tracking node"], "state": 2, "file_id": 12541, "knowledge_revision": 25436, "git_revision": "", "ctags": [{"_type": "tag", "name": "CmaNode", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/sys_mon_tools/sys_resource/src/cmaNode.cpp", "pattern": "/^CmaNode::CmaNode(const CmaNode& rhs) : AllocMetrics(rhs.curAllocs, rhs.curAllocsSize, rhs.curInc/", "language": "C++", "kind": "function", "signature": "(const CmaNode & rhs)", "scope": "CmaNode", "scopeKind": "class"}, {"_type": "tag", "name": "CmaNode", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/sys_mon_tools/sys_resource/src/cmaNode.cpp", "pattern": "/^CmaNode::CmaNode(unsigned int asize, unsigned int scount, char *_file, int _line) : AllocMetrics/", "language": "C++", "kind": "function", "signature": "(unsigned int asize,unsigned int scount,char * _file,int _line)", "scope": "CmaNode", "scopeKind": "class"}, {"_type": "tag", "name": "Insert", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/sys_mon_tools/sys_resource/src/cmaNode.cpp", "pattern": "/^void CmaNode::Insert(char *file, int line)$/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(char * file,int line)", "scope": "CmaNode", "scopeKind": "class"}, {"_type": "tag", "name": "Insert", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/sys_mon_tools/sys_resource/src/cmaNode.cpp", "pattern": "/^void CmaNode::Insert(unsigned int asize, unsigned int scount)$/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(unsigned int asize,unsigned int scount)", "scope": "CmaNode", "scopeKind": "class"}, {"_type": "tag", "name": "Insert", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/sys_mon_tools/sys_resource/src/cmaNode.cpp", "pattern": "/^void CmaNode::Insert(unsigned int asize, unsigned int scount, char *file, int line)$/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(unsigned int asize,unsigned int scount,char * file,int line)", "scope": "CmaNode", "scopeKind": "class"}, {"_type": "tag", "name": "SetTotal", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/sys_mon_tools/sys_resource/src/cmaNode.cpp", "pattern": "/^void CmaNode::SetTotal()$/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "()", "scope": "CmaNode", "scopeKind": "class"}, {"_type": "tag", "name": "operator =", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/sys_mon_tools/sys_resource/src/cmaNode.cpp", "pattern": "/^CmaNode &CmaNode::operator= (const CmaNode &rhs)$/", "language": "C++", "typeref": "typename:CmaNode &", "kind": "function", "signature": "(const CmaNode & rhs)", "scope": "CmaNode", "scopeKind": "class"}], "hash": "7cb04489ddfbc8d93e9b4620513bbd66", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "rdk/components/generic/sys_mon_tools/sys_resource/src/cmaNode.cpp", "revision_history": [{"25436": ""}]}