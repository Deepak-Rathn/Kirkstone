{"is_source_file": true, "format": "Shell script (sh)", "description": "A shell script that automates the process of installing a Linux image onto a specified drive. It detects available drives, partitions the selected drive, formats partitions, copies root filesystem and boot files, sets up EFI boot configuration, and reboots the system.", "external_files": ["/etc/udev/rules.d/automount.rules", "/etc/udev/scripts/mount*", "/proc/mounts", "/run/media/$1/vmlinuz", "/run/media/$1/EFI/BOOT/*.efi", "/run/media/$1/EFI/BOOT/grub.cfg", "/run/media/$1/loader/entries/*.conf"], "external_methods": ["cat", "sleep", "read", "grep", "cut", "sed", "dd", "parted", "mkfs.vfat", "mkfs.ext3", "mount", "umount", "cp", "touch", "rm", "reboot"], "published": [], "classes": [], "methods": [], "calls": ["cat /sys/block/${device}/removable", "sleep 5", "read answer", "grep '^Disk .*: .*MB'", "cut -d\" \" -f 3", "sed -e \"s/MB//\"", "parted /dev/${device} mklabel gpt", "parted /dev/${device} mkpart primary 0% $boot_size", "parted /dev/${device} set 1 boot on", "parted /dev/${device} mkpart primary $rootfs_start $rootfs_end", "parted /dev/${device} mkpart primary $testfs_start 100%", "mkfs.vfat -n \"boot\" $bootfs", "mkfs.ext3 -L \"platform\" $rootfs", "mkfs.ext3 -L \"testrootfs\" $testfs", "mount $rootfs /ssd", "mount -o rw,loop,noatime,nodiratime /run/media/$1/$2 /rootmnt", "cp -a /rootmnt/* /ssd", "touch /ssd/etc/controllerimage", "echo \"/dev/${device}\" >> /ssd/etc/udev/mount.ignorelist", "umount /ssd", "umount /rootmnt", "mount $bootfs /ssd", "cp /run/media/$1/vmlinuz /ssd", "cp /run/media/$1/EFI/BOOT/*.efi $EFIDIR", "sed -i \"/menuentry 'install'/,/^}/d\" $GRUBCFG", "sed -i \"/initrd /d\" $GRUBCFG", "sed -i \"s/ LABEL=[^ ]*/ /\" $GRUBCFG", "sed -i \"s/ root=[^ ]*/ /\" $GRUBCFG", "sed -i \"s@linux /vmlinuz *@linux /vmlinuz root=$rootfs rw $rootwait quiet @\" $GRUBCFG", "sed -i \"/initrd /d\" $SYSTEMDBOOT_CFGS", "sed -i \"s/ LABEL=[^ ]*/ /\" $SYSTEMDBOOT_CFGS", "sed -i \"s/ root=[^ ]*/ /\" $SYSTEMDBOOT_CFGS", "sed -i \"s@options *@options root=$rootfs rw $rootwait quiet @\" $SYSTEMDBOOT_CFGS", "echo -ne \"title test\\nlinux /test-kernel\\noptions root=$testfs rw $rootwait quiet\\n\" > /ssd/loader/entries/test.conf", "sync", "reboot -f"], "search-terms": ["init-install-efi-testfs", "shell script", "disk partitioning", "EFI boot setup", "drive detection", "filesystem creation", "bootloader config"], "state": 2, "file_id": 1757, "knowledge_revision": 14908, "git_revision": "", "hash": "b6ce7e3140eb71b619ac7cdb459d6691", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "openembedded-core/meta/recipes-core/initrdscripts/files/init-install-efi-testfs.sh", "revision_history": [{"14908": ""}]}