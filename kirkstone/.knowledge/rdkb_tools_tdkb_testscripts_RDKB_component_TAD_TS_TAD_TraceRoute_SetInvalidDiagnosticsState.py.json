{"is_source_file": true, "format": "Python", "description": "This script tests the behavior of setting an invalid diagnostics state for the TraceRoute diagnostic feature within a broadband device. It uses TDK scripting libraries to interact with device modules, attempting to set an invalid value and validating that the operation fails as expected.", "external_files": ["tdklib"], "external_methods": ["TDKScriptingLibrary", "createTestStep", "addParameter", "executeTestCase", "getResult", "getResultDetails", "setResultStatus", "configureTestCase", "getLoadModuleResult", "setLoadModuleStatus", "unloadModule"], "published": ["Device.IP.Diagnostics.TraceRoute.DiagnosticsState"], "classes": [{"name": "TDKScriptingLibrary", "description": "A wrapper class providing methods to interact with TDK test components, load modules, create test steps, and validate results."}], "methods": [{"name": "createTestStep", "description": "Creates a test step object for a specified test action."}, {"name": "addParameter", "description": "Adds a parameter with a specified name and value to the test step."}, {"name": "executeTestCase", "description": "Executes the configured test case and captures the expected result."}, {"name": "getResult", "description": "Retrieves the actual outcome of the test case execution."}, {"name": "getResultDetails", "description": "Fetches detailed information about the test execution result."}, {"name": "setResultStatus", "description": "Sets the overall status (PASS/FAIL) of the test step."}, {"name": "configureTestCase", "description": "Initializes the test case with IP, port, and test name."}, {"name": "getLoadModuleResult", "description": "Checks whether the module was loaded successfully."}, {"name": "setLoadModuleStatus", "description": "Sets the status of module loading (SUCCESS/FAILURE)."}, {"name": "unloadModule", "description": "Unloads the previously loaded module."}], "calls": ["tdklib.TDKScriptingLibrary", "tdklib.TDKScriptingLibrary.createTestStep", "tdklib.TDKScriptingLibrary.addParameter", "tdklib.TDKScriptingLibrary.executeTestCase", "tdklib.TDKScriptingLibrary.getResult", "tdklib.TDKScriptingLibrary.getResultDetails", "tdklib.TDKScriptingLibrary.setResultStatus", "tdklib.TDKScriptingLibrary.configureTestCase", "tdklib.TDKScriptingLibrary.getLoadModuleResult", "tdklib.TDKScriptingLibrary.setLoadModuleStatus", "tdklib.TDKScriptingLibrary.unloadModule"], "search-terms": ["TraceRoute.DiagnosticsState", "TADstub_Set", "InvalidDiagnosticsState", "NegativeTest", "Device.IP.Diagnostics.TraceRoute"], "state": 2, "file_id": 4414, "knowledge_revision": 17539, "git_revision": "", "ctags": [{"_type": "tag", "name": "actualresult", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/testscripts/RDKB/component/TAD/TS_TAD_TraceRoute_SetInvalidDiagnosticsState.py", "pattern": "/^    actualresult = tdkTestObj.getResult();$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "details", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/testscripts/RDKB/component/TAD/TS_TAD_TraceRoute_SetInvalidDiagnosticsState.py", "pattern": "/^    details = tdkTestObj.getResultDetails();$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "expectedresult", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/testscripts/RDKB/component/TAD/TS_TAD_TraceRoute_SetInvalidDiagnosticsState.py", "pattern": "/^    expectedresult=\"FAILURE\";$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "ip", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/testscripts/RDKB/component/TAD/TS_TAD_TraceRoute_SetInvalidDiagnosticsState.py", "pattern": "/^ip = <ipaddress>$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "loadmodulestatus", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/testscripts/RDKB/component/TAD/TS_TAD_TraceRoute_SetInvalidDiagnosticsState.py", "pattern": "/^loadmodulestatus =obj.getLoadModuleResult();$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "obj", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/testscripts/RDKB/component/TAD/TS_TAD_TraceRoute_SetInvalidDiagnosticsState.py", "pattern": "/^obj = tdklib.TDKScriptingLibrary(\"tad\",\"1\");$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "port", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/testscripts/RDKB/component/TAD/TS_TAD_TraceRoute_SetInvalidDiagnosticsState.py", "pattern": "/^port = <port>$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "tdkTestObj", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/testscripts/RDKB/component/TAD/TS_TAD_TraceRoute_SetInvalidDiagnosticsState.py", "pattern": "/^    tdkTestObj = obj.createTestStep('TADstub_Set');$/", "language": "Python", "kind": "variable"}], "hash": "bf25c26bdcdec02bf8e32bfe1b4f573a", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "rdkb/tools/tdkb/testscripts/RDKB/component/TAD/TS_TAD_TraceRoute_SetInvalidDiagnosticsState.py", "fields": [{"name": "actualresult = tdkTestObj.getResult();", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "details = tdkTestObj.getResultDetails();", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "expectedresult=\"FAILURE\";", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "ip = <ipaddress>", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "loadmodulestatus =obj.getLoadModuleResult();", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "obj = tdklib.TDKScriptingLibrary(\"tad\",\"1\");", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "port = <port>", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "tdkTestObj = obj.createTestStep('TADstub_Set');", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"17539": ""}]}