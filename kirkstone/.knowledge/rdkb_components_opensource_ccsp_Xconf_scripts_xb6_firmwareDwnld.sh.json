{"is_source_file": true, "format": "shell script", "description": "This file is a shell script used for managing firmware download and update processes on a device. It contains functions for fetching firmware details from a server, handling different connection protocols (direct or Codebig), scheduling updates, and performing related utilities like reboot management and resource cleanup.", "external_files": ["/etc/rdk/stateRedRecoveryUtils.sh", "/lib/rdk/getpartnerid.sh", "/lib/rdk/getaccountid.sh", "/lib/rdk/exec_curl_mtls.sh", "/lib/rdk/mtlsUtils.sh", "/lib/rdk/t2Shared_api.sh", "/etc/waninfo.sh", "/etc/rdm/rdmBundleMgr.sh", "/etc/Xconf.log"], "external_methods": ["getPartnerId", "getAccountId", "exec_curl_mtls", "getMtlsCreds", "getWanInterfaceName", "getWanMacInterfaceName", "dmcli eRT getv", "dmcli eRT setv", "system", "sleep", "touch", "rm", "cat", "grep", "awk", "sed", "date", "whoami", "ifconfig", "sysevent get", "syscfg get", "result= eval", "getInstalledBundleList", "getStateRedCreds", "set_http_url", "http_flash_led", "reboot_device", "http_reboot_status", "http_reboot", "XconfHttpDl", "checkMaintenanceWindow", "calcRandTime", "echo_t", "t2CountNotify", "unsetStateRed"], "published": ["getFirmwareUpgDetail", "fetchFirmwareDetail", "checkFirmwareUpgCriteria", "useDirectRequest", "useCodebigRequest", "getMacAddress", "getBuildType", "removeLegacyResources", "checkMaintenanceWindow", "calcRandTime"], "classes": [], "methods": [{"name": "getCurrentFw", "description": "Retrieves the current firmware version from /version.txt."}, {"name": "getRequestType", "description": "Determines the request type based on the domain name."}, {"name": "checkFirmwareUpgCriteria", "description": "Compares current firmware version with the target firmware to decide if an upgrade/downgrade is needed."}, {"name": "IsCodebigBlocked", "description": "Checks if Codebig protocol is temporarily blocked due to previous failures."}, {"name": "get_Codebigconfig", "description": "Retrieves and updates the Codebig configuration and status."}, {"name": "do_Codebig_signing", "description": "Signs the request for Codebig communication."}, {"name": "useDirectRequest", "description": "Performs HTTP download of firmware using a direct connection."}, {"name": "useCodebigRequest", "description": "Performs HTTP download of firmware via Codebig protocol."}, {"name": "getFirmwareUpgDetail", "description": "Fetches firmware details from the server, manages retries, and schedules downloads."}, {"name": "fetchFirmwareDetail", "description": "Loads firmware download details from the last saved response."}, {"name": "calcRandTime", "description": "Calculates a randomized time within a specified window for scheduling updates or reboots."}], "calls": ["getPartnerId", "getAccountId", "exec_curl_mtls", "getMtlsCreds", "getWanInterfaceName", "dmcli eRT getv", "dmcli eRT setv", "getInstalledBundleList", "getStateRedCreds", "set_http_url", "http_flash_led", "reboot_device", "http_reboot_status", "http_reboot", "XconfHttpDl", "checkMaintenanceWindow", "calcRandTime", "echo_t", "t2CountNotify", "unsetStateRed"], "search-terms": ["firmware download", "XCONF", "firmware upgrade", "shell script", "Codebig", "MTLS", "firmware details", "reboot scheduling", "device firmware"], "state": 2, "file_id": 8163, "knowledge_revision": 21224, "git_revision": "", "hash": "743570852c64d150562351f667763321", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "rdkb/components/opensource/ccsp/Xconf/scripts/xb6_firmwareDwnld.sh", "revision_history": [{"21224": ""}]}