{"is_source_file": true, "format": "Java", "description": "This Java class 'RequestDeserializer' extends 'StdDeserializer<Request>' and provides custom deserialization logic for different types of request messages represented in JSON. It parses JSON nodes to instantiate specific subclasses of 'Request' based on the 'request' field, handling various request types such as heartbeat, network operations, device configuration, and command sending, among others. The class utilizes Jackson for JSON processing and SLF4J for logging.", "external_files": ["com.fasterxml.jackson.core.JsonParser", "com.fasterxml.jackson.core.ObjectCodec", "com.fasterxml.jackson.core.type.TypeReference", "com.fasterxml.jackson.databind.DeserializationContext", "com.fasterxml.jackson.databind.JsonNode", "com.fasterxml.jackson.databind.ObjectMapper", "com.fasterxml.jackson.databind.ObjectReader", "com.fasterxml.jackson.databind.deser.std.StdDeserializer", "org.apache.commons.codec.binary.Base64", "org.json.JSONArray", "org.slf4j.Logger", "org.slf4j.LoggerFactory", "java.io.IOException", "com.comcast.xh.zith.device.cluster.AttributeData", "com.comcast.xh.zith.mockzigbeecore.request.*", "com.comcast.xh.zith.device.cluster.AttributeReportingConfig"], "external_methods": ["parser.getCodec()", "codec.readTree(parser)", "node.get()", "node.asText()", "node.asInt()", "node.asBoolean()", "node.has()", "Base64.decodeBase64()", "Base64.encodeBase64String()", "mapper.readerFor()", "reader.readValue()"], "published": ["RequestDeserializer", "deserialize"], "classes": [{"name": "RequestDeserializer", "description": "A custom Jackson deserializer for the 'Request' class, capable of parsing JSON input into appropriate request subclasses based on the 'request' field value."}], "methods": [{"name": "RequestDeserializer()", "description": "Default constructor that calls superclass constructor with null."}, {"name": "RequestDeserializer(Class<?> vc)", "description": "Constructor that allows specifying a class for deserialization."}, {"name": "deserialize(JsonParser parser, DeserializationContext deserializer)", "description": "Main deserialization method that reads JSON and instantiates specific 'Request' subclass objects based on 'request' type."}], "calls": ["parser.getCodec()", "codec.readTree(parser)", "node.get()", "node.asText()", "node.asInt()", "node.asBoolean()", "attributeIds[i] = info.get(\"id\").asInt()", "attrData.get(\"id\").asInt()", "attrData.get(\"type\").asInt()", "attrData.get(\"data\").asText()", "Base64.decodeBase64(encodedMessage)", "new AttributeData(...)"], "search-terms": ["RequestDeserializer", "JSON deserialization", "custom Jackson deserializer", "Request subclass creation", "Request handling", "JSON request parsing", "deserialize JSON in Java", "Request factory"], "state": 2, "file_id": 442, "knowledge_revision": 13613, "git_revision": "", "hash": "34b13cdadbc5cdf72cf215a0669f96bd", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "components/opensource/zilker-sdk/tools/zith/src/main/java/com/comcast/xh/zith/mockzigbeecore/request/RequestDeserializer.java", "revision_history": [{"13613": ""}]}