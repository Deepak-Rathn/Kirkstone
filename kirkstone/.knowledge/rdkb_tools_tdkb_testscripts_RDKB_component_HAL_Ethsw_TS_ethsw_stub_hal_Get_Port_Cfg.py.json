{"is_source_file": true, "format": "Python", "description": "This file is a Python test script that uses the tdklib library to perform a test case for the Ethsw HAL API, specifically to validate the function CcspHalEthSwGetPortCfg() by retrieving port configuration details during testing.", "external_files": ["tdklib.py"], "external_methods": ["tdklib.TDKScriptingLibrary", "createTestStep", "addParameter", "executeTestCase", "getResult", "getResultDetails", "setResultStatus", "configureTestCase", "getLoadModuleResult", "setLoadModuleStatus", "unloadModule"], "published": ["TS_ethsw_stub_hal_Get_Port_Cfg"], "classes": [{"name": "TDKScriptingLibrary", "description": "A wrapper class provided by tdklib for scripting test cases, enabling configuration, execution, and result retrieval of test steps."}], "methods": [{"name": "createTestStep", "description": "Creates a test step object for a specified test component and test case."}, {"name": "addParameter", "description": "Adds a parameter to the test step, such as 'PortID'."}, {"name": "executeTestCase", "description": "Executes the test case with the specified expected result."}, {"name": "getResult", "description": "Retrieves the result of the executed test case, such as SUCCESS or FAILURE."}, {"name": "getResultDetails", "description": "Obtains detailed output from the test step execution."}, {"name": "setResultStatus", "description": "Sets the status of the test step (e.g., SUCCESS, FAILURE)."}, {"name": "configureTestCase", "description": "Configures the test case with the target IP, port, and test name."}, {"name": "getLoadModuleResult", "description": "Checks whether the module was loaded successfully."}, {"name": "setLoadModuleStatus", "description": "Sets the status of the module loading process."}, {"name": "unloadModule", "description": "Unloads the specified testing module."}], "calls": ["obj.getLoadModuleResult()", "obj.setLoadModuleStatus()", "obj.createTestStep()", "tdkTestObj.addParameter()", "tdkTestObj.executeTestCase()", "tdkTestObj.getResult()", "tdkTestObj.getResultDetails()", "tdkTestObj.setResultStatus()", "obj.unloadModule()"], "search-terms": ["ethsw_stub_hal_Get_Port_Cfg", "CcspHalEthSwGetPortCfg", "TS_ethsw_stub_hal_Get_Port_Cfg", "port configuration", "Ethernet InterfaceNumberOfEntries"], "state": 2, "file_id": 5407, "knowledge_revision": 18526, "git_revision": "", "ctags": [{"_type": "tag", "name": "Bitrate_List", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/testscripts/RDKB/component/HAL_Ethsw/TS_ethsw_stub_hal_Get_Port_Cfg.py", "pattern": "/^        Bitrate_List = [\"0\",\"1\",\"10\",\"100\",\"1000\",\"10000\",\"2500\"];$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "DuplexMode_List", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/testscripts/RDKB/component/HAL_Ethsw/TS_ethsw_stub_hal_Get_Port_Cfg.py", "pattern": "/^        DuplexMode_List = [\"CCSP_HAL_ETHSW_DUPLEX_Auto\",\"CCSP_HAL_ETHSW_DUPLEX_Half\",\"CCSP_HAL_E/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "NumOfPorts", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/testscripts/RDKB/component/HAL_Ethsw/TS_ethsw_stub_hal_Get_Port_Cfg.py", "pattern": "/^        NumOfPorts = int(value)-2;$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "actualresult", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/testscripts/RDKB/component/HAL_Ethsw/TS_ethsw_stub_hal_Get_Port_Cfg.py", "pattern": "/^            actualresult = tdkTestObj.getResult();$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "actualresult", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/testscripts/RDKB/component/HAL_Ethsw/TS_ethsw_stub_hal_Get_Port_Cfg.py", "pattern": "/^    actualresult = tdkTestObj.getResult();$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "bitRate", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/testscripts/RDKB/component/HAL_Ethsw/TS_ethsw_stub_hal_Get_Port_Cfg.py", "pattern": "/^                bitRate = details.split(\"\\/\")[1];$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "details", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/testscripts/RDKB/component/HAL_Ethsw/TS_ethsw_stub_hal_Get_Port_Cfg.py", "pattern": "/^            details = tdkTestObj.getResultDetails();$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "duplexMode", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/testscripts/RDKB/component/HAL_Ethsw/TS_ethsw_stub_hal_Get_Port_Cfg.py", "pattern": "/^                duplexMode = details.split(\"\\/\")[2];$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "expectedresult", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/testscripts/RDKB/component/HAL_Ethsw/TS_ethsw_stub_hal_Get_Port_Cfg.py", "pattern": "/^            expectedresult = \"SUCCESS\";$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "expectedresult", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/testscripts/RDKB/component/HAL_Ethsw/TS_ethsw_stub_hal_Get_Port_Cfg.py", "pattern": "/^    expectedresult=\"SUCCESS\";$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "ip", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/testscripts/RDKB/component/HAL_Ethsw/TS_ethsw_stub_hal_Get_Port_Cfg.py", "pattern": "/^ip = <ipaddress>$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "loadmodulestatus", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/testscripts/RDKB/component/HAL_Ethsw/TS_ethsw_stub_hal_Get_Port_Cfg.py", "pattern": "/^loadmodulestatus =obj.getLoadModuleResult();$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "loadmodulestatus1", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/testscripts/RDKB/component/HAL_Ethsw/TS_ethsw_stub_hal_Get_Port_Cfg.py", "pattern": "/^loadmodulestatus1 =obj1.getLoadModuleResult();$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "obj", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/testscripts/RDKB/component/HAL_Ethsw/TS_ethsw_stub_hal_Get_Port_Cfg.py", "pattern": "/^obj = tdklib.TDKScriptingLibrary(\"halethsw\",\"RDKB\");$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "obj1", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/testscripts/RDKB/component/HAL_Ethsw/TS_ethsw_stub_hal_Get_Port_Cfg.py", "pattern": "/^obj1 = tdklib.TDKScriptingLibrary(\"tdkbtr181\",\"1\");$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "port", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/testscripts/RDKB/component/HAL_Ethsw/TS_ethsw_stub_hal_Get_Port_Cfg.py", "pattern": "/^                    port = port + 1;$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "port", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/testscripts/RDKB/component/HAL_Ethsw/TS_ethsw_stub_hal_Get_Port_Cfg.py", "pattern": "/^        port = 1;$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "port", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/testscripts/RDKB/component/HAL_Ethsw/TS_ethsw_stub_hal_Get_Port_Cfg.py", "pattern": "/^port = <port>$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "tdkTestObj", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/testscripts/RDKB/component/HAL_Ethsw/TS_ethsw_stub_hal_Get_Port_Cfg.py", "pattern": "/^            tdkTestObj = obj.createTestStep(\"ethsw_stub_hal_Get_Port_Cfg\");$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "tdkTestObj", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/testscripts/RDKB/component/HAL_Ethsw/TS_ethsw_stub_hal_Get_Port_Cfg.py", "pattern": "/^    tdkTestObj = obj1.createTestStep('TDKB_TR181Stub_Get');$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "value", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/testscripts/RDKB/component/HAL_Ethsw/TS_ethsw_stub_hal_Get_Port_Cfg.py", "pattern": "/^    value = tdkTestObj.getResultDetails();$/", "language": "Python", "kind": "variable"}], "hash": "06d302245588fed1a9c93cc3dc8bc768", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "rdkb/tools/tdkb/testscripts/RDKB/component/HAL_Ethsw/TS_ethsw_stub_hal_Get_Port_Cfg.py", "fields": [{"name": "Bitrate_List = [\"0\",\"1\",\"10\",\"100\",\"1000\",\"10000\",\"2500\"];", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "DuplexMode_List = [\"CCSP_HAL_ETHSW_DUPLEX_Auto\",\"CCSP_HAL_ETHSW_DUPLEX_Half\",\"CCSP_HAL_E/", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "NumOfPorts = int(value)-2;", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "actualresult = tdkTestObj.getResult();", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "bitRate = details.split(\"\\/\")[1];", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "details = tdkTestObj.getResultDetails();", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "duplexMode = details.split(\"\\/\")[2];", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "expectedresult = \"SUCCESS\";", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "expectedresult=\"SUCCESS\";", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "ip = <ipaddress>", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "loadmodulestatus =obj.getLoadModuleResult();", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "loadmodulestatus1 =obj1.getLoadModuleResult();", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "obj = tdklib.TDKScriptingLibrary(\"halethsw\",\"RDKB\");", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "obj1 = tdklib.TDKScriptingLibrary(\"tdkbtr181\",\"1\");", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "port = port + 1;", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "port = 1;", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "port = <port>", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "tdkTestObj = obj.createTestStep(\"ethsw_stub_hal_Get_Port_Cfg\");", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "tdkTestObj = obj1.createTestStep('TDKB_TR181Stub_Get');", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "value = tdkTestObj.getResultDetails();", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"18526": ""}]}