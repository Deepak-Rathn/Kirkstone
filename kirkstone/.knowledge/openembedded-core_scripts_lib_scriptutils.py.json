{"is_source_file": true, "format": "Python", "description": "This file contains utility functions for script management within a build system, including logging handlers, plugin loading, git repository management, URL fetching, and file editing. It defines a class for keep-alive logging and several functions that support build automation and source management tasks.", "external_files": ["bb.msg", "bb.process", "bb.utils", "bb.fetch2"], "external_methods": ["bb.process.run", "bb.utils.mkdirhier", "bb.fetch2.MissingChecksumEvent", "bb.parse_recipes", "bb.parse_recipe", "bb.build_targets"], "published": ["logger_create", "logger_setup_color", "load_plugins", "git_convert_standalone_clone", "fetch_url", "run_editor", "is_src_url", "filter_src_subdirs"], "classes": [{"name": "KeepAliveStreamHandler", "description": "A custom logging StreamHandler that emits periodic 'keepalive' messages to prevent connection timeouts by using a background thread."}], "methods": [{"name": "logger_create(name, stream=None, keepalive=None)", "description": "Creates and configures a logger with optional keepalive behavior.", "scope": "", "scopeKind": ""}, {"name": "logger_setup_color(logger, color='auto')", "description": "Sets up color formatting for a logger if supported.", "scope": "", "scopeKind": ""}, {"name": "load_plugins(logger, plugins, pluginpath)", "description": "Dynamically loads plugin modules from a specified directory and initializes them.", "scope": "", "scopeKind": ""}, {"name": "git_convert_standalone_clone(repodir)", "description": "Ensures a git repository in a directory is a standalone clone by repacking objects if necessary.", "scope": "", "scopeKind": ""}, {"name": "fetch_url(tinfoil, srcuri, srcrev, destdir, logger, preserve_tmp=False, mirrors=False)", "description": "Fetches source code from a URL using build system tasks, creating temporary recipes as needed.", "scope": "", "scopeKind": ""}, {"name": "run_editor(fn, logger=None)", "description": "Opens files in the user's preferred editor, executing the command and handling errors.", "scope": "", "scopeKind": ""}, {"name": "is_src_url(param)", "description": "Checks if a string parameter is a source URL based on common URL patterns.", "scope": "", "scopeKind": ""}, {"name": "filter_src_subdirs(pth)", "description": "Filters out irrelevant subdirectories from a source tree based on predefined ignore list.", "scope": "", "scopeKind": ""}, {"name": "__init__(self, keepalive=True, **kwargs)", "scope": "KeepAliveStreamHandler", "scopeKind": "class", "description": "unavailable"}, {"name": "__init__(self, url)", "scope": "FetchUrlFailure", "scopeKind": "class", "description": "unavailable"}, {"name": "__str__(self)", "scope": "FetchUrlFailure", "scopeKind": "class", "description": "unavailable"}, {"name": "_get_temp_recipe_dir(d)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "close(self)", "scope": "KeepAliveStreamHandler", "scopeKind": "class", "description": "unavailable"}, {"name": "emit(self, record)", "scope": "KeepAliveStreamHandler", "scopeKind": "class", "description": "unavailable"}, {"name": "eventhandler(event)", "scope": "fetch_url", "scopeKind": "function", "description": "unavailable"}, {"name": "load_plugin(name)", "scope": "load_plugins", "scopeKind": "function", "description": "unavailable"}, {"name": "plugin_name(filename)", "scope": "load_plugins", "scopeKind": "function", "description": "unavailable"}, {"name": "thread()", "scope": "KeepAliveStreamHandler.__init__", "scopeKind": "member", "description": "unavailable"}], "calls": ["logging.getLogger", "logging.StreamHandler", "logging.Formatter", "threading.Condition", "threading.Thread", "importlib.machinery.PathFinder.find_spec", "importlib.util.module_from_spec", "importlib.util.spec_from_file_location", "glob.glob", "os.path.splitext", "os.path.basename", "os.path.join", "os.access", "os.W_OK", "shutil.rmtree", "shutil.move", "os.remove", "os.rmdir", "tempfile.mkdtemp", "sys.exit", "subprocess.check_call", "shlex.split", "os.getenv", "os.environ", "os.path.exists", "os.path.isdir", "os.path.isfile", "os.path.islink", "random.choice", "string.ascii_lowercase", "string.digits", "bb.utils.mkdirhier", "bb.parse_recipes", "bb.parse_recipe", "bb.build_targets", "bb.process.run"], "search-terms": ["KeepAliveStreamHandler", "load_plugins", "git_convert_standalone_clone", "fetch_url", "scriptutils", "lib", "Python script utilities", "build system helpers", "source fetch", "plugin loader"], "state": 2, "file_id": 1423, "knowledge_revision": 14571, "git_revision": "", "ctags": [{"_type": "tag", "name": "FetchUrlFailure", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/scriptutils.py", "pattern": "/^class FetchUrlFailure(Exception):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "KeepAliveStreamHandler", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/scriptutils.py", "pattern": "/^class KeepAliveStreamHandler(logging.StreamHandler):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/scriptutils.py", "pattern": "/^    def __init__(self, keepalive=True, **kwargs):$/", "language": "Python", "kind": "member", "signature": "(self, keepalive=True, **kwargs)", "scope": "KeepAliveStreamHandler", "scopeKind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/scriptutils.py", "pattern": "/^    def __init__(self, url):$/", "language": "Python", "kind": "member", "signature": "(self, url)", "scope": "FetchUrlFailure", "scopeKind": "class"}, {"_type": "tag", "name": "__str__", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/scriptutils.py", "pattern": "/^    def __str__(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "FetchUrlFailure", "scopeKind": "class"}, {"_type": "tag", "name": "_get_temp_recipe_dir", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/scriptutils.py", "pattern": "/^def _get_temp_recipe_dir(d):$/", "language": "Python", "kind": "function", "signature": "(d)"}, {"_type": "tag", "name": "close", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/scriptutils.py", "pattern": "/^    def close(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "KeepAliveStreamHandler", "scopeKind": "class"}, {"_type": "tag", "name": "emit", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/scriptutils.py", "pattern": "/^    def emit(self, record):$/", "language": "Python", "kind": "member", "signature": "(self, record)", "scope": "KeepAliveStreamHandler", "scopeKind": "class"}, {"_type": "tag", "name": "eventhandler", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/scriptutils.py", "pattern": "/^            def eventhandler(event):$/", "file": true, "language": "Python", "kind": "function", "signature": "(event)", "scope": "fetch_url", "scopeKind": "function"}, {"_type": "tag", "name": "fetch_url", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/scriptutils.py", "pattern": "/^def fetch_url(tinfoil, srcuri, srcrev, destdir, logger, preserve_tmp=False, mirrors=False):$/", "language": "Python", "kind": "function", "signature": "(tinfoil, srcuri, srcrev, destdir, logger, preserve_tmp=False, mirrors=False)"}, {"_type": "tag", "name": "filter_src_subdirs", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/scriptutils.py", "pattern": "/^def filter_src_subdirs(pth):$/", "language": "Python", "kind": "function", "signature": "(pth)"}, {"_type": "tag", "name": "git_convert_standalone_clone", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/scriptutils.py", "pattern": "/^def git_convert_standalone_clone(repodir):$/", "language": "Python", "kind": "function", "signature": "(repodir)"}, {"_type": "tag", "name": "is_src_url", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/scriptutils.py", "pattern": "/^def is_src_url(param):$/", "language": "Python", "kind": "function", "signature": "(param)"}, {"_type": "tag", "name": "load_plugin", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/scriptutils.py", "pattern": "/^    def load_plugin(name):$/", "file": true, "language": "Python", "kind": "function", "signature": "(name)", "scope": "load_plugins", "scopeKind": "function"}, {"_type": "tag", "name": "load_plugins", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/scriptutils.py", "pattern": "/^def load_plugins(logger, plugins, pluginpath):$/", "language": "Python", "kind": "function", "signature": "(logger, plugins, pluginpath)"}, {"_type": "tag", "name": "logger_create", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/scriptutils.py", "pattern": "/^def logger_create(name, stream=None, keepalive=None):$/", "language": "Python", "kind": "function", "signature": "(name, stream=None, keepalive=None)"}, {"_type": "tag", "name": "logger_setup_color", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/scriptutils.py", "pattern": "/^def logger_setup_color(logger, color='auto'):$/", "language": "Python", "kind": "function", "signature": "(logger, color='auto')"}, {"_type": "tag", "name": "plugin_name", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/scriptutils.py", "pattern": "/^    def plugin_name(filename):$/", "file": true, "language": "Python", "kind": "function", "signature": "(filename)", "scope": "load_plugins", "scopeKind": "function"}, {"_type": "tag", "name": "run_editor", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/scriptutils.py", "pattern": "/^def run_editor(fn, logger=None):$/", "language": "Python", "kind": "function", "signature": "(fn, logger=None)"}, {"_type": "tag", "name": "thread", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/scriptutils.py", "pattern": "/^        def thread():$/", "file": true, "language": "Python", "kind": "function", "signature": "()", "scope": "KeepAliveStreamHandler.__init__", "scopeKind": "member"}], "hash": "55256b358cbc67418cb63aeaf06b227b", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "openembedded-core/scripts/lib/scriptutils.py", "revision_history": [{"14571": ""}]}