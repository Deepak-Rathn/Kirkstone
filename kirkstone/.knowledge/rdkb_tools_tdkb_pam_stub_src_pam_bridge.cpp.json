{"is_source_file": true, "format": "C++", "description": "This file is a C++ source file implementing a wrapper class 'pam' for interacting with system components and configuration parameters, primarily through C-style external functions. It includes several API functions for parameter get/set, system restart, and configuration management, as well as initialization and cleanup routines.", "external_files": ["pam.h", "ssp_tdk_wrp.h"], "external_methods": ["ssp_register", "ssp_terminate", "ssp_getParameterValue", "ssp_setParameterValue", "ssp_MTAAgentRestart", "ssp_CRRestart", "ssp_pam_Init", "ssp_getParameterNames", "free_Memory_Names", "free_Memory_val", "free_Memory_Attr", "ssp_pam_Bridging_GetParamUlongValue", "ssp_DmlMlanGetParamValue", "ssp_DmlEthGetParamValue", "ssp_DmlDiGetParamValue", "ssp_CosaDmlUpnpInit", "ssp_CosaDmlDhcpInit", "ssp_CosaDmlDnsInit", "ssp_CosaDmlUpnpEnable", "ssp_CosaDmlUpnpGetState", "ssp_CosaDmlDhcpGet", "ssp_CosaDmlDhcpsEnable", "ssp_CosaDmlDnsGet", "ssp_CosaDmlDnsEnable"], "published": ["initialize", "testmodulepre_requisites", "testmodulepost_requisites", "pam_bridge_GetParamUlongValue", "pam_GetParameterNames", "pam_GetParameterValues", "pam_SetParameterValues", "pam_Setparams", "pam_MTAAgentRestart", "pam_CRRestart", "COSAPAM_DmlMlanGetParamValue", "COSAPAM_DmlEthGetParamValue", "COSAPAM_DmlDiGetParamValue", "COSAPAM_UpnpEnable", "COSAPAM_UpnpGetState", "COSAPAM_DhcpGet", "COSAPAM_DhcpsEnable", "COSAPAM_DnsGet", "COSAPAM_DnsEnable", "CreateObject", "cleanup", "DestroyObject", "pam_Init"], "classes": [{"name": "pam", "description": "A class encapsulating various system configuration APIs and initialization routines for the component."}], "methods": [{"name": "bool initialize(IN const char * szVersion)", "description": "Initializes the pam module for registering wrapper methods with the agent.", "scope": "pam", "scopeKind": "class"}, {"name": "std::string testmodulepre_requisites()", "description": "Sets up necessary pre-requisites such as registering the component and initializing other modules.", "scope": "pam", "scopeKind": "class"}, {"name": "bool testmodulepost_requisites()", "description": "Resets or cleans up pre-requisites after testing.", "scope": "pam", "scopeKind": "class"}, {"name": "void pam_bridge_GetParamUlongValue(IN const Json::Value & req,OUT Json::Value & response)", "description": "Retrieves the value of a ulong parameter via external system call.", "scope": "pam", "scopeKind": "class"}, {"name": "void pam_GetParameterNames(IN const Json::Value & req,OUT Json::Value & response)", "description": "Fetches parameter names and verifies their attributes.", "scope": "pam", "scopeKind": "class"}, {"name": "void pam_GetParameterValues(IN const Json::Value & req,OUT Json::Value & response)", "description": "Fetches value of a specified parameter.", "scope": "pam", "scopeKind": "class"}, {"name": "void pam_SetParameterValues(IN const Json::Value & req,OUT Json::Value & response)", "description": "Sets a parameter value and validates the change.", "scope": "pam", "scopeKind": "class"}, {"name": "void pam_Setparams(IN const Json::Value & req,OUT Json::Value & response)", "description": "Wrapper for setting parameter values.", "scope": "pam", "scopeKind": "class"}, {"name": "void pam_MTAAgentRestart(IN const Json::Value & req,OUT Json::Value & response)", "description": "Restarts the MTA agent process.", "scope": "pam", "scopeKind": "class"}, {"name": "void pam_CRRestart(IN const Json::Value & req,OUT Json::Value & response)", "description": "Reboots the system after killing the CR process.", "scope": "pam", "scopeKind": "class"}, {"name": "void COSAPAM_DmlMlanGetParamValue(IN const Json::Value & req,OUT Json::Value & response)", "description": "Retrieves MLAN-related parameters.", "scope": "pam", "scopeKind": "class"}, {"name": "void COSAPAM_DmlEthGetParamValue(IN const Json::Value & req,OUT Json::Value & response)", "description": "Retrieves Ethernet port attributes.", "scope": "pam", "scopeKind": "class"}, {"name": "void COSAPAM_DmlDiGetParamValue(IN const Json::Value & req,OUT Json::Value & response)", "description": "Retrieves device info attributes.", "scope": "pam", "scopeKind": "class"}, {"name": "void COSAPAM_UpnpEnable(IN const Json::Value & req,OUT Json::Value & response)", "description": "Enables or disables UPnP.", "scope": "pam", "scopeKind": "class"}, {"name": "void COSAPAM_UpnpGetState(IN const Json::Value & req,OUT Json::Value & response)", "description": "Gets current UPnP state.", "scope": "pam", "scopeKind": "class"}, {"name": "void COSAPAM_DhcpGet(IN const Json::Value & req,OUT Json::Value & response)", "description": "Retrieves DHCP configuration or status.", "scope": "pam", "scopeKind": "class"}, {"name": "void COSAPAM_DhcpsEnable(IN const Json::Value & req,OUT Json::Value & response)", "description": "Enables or disables DHCP server.", "scope": "pam", "scopeKind": "class"}, {"name": "void COSAPAM_DnsGet(IN const Json::Value & req,OUT Json::Value & response)", "description": "Retrieves DNS client configuration.", "scope": "pam", "scopeKind": "class"}, {"name": "void COSAPAM_DnsEnable(IN const Json::Value & req,OUT Json::Value & response)", "description": "Enables or disables DNS client.", "scope": "pam", "scopeKind": "class"}, {"name": "pam * CreateObject(TcpSocketServer & ptrtcpServer)", "description": "Factory function to create a new pam object.", "scope": "", "scopeKind": ""}, {"name": "bool cleanup(IN const char * szVersion)", "description": "Performs cleanup actions for the module.", "scope": "pam", "scopeKind": "class"}, {"name": "void DestroyObject(pam * stubobj)", "description": "Destroys the pam object instance.", "scope": "", "scopeKind": ""}, {"name": "void pam_Init(IN const Json::Value & req,OUT Json::Value & response)", "description": "Initializes the pam subsystem.", "scope": "pam", "scopeKind": "class"}], "calls": ["ssp_register", "ssp_CosaDmlUpnpInit", "ssp_CosaDmlDhcpInit", "ssp_CosaDmlDnsInit", "ssp_pam_Bridging_GetParamUlongValue", "ssp_getParameterNames", "ssp_getParameterValue", "ssp_setParameterValue", "ssp_MTAAgentRestart", "ssp_CRRestart", "ssp_CosaDmlUpnpEnable", "ssp_CosaDmlUpnpGetState", "ssp_CosaDmlDhcpGet", "ssp_CosaDmlDhcpsEnable", "ssp_CosaDmlDnsGet", "ssp_CosaDmlDnsEnable", "ssp_pam_Init"], "search-terms": ["pam_bridge", "system restart", "parameter get/set", "upnp", "dns", "dhcp", "MTAAgent", "CRRestart"], "state": 2, "file_id": 5560, "knowledge_revision": 18676, "git_revision": "", "ctags": [{"_type": "tag", "name": "COSAPAM_DhcpGet", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/pam_stub/src/pam_bridge.cpp", "pattern": "/^void pam::COSAPAM_DhcpGet(IN const Json::Value& req, OUT Json::Value& response)$/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(IN const Json::Value & req,OUT Json::Value & response)", "scope": "pam", "scopeKind": "class"}, {"_type": "tag", "name": "COSAPAM_DhcpsEnable", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/pam_stub/src/pam_bridge.cpp", "pattern": "/^void pam::COSAPAM_DhcpsEnable(IN const Json::Value& req, OUT Json::Value& response)$/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(IN const Json::Value & req,OUT Json::Value & response)", "scope": "pam", "scopeKind": "class"}, {"_type": "tag", "name": "COSAPAM_DmlDiGetParamValue", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/pam_stub/src/pam_bridge.cpp", "pattern": "/^void pam::COSAPAM_DmlDiGetParamValue(IN const Json::Value& req, OUT Json::Value& response)$/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(IN const Json::Value & req,OUT Json::Value & response)", "scope": "pam", "scopeKind": "class"}, {"_type": "tag", "name": "COSAPAM_DmlEthGetParamValue", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/pam_stub/src/pam_bridge.cpp", "pattern": "/^void pam::COSAPAM_DmlEthGetParamValue(IN const Json::Value& req, OUT Json::Value& response)$/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(IN const Json::Value & req,OUT Json::Value & response)", "scope": "pam", "scopeKind": "class"}, {"_type": "tag", "name": "COSAPAM_DmlMlanGetParamValue", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/pam_stub/src/pam_bridge.cpp", "pattern": "/^void pam::COSAPAM_DmlMlanGetParamValue(IN const Json::Value& req, OUT Json::Value& response)$/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(IN const Json::Value & req,OUT Json::Value & response)", "scope": "pam", "scopeKind": "class"}, {"_type": "tag", "name": "COSAPAM_DnsEnable", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/pam_stub/src/pam_bridge.cpp", "pattern": "/^void pam::COSAPAM_DnsEnable(IN const Json::Value& req, OUT Json::Value& response)$/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(IN const Json::Value & req,OUT Json::Value & response)", "scope": "pam", "scopeKind": "class"}, {"_type": "tag", "name": "COSAPAM_DnsGet", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/pam_stub/src/pam_bridge.cpp", "pattern": "/^void pam::COSAPAM_DnsGet(IN const Json::Value& req, OUT Json::Value& response)$/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(IN const Json::Value & req,OUT Json::Value & response)", "scope": "pam", "scopeKind": "class"}, {"_type": "tag", "name": "COSAPAM_UpnpEnable", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/pam_stub/src/pam_bridge.cpp", "pattern": "/^void pam::COSAPAM_UpnpEnable(IN const Json::Value& req, OUT Json::Value& response)$/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(IN const Json::Value & req,OUT Json::Value & response)", "scope": "pam", "scopeKind": "class"}, {"_type": "tag", "name": "COSAPAM_UpnpGetState", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/pam_stub/src/pam_bridge.cpp", "pattern": "/^void pam::COSAPAM_UpnpGetState(IN const Json::Value& req, OUT Json::Value& response)$/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(IN const Json::Value & req,OUT Json::Value & response)", "scope": "pam", "scopeKind": "class"}, {"_type": "tag", "name": "CreateObject", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/pam_stub/src/pam_bridge.cpp", "pattern": "/^extern \"C\" pam* CreateObject(TcpSocketServer &ptrtcpServer)$/", "language": "C++", "typeref": "typename:pam *", "kind": "function", "signature": "(TcpSocketServer & ptrtcpServer)"}, {"_type": "tag", "name": "DestroyObject", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/pam_stub/src/pam_bridge.cpp", "pattern": "/^extern \"C\" void DestroyObject(pam *stubobj)$/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(pam * stubobj)"}, {"_type": "tag", "name": "cleanup", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/pam_stub/src/pam_bridge.cpp", "pattern": "/^bool pam::cleanup(IN const char* szVersion)$/", "language": "C++", "typeref": "typename:bool", "kind": "function", "signature": "(IN const char * szVersion)", "scope": "pam", "scopeKind": "class"}, {"_type": "tag", "name": "initialize", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/pam_stub/src/pam_bridge.cpp", "pattern": "/^bool pam::initialize(IN const char* szVersion)$/", "language": "C++", "typeref": "typename:bool", "kind": "function", "signature": "(IN const char * szVersion)", "scope": "pam", "scopeKind": "class"}, {"_type": "tag", "name": "pam_CRRestart", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/pam_stub/src/pam_bridge.cpp", "pattern": "/^void pam::pam_CRRestart(IN const Json::Value& req, OUT Json::Value& response)$/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(IN const Json::Value & req,OUT Json::Value & response)", "scope": "pam", "scopeKind": "class"}, {"_type": "tag", "name": "pam_GetParameterNames", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/pam_stub/src/pam_bridge.cpp", "pattern": "/^void pam::pam_GetParameterNames(IN const Json::Value& req, OUT Json::Value& response)$/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(IN const Json::Value & req,OUT Json::Value & response)", "scope": "pam", "scopeKind": "class"}, {"_type": "tag", "name": "pam_GetParameterValues", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/pam_stub/src/pam_bridge.cpp", "pattern": "/^void pam::pam_GetParameterValues(IN const Json::Value& req, OUT Json::Value& response)$/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(IN const Json::Value & req,OUT Json::Value & response)", "scope": "pam", "scopeKind": "class"}, {"_type": "tag", "name": "pam_Init", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/pam_stub/src/pam_bridge.cpp", "pattern": "/^void pam::pam_Init(IN const Json::Value& req, OUT Json::Value& response)$/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(IN const Json::Value & req,OUT Json::Value & response)", "scope": "pam", "scopeKind": "class"}, {"_type": "tag", "name": "pam_MTAAgentRestart", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/pam_stub/src/pam_bridge.cpp", "pattern": "/^void pam::pam_MTAAgentRestart(IN const Json::Value& req, OUT Json::Value& response)$/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(IN const Json::Value & req,OUT Json::Value & response)", "scope": "pam", "scopeKind": "class"}, {"_type": "tag", "name": "pam_SetParameterValues", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/pam_stub/src/pam_bridge.cpp", "pattern": "/^void pam::pam_SetParameterValues(IN const Json::Value& req, OUT Json::Value& response)$/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(IN const Json::Value & req,OUT Json::Value & response)", "scope": "pam", "scopeKind": "class"}, {"_type": "tag", "name": "pam_Setparams", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/pam_stub/src/pam_bridge.cpp", "pattern": "/^void pam::pam_Setparams(IN const Json::Value& req, OUT Json::Value& response)$/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(IN const Json::Value & req,OUT Json::Value & response)", "scope": "pam", "scopeKind": "class"}, {"_type": "tag", "name": "pam_bridge_GetParamUlongValue", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/pam_stub/src/pam_bridge.cpp", "pattern": "/^void pam::pam_bridge_GetParamUlongValue(IN const Json::Value& req, OUT Json::Value& response)$/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(IN const Json::Value & req,OUT Json::Value & response)", "scope": "pam", "scopeKind": "class"}, {"_type": "tag", "name": "testmodulepost_requisites", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/pam_stub/src/pam_bridge.cpp", "pattern": "/^bool pam::testmodulepost_requisites()$/", "language": "C++", "typeref": "typename:bool", "kind": "function", "signature": "()", "scope": "pam", "scopeKind": "class"}, {"_type": "tag", "name": "testmodulepre_requisites", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/pam_stub/src/pam_bridge.cpp", "pattern": "/^std::string pam::testmodulepre_requisites()$/", "language": "C++", "typeref": "typename:std::string", "kind": "function", "signature": "()", "scope": "pam", "scopeKind": "class"}], "hash": "23016187636158bba3938273a08cada6", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "rdkb/tools/tdkb/pam_stub/src/pam_bridge.cpp", "revision_history": [{"18676": ""}]}