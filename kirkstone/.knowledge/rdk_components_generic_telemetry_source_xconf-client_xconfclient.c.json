{"is_source_file": true, "format": "C", "description": "This source file implements the client-side logic for communicating with a remote telemetry configuration server (XConf). It handles fetching configurations over HTTPS using libcurl, processes the received data, manages retries with backoff, and maintains internal state for the XConf operations. The file also includes functions for initializing and uninitializing the XConf client thread, and functions to get device-specific parameters for forming configuration requests.", "external_files": ["<string.h>", "<stdlib.h>", "<sys/time.h>", "<net/if.h>", "<ifaddrs.h>", "<stdbool.h>", "<curl/curl.h>", "<unistd.h>", "<sys/types.h>", "<sys/wait.h>", "<signal.h>", "<cjson/cJSON.h>", "t2log_wrapper.h", "reportprofiles.h", "profilexconf.h", "xconfclient.h", "t2MtlsUtils.h", "t2parserxconf.h", "vector.h", "persistence.h", "telemetry2_0.h", "busInterface.h"], "external_methods": ["ReportProfiles_deleteProfileXConf", "ReportProfiles_setProfileXConf", "getParameterValue", "isMtlsEnabled", "clearPersistenceFolder", "saveConfigToFile", "processConfigurationXConf", "ProfileXConf_isSet"], "published": ["initXConfClient", "stopXConfClient", "uninitXConfClient"], "classes": [], "methods": [{"name": "ReportProfiles_deleteProfileXConf", "description": "Deletes (or unloads) an existing ProfileXConf object from the profile list."}, {"name": "ReportProfiles_setProfileXConf", "description": "Sets or updates a ProfileXConf object in the profile list."}, {"name": "T2ERROR getBuildType(char * buildType)", "description": "Reads the build type configuration from device properties file.", "scope": "", "scopeKind": ""}, {"name": "T2ERROR appendRequestParams(char * buf,const int maxArgLen)", "description": "Appends device-specific parameters (MAC, firmware, model, partner id, etc.) to the URL query string for the configuration request.", "scope": "", "scopeKind": ""}, {"name": "T2ERROR doHttpGet(char * httpsUrl,char ** data)", "description": "Performs an HTTPS GET request to the specified URL, handles TLS setup including mTLS if enabled, and saves the response payload in a provided buffer.", "scope": "", "scopeKind": ""}, {"name": "T2ERROR fetchRemoteConfiguration(char * configURL,char ** configData)", "description": "Builds the full URL with parameters and initiates an HTTP GET to fetch the remote configuration data.", "scope": "", "scopeKind": ""}, {"name": "T2ERROR getRemoteConfigURL(char ** configURL)", "description": "Retrieves the configuration server URL from device parameters or fallback options.", "scope": "", "scopeKind": ""}, {"name": "void * getUpdatedConfigurationThread(void * data)", "description": "Thread function that manages periodic fetching of remote configuration, processing it, and updating profiles accordingly with retries and wait logic.", "scope": "", "scopeKind": ""}, {"name": "void uninitXConfClient()", "description": "Stops the configuration fetch thread, cleans up synchronization primitives, and performs cleanup.", "scope": "", "scopeKind": ""}, {"name": "T2ERROR initXConfClient()", "description": "Initializes the XConf client, including synchronization primitives and thread startup.", "scope": "", "scopeKind": ""}, {"name": "T2ERROR stopXConfClient()", "description": "Signals the thread to stop and detaches it.", "scope": "", "scopeKind": ""}, {"name": "T2ERROR startXConfClient()", "description": "Creates and starts the configuration fetch thread.", "scope": "", "scopeKind": ""}, {"name": "char * getTimezone()", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "size_t httpGetCallBack(void * response,size_t len,size_t nmemb,void * stream)", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["curl_easy_setopt", "curl_easy_perform", "curl_easy_getinfo", "fopen", "fread", "fputs", "fclose", "malloc", "free", "snprintf", "strncat", "strncpy", "strlen", "memcpy", "access", "access", "pthread_create", "pthread_join", "pthread_cond_signal", "pthread_cond_timedwait", "pthread_mutex_lock", "pthread_mutex_unlock", "clock_gettime", "waitpid", "write", "read", "close"], "search-terms": ["XConf", "Telemetry configuration", "fetch remote config", "HTTPS GET", "libcurl", "configuration thread", "persistent profile", "security mTLS", "retry logic", "configuration URL", "device parameters"], "state": 2, "file_id": 12875, "knowledge_revision": 25774, "git_revision": "", "ctags": [{"_type": "tag", "name": "ADDR_IPV4", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/xconf-client/xconfclient.c", "pattern": "/^    ADDR_IPV4,$/", "file": true, "language": "C", "kind": "enumerator", "scope": "_IFADDRESS_TYPE", "scopeKind": "enum"}, {"_type": "tag", "name": "ADDR_IPV6", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/xconf-client/xconfclient.c", "pattern": "/^    ADDR_IPV6$/", "file": true, "language": "C", "kind": "enumerator", "scope": "_IFADDRESS_TYPE", "scopeKind": "enum"}, {"_type": "tag", "name": "ADDR_UNKNOWN", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/xconf-client/xconfclient.c", "pattern": "/^    ADDR_UNKNOWN,$/", "file": true, "language": "C", "kind": "enumerator", "scope": "_IFADDRESS_TYPE", "scopeKind": "enum"}, {"_type": "tag", "name": "HTTP_RESPONSE_FILE", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/xconf-client/xconfclient.c", "pattern": "/^#define HTTP_RESPONSE_FILE /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "IFADDRESS_TYPE", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/xconf-client/xconfclient.c", "pattern": "/^}IFADDRESS_TYPE;$/", "file": true, "language": "C", "typeref": "enum:_IFADDRESS_TYPE", "kind": "typedef"}, {"_type": "tag", "name": "IFINTERFACE", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/xconf-client/xconfclient.c", "pattern": "/^#define IFINTERFACE /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "MAX_URL_ARG_LEN", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/xconf-client/xconfclient.c", "pattern": "/^static const int MAX_URL_ARG_LEN = 128;$/", "file": true, "language": "C", "typeref": "typename:const int", "kind": "variable"}, {"_type": "tag", "name": "MAX_URL_LEN", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/xconf-client/xconfclient.c", "pattern": "/^static const int MAX_URL_LEN = 1024;$/", "file": true, "language": "C", "typeref": "typename:const int", "kind": "variable"}, {"_type": "tag", "name": "MAX_XCONF_RETRY_COUNT", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/xconf-client/xconfclient.c", "pattern": "/^#define MAX_XCONF_RETRY_COUNT /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "PROCESS_CONFIG_COMPLETE_FLAG", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/xconf-client/xconfclient.c", "pattern": "/^#define PROCESS_CONFIG_COMPLETE_FLAG /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "RFC_RETRY_TIMEOUT", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/xconf-client/xconfclient.c", "pattern": "/^#define RFC_RETRY_TIMEOUT /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "XCONF_CONFIG_FILE", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/xconf-client/xconfclient.c", "pattern": "/^#define XCONF_CONFIG_FILE /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "XCONF_RETRY_TIMEOUT", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/xconf-client/xconfclient.c", "pattern": "/^#define XCONF_RETRY_TIMEOUT /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "_IFADDRESS_TYPE", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/xconf-client/xconfclient.c", "pattern": "/^typedef enum _IFADDRESS_TYPE$/", "file": true, "language": "C", "kind": "enum"}, {"_type": "tag", "name": "appendRequestParams", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/xconf-client/xconfclient.c", "pattern": "/^static T2ERROR appendRequestParams(char *buf, const int maxArgLen) {$/", "file": true, "language": "C", "typeref": "typename:T2ERROR", "kind": "function", "signature": "(char * buf,const int maxArgLen)"}, {"_type": "tag", "name": "doHttpGet", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/xconf-client/xconfclient.c", "pattern": "/^static T2ERROR doHttpGet(char* httpsUrl, char **data) {$/", "file": true, "language": "C", "typeref": "typename:T2ERROR", "kind": "function", "signature": "(char * httpsUrl,char ** data)"}, {"_type": "tag", "name": "fetchRemoteConfiguration", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/xconf-client/xconfclient.c", "pattern": "/^static T2ERROR fetchRemoteConfiguration(char *configURL, char **configData) {$/", "file": true, "language": "C", "typeref": "typename:T2ERROR", "kind": "function", "signature": "(char * configURL,char ** configData)"}, {"_type": "tag", "name": "getBuildType", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/xconf-client/xconfclient.c", "pattern": "/^static T2ERROR getBuildType(char* buildType) {$/", "file": true, "language": "C", "typeref": "typename:T2ERROR", "kind": "function", "signature": "(char * buildType)"}, {"_type": "tag", "name": "getRemoteConfigURL", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/xconf-client/xconfclient.c", "pattern": "/^static T2ERROR getRemoteConfigURL(char **configURL) {$/", "file": true, "language": "C", "typeref": "typename:T2ERROR", "kind": "function", "signature": "(char ** configURL)"}, {"_type": "tag", "name": "getTimezone", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/xconf-client/xconfclient.c", "pattern": "/^static char *getTimezone () {$/", "file": true, "language": "C", "typeref": "typename:char *", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "getUpdatedConfigurationThread", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/xconf-client/xconfclient.c", "pattern": "/^static void* getUpdatedConfigurationThread(void *data)$/", "file": true, "language": "C", "typeref": "typename:void *", "kind": "function", "signature": "(void * data)"}, {"_type": "tag", "name": "httpGetCallBack", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/xconf-client/xconfclient.c", "pattern": "/^static size_t httpGetCallBack(void *response, size_t len, size_t nmemb,$/", "file": true, "language": "C", "typeref": "typename:size_t", "kind": "function", "signature": "(void * response,size_t len,size_t nmemb,void * stream)"}, {"_type": "tag", "name": "initXConfClient", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/xconf-client/xconfclient.c", "pattern": "/^T2ERROR initXConfClient()$/", "language": "C", "typeref": "typename:T2ERROR", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "isXconfInit", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/xconf-client/xconfclient.c", "pattern": "/^static bool isXconfInit = false ;$/", "file": true, "language": "C", "typeref": "typename:bool", "kind": "variable"}, {"_type": "tag", "name": "startXConfClient", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/xconf-client/xconfclient.c", "pattern": "/^T2ERROR startXConfClient()$/", "language": "C", "typeref": "typename:T2ERROR", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "stopFetchRemoteConfiguration", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/xconf-client/xconfclient.c", "pattern": "/^static bool stopFetchRemoteConfiguration = false;$/", "file": true, "language": "C", "typeref": "typename:bool", "kind": "variable"}, {"_type": "tag", "name": "stopXConfClient", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/xconf-client/xconfclient.c", "pattern": "/^T2ERROR stopXConfClient()$/", "language": "C", "typeref": "typename:T2ERROR", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "uninitXConfClient", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/xconf-client/xconfclient.c", "pattern": "/^void uninitXConfClient()$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "waninterface", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/xconf-client/xconfclient.c", "pattern": "/^   static char waninterface[256];$/", "file": true, "language": "C", "typeref": "typename:char[256]", "kind": "variable"}, {"_type": "tag", "name": "xConfRetryCount", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/xconf-client/xconfclient.c", "pattern": "/^static int xConfRetryCount = 0;$/", "file": true, "language": "C", "typeref": "typename:int", "kind": "variable"}, {"_type": "tag", "name": "xcCond", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/xconf-client/xconfclient.c", "pattern": "/^static pthread_cond_t xcCond;$/", "file": true, "language": "C", "typeref": "typename:pthread_cond_t", "kind": "variable"}, {"_type": "tag", "name": "xcMutex", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/xconf-client/xconfclient.c", "pattern": "/^static pthread_mutex_t xcMutex;$/", "file": true, "language": "C", "typeref": "typename:pthread_mutex_t", "kind": "variable"}, {"_type": "tag", "name": "xcrThread", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/xconf-client/xconfclient.c", "pattern": "/^static pthread_t xcrThread;$/", "file": true, "language": "C", "typeref": "typename:pthread_t", "kind": "variable"}], "hash": "44d17fff2810e563f01c25d7a0361021", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "rdk/components/generic/telemetry/source/xconf-client/xconfclient.c", "fields": [{"name": "const int MAX_URL_ARG_LEN", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "const int MAX_URL_LEN", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "bool isXconfInit", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "bool stopFetchRemoteConfiguration", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "char[256] waninterface", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int xConfRetryCount", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "pthread_cond_t xcCond", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "pthread_mutex_t xcMutex", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "pthread_t xcrThread", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"25774": ""}]}