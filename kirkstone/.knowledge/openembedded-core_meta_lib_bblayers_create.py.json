{"is_source_file": true, "format": "Python", "description": "This file defines a plugin class for creating new layers in a build system, with methods to initialize the plugin, create layer directories, generate template files, copy licenses, and register command-line commands.", "external_files": ["bblayers.common", "bb.utils"], "external_methods": ["bb.utils.mkdirhier"], "published": ["plugin_init", "read_template", "CreatePlugin"], "classes": [{"name": "CreatePlugin", "description": "A plugin class for automating the creation of a build layer structure, including directory setup, template file generation, and license copying."}], "methods": [{"name": "plugin_init(plugins)", "description": "Initializes and returns an instance of CreatePlugin.", "scope": "", "scopeKind": ""}, {"name": "read_template(template, template_dir='templates')", "description": "Reads and returns the content of a specified template file from the templates directory.", "scope": "", "scopeKind": ""}, {"name": "do_create_layer(self, args)", "description": "Creates a new build layer directory with necessary configuration files and templates, based on provided arguments.", "scope": "CreatePlugin", "scopeKind": "class"}, {"name": "register_commands(self, sp)", "description": "Registers command-line commands related to layer creation, configuring argument parsers.", "scope": "CreatePlugin", "scopeKind": "class"}], "calls": ["os.path.join", "os.path.dirname", "os.path.exists", "sys.stderr.write", "shutil.copy", "self.tinfoil.config_data.getVar"], "search-terms": ["create-layer", "layer directory creation", "layer.conf template", "README template", "MIT license copy", "bitbake layers"], "state": 2, "file_id": 1835, "knowledge_revision": 14979, "git_revision": "", "ctags": [{"_type": "tag", "name": "CreatePlugin", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/bblayers/create.py", "pattern": "/^class CreatePlugin(LayerPlugin):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "do_create_layer", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/bblayers/create.py", "pattern": "/^    def do_create_layer(self, args):$/", "language": "Python", "kind": "member", "signature": "(self, args)", "scope": "CreatePlugin", "scopeKind": "class"}, {"_type": "tag", "name": "logger", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/bblayers/create.py", "pattern": "/^logger = logging.getLogger('bitbake-layers')$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "plugin_init", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/bblayers/create.py", "pattern": "/^def plugin_init(plugins):$/", "language": "Python", "kind": "function", "signature": "(plugins)"}, {"_type": "tag", "name": "read_template", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/bblayers/create.py", "pattern": "/^def read_template(template, template_dir='templates'):$/", "language": "Python", "kind": "function", "signature": "(template, template_dir='templates')"}, {"_type": "tag", "name": "register_commands", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/bblayers/create.py", "pattern": "/^    def register_commands(self, sp):$/", "language": "Python", "kind": "member", "signature": "(self, sp)", "scope": "CreatePlugin", "scopeKind": "class"}], "hash": "e7bbfb867c9116feb50ac64d729ddeaa", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "openembedded-core/meta/lib/bblayers/create.py", "fields": [{"name": "logger = logging.getLogger('bitbake-layers')", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"14979": ""}]}