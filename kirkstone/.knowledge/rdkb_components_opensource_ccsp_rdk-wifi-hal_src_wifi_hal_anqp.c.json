{"is_source_file": true, "format": "C", "description": "This file implements Wi-Fi Hotspot 2.0 ANQP (Access Network Query Protocol) handling, including functions for processing ANQP requests and responses, GAS (Generic Advertisement Service) configuration, and test frame handling for debugging purposes. It interacts with Wi-Fi driver interfaces, manages ANQP element buffers, and validates configuration settings.", "external_files": ["wifi_hal_rdk_framework.h", "collection.h", "cJSON.h", "wifi_hal_priv.h", "get_interface_by_vap_index"], "external_methods": ["get_formatted_time", "wifi_getCountryIe", "wifi_getLayer2TrafficInspectionFiltering", "wifi_getDownStreamGroupAddress", "wifi_getBssLoad", "wifi_getProxyArp", "wifi_pushApHotspotElement", "get_device_callbacks", "wifi_getApInterworkingServiceEnable", "wifi_setCountryIe", "wifi_setProxyArp", "wifi_setLayer2TrafficInspectionFiltering", "wifi_setDownStreamGroupAddress", "wifi_setBssLoad", "mgmt_frame_received_callback", "wifi_sendActionFrame", "wifi_hal_send_mgmt_frame", "channel_to_frequency"], "published": ["wifi_anqp_request_callback_register", "wifi_anqpSendResponse", "wifi_setGASConfiguration", "wifi_anqpStartReceivingTestFrame", "wifi_anqpStartTest"], "classes": [], "methods": [{"name": "void wifi_anqp_dbg_print(int level,char * format,...)", "description": "Debug print function that logs messages to a file if enabled.", "parameters": ["int level", "char *format", "..."], "scope": "", "scopeKind": ""}, {"name": "void wifi_storeInitialPassPointSettings()", "description": "Stores initial PassPoint (HS2) settings for each AP index.", "scope": "", "scopeKind": ""}, {"name": "int enablePassPointSettings(int ap_index,BOOL passpoint_enable,BOOL downstream_disable,BOOL p2p_disable,BOOL layer2TIF)", "description": "Enables or disables PassPoint (HS2) settings for a given AP index.", "scope": "", "scopeKind": ""}, {"name": "void callback_anqp_gas_init_frame_received(int ap_index,mac_address_t sta,unsigned char token,unsigned char * attrib,unsigned int len)", "description": "Handles received GAS frames, processes ANQP elements, and invokes callback with parsed data.", "scope": "", "scopeKind": ""}, {"name": "INT wifi_anqp_request_callback_register(wifi_anqp_request_callback_t anqpReqCallback)", "description": "Registers a callback function for ANQP request handling.", "scope": "", "scopeKind": ""}, {"name": "INT wifi_anqpSendResponse(UINT apIndex,mac_address_t sta,unsigned char token,wifi_anqp_node_t * head)", "description": "Constructs and sends a GAS response frame with accumulated ANQP elements.", "scope": "", "scopeKind": ""}, {"name": "INT wifi_setGASConfiguration(UINT advertisementID,wifi_GASConfiguration_t * input_struct)", "description": "Sets the GAS protocol configuration for a specific Advertisement ID.", "scope": "", "scopeKind": ""}, {"name": "void * wifi_anqpTestFrameHandler(void * arg)", "description": "Thread handler for receiving and processing test frames for debugging.", "scope": "", "scopeKind": ""}, {"name": "void wifi_anqpStartReceivingTestFrame()", "description": "Starts a thread to receive test frames.", "scope": "", "scopeKind": ""}, {"name": "int wifi_anqpStartTest(unsigned int apIndex,mac_address_t sta)", "description": "Sends a test ANQP frame to localhost for debugging.", "scope": "", "scopeKind": ""}], "calls": ["get_formatted_time", "wifi_getCountryIe", "wifi_getLayer2TrafficInspectionFiltering", "wifi_getDownStreamGroupAddress", "wifi_getBssLoad", "wifi_getProxyArp", "wifi_pushApHotspotElement", "get_device_callbacks", "wifi_getApInterworkingServiceEnable", "wifi_setCountryIe", "wifi_setProxyArp", "wifi_setLayer2TrafficInspectionFiltering", "wifi_setDownStreamGroupAddress", "wifi_setBssLoad", "mgmt_frame_received_callback", "wifi_sendActionFrame", "wifi_hal_send_mgmt_frame", "channel_to_frequency", "get_tlv", "set_tlv"], "search-terms": ["ANQP", "GAS", "PassPoint", "HS2", "gasCfg", "wifi_anqp", "AP index", "gas response", "gas protocol", "test frame"], "state": 2, "file_id": 8132, "knowledge_revision": 21192, "git_revision": "", "ctags": [{"_type": "tag", "name": "MAC_STR_LEN", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/rdk-wifi-hal/src/wifi_hal_anqp.c", "pattern": "/^#define MAC_STR_LEN /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "MAX_AP_INDEX", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/rdk-wifi-hal/src/wifi_hal_anqp.c", "pattern": "/^#define MAX_AP_INDEX /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "MAX_BUFF", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/rdk-wifi-hal/src/wifi_hal_anqp.c", "pattern": "/^#define MAX_BUFF /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "callback_anqp_gas_init_frame_received", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/rdk-wifi-hal/src/wifi_hal_anqp.c", "pattern": "/^void callback_anqp_gas_init_frame_received(int ap_index, mac_address_t sta, unsigned char token,/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(int ap_index,mac_address_t sta,unsigned char token,unsigned char * attrib,unsigned int len)"}, {"_type": "tag", "name": "enablePassPointSettings", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/rdk-wifi-hal/src/wifi_hal_anqp.c", "pattern": "/^int enablePassPointSettings(int ap_index, BOOL passpoint_enable, BOOL downstream_disable, BOOL p/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(int ap_index,BOOL passpoint_enable,BOOL downstream_disable,BOOL p2p_disable,BOOL layer2TIF)"}, {"_type": "tag", "name": "gasCfg", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/rdk-wifi-hal/src/wifi_hal_anqp.c", "pattern": "/^static wifi_GASConfiguration_t gasCfg[GAS_CFG_TYPE_SUPPORTED];$/", "file": true, "language": "C", "typeref": "typename:wifi_GASConfiguration_t[]", "kind": "variable"}, {"_type": "tag", "name": "hs2Settings", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/rdk-wifi-hal/src/wifi_hal_anqp.c", "pattern": "/^static wifi_HS2Settings_t hs2Settings[MAX_AP_INDEX + 1];$/", "file": true, "language": "C", "typeref": "typename:wifi_HS2Settings_t[]", "kind": "variable"}, {"_type": "tag", "name": "hs2SettingsStored", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/rdk-wifi-hal/src/wifi_hal_anqp.c", "pattern": "/^static BOOL hs2SettingsStored;$/", "file": true, "language": "C", "typeref": "typename:BOOL", "kind": "variable"}, {"_type": "tag", "name": "wifi_anqpSendResponse", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/rdk-wifi-hal/src/wifi_hal_anqp.c", "pattern": "/^INT wifi_anqpSendResponse(UINT apIndex, mac_address_t sta, unsigned char token, wifi_anqp_node_t/", "language": "C", "typeref": "typename:INT", "kind": "function", "signature": "(UINT apIndex,mac_address_t sta,unsigned char token,wifi_anqp_node_t * head)"}, {"_type": "tag", "name": "wifi_anqpStartReceivingTestFrame", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/rdk-wifi-hal/src/wifi_hal_anqp.c", "pattern": "/^void wifi_anqpStartReceivingTestFrame()$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "wifi_anqpStartTest", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/rdk-wifi-hal/src/wifi_hal_anqp.c", "pattern": "/^int wifi_anqpStartTest(unsigned int apIndex, mac_address_t sta)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(unsigned int apIndex,mac_address_t sta)"}, {"_type": "tag", "name": "wifi_anqpTestFrameHandler", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/rdk-wifi-hal/src/wifi_hal_anqp.c", "pattern": "/^void *wifi_anqpTestFrameHandler(void *arg)$/", "language": "C", "typeref": "typename:void *", "kind": "function", "signature": "(void * arg)"}, {"_type": "tag", "name": "wifi_anqp_dbg_print", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/rdk-wifi-hal/src/wifi_hal_anqp.c", "pattern": "/^void wifi_anqp_dbg_print(int level, char *format, ...)$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(int level,char * format,...)"}, {"_type": "tag", "name": "wifi_anqp_request_callback_register", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/rdk-wifi-hal/src/wifi_hal_anqp.c", "pattern": "/^INT wifi_anqp_request_callback_register(wifi_anqp_request_callback_t anqpReqCallback)$/", "language": "C", "typeref": "typename:INT", "kind": "function", "signature": "(wifi_anqp_request_callback_t anqpReqCallback)"}, {"_type": "tag", "name": "wifi_setGASConfiguration", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/rdk-wifi-hal/src/wifi_hal_anqp.c", "pattern": "/^INT wifi_setGASConfiguration(UINT advertisementID, wifi_GASConfiguration_t *input_struct)$/", "language": "C", "typeref": "typename:INT", "kind": "function", "signature": "(UINT advertisementID,wifi_GASConfiguration_t * input_struct)"}, {"_type": "tag", "name": "wifi_storeInitialPassPointSettings", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/rdk-wifi-hal/src/wifi_hal_anqp.c", "pattern": "/^void wifi_storeInitialPassPointSettings()$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "()"}], "hash": "842b4e50c1a4e6acea594b2570964451", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "rdkb/components/opensource/ccsp/rdk-wifi-hal/src/wifi_hal_anqp.c", "fields": [{"name": "wifi_GASConfiguration_t[] gasCfg", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "wifi_HS2Settings_t[] hs2Settings", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "BOOL hs2SettingsStored", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"21192": ""}]}