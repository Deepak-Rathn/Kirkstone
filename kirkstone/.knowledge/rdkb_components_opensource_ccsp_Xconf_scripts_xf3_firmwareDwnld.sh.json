{"is_source_file": true, "format": "Shell Script / Bash", "description": "This file is a shell script used for managing firmware downloads, updates, and reboots for a device. It handles retrieving firmware details from a server, downloading the firmware via HTTP or Codebig, flashing the firmware, and controlling reboot timing based on maintenance windows and device states.", "external_files": ["/etc/utopia/service.d/log_capture_path.sh", "/fss/gw/etc/utopia/service.d/log_env_var.sh", "/lib/rdk/getpartnerid.sh", "/lib/rdk/getaccountid.sh", "/lib/rdk/t2Shared_api.sh", "/etc/waninfo.sh", "/nvram/serialization.txt", "/version.txt", "/etc/rdm/rdmBundleMgr.sh", "/etc/rdkfwupgrader_message.sh", "/etc/whitelist.sh"], "external_methods": ["getWanInterfaceName", "getWanMacInterfaceName", "getPartnerId", "getAccountId", "getInstalledBundleList", "dmcli eRT getv", "dmcli eRT setv", "syscfg get", "ifconfig", "grep", "sed", "awk", "date", "sleep", "touch", "rm", "crontab"], "published": ["getCurrentFw", "getRequestType", "checkFirmwareUpgCriteria", "IsCodebigBlocked", "get_Codebigconfig", "do_Codebig_signing", "useDirectRequest", "useCodebigRequest", "getFirmwareUpgDetail", "fetchFirmwareDetail", "calcRandTime", "calcRandTimeBCI", "getMacAddress", "getBuildType", "removeLegacyResources", "checkMaintenanceWindow"], "classes": [], "methods": [{"name": "getCurrentFw", "description": "Retrieves the current firmware version from the system files."}, {"name": "getRequestType", "description": "Determines the request type based on the server domain name."}, {"name": "checkFirmwareUpgCriteria", "description": "Checks if firmware upgrade conditions are met by comparing current and available firmware versions."}, {"name": "IsCodebigBlocked", "description": "Checks if Codebig connection attempts are currently blocked based on previous failures and time elapsed."}, {"name": "get_Codebigconfig", "description": "Configures whether to use Codebig or direct connection based on server capabilities and previous attempts."}, {"name": "do_Codebig_signing", "description": "Generates signed requests for Codebig authentication for secure server communication."}, {"name": "useDirectRequest", "description": "Performs a firmware download request directly over HTTP."}, {"name": "useCodebigRequest", "description": "Performs a firmware download request via Codebig, a secure cloud-based connection."}, {"name": "getFirmwareUpgDetail", "description": "Contacts server to check if firmware upgrade is available and retrieves firmware details."}, {"name": "fetchFirmwareDetail", "description": "Loads firmware details from the last server response saved locally."}, {"name": "calcRandTime", "description": "Calculates a randomized time within 24 hours to check for firmware updates."}, {"name": "calcRandTimeBCI", "description": "Calculates a randomized reboot time within a maintenance window."}, {"name": "getMacAddress", "description": "Retrieves the MAC address of the WAN interface."}, {"name": "getBuildType", "description": "Determines build type (DEV, VBN, PROD, GSLB) from version information."}, {"name": "removeLegacyResources", "description": "Cleans up old log files and resources."}, {"name": "checkMaintenanceWindow", "description": "Checks if the current time falls within a defined firmware upgrade window."}], "calls": ["getWanInterfaceName", "getWanMacInterfaceName", "getPartnerId", "getAccountId", "getInstalledBundleList", "dmcli eRT getv", "dmcli eRT setv", "syscfg get", "ifconfig", "grep", "sed", "awk", "date", "sleep", "touch", "rm", "crontab"], "search-terms": ["FirmwareDownload", "Xconf", "FirmwareUpgrade", "RebootManagement", "Codebig", "OCSP", "Maintenance Window", "Firmware Version", "Download Protocol", "Firmware URL", "Firmware Filename"], "state": 2, "file_id": 8160, "knowledge_revision": 21226, "git_revision": "", "hash": "e43376c7eaf3bd236cdcc04d6b6f9def", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "rdkb/components/opensource/ccsp/Xconf/scripts/xf3_firmwareDwnld.sh", "revision_history": [{"21226": ""}]}