{"is_source_file": true, "format": "sh (Shell script)", "description": "This file is a shell script responsible for managing Dynamic DNS (DDNS) updates on a device. It includes functions for preparing configuration files, updating the DDNS server, and handling periodic checks. The script interacts with system configurations, uses syscfg and sysevent commands, and manages cron jobs to perform DDNS updates based on WAN IP changes and elapsed time.", "external_files": ["/etc/utopia/service.d/date_functions.sh", "/etc/utopia/service.d/ulog_functions.sh", "/etc/utopia/service.d/event_handler_functions.sh", "/lib/rdk/utils.sh"], "external_methods": ["syscfg get ddns_service", "syscfg get ddns_username", "syscfg get ddns_password", "syscfg get ddns_hostname", "syscfg get ddns_mx", "syscfg get ddns_mx_backup", "syscfg get ddns_wildcard", "sysevent get current_wan_ifname", "sysevent get current_wan_ipaddr", "sysevent set ddns_start", "sysevent set ddns_failure_time", "sysevent set ddns_return_status", "sysevent set ddns-errinfo", "sysevent set ddns-status", "sysevent get ddns_return_status", "sysevent set ${SERVICE_NAME}-status", "sysevent set ${SERVICE_NAME}-errinfo", "addCron", "removeCron", "get_current_time", "delta_days", "delta_mins", "utctx_cmd get"], "published": ["service_start", "service_stop"], "classes": [], "methods": [{"name": "prepare_ddns_config_file", "description": "Generates the DDNS configuration file based on system configurations and cleans up temporary files."}, {"name": "prepare_extra_commandline_params", "description": "Constructs additional command-line parameters for the DDNS update command based on system configuration."}, {"name": "update_ddns_server", "description": "Executes the DDNS update process, handles success or various failure modes, and updates system events accordingly."}, {"name": "do_start", "description": "Determines if a DDNS update is needed based on IP change or timeout, then triggers the update process if necessary."}, {"name": "update_ddns_if_needed", "description": "Checks WAN status and IP, then initiates DDNS update if conditions require it."}, {"name": "service_init", "description": "Initializes variables by retrieving configuration values via utctx_cmd."}, {"name": "service_start", "description": "Begins the DDNS periodic checking process and updates system status."}, {"name": "service_stop", "description": "Stops DDNS periodic checks and marks the service as stopped."}], "calls": ["syscfg get ddns_service", "syscfg get ddns_username", "syscfg get ddns_password", "syscfg get ddns_hostname", "syscfg get ddns_mx", "syscfg get ddns_mx_backup", "syscfg get ddns_wildcard", "sysevent get current_wan_ifname", "sysevent get current_wan_ipaddr", "sysevent set ddns_start", "sysevent set ddns_failure_time", "sysevent set ddns_return_status", "sysevent set ddns-errinfo", "sysevent set ddns-status", "sysevent get ddns_return_status", "sysevent set ${SERVICE_NAME}-status", "sysevent set ${SERVICE_NAME}-errinfo", "addCron", "removeCron", "get_current_time", "delta_days", "delta_mins", "utctx_cmd get"], "search-terms": ["ddns", "ez-ipupdate", "sysevent", "syscfg", "dynamic DNS", "WAN IP", "update", "service script", "cron management", "system configuration"], "state": 2, "file_id": 7636, "knowledge_revision": 20708, "git_revision": "", "hash": "9757a560eae75024e94537e62a4af000", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "rdkb/components/opensource/ccsp/Utopia/source/scripts/init/service.d/service_ddns.sh", "revision_history": [{"20708": ""}]}