{"is_source_file": true, "format": "Python", "description": "This file implements a version handling mechanism and CVE (Common Vulnerabilities and Exposures) analysis functions for processing software patch data, extracting CVE identifiers from patches and filenames, and related patch management utilities.", "external_files": ["oe.patch", "os", "bb"], "external_methods": ["oe.patch.src_patches", "bb.debug", "bb.fetch.decodeurl", "bb.warn", "bb.error"], "published": ["get_patched_cves", "get_cpe_ids", "cve_check_merge_jsons", "update_symlinks"], "classes": [{"name": "Version", "description": "A class for parsing, comparing, and handling software version strings with support for different suffix types (alphabetical, patch)."}], "methods": [{"name": "get_patched_cves(d)", "description": "Extracts CVE IDs addressed by patches using the \"CVE: \" tag in patch files or filename patterns.", "scope": "", "scopeKind": ""}, {"name": "get_cpe_ids(cve_product, version)", "description": "Generates CPE (Common Platform Enumeration) identifiers for products and versions, optionally handling vendor info.", "scope": "", "scopeKind": ""}, {"name": "cve_check_merge_jsons(output, data)", "description": "Merges package JSON data into a main output JSON, with version consistency and duplicate checks.", "scope": "", "scopeKind": ""}, {"name": "update_symlinks(target_path, link_path)", "description": "Updates or recreates a symbolic link if the target path differs from the current link.", "scope": "", "scopeKind": ""}, {"name": "__eq__(self, other)", "scope": "Version", "scopeKind": "class", "description": "unavailable"}, {"name": "__gt__(self, other)", "scope": "Version", "scopeKind": "class", "description": "unavailable"}, {"name": "__init__(self, version, suffix=None)", "scope": "Version", "scopeKind": "class", "description": "unavailable"}, {"name": "_cmpkey(release, patch_l, pre_l, pre_v)", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["oe.patch.src_patches", "bb.debug", "bb.fetch.decodeurl", "bb.warn", "bb.error", "os.path.isfile", "os.path.exists", "os.path.realpath", "os.remove", "os.symlink"], "search-terms": ["Version class", "get_patched_cves", "CVE extraction", "patch analysis", "CPE identifiers", "merge JSON", "update symlink"], "state": 2, "file_id": 1825, "knowledge_revision": 14967, "git_revision": "", "ctags": [{"_type": "tag", "name": "Version", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/cve_check.py", "pattern": "/^class Version():$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "_Version", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/cve_check.py", "pattern": "/^_Version = collections.namedtuple($/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "__eq__", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/cve_check.py", "pattern": "/^    def __eq__(self, other):$/", "language": "Python", "kind": "member", "signature": "(self, other)", "scope": "Version", "scopeKind": "class"}, {"_type": "tag", "name": "__gt__", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/cve_check.py", "pattern": "/^    def __gt__(self, other):$/", "language": "Python", "kind": "member", "signature": "(self, other)", "scope": "Version", "scopeKind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/cve_check.py", "pattern": "/^    def __init__(self, version, suffix=None):$/", "language": "Python", "kind": "member", "signature": "(self, version, suffix=None)", "scope": "Version", "scopeKind": "class"}, {"_type": "tag", "name": "_cmpkey", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/cve_check.py", "pattern": "/^def _cmpkey(release, patch_l, pre_l, pre_v):$/", "language": "Python", "kind": "function", "signature": "(release, patch_l, pre_l, pre_v)"}, {"_type": "tag", "name": "cve_check_merge_jsons", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/cve_check.py", "pattern": "/^def cve_check_merge_jsons(output, data):$/", "language": "Python", "kind": "function", "signature": "(output, data)"}, {"_type": "tag", "name": "get_cpe_ids", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/cve_check.py", "pattern": "/^def get_cpe_ids(cve_product, version):$/", "language": "Python", "kind": "function", "signature": "(cve_product, version)"}, {"_type": "tag", "name": "get_patched_cves", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/cve_check.py", "pattern": "/^def get_patched_cves(d):$/", "language": "Python", "kind": "function", "signature": "(d)"}, {"_type": "tag", "name": "update_symlinks", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/cve_check.py", "pattern": "/^def update_symlinks(target_path, link_path):$/", "language": "Python", "kind": "function", "signature": "(target_path, link_path)"}], "hash": "bcbdeb7acc0840e2766a6bcb5e2e597e", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "openembedded-core/meta/lib/oe/cve_check.py", "fields": [{"name": "_Version = collections.namedtuple(", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"14967": ""}]}