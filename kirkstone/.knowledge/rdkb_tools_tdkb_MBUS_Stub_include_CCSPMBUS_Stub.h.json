{"is_source_file": true, "format": "C++ header file", "description": "This file is a header (.h) file for the CCSPMBUS class, defining an interface for a stub that interacts with a JSON-RPC server for MBUS (likely management bus) operations. It declares class methods, external includes, and method bindings for various MBUS-related functions.", "external_files": ["<json/json.h>", "<unistd.h>", "<string.h>", "<dlfcn.h>", "<stdlib.h>", "rdkteststubintf.h", "rdktestagentintf.h", "<sys/types.h>", "<sys/wait.h>", "<fstream>", "<sstream>", "<jsonrpccpp/server/connectors/tcpsocketserver.h>"], "external_methods": ["bindAndAddMethod", "Procedure"], "published": ["CCSPMBUS_GetParamValues", "CCSPMBUS_SetParamValues", "CCSPMBUS_Init", "CCSPMBUS_Exit", "CCSPMBUS_RegisterEvent", "CCSPMBUS_UnRegisterEvent", "CCSPMBUS_LoadCfg", "CCSPMBUS_LoadDmXml", "CCSPMBUS_RegisterPath", "CCSPMBUS_QueryStatus", "CCSPMBUS_GetAllocMemory", "CCSPMBUS_GetMaxMemory", "CCSPMBUS_RegisterCapabilities", "CCSPMBUS_UnRegisterNamespace", "CCSPMBUS_UnRegisterComponent", "CCSPMBUS_DiskNamespaceSupportedByComponent", "CCSPMBUS_DiskComponentSupportingDynamicTbl", "CCSPMBUS_GetRegisteredComponents", "CCSPMBUS_GetHealth", "CCSPMBUS_DumpComponentRegistry", "CCSPMBUS_IsSystemReady", "CCSPMBUS_SendSignal", "CCSPMBUS_ReqSessionId", "CCSPMBUS_InformEndSession", "CCSPMBUS_BusCheck", "CCSPMBUS_CheckNamespaceDataType", "CCSPMBUS_UnloadCfg"], "classes": [{"name": "CCSPMBUS", "description": "A class implementing a JSON-RPC server interface for MBUS operations, inheriting from RDKTestStubInterface and AbstractServer<CCSPMBUS>. It binds multiple RPC procedures to class methods for managing MBUS components and configurations."}], "methods": [{"name": "initialize", "description": "Initializes the stub with a specific version string."}, {"name": "cleanup", "description": "Performs cleanup routines for the stub with a version string."}, {"name": "testmodulepre_requisites", "description": "Checks pre-requisites before testing the module."}, {"name": "testmodulepost_requisites", "description": "Checks post-requisites after testing the module."}, {"name": "CCSPMBUS_GetParamValues", "description": "Handles retrieval of parameter values via JSON request."}, {"name": "CCSPMBUS_SetParamValues", "description": "Handles setting of parameter values via JSON request."}, {"name": "CCSPMBUS_Init", "description": "Initializes MBUS with configuration file parameters."}, {"name": "CCSPMBUS_Exit", "description": "Performs cleanup or shutdown of MBUS."}, {"name": "CCSPMBUS_RegisterEvent", "description": "Registers an event in MBUS."}, {"name": "CCSPMBUS_UnRegisterEvent", "description": "Unregisters an event in MBUS."}, {"name": "CCSPMBUS_LoadCfg", "description": "Loads MBUS configuration from a specified file."}, {"name": "CCSPMBUS_LoadDmXml", "description": "Loads device management XML configuration."}, {"name": "CCSPMBUS_RegisterPath", "description": "Registers a path in MBUS."}, {"name": "CCSPMBUS_QueryStatus", "description": "Queries the status of MBUS."}, {"name": "CCSPMBUS_GetAllocMemory", "description": "Retrieves allocated memory info."}, {"name": "CCSPMBUS_GetMaxMemory", "description": "Retrieves maximum memory info."}, {"name": "CCSPMBUS_RegisterCapabilities", "description": "Registers capabilities within MBUS."}, {"name": "CCSPMBUS_UnRegisterNamespace", "description": "Unregisters a namespace."}, {"name": "CCSPMBUS_UnRegisterComponent", "description": "Unregisters a component."}, {"name": "CCSPMBUS_DiskNamespaceSupportedByComponent", "description": "Checks supported namespaces by a component."}, {"name": "CCSPMBUS_DiskComponentSupportingDynamicTbl", "description": "Checks if a component supports a dynamic table."}, {"name": "CCSPMBUS_GetRegisteredComponents", "description": "Retrieves list of registered components."}, {"name": "CCSPMBUS_GetHealth", "description": "Gets health status of components."}, {"name": "CCSPMBUS_DumpComponentRegistry", "description": "Dumps the component registry details."}, {"name": "CCSPMBUS_IsSystemReady", "description": "Checks if the system is ready."}, {"name": "CCSPMBUS_SendSignal", "description": "Sends a signal within the system."}, {"name": "CCSPMBUS_ReqSessionId", "description": "Requests a session ID."}, {"name": "CCSPMBUS_InformEndSession", "description": "Informs end of session."}, {"name": "CCSPMBUS_BusCheck", "description": "Performs a bus check."}, {"name": "CCSPMBUS_CheckNamespaceDataType", "description": "Checks data types of namespaces."}, {"name": "CCSPMBUS_UnloadCfg", "description": "Unloads configuration."}, {"name": "CCSPMBUS(TcpSocketServer & ptrRpcServer)", "scope": "CCSPMBUS", "scopeKind": "class", "description": "unavailable"}], "calls": ["bindAndAddMethod", "Procedure"], "search-terms": ["CCSPMBUS", "MBUS", "jsonrpc", "RPC methods", "stub", "handler", "component registry", "configuration", "event registration"], "state": 2, "file_id": 5553, "knowledge_revision": 18671, "git_revision": "", "ctags": [{"_type": "tag", "name": "CCSPMBUS", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/MBUS_Stub/include/CCSPMBUS_Stub.h", "pattern": "/^               CCSPMBUS(TcpSocketServer &ptrRpcServer) : AbstractServer <CCSPMBUS>(ptrRpcServer)$/", "language": "C++", "kind": "function", "signature": "(TcpSocketServer & ptrRpcServer)", "scope": "CCSPMBUS", "scopeKind": "class"}, {"_type": "tag", "name": "CCSPMBUS", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/MBUS_Stub/include/CCSPMBUS_Stub.h", "pattern": "/^class CCSPMBUS : public RDKTestStubInterface, public AbstractServer<CCSPMBUS>$/", "language": "C++", "kind": "class"}, {"_type": "tag", "name": "IN", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/MBUS_Stub/include/CCSPMBUS_Stub.h", "pattern": "/^#define IN$/", "language": "C++", "kind": "macro"}, {"_type": "tag", "name": "MAX_PARAM_NAMES_ARRAY", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/MBUS_Stub/include/CCSPMBUS_Stub.h", "pattern": "/^#define MAX_PARAM_NAMES_ARRAY\t/", "language": "C++", "kind": "macro"}, {"_type": "tag", "name": "MAX_PARAM_SIZE", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/MBUS_Stub/include/CCSPMBUS_Stub.h", "pattern": "/^#define MAX_PARAM_SIZE\t/", "language": "C++", "kind": "macro"}, {"_type": "tag", "name": "OUT", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/MBUS_Stub/include/CCSPMBUS_Stub.h", "pattern": "/^#define OUT$/", "language": "C++", "kind": "macro"}, {"_type": "tag", "name": "TEST_FAILURE", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/MBUS_Stub/include/CCSPMBUS_Stub.h", "pattern": "/^#define TEST_FAILURE /", "language": "C++", "kind": "macro"}, {"_type": "tag", "name": "TEST_SUCCESS", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/MBUS_Stub/include/CCSPMBUS_Stub.h", "pattern": "/^#define TEST_SUCCESS /", "language": "C++", "kind": "macro"}, {"_type": "tag", "name": "__CCSPMBUSSTUB_STUB_H__", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/MBUS_Stub/include/CCSPMBUS_Stub.h", "pattern": "/^#define __CCSPMBUSSTUB_STUB_H__$/", "language": "C++", "kind": "macro"}], "hash": "16f11f483f5988ca548d49434835699c", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "rdkb/tools/tdkb/MBUS_Stub/include/CCSPMBUS_Stub.h", "revision_history": [{"18671": ""}]}