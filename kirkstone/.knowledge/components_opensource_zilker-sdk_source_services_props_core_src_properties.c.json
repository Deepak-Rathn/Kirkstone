{"is_source_file": true, "format": "C", "description": "This file implements a properties management system that reads, writes, and manages key-value properties stored in an XML configuration file. It includes functionality to load properties from file, save updates, handle default properties, migrate schemas, and notify backup services of changes. It also supports operations like adding, updating, deleting, and bulk setting properties, while maintaining thread safety with mutex locks.", "external_files": ["icBuildtime.h", "icTypes/icHashMap.h", "icLog/logging.h", "icConcurrent/delayedTask.h", "icUtil/parsePropFile.h", "xmlHelper/xmlHelper.h", "propsMgr/commonProperties.h", "propsMgr/paths.h", "propsMgr/timezone.h", "backup/backupRestoreService_ipc.h", "icConfig/backupUtils.h", "icUtil/stringUtils.h", "libgen.h", "icUtil/fileUtils.h"], "external_methods": ["hashMapCreate", "hashMapDestroy", "hashMapGet", "hashMapPut", "hashMapDelete", "hashMapCount", "hashMapIteratorCreate", "hashMapIteratorHasNext", "hashMapIteratorGetNext", "hashMapIteratorDestroy", "create_property", "destroy_property", "broadcastPropertyEvent", "safeFileSave", "scheduleDelayTask", "isDelayTaskWaiting", "cancelDelayTask", "getXmlNodeAttributeAsInt", "getXmlNodeContentsAsUnsignedLongLong", "getXmlNodeContentsAsString", "getXmlNodeContentsAsInt", "xmlParseFile", "xmlFreeDoc", "xmlDocGetRootElement", "xmlNewDoc", "xmlNewNode", "xmlAddChild", "xmlNodeSetContent", "xmlDocDumpFormatMemory", "xmlFree", "setXmlNodeAttributeAsInt", "getStaticConfigPath", "doesNonEmptyFileExist", "readFileContentsWithTrim", "propIteratorCreate", "propIteratorHasNext", "propIteratorGetNext", "propIteratorDestroy"], "published": ["initProperties", "destroyProperties", "restorePropConfig", "getProperty", "setProperty", "setPropertyOverwrite", "setPropertiesBulk", "deleteProperty", "getAllPropertyKeys", "getConfigFileVersion", "getPropertyCount"], "classes": [], "methods": [{"name": "bool initProperties(char * configDir,char * homeDir)", "description": "Initializes the properties system by loading configuration from files or creating defaults, setting up internal data structures, and ensuring default values are present.", "scope": "", "scopeKind": ""}, {"name": "void destroyProperties()", "description": "Cleans up resources allocated for property management, including freeing the hash map and canceling pending backup tasks.", "scope": "", "scopeKind": ""}, {"name": "bool restorePropConfig(char * tempDir,char * destDir)", "description": "Loads a property configuration from a temporary directory during recovery or restore, updating internal structures accordingly.", "scope": "", "scopeKind": ""}, {"name": "property * getProperty(char * key)", "description": "Retrieves a property object for a given key without altering the internal state.", "scope": "", "scopeKind": ""}, {"name": "setPropRc setProperty(property * prop)", "description": "Adds or updates a property, broadcasting an event and saving the configuration if necessary.", "scope": "", "scopeKind": ""}, {"name": "setPropRc setPropertyOverwrite(property * prop)", "description": "Forcibly sets or updates a property, overwriting existing values and broadcasting updates.", "scope": "", "scopeKind": ""}, {"name": "bool setPropertiesBulk(propertyValues * group)", "description": "Sets multiple properties in a batch, only updating those that are new or different, and performs a single save.", "scope": "", "scopeKind": ""}, {"name": "bool deleteProperty(char * key)", "description": "Removes a property by key and updates the configuration accordingly.", "scope": "", "scopeKind": ""}, {"name": "char ** getAllPropertyKeys(int * countOut)", "description": "Returns an array of all property keys currently managed.", "scope": "", "scopeKind": ""}, {"name": "uint64_t getConfigFileVersion()", "description": "Returns the current version number of the configuration file.", "scope": "", "scopeKind": ""}, {"name": "int getPropertyCount()", "description": "Returns the number of properties currently stored.", "scope": "", "scopeKind": ""}, {"name": "property * createProperty(const char * key,const char * val,propSource source)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "bool ensureDefaults()", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "property * getPropertyWhenLocked(char * key)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "void loadGlobalDefaults()", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "bool migrateFromSchemaZero()", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "void notifyBackupService(void * arg)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "bool readConfigFile(const char * path)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "setPropRc setPropertyWhenLocked(property * prop,bool sendEvent,bool overwrite)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "bool writeConfigFile(bool sendEvent)", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["xmlParseFile", "xmlFreeDoc", "xmlDocGetRootElement", "setXmlNodeAttributeAsInt", "getXmlNodeAttributeAsInt", "getXmlNodeContentsAsUnsignedLongLong", "getXmlNodeContentsAsString", "getXmlNodeContentsAsInt", "hashMapCreate", "hashMapDestroy", "hashMapGet", "hashMapPut", "hashMapDelete", "hashMapCount", "hashMapIteratorCreate", "hashMapIteratorHasNext", "hashMapIteratorGetNext", "hashMapIteratorDestroy", "create_property", "destroy_property", "broadcastPropertyEvent", "safeFileSave", "scheduleDelayTask", "isDelayTaskWaiting", "cancelDelayTask", "propIteratorCreate", "propIteratorHasNext", "propIteratorGetNext", "propIteratorDestroy", "getStaticConfigPath", "doesNonEmptyFileExist", "readFileContentsWithTrim", "unlink", "backupRestoreService_request_CONFIG_UPDATED"], "search-terms": ["properties management", "XML config file", "schema migration", "default properties", "property hash map", "thread safety", "backup notification", "property lifecycle", "bulk property update", "property key list"], "state": 2, "file_id": 1257, "knowledge_revision": 14419, "git_revision": "", "ctags": [{"_type": "tag", "name": "CONFIG_BACKUP_FILE", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/props/core/src/properties.c", "pattern": "/^#define CONFIG_BACKUP_FILE /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "CONFIG_FILE", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/props/core/src/properties.c", "pattern": "/^#define CONFIG_FILE /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "CONFIG_TMP_FILE", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/props/core/src/properties.c", "pattern": "/^#define CONFIG_TMP_FILE /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "CURR_SCHEMA_VER", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/props/core/src/properties.c", "pattern": "/^#define CURR_SCHEMA_VER /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "DEFAULT_PROPERTIES", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/props/core/src/properties.c", "pattern": "/^static const char *DEFAULT_PROPERTIES[] = {$/", "file": true, "language": "C", "typeref": "typename:const char * []", "kind": "variable"}, {"_type": "tag", "name": "KEY_NODE", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/props/core/src/properties.c", "pattern": "/^#define KEY_NODE /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "MAX_PATHNAME_LEN", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/props/core/src/properties.c", "pattern": "/^#define MAX_PATHNAME_LEN /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "PROP_MTX", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/props/core/src/properties.c", "pattern": "/^static pthread_mutex_t    PROP_MTX = PTHREAD_MUTEX_INITIALIZER;$/", "file": true, "language": "C", "typeref": "typename:pthread_mutex_t", "kind": "variable"}, {"_type": "tag", "name": "PROP_NODE", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/props/core/src/properties.c", "pattern": "/^#define PROP_NODE /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "ROOT_NODE", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/props/core/src/properties.c", "pattern": "/^#define ROOT_NODE /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "SCHEMA_VER_ATTR", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/props/core/src/properties.c", "pattern": "/^#define SCHEMA_VER_ATTR /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "SOURCE_NODE", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/props/core/src/properties.c", "pattern": "/^#define SOURCE_NODE /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "VALUE_NODE", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/props/core/src/properties.c", "pattern": "/^#define VALUE_NODE /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "VERSION_NODE", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/props/core/src/properties.c", "pattern": "/^#define VERSION_NODE /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "XHUI_VERSION_FILE", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/props/core/src/properties.c", "pattern": "/^#define XHUI_VERSION_FILE /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "backupTask", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/props/core/src/properties.c", "pattern": "/^static int backupTask = 0;$/", "file": true, "language": "C", "typeref": "typename:int", "kind": "variable"}, {"_type": "tag", "name": "confVersion", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/props/core/src/properties.c", "pattern": "/^static uint64_t confVersion = 0;      \\/\\/ xml file version$/", "file": true, "language": "C", "typeref": "typename:uint64_t", "kind": "variable"}, {"_type": "tag", "name": "configBackupFilename", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/props/core/src/properties.c", "pattern": "/^static char configBackupFilename[MAX_PATHNAME_LEN]; \\/\\/ backup of the config file$/", "file": true, "language": "C", "typeref": "typename:char[]", "kind": "variable"}, {"_type": "tag", "name": "configFilename", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/props/core/src/properties.c", "pattern": "/^static char configFilename[MAX_PATHNAME_LEN];       \\/\\/ xml config file where property objects /", "file": true, "language": "C", "typeref": "typename:char[]", "kind": "variable"}, {"_type": "tag", "name": "configTmpFilename", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/props/core/src/properties.c", "pattern": "/^static char configTmpFilename[MAX_PATHNAME_LEN];    \\/\\/ the temp copy of config file$/", "file": true, "language": "C", "typeref": "typename:char[]", "kind": "variable"}, {"_type": "tag", "name": "createProperty", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/props/core/src/properties.c", "pattern": "/^property *createProperty(const char *key, const char *val, propSource source)$/", "language": "C", "typeref": "typename:property *", "kind": "function", "signature": "(const char * key,const char * val,propSource source)"}, {"_type": "tag", "name": "deleteProperty", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/props/core/src/properties.c", "pattern": "/^bool deleteProperty(char *key)$/", "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(char * key)"}, {"_type": "tag", "name": "destroyProperties", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/props/core/src/properties.c", "pattern": "/^void destroyProperties()$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "ensureDefaults", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/props/core/src/properties.c", "pattern": "/^static bool ensureDefaults()$/", "file": true, "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "getAllPropertyKeys", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/props/core/src/properties.c", "pattern": "/^char **getAllPropertyKeys(int *countOut)$/", "language": "C", "typeref": "typename:char **", "kind": "function", "signature": "(int * countOut)"}, {"_type": "tag", "name": "getConfigFileVersion", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/props/core/src/properties.c", "pattern": "/^uint64_t getConfigFileVersion()$/", "language": "C", "typeref": "typename:uint64_t", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "getProperty", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/props/core/src/properties.c", "pattern": "/^property *getProperty(char *key)$/", "language": "C", "typeref": "typename:property *", "kind": "function", "signature": "(char * key)"}, {"_type": "tag", "name": "getPropertyCount", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/props/core/src/properties.c", "pattern": "/^int getPropertyCount()$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "getPropertyWhenLocked", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/props/core/src/properties.c", "pattern": "/^static property *getPropertyWhenLocked(char *key)$/", "file": true, "language": "C", "typeref": "typename:property *", "kind": "function", "signature": "(char * key)"}, {"_type": "tag", "name": "initProperties", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/props/core/src/properties.c", "pattern": "/^bool initProperties(char *configDir, char *homeDir)$/", "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(char * configDir,char * homeDir)"}, {"_type": "tag", "name": "loadGlobalDefaults", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/props/core/src/properties.c", "pattern": "/^void loadGlobalDefaults()$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "migrateFromSchemaZero", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/props/core/src/properties.c", "pattern": "/^static bool migrateFromSchemaZero()$/", "file": true, "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "notifyBackupService", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/props/core/src/properties.c", "pattern": "/^static void notifyBackupService(void *arg)$/", "file": true, "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(void * arg)"}, {"_type": "tag", "name": "propertyMap", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/props/core/src/properties.c", "pattern": "/^static icHashMap *propertyMap = NULL;               \\/\\/ hash of property objects$/", "file": true, "language": "C", "typeref": "typename:icHashMap *", "kind": "variable"}, {"_type": "tag", "name": "readConfigFile", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/props/core/src/properties.c", "pattern": "/^static bool readConfigFile(const char *path)$/", "file": true, "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(const char * path)"}, {"_type": "tag", "name": "restorePropConfig", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/props/core/src/properties.c", "pattern": "/^bool restorePropConfig(char *tempDir, char *destDir)$/", "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(char * tempDir,char * destDir)"}, {"_type": "tag", "name": "setPropertiesBulk", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/props/core/src/properties.c", "pattern": "/^bool setPropertiesBulk(propertyValues *group)$/", "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(propertyValues * group)"}, {"_type": "tag", "name": "setProperty", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/props/core/src/properties.c", "pattern": "/^setPropRc setProperty(property *prop)$/", "language": "C", "typeref": "typename:setPropRc", "kind": "function", "signature": "(property * prop)"}, {"_type": "tag", "name": "setPropertyOverwrite", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/props/core/src/properties.c", "pattern": "/^setPropRc setPropertyOverwrite(property *prop)$/", "language": "C", "typeref": "typename:setPropRc", "kind": "function", "signature": "(property * prop)"}, {"_type": "tag", "name": "setPropertyWhenLocked", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/props/core/src/properties.c", "pattern": "/^static setPropRc setPropertyWhenLocked(property *prop, bool sendEvent, bool overwrite)$/", "file": true, "language": "C", "typeref": "typename:setPropRc", "kind": "function", "signature": "(property * prop,bool sendEvent,bool overwrite)"}, {"_type": "tag", "name": "writeConfigFile", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/props/core/src/properties.c", "pattern": "/^static bool writeConfigFile(bool sendEvent)$/", "file": true, "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(bool sendEvent)"}], "hash": "f49eb6273e1684ecdcc1061a3eb85ed9", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "components/opensource/zilker-sdk/source/services/props/core/src/properties.c", "fields": [{"name": "const char * [] DEFAULT_PROPERTIES", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "pthread_mutex_t PROP_MTX", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int backupTask", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "uint64_t confVersion", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "char[] configBackupFilename", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "char[] configFilename", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "char[] configTmpFilename", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "icHashMap * propertyMap", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"14419": ""}]}