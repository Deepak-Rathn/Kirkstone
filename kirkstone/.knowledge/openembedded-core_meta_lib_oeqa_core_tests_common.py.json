{"is_source_file": true, "format": "Python", "description": "This file contains unit tests setup and helper functions for the oeqa framework, including a base test class and sys.path setup.", "external_files": ["../../../../", "oeqa.core.context"], "external_methods": ["oeqa.core.context.OETestContext"], "published": [], "classes": [{"name": "TestBase", "description": "A unittest.TestCase subclass that provides setup for oeqa framework tests and a method to load tests using OETestContext."}], "methods": [{"name": "setup_sys_path()", "description": "Sets up the sys.path for the oeqa library by appending the appropriate directory.", "scope": "", "scopeKind": ""}, {"name": "TestBase.setUp", "description": "Initializes the TestBase instance, setting up logger and cases_path."}, {"name": "TestBase._testLoader", "description": "Creates and configures an OETestContext instance, loading tests from the specified cases directory."}, {"name": "_testLoader(self, d={}, modules=[], tests=[], **kwargs)", "scope": "TestBase", "scopeKind": "class", "description": "unavailable"}, {"name": "setUp(self)", "scope": "TestBase", "scopeKind": "class", "description": "unavailable"}], "calls": ["sys.path.insert", "logging.getLogger", "logging.StreamHandler", "logging.Formatter", "logger.setLevel", "logger.addHandler", "os.path.dirname", "os.path.abspath", "os.path.realpath", "os.path.join", "self.logger", "self.cases_path", "OETestContext", "tc.loadTests"], "search-terms": ["unit testing", "oeqa framework", "common.py", "TestBase", "setup_sys_path", "loadTests", "OETestContext", "unittest"], "state": 2, "file_id": 2047, "knowledge_revision": 15194, "git_revision": "", "ctags": [{"_type": "tag", "name": "TestBase", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oeqa/core/tests/common.py", "pattern": "/^class TestBase(unittest.TestCase):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "_testLoader", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oeqa/core/tests/common.py", "pattern": "/^    def _testLoader(self, d={}, modules=[], tests=[], **kwargs):$/", "language": "Python", "kind": "member", "signature": "(self, d={}, modules=[], tests=[], **kwargs)", "scope": "TestBase", "scopeKind": "class"}, {"_type": "tag", "name": "consoleHandler", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oeqa/core/tests/common.py", "pattern": "/^consoleHandler = logging.StreamHandler()$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "formatter", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oeqa/core/tests/common.py", "pattern": "/^formatter = logging.Formatter('OEQATest: %(message)s')$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "logger", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oeqa/core/tests/common.py", "pattern": "/^logger = logging.getLogger(\"oeqa\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "setUp", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oeqa/core/tests/common.py", "pattern": "/^    def setUp(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "TestBase", "scopeKind": "class"}, {"_type": "tag", "name": "setup_sys_path", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oeqa/core/tests/common.py", "pattern": "/^def setup_sys_path():$/", "language": "Python", "kind": "function", "signature": "()"}], "hash": "c95e565e544163375ad9b7885a30778b", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "openembedded-core/meta/lib/oeqa/core/tests/common.py", "fields": [{"name": "consoleHandler = logging.StreamHandler()", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "formatter = logging.Formatter('OEQATest: %(message)s')", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "logger = logging.getLogger(\"oeqa\")", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"15194": ""}]}