{"is_source_file": true, "format": "C", "description": "This file is a C source code file implementing file system directory monitoring for crash dump files using inotify. It sets up a watcher to observe a directory for new files matching certain patterns (like *.dmp), and triggers a shell script to upload these files when they appear. The code includes signal handling, inotify setup, a main loop, and command execution logic for handling file creation events.", "external_files": ["secure_wrapper.h", "<system headers like assert.h, errno.h, fnmatch.h, limits.h, signal.h, stddef.h, stdio.h, stdlib.h, sys/inotify.h, unistd.h>"], "external_methods": ["inotify_init", "inotify_add_watch", "read", "close", "perror", "sigaction", "system", "printf", "snprintf", "strncmp", "strlen", "strcmp"], "published": [], "classes": [], "methods": [{"name": "void process_interrupt_handler(const int s)", "description": "Handles SIGINT signal to set the 'interrupted' flag indicating the process was interrupted.", "scope": "", "scopeKind": ""}, {"name": "int directory_watcher(const char * const directory,const char * command_to_run,const char * command_args,const char * const * const patterns,const size_t pattern_count)", "description": "Main loop that sets up inotify watch on given directory and executes script upon detection of patterns.", "scope": "", "scopeKind": ""}, {"name": "int main(const int argc,const char * const * const argv)", "description": "Entry point that initializes signal handling and starts the directory watcher.", "scope": "", "scopeKind": ""}], "calls": ["inotify_init", "inotify_add_watch", "read", "close", "perror", "sigaction", "system", "printf"], "search-terms": ["inotify-watcher", "crash dump upload", "directory monitoring", "inotify_init", "SIGINT handler", "uploadDumps.sh"], "state": 2, "file_id": 12791, "knowledge_revision": 25689, "git_revision": "", "ctags": [{"_type": "tag", "name": "ALIGNAS", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/crashupload/src/inotify-minidump-watcher.c", "pattern": "/^#  define ALIGNAS(/", "file": true, "language": "C", "kind": "macro", "signature": "(TYPE)"}, {"_type": "tag", "name": "directory_watcher", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/crashupload/src/inotify-minidump-watcher.c", "pattern": "/^directory_watcher(const char *const directory,$/", "file": true, "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(const char * const directory,const char * command_to_run,const char * command_args,const char * const * const patterns,const size_t pattern_count)"}, {"_type": "tag", "name": "interrupted", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/crashupload/src/inotify-minidump-watcher.c", "pattern": "/^static volatile int interrupted = 0;$/", "file": true, "language": "C", "typeref": "typename:volatile int", "kind": "variable"}, {"_type": "tag", "name": "main", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/crashupload/src/inotify-minidump-watcher.c", "pattern": "/^main(const int argc, const char *const *const argv)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(const int argc,const char * const * const argv)"}, {"_type": "tag", "name": "process_interrupt_handler", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/crashupload/src/inotify-minidump-watcher.c", "pattern": "/^process_interrupt_handler(const int s)$/", "file": true, "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(const int s)"}], "hash": "6f33a4aea36e6c8f587056aee65a87ae", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "rdk/components/generic/crashupload/src/inotify-minidump-watcher.c", "fields": [{"name": "volatile int interrupted", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"25689": ""}]}