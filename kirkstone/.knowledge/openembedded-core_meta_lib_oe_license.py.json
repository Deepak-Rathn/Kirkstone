{"is_source_file": true, "format": "Python", "description": "This file provides utilities for parsing, validating, and manipulating license strings specific to the OpenEmbedded project. It includes functions for license validation, license list management, license expression parsing, and license filtering based on inclusion/exclusion patterns.", "external_files": ["ast", "re", "fnmatch"], "external_methods": ["fnmatch.fnmatchcase"], "published": ["license_ok", "obsolete_license_list", "LicenseError", "LicenseSyntaxError", "InvalidLicense", "license_operator_chars", "license_operator", "license_pattern", "LicenseVisitor", "flattened_licenses", "is_included", "ManifestVisitor", "manifest_licenses", "ListVisitor", "list_licenses", "apply_pkg_license_exception"], "classes": [{"name": "LicenseError", "description": "Base exception for license parsing errors"}, {"name": "LicenseSyntaxError", "description": "Exception raised for syntax errors in license strings"}, {"name": "InvalidLicense", "description": "Exception raised for invalid characters in license strings"}, {"name": "LicenseVisitor", "description": "AST NodeVisitor class for processing license strings"}, {"name": "FlattenVisitor", "description": "AST NodeVisitor for flattening license expressions based on user choices"}, {"name": "ManifestVisitor", "description": "AST NodeVisitor for filtering licenses based on inclusion/exclusion criteria"}, {"name": "ListVisitor", "description": "AST NodeVisitor for listing all licenses in a license string"}], "methods": [{"name": "license_ok(license, dont_want_licenses)", "description": "Checks if a given license is acceptable based on a list of unwanted licenses", "scope": "", "scopeKind": ""}, {"name": "obsolete_license_list()", "description": "Returns a list of recognized obsolete license identifiers", "scope": "", "scopeKind": ""}, {"name": "flattened_licenses(licensestr, choose_licenses)", "description": "Parses a license string and returns a flat list of licenses based on a choice function", "scope": "", "scopeKind": ""}, {"name": "is_included(licensestr, include_licenses=None, exclude_licenses=None)", "description": "Determines if a license string matches inclusion/exclusion patterns", "scope": "", "scopeKind": ""}, {"name": "manifest_licenses(licensestr, dont_want_licenses, canonical_license, d)", "description": "Filters licenses in a license string, returning a modified string and list", "scope": "", "scopeKind": ""}, {"name": "list_licenses(licensestr)", "description": "Extracts all licenses mentioned in a license string", "scope": "", "scopeKind": ""}, {"name": "apply_pkg_license_exception(pkg, bad_licenses, exceptions)", "description": "Filters out license exceptions for a specific package from a list of bad licenses", "scope": "", "scopeKind": ""}, {"name": "__init__(self)", "scope": "ListVisitor", "scopeKind": "class", "description": "unavailable"}, {"name": "__init__(self, choose_licenses)", "scope": "FlattenVisitor", "scopeKind": "class", "description": "unavailable"}, {"name": "__init__(self, dont_want_licenses, canonical_license, d)", "scope": "ManifestVisitor", "scopeKind": "class", "description": "unavailable"}, {"name": "__init__(self, license)", "scope": "InvalidLicense", "scopeKind": "class", "description": "unavailable"}, {"name": "__init__(self, licensestr, exc)", "scope": "LicenseSyntaxError", "scopeKind": "class", "description": "unavailable"}, {"name": "__str__(self)", "scope": "LicenseSyntaxError", "scopeKind": "class", "description": "unavailable"}, {"name": "choose_licenses(alpha, beta)", "scope": "is_included", "scopeKind": "function", "description": "unavailable"}, {"name": "exclude_license(license)", "scope": "is_included", "scopeKind": "function", "description": "unavailable"}, {"name": "get_elements(self, licensestr)", "scope": "LicenseVisitor", "scopeKind": "class", "description": "unavailable"}, {"name": "include_license(license)", "scope": "is_included", "scopeKind": "function", "description": "unavailable"}, {"name": "visit(self, node)", "scope": "ManifestVisitor", "scopeKind": "class", "description": "unavailable"}, {"name": "visit_BinOp(self, node)", "scope": "FlattenVisitor", "scopeKind": "class", "description": "unavailable"}, {"name": "visit_Constant(self, node)", "scope": "ListVisitor", "scopeKind": "class", "description": "unavailable"}, {"name": "visit_Str(self, node)", "scope": "ListVisitor", "scopeKind": "class", "description": "unavailable"}, {"name": "visit_elements(self, elements)", "scope": "LicenseVisitor", "scopeKind": "class", "description": "unavailable"}, {"name": "visit_string(self, licensestr)", "scope": "LicenseVisitor", "scopeKind": "class", "description": "unavailable"}], "calls": ["fnmatch.fnmatchcase", "ast.parse", "ast.NodeVisitor", "ast.Str", "ast.Constant", "ast.BinOp", "ast.BitOr", "ast.BitAnd", "ast.List", "ast.Load"], "search-terms": ["license parsing", "OpenEmbedded license", "license string manipulation", "license validation", "license expressions", "license filtering"], "state": 2, "file_id": 1832, "knowledge_revision": 14987, "git_revision": "", "ctags": [{"_type": "tag", "name": "FlattenVisitor", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/license.py", "pattern": "/^class FlattenVisitor(LicenseVisitor):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "InvalidLicense", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/license.py", "pattern": "/^class InvalidLicense(LicenseError):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "LicenseError", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/license.py", "pattern": "/^class LicenseError(Exception):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "LicenseSyntaxError", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/license.py", "pattern": "/^class LicenseSyntaxError(LicenseError):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "LicenseVisitor", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/license.py", "pattern": "/^class LicenseVisitor(ast.NodeVisitor):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "ListVisitor", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/license.py", "pattern": "/^class ListVisitor(LicenseVisitor):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "ManifestVisitor", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/license.py", "pattern": "/^class ManifestVisitor(LicenseVisitor):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/license.py", "pattern": "/^    def __init__(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "ListVisitor", "scopeKind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/license.py", "pattern": "/^    def __init__(self, choose_licenses):$/", "language": "Python", "kind": "member", "signature": "(self, choose_licenses)", "scope": "FlattenVisitor", "scopeKind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/license.py", "pattern": "/^    def __init__(self, dont_want_licenses, canonical_license, d):$/", "language": "Python", "kind": "member", "signature": "(self, dont_want_licenses, canonical_license, d)", "scope": "ManifestVisitor", "scopeKind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/license.py", "pattern": "/^    def __init__(self, license):$/", "language": "Python", "kind": "member", "signature": "(self, license)", "scope": "InvalidLicense", "scopeKind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/license.py", "pattern": "/^    def __init__(self, licensestr, exc):$/", "language": "Python", "kind": "member", "signature": "(self, licensestr, exc)", "scope": "LicenseSyntaxError", "scopeKind": "class"}, {"_type": "tag", "name": "__str__", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/license.py", "pattern": "/^    def __str__(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "InvalidLicense", "scopeKind": "class"}, {"_type": "tag", "name": "__str__", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/license.py", "pattern": "/^    def __str__(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "LicenseSyntaxError", "scopeKind": "class"}, {"_type": "tag", "name": "apply_pkg_license_exception", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/license.py", "pattern": "/^def apply_pkg_license_exception(pkg, bad_licenses, exceptions):$/", "language": "Python", "kind": "function", "signature": "(pkg, bad_licenses, exceptions)"}, {"_type": "tag", "name": "choose_licenses", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/license.py", "pattern": "/^    def choose_licenses(alpha, beta):$/", "file": true, "language": "Python", "kind": "function", "signature": "(alpha, beta)", "scope": "is_included", "scopeKind": "function"}, {"_type": "tag", "name": "exclude_license", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/license.py", "pattern": "/^    def exclude_license(license):$/", "file": true, "language": "Python", "kind": "function", "signature": "(license)", "scope": "is_included", "scopeKind": "function"}, {"_type": "tag", "name": "flattened_licenses", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/license.py", "pattern": "/^def flattened_licenses(licensestr, choose_licenses):$/", "language": "Python", "kind": "function", "signature": "(licensestr, choose_licenses)"}, {"_type": "tag", "name": "fnmatch", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/license.py", "pattern": "/^from fnmatch import fnmatchcase as fnmatch$/", "language": "Python", "kind": "unknown", "nameref": "unknown:fnmatchcase"}, {"_type": "tag", "name": "get_elements", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/license.py", "pattern": "/^    def get_elements(self, licensestr):$/", "language": "Python", "kind": "member", "signature": "(self, licensestr)", "scope": "LicenseVisitor", "scopeKind": "class"}, {"_type": "tag", "name": "include_license", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/license.py", "pattern": "/^    def include_license(license):$/", "file": true, "language": "Python", "kind": "function", "signature": "(license)", "scope": "is_included", "scopeKind": "function"}, {"_type": "tag", "name": "is_included", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/license.py", "pattern": "/^def is_included(licensestr, include_licenses=None, exclude_licenses=None):$/", "language": "Python", "kind": "function", "signature": "(licensestr, include_licenses=None, exclude_licenses=None)"}, {"_type": "tag", "name": "license_ok", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/license.py", "pattern": "/^def license_ok(license, dont_want_licenses):$/", "language": "Python", "kind": "function", "signature": "(license, dont_want_licenses)"}, {"_type": "tag", "name": "license_operator", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/license.py", "pattern": "/^license_operator = re.compile(r'([' + license_operator_chars + '])')$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "license_operator_chars", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/license.py", "pattern": "/^license_operator_chars = '&|() '$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "license_pattern", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/license.py", "pattern": "/^license_pattern = re.compile(r'[a-zA-Z0-9.+_\\\\-]+$')$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "list_licenses", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/license.py", "pattern": "/^def list_licenses(licensestr):$/", "language": "Python", "kind": "function", "signature": "(licensestr)"}, {"_type": "tag", "name": "manifest_licenses", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/license.py", "pattern": "/^def manifest_licenses(licensestr, dont_want_licenses, canonical_license, d):$/", "language": "Python", "kind": "function", "signature": "(licensestr, dont_want_licenses, canonical_license, d)"}, {"_type": "tag", "name": "obsolete_license_list", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/license.py", "pattern": "/^def obsolete_license_list():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "visit", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/license.py", "pattern": "/^    def visit(self, node):$/", "language": "Python", "kind": "member", "signature": "(self, node)", "scope": "ManifestVisitor", "scopeKind": "class"}, {"_type": "tag", "name": "visit_BinOp", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/license.py", "pattern": "/^    def visit_BinOp(self, node):$/", "language": "Python", "kind": "member", "signature": "(self, node)", "scope": "FlattenVisitor", "scopeKind": "class"}, {"_type": "tag", "name": "visit_Constant", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/license.py", "pattern": "/^    def visit_Constant(self, node):$/", "language": "Python", "kind": "member", "signature": "(self, node)", "scope": "FlattenVisitor", "scopeKind": "class"}, {"_type": "tag", "name": "visit_Constant", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/license.py", "pattern": "/^    def visit_Constant(self, node):$/", "language": "Python", "kind": "member", "signature": "(self, node)", "scope": "ListVisitor", "scopeKind": "class"}, {"_type": "tag", "name": "visit_Str", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/license.py", "pattern": "/^    def visit_Str(self, node):$/", "language": "Python", "kind": "member", "signature": "(self, node)", "scope": "FlattenVisitor", "scopeKind": "class"}, {"_type": "tag", "name": "visit_Str", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/license.py", "pattern": "/^    def visit_Str(self, node):$/", "language": "Python", "kind": "member", "signature": "(self, node)", "scope": "ListVisitor", "scopeKind": "class"}, {"_type": "tag", "name": "visit_elements", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/license.py", "pattern": "/^    def visit_elements(self, elements):$/", "language": "Python", "kind": "member", "signature": "(self, elements)", "scope": "LicenseVisitor", "scopeKind": "class"}, {"_type": "tag", "name": "visit_string", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/license.py", "pattern": "/^    def visit_string(self, licensestr):$/", "language": "Python", "kind": "member", "signature": "(self, licensestr)", "scope": "LicenseVisitor", "scopeKind": "class"}], "hash": "334e18087762653491f00f1958288624", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "openembedded-core/meta/lib/oe/license.py", "fields": [{"name": "license_operator = re.compile(r'([' + license_operator_chars + '])')", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "license_operator_chars = '&|() '", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "license_pattern = re.compile(r'[a-zA-Z0-9.+_\\\\-]+$')", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"14987": ""}]}