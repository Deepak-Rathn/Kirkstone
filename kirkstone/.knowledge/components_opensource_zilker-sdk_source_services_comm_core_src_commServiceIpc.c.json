{"is_source_file": true, "format": "C", "description": "This source file implements various functions related to IPC request handling for a communication service, including obtaining service statistics, status, configuration management, and message handling. It contains multiple IPC handler functions and references to internal modules, indicating it is a core source file for IPC operations within a larger project.", "external_files": ["icBuildtime.h", "icLog/logging.h", "icIpc/ipcMessage.h", "icIpc/eventConsumer.h", "icIpc/ipcReceiver.h", "icSystem/softwareCapabilities.h", "icTime/timeUtils.h", "commMgr/commService_pojo.h", "watchdog/serviceStatsHelper.h", "commService_ipc_handler.h", "channelManager.h", "commServiceCommon.h"], "external_methods": ["collectEventStatistics", "collectIpcStatistics", "get_commService_ipc_receiver", "collectServiceStats", "collectChannelMessageStatisticsIPC", "getCurrentUnixTimeMillis", "getChannelRuntimeStatusIPC", "channelGetSunriseSunsetTimeIPC", "channelSendMessageToSubscriberIPC", "channelIsAnythingOnline", "channelGetOnlineDetailedStatus", "channelGetCloudAssociationStateIPC", "channelStartManualCloudAssociationIPC", "channelConfigurationRestoredIPC", "channelGetHostnameConfigurationListIPC", "channelSetHostnameConfigurationListIPC", "channelPerformConnectionTests", "destroyChannelTestResult"], "published": ["handle_commService_GET_RUNTIME_STATS_request", "handle_commService_GET_SERVICE_STATUS_request", "handle_commService_CONFIG_RESTORED_request", "handle_GET_SUNRISE_SUNSET_TIME_request", "handle_SEND_MESSAGE_TO_SUBSCRIBER_request", "handle_GET_ONLINE_STATUS_request", "handle_GET_ONLINE_DETAILED_STATUS_request", "handle_GET_CLOUD_ASSOCIATION_STATE_request", "handle_INITIATE_MANUAL_CLOUD_ASSOCIATION_request", "handle_RESET_COMM_SETTINGS_TO_DEFAULT_request", "handle_GET_HOSTNAME_CONFIG_LIST_request", "handle_SET_HOSTNAME_CONFIG_LIST_request", "handle_UPLOAD_IMAGES_TO_SERVER_request", "handle_ASSOCIATE_MEDIA_TO_RULE_request", "handle_UPLOAD_PICTURES_FROM_CAMERA_request", "handle_UPLOAD_VIDEO_FROM_CAMERA_request", "handle_UPLOAD_FILES_TO_SERVER_request", "handle_PERFORM_CONNECTIVITY_TEST_request", "handle_NOTIFY_CPE_SETUP_COMPLETE_request"], "classes": [], "methods": [{"name": "IPCCode handle_commService_GET_RUNTIME_STATS_request(bool input,runtimeStatsPojo * output)", "description": "Handles IPC request to obtain runtime statistics of the service, collecting event, IPC, process, and channel stats, then populating the output structure.", "scope": "", "scopeKind": ""}, {"name": "IPCCode handle_commService_GET_SERVICE_STATUS_request(serviceStatusPojo * output)", "description": "Handles IPC request to get current service status, retrieving status from all enabled channels.", "scope": "", "scopeKind": ""}, {"name": "IPCCode handle_commService_CONFIG_RESTORED_request(configRestoredInput * input,configRestoredOutput * output)", "description": "Handles IPC request indicating configuration was restored, and determines whether to restart or report failure based on channel configuration restore success.", "scope": "", "scopeKind": ""}, {"name": "IPCCode handle_GET_SUNRISE_SUNSET_TIME_request(sunriseSunsetTimes * output)", "description": "Requests sunrise/sunset times from channels and returns the results.", "scope": "", "scopeKind": ""}, {"name": "IPCCode handle_SEND_MESSAGE_TO_SUBSCRIBER_request(ruleSendMessage * input)", "description": "Facilitates sending a notification message to subscribers through channels.", "scope": "", "scopeKind": ""}, {"name": "IPCCode handle_GET_ONLINE_STATUS_request(bool * output)", "description": "Checks if any channel is online and returns the boolean result.", "scope": "", "scopeKind": ""}, {"name": "IPCCode handle_GET_ONLINE_DETAILED_STATUS_request(commChannelStatusList * output)", "description": "Retrieves detailed online status of all channels.", "scope": "", "scopeKind": ""}, {"name": "IPCCode handle_GET_CLOUD_ASSOCIATION_STATE_request(cloudAssociationValue * output)", "description": "Queries the cloud association state across channels and returns the status.", "scope": "", "scopeKind": ""}, {"name": "IPCCode handle_INITIATE_MANUAL_CLOUD_ASSOCIATION_request(cloudAssociationParms * input,cloudAssociationResponse * output)", "description": "Initiates a manual cloud association process if supported, with conditional compilation logic.", "scope": "", "scopeKind": ""}, {"name": "IPCCode handle_RESET_COMM_SETTINGS_TO_DEFAULT_request(bool * output)", "description": "Resets communication settings to default values via channel manager.", "scope": "", "scopeKind": ""}, {"name": "IPCCode handle_GET_HOSTNAME_CONFIG_LIST_request(commHostConfigList * output)", "description": "Gets the list of hostname configurations from channels.", "scope": "", "scopeKind": ""}, {"name": "IPCCode handle_SET_HOSTNAME_CONFIG_LIST_request(commHostConfigList * input)", "description": "Updates the hostname configurations on channels.", "scope": "", "scopeKind": ""}, {"name": "IPCCode handle_UPLOAD_IMAGES_TO_SERVER_request(imageUploadMessage * input,bool * output)", "description": "Placeholder for uploading images to server, not yet implemented.", "scope": "", "scopeKind": ""}, {"name": "IPCCode handle_ASSOCIATE_MEDIA_TO_RULE_request(associateMediaToRule * input)", "description": "Placeholder to associate media with rules, not yet implemented.", "scope": "", "scopeKind": ""}, {"name": "IPCCode handle_UPLOAD_PICTURES_FROM_CAMERA_request(uploadPicturesFromCamera * input)", "description": "Placeholder to capture/upload pictures from camera, not yet implemented.", "scope": "", "scopeKind": ""}, {"name": "IPCCode handle_UPLOAD_VIDEO_FROM_CAMERA_request(uploadVideoFromCamera * input)", "description": "Placeholder to capture/upload video from camera, not yet implemented.", "scope": "", "scopeKind": ""}, {"name": "IPCCode handle_UPLOAD_FILES_TO_SERVER_request(uploadMessage * input,bool * output)", "description": "Placeholder for file upload to server, not yet implemented.", "scope": "", "scopeKind": ""}, {"name": "IPCCode handle_PERFORM_CONNECTIVITY_TEST_request(connectivityTestOptions * input,connectivityTestResultList * output)", "description": "Performs connectivity tests on channels and translates results into IPC data structures.", "scope": "", "scopeKind": ""}, {"name": "IPCCode handle_NOTIFY_CPE_SETUP_COMPLETE_request()", "description": "Placeholder to notify cloud setup completion, not yet implemented.", "scope": "", "scopeKind": ""}], "calls": ["collectEventStatistics", "collectIpcStatistics", "get_commService_ipc_receiver", "collectServiceStats", "collectChannelMessageStatisticsIPC", "getCurrentUnixTimeMillis", "channelGetSunriseSunsetTimeIPC", "channelSendMessageToSubscriberIPC", "channelIsAnythingOnline", "getChannelRuntimeStatusIPC", "channelGetOnlineDetailedStatus", "channelGetCloudAssociationStateIPC", "channelStartManualCloudAssociationIPC", "channelConfigurationRestoredIPC", "channelGetHostnameConfigurationListIPC", "channelSetHostnameConfigurationListIPC", "channelPerformConnectionTests", "destroyChannelTestResult"], "search-terms": ["commServiceIpc", "IPC handling functions", "service status", "configuration restore", "sunrise sunset", "cloud association", "channel status", "connection tests", "IPC request handlers"], "state": 2, "file_id": 1136, "knowledge_revision": 14304, "git_revision": "", "ctags": [{"_type": "tag", "name": "handle_ASSOCIATE_MEDIA_TO_RULE_request", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/comm/core/src/commServiceIpc.c", "pattern": "/^IPCCode handle_ASSOCIATE_MEDIA_TO_RULE_request(associateMediaToRule *input)$/", "language": "C", "typeref": "typename:IPCCode", "kind": "function", "signature": "(associateMediaToRule * input)"}, {"_type": "tag", "name": "handle_GET_CLOUD_ASSOCIATION_STATE_request", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/comm/core/src/commServiceIpc.c", "pattern": "/^IPCCode handle_GET_CLOUD_ASSOCIATION_STATE_request(cloudAssociationValue *output)$/", "language": "C", "typeref": "typename:IPCCode", "kind": "function", "signature": "(cloudAssociationValue * output)"}, {"_type": "tag", "name": "handle_GET_HOSTNAME_CONFIG_LIST_request", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/comm/core/src/commServiceIpc.c", "pattern": "/^IPCCode handle_GET_HOSTNAME_CONFIG_LIST_request(commHostConfigList *output)$/", "language": "C", "typeref": "typename:IPCCode", "kind": "function", "signature": "(commHostConfigList * output)"}, {"_type": "tag", "name": "handle_GET_ONLINE_DETAILED_STATUS_request", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/comm/core/src/commServiceIpc.c", "pattern": "/^IPCCode handle_GET_ONLINE_DETAILED_STATUS_request(commChannelStatusList *output)$/", "language": "C", "typeref": "typename:IPCCode", "kind": "function", "signature": "(commChannelStatusList * output)"}, {"_type": "tag", "name": "handle_GET_ONLINE_STATUS_request", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/comm/core/src/commServiceIpc.c", "pattern": "/^IPCCode handle_GET_ONLINE_STATUS_request(bool *output)$/", "language": "C", "typeref": "typename:IPCCode", "kind": "function", "signature": "(bool * output)"}, {"_type": "tag", "name": "handle_GET_SUNRISE_SUNSET_TIME_request", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/comm/core/src/commServiceIpc.c", "pattern": "/^IPCCode handle_GET_SUNRISE_SUNSET_TIME_request(sunriseSunsetTimes *output)$/", "language": "C", "typeref": "typename:IPCCode", "kind": "function", "signature": "(sunriseSunsetTimes * output)"}, {"_type": "tag", "name": "handle_INITIATE_MANUAL_CLOUD_ASSOCIATION_request", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/comm/core/src/commServiceIpc.c", "pattern": "/^IPCCode handle_INITIATE_MANUAL_CLOUD_ASSOCIATION_request(cloudAssociationParms *input, cloudAsso/", "language": "C", "typeref": "typename:IPCCode", "kind": "function", "signature": "(cloudAssociationParms * input,cloudAssociationResponse * output)"}, {"_type": "tag", "name": "handle_NOTIFY_CPE_SETUP_COMPLETE_request", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/comm/core/src/commServiceIpc.c", "pattern": "/^IPCCode handle_NOTIFY_CPE_SETUP_COMPLETE_request()$/", "language": "C", "typeref": "typename:IPCCode", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "handle_PERFORM_CONNECTIVITY_TEST_request", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/comm/core/src/commServiceIpc.c", "pattern": "/^IPCCode handle_PERFORM_CONNECTIVITY_TEST_request(connectivityTestOptions *input, connectivityTes/", "language": "C", "typeref": "typename:IPCCode", "kind": "function", "signature": "(connectivityTestOptions * input,connectivityTestResultList * output)"}, {"_type": "tag", "name": "handle_RESET_COMM_SETTINGS_TO_DEFAULT_request", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/comm/core/src/commServiceIpc.c", "pattern": "/^IPCCode handle_RESET_COMM_SETTINGS_TO_DEFAULT_request(bool *output)$/", "language": "C", "typeref": "typename:IPCCode", "kind": "function", "signature": "(bool * output)"}, {"_type": "tag", "name": "handle_SEND_MESSAGE_TO_SUBSCRIBER_request", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/comm/core/src/commServiceIpc.c", "pattern": "/^IPCCode handle_SEND_MESSAGE_TO_SUBSCRIBER_request(ruleSendMessage *input)$/", "language": "C", "typeref": "typename:IPCCode", "kind": "function", "signature": "(ruleSendMessage * input)"}, {"_type": "tag", "name": "handle_SET_HOSTNAME_CONFIG_LIST_request", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/comm/core/src/commServiceIpc.c", "pattern": "/^IPCCode handle_SET_HOSTNAME_CONFIG_LIST_request(commHostConfigList *input)$/", "language": "C", "typeref": "typename:IPCCode", "kind": "function", "signature": "(commHostConfigList * input)"}, {"_type": "tag", "name": "handle_UPLOAD_FILES_TO_SERVER_request", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/comm/core/src/commServiceIpc.c", "pattern": "/^IPCCode handle_UPLOAD_FILES_TO_SERVER_request(uploadMessage *input,bool *output)$/", "language": "C", "typeref": "typename:IPCCode", "kind": "function", "signature": "(uploadMessage * input,bool * output)"}, {"_type": "tag", "name": "handle_UPLOAD_IMAGES_TO_SERVER_request", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/comm/core/src/commServiceIpc.c", "pattern": "/^IPCCode handle_UPLOAD_IMAGES_TO_SERVER_request(imageUploadMessage *input, bool *output)$/", "language": "C", "typeref": "typename:IPCCode", "kind": "function", "signature": "(imageUploadMessage * input,bool * output)"}, {"_type": "tag", "name": "handle_UPLOAD_PICTURES_FROM_CAMERA_request", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/comm/core/src/commServiceIpc.c", "pattern": "/^IPCCode handle_UPLOAD_PICTURES_FROM_CAMERA_request(uploadPicturesFromCamera *input)$/", "language": "C", "typeref": "typename:IPCCode", "kind": "function", "signature": "(uploadPicturesFromCamera * input)"}, {"_type": "tag", "name": "handle_UPLOAD_VIDEO_FROM_CAMERA_request", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/comm/core/src/commServiceIpc.c", "pattern": "/^IPCCode handle_UPLOAD_VIDEO_FROM_CAMERA_request(uploadVideoFromCamera *input)$/", "language": "C", "typeref": "typename:IPCCode", "kind": "function", "signature": "(uploadVideoFromCamera * input)"}, {"_type": "tag", "name": "handle_commService_CONFIG_RESTORED_request", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/comm/core/src/commServiceIpc.c", "pattern": "/^IPCCode handle_commService_CONFIG_RESTORED_request(configRestoredInput *input, configRestoredOut/", "language": "C", "typeref": "typename:IPCCode", "kind": "function", "signature": "(configRestoredInput * input,configRestoredOutput * output)"}, {"_type": "tag", "name": "handle_commService_GET_RUNTIME_STATS_request", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/comm/core/src/commServiceIpc.c", "pattern": "/^IPCCode handle_commService_GET_RUNTIME_STATS_request(bool input, runtimeStatsPojo *output)$/", "language": "C", "typeref": "typename:IPCCode", "kind": "function", "signature": "(bool input,runtimeStatsPojo * output)"}, {"_type": "tag", "name": "handle_commService_GET_SERVICE_STATUS_request", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/comm/core/src/commServiceIpc.c", "pattern": "/^IPCCode handle_commService_GET_SERVICE_STATUS_request(serviceStatusPojo *output)$/", "language": "C", "typeref": "typename:IPCCode", "kind": "function", "signature": "(serviceStatusPojo * output)"}], "hash": "42e09b8d1a33214bc0774dda9f9bf544", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "components/opensource/zilker-sdk/source/services/comm/core/src/commServiceIpc.c", "revision_history": [{"14304": ""}]}