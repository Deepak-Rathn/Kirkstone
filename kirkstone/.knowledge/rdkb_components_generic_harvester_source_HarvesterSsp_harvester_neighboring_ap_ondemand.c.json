{"is_source_file": true, "format": "C", "description": "This source file implements functionality for on-demand harvesting of neighboring WiFi Access Points (APs), including managing a linked list of data, executing system commands, gathering WiFi data via APIs, and controlling thread-based harvesting operations.", "external_files": ["harvester_neighboring_ap_ondemand.h", "harvester_avro.h", "ccsp_harvesterLog_wrapper.h", "harvester_rbus_api.h"], "external_methods": ["wifi_getRadioEnable", "wifi_getRadioChannel", "wifi_getRadioOperatingFrequencyBand", "wifi_getNeighboringWiFiDiagnosticResult2", "rbus_getBoolValue", "rbus_getUInt32Value", "rbus_getStringValue"], "published": ["SetNAPOnDemandHarvestingStatus", "GetNAPOnDemandHarvestingStatus"], "classes": [], "methods": [{"name": "int SetNAPOnDemandHarvestingStatus(BOOL status)", "description": "Controls the start/stop of the neighbor AP on-demand harvesting thread based on the status parameter.", "scope": "", "scopeKind": ""}, {"name": "BOOL GetNAPOnDemandHarvestingStatus()", "description": "Returns the current status of the neighbor AP on-demand harvesting flag.", "scope": "", "scopeKind": ""}, {"name": "int _napondemandsyscmd(char * cmd,char * retBuf,int retBufSize)", "description": "Executes a system command and captures its output into a buffer.", "scope": "", "scopeKind": ""}, {"name": "void add_to_nap_ondemand_list(char * radioIfName,ULONG numAPs,wifi_neighbor_ap2_t * neighborapdata,char * freqband,ULONG channel)", "description": "Adds a new neighbor AP data entry to the linked list.", "scope": "", "scopeKind": ""}, {"name": "void print_nap_ondemand_list()", "description": "Prints all entries in the neighbor AP linked list for debugging.", "scope": "", "scopeKind": ""}, {"name": "void delete_nap_ondemand_list()", "description": "Deletes all entries in the neighbor AP linked list.", "scope": "", "scopeKind": ""}, {"name": "int GetRadioNeighboringAPOnDemandData(int radioIndex,char * radioIfName)", "description": "Retrieves neighbor AP data for a specific radio interface, updates the list, and logs details.", "scope": "", "scopeKind": ""}, {"name": "void * StartNeighboringAPOnDemandHarvesting(void * arg)", "description": "Thread function that periodically collects neighbor AP data from all radios when enabled, reports, and resets the list.", "scope": "", "scopeKind": ""}], "calls": ["pthread_create", "feof", "fgets", "pclose", "popens", "malloc", "free", "strlen", "strdup", "gettimeofday", "rbus_getBoolValue", "rbus_getUInt32Value", "rbus_getStringValue", "wifi_getRadioEnable", "wifi_getRadioChannel", "wifi_getRadioOperatingFrequencyBand", "wifi_getNeighboringWiFiDiagnosticResult2"], "search-terms": ["neighboring AP", "on demand harvesting", "WiFi radio list", "rbus WiFi diagnostics", "linked list neighbor data", "harvester thread"], "state": 2, "file_id": 5646, "knowledge_revision": 18759, "git_revision": "", "ctags": [{"_type": "tag", "name": "GetNAPOnDemandHarvestingStatus", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/generic/harvester/source/HarvesterSsp/harvester_neighboring_ap_ondemand.c", "pattern": "/^BOOL GetNAPOnDemandHarvestingStatus()$/", "language": "C", "typeref": "typename:BOOL", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "GetRadioNeighboringAPOnDemandData", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/generic/harvester/source/HarvesterSsp/harvester_neighboring_ap_ondemand.c", "pattern": "/^int GetRadioNeighboringAPOnDemandData(int radioIndex, char* radioIfName)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(int radioIndex,char * radioIfName)"}, {"_type": "tag", "name": "NAPOnDemandHarvesterStatus", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/generic/harvester/source/HarvesterSsp/harvester_neighboring_ap_ondemand.c", "pattern": "/^BOOL NAPOnDemandHarvesterStatus = FALSE;$/", "language": "C", "typeref": "typename:BOOL", "kind": "variable"}, {"_type": "tag", "name": "SetNAPOnDemandHarvestingStatus", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/generic/harvester/source/HarvesterSsp/harvester_neighboring_ap_ondemand.c", "pattern": "/^int SetNAPOnDemandHarvestingStatus(BOOL status)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(BOOL status)"}, {"_type": "tag", "name": "StartNeighboringAPOnDemandHarvesting", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/generic/harvester/source/HarvesterSsp/harvester_neighboring_ap_ondemand.c", "pattern": "/^void* StartNeighboringAPOnDemandHarvesting(void* arg)$/", "language": "C", "typeref": "typename:void *", "kind": "function", "signature": "(void * arg)"}, {"_type": "tag", "name": "_napondemandsyscmd", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/generic/harvester/source/HarvesterSsp/harvester_neighboring_ap_ondemand.c", "pattern": "/^int _napondemandsyscmd(char *cmd, char *retBuf, int retBufSize)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(char * cmd,char * retBuf,int retBufSize)"}, {"_type": "tag", "name": "add_to_nap_ondemand_list", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/generic/harvester/source/HarvesterSsp/harvester_neighboring_ap_ondemand.c", "pattern": "/^void add_to_nap_ondemand_list(char* radioIfName, ULONG numAPs, wifi_neighbor_ap2_t* neighborapda/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(char * radioIfName,ULONG numAPs,wifi_neighbor_ap2_t * neighborapdata,char * freqband,ULONG channel)"}, {"_type": "tag", "name": "delete_nap_ondemand_list", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/generic/harvester/source/HarvesterSsp/harvester_neighboring_ap_ondemand.c", "pattern": "/^void delete_nap_ondemand_list()$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "napcurr", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/generic/harvester/source/HarvesterSsp/harvester_neighboring_ap_ondemand.c", "pattern": "/^static struct neighboringapdata *napcurr = NULL;$/", "file": true, "language": "C", "typeref": "struct:neighboringapdata *", "kind": "variable"}, {"_type": "tag", "name": "naphead", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/generic/harvester/source/HarvesterSsp/harvester_neighboring_ap_ondemand.c", "pattern": "/^static struct neighboringapdata *naphead = NULL;$/", "file": true, "language": "C", "typeref": "struct:neighboringapdata *", "kind": "variable"}, {"_type": "tag", "name": "neighWiFiDiag_ondemand_executed", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/generic/harvester/source/HarvesterSsp/harvester_neighboring_ap_ondemand.c", "pattern": "/^static bool neighWiFiDiag_ondemand_executed = false;$/", "file": true, "language": "C", "typeref": "typename:bool", "kind": "variable"}, {"_type": "tag", "name": "print_nap_ondemand_list", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/generic/harvester/source/HarvesterSsp/harvester_neighboring_ap_ondemand.c", "pattern": "/^void print_nap_ondemand_list()$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "tmp_buffer", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/generic/harvester/source/HarvesterSsp/harvester_neighboring_ap_ondemand.c", "pattern": "/^char tmp_buffer[72] = {'\\\\0'};$/", "language": "C", "typeref": "typename:char[72]", "kind": "variable"}], "hash": "920253b0f495354bf4e9ea6f4d08b4c4", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "rdkb/components/generic/harvester/source/HarvesterSsp/harvester_neighboring_ap_ondemand.c", "fields": [{"name": "BOOL NAPOnDemandHarvesterStatus", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "struct:neighboringapdata * napcurr", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "struct:neighboringapdata * naphead", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "bool neighWiFiDiag_ondemand_executed", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "char[72] tmp_buffer", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"18759": ""}]}