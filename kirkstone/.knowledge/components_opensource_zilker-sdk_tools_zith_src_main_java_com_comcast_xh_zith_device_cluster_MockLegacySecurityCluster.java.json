{"is_source_file": true, "format": "Java", "description": "This Java source file defines an abstract class 'MockLegacySecurityCluster' which models a complex security device cluster (specifically an IAS zone). The class provides methods for security device management, including handling battery status, temperature, RSSI, LQI, and sending various security-related commands over a Zigbee-like protocol. It interacts with external core classes and represents a mock or simulation of a security device in a Zigbee environment.", "external_files": ["com.comcast.xh.zith.device.capability.BatteryPowered", "com.comcast.xh.zith.mockzigbeecore.MockZigbeeCore", "com.comcast.xh.zith.mockzigbeecore.event.LegacyGodparentInfoMessageEvent", "com.comcast.xh.zith.mockzigbeecore.event.LegacyPingMessageEvent", "com.comcast.xh.zith.mockzigbeecore.event.LegacySecurityDeviceStatusEvent", "org.slf4j.Logger", "org.slf4j.LoggerFactory"], "external_methods": ["MockZigbeeCore.getInstance()", "MockZigbeeCore.getDevice()", "LegacyPingMessageEvent.send()", "LegacySecurityDeviceStatusEvent.send()", "LegacySecurityDeviceStatusEvent.sendAndWait()", "LegacyGodparentInfoMessageEvent.send()", "LegacyGodparentInfoMessageEvent.sendAndWait()"], "published": ["MockLegacySecurityCluster", "CLUSTER_ID", "sendPingCommand", "sendStatusCommand", "sendGodparentInfo", "sendCheckinCommmand", "handleMfgCommand", "setLowBattery", "isLowBattery", "setBatteryVoltage", "getBatteryVoltage", "setTemperature", "getTemperature", "getRssi", "setRssi", "getLqi", "setLqi"], "classes": [{"name": "MockLegacySecurityCluster", "description": "An abstract class modeling a legacy security device cluster (IAS zone) with capabilities for battery, temperature, RSSI, and LQI management, and handling of specific manufacturer commands."}, {"name": "ServerMfgCommand", "description": "A nested static class containing constants for manufacturer-specific commands, such as setting device number and ping."}], "methods": [{"name": "getDeviceNumber", "description": "Returns the device's assigned number."}, {"name": "sendPingCommand", "description": "Sends a ping command to the device if it is paired."}, {"name": "sendStatusCommand", "description": "Sends a status command and waits for an acknowledgment if waitMillis > 0."}, {"name": "sendStatusCommand", "description": "Sends a status command without waiting for acknowledgment."}, {"name": "sendGodparentInfo", "description": "Sends godparent info message with specified device numbers, optionally waiting for acknowledgment."}, {"name": "sendCheckinCommmand", "description": "Sends a check-in command to the device."}, {"name": "handleMfgCommand", "description": "Handles manufacturer-specific commands, such as setting device number or ping."}, {"name": "getStatus", "description": "Returns the status bytes representing device status bits."}, {"name": "setvBattNominal", "description": "Sets the nominal battery voltage."}, {"name": "setvBattLow", "description": "Sets the low battery voltage threshold."}, {"name": "setLowBattery", "description": "Sets the battery low status indicator and possibly updates battery voltage."}, {"name": "isLowBattery", "description": "Returns true if current battery voltage indicates low battery."}, {"name": "setBatteryVoltage", "description": "Sets the battery voltage if in valid range."}, {"name": "getBatteryVoltage", "description": "Returns the current battery voltage."}, {"name": "setTemperature", "description": "Sets ambient temperature in centi-degrees Celsius if valid."}, {"name": "getTemperature", "description": "Returns current ambient temperature."}, {"name": "getRssi", "description": "Returns the receive signal strength indicator in dBm."}, {"name": "setRssi", "description": "Sets the RSSI value."}, {"name": "getLqi", "description": "Returns the link quality index."}, {"name": "setLqi", "description": "Sets the link quality index."}], "calls": ["MockZigbeeCore.getInstance()", "MockZigbeeCore.getDevice()", "LegacyPingMessageEvent.send()", "LegacySecurityDeviceStatusEvent.send()", "LegacySecurityDeviceStatusEvent.sendAndWait()", "LegacyGodparentInfoMessageEvent.send()", "LegacyGodparentInfoMessageEvent.sendAndWait()"], "search-terms": ["LegacySecurityCluster", "IAS zone", "zigbee security device", "MockLegacySecurityCluster", "setDeviceNumber", "sendGodparentInfo", "sendCheckinCommmand"], "state": 2, "file_id": 374, "knowledge_revision": 13548, "git_revision": "", "hash": "e40d5788cd61741b922a2198d61f5cdf", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "components/opensource/zilker-sdk/tools/zith/src/main/java/com/comcast/xh/zith/device/cluster/MockLegacySecurityCluster.java", "revision_history": [{"13548": ""}]}