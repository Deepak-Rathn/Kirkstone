{"is_source_file": true, "format": "C", "description": "This file implements a telemetry scheduler in C, managing profiles with timeouts, activations, and periodic reporting via threads. It handles scheduling, thread synchronization, and profile lifecycle management.", "external_files": ["t2log_wrapper.h", "scheduler.h", "vector.h", "profile.h"], "external_methods": ["T2Info", "T2Debug", "T2Error", "registerTriggerConditionConsumer", "getMinThresholdDuration", "deleteProfile"], "published": ["initScheduler", "uninitScheduler", "registerProfileWithScheduler", "unregisterProfileFromScheduler", "SendInterruptToTimeoutThread", "get_logdemand", "set_logdemand"], "classes": [{"name": "SchedulerProfile", "description": "Represents a scheduling profile including parameters for timing, thread, and state management."}], "methods": [{"name": "void freeSchedulerProfile(void * data)", "description": "Frees resources allocated to a SchedulerProfile, including destroying mutexes and joint thread.", "scope": "", "scopeKind": ""}, {"name": "int getLapsedTime(struct timespec * output,struct timespec * time1,struct timespec * time2)", "description": "Calculates elapsed time between two timespecs in seconds and nanoseconds.", "scope": "", "scopeKind": ""}, {"name": "unsigned int getSchdInSec(char * timeRef)", "description": "Computes seconds difference between current UTC time and a provided time reference.", "scope": "", "scopeKind": ""}, {"name": "void * TimeoutThread(void * arg)", "description": "The main thread function managing profile timing, activation, and timeout notification.", "scope": "", "scopeKind": ""}, {"name": "T2ERROR SendInterruptToTimeoutThread(char * profileName)", "description": "Signals a specific profile's thread to wake up, to handle external events.", "scope": "", "scopeKind": ""}, {"name": "T2ERROR initScheduler(TimeoutNotificationCB notificationCb,ActivationTimeoutCB activationCB,NotifySchedulerstartCB notifyschedulerCB)", "description": "Initializes the scheduler, sets callbacks, and prepares the profile list for managing profiles.", "scope": "", "scopeKind": ""}, {"name": "void uninitScheduler()", "description": "Shuts down the scheduler, signals all profiles for termination, and cleans resources.", "scope": "", "scopeKind": ""}, {"name": "T2ERROR registerProfileWithScheduler(const char * profileName,unsigned int timeInterval,unsigned int activationTimeout,bool deleteonTimeout,bool repeat,bool reportOnUpdate,unsigned int firstReportingInterval,char * timeRef)", "description": "Creates and registers a new profile with timing and behavior parameters, starts its thread.", "scope": "", "scopeKind": ""}, {"name": "T2ERROR unregisterProfileFromScheduler(const char * profileName)", "description": "Removes a profile from scheduling and stops its thread.", "scope": "", "scopeKind": ""}, {"name": "bool get_logdemand()", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "void set_logdemand(bool value)", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["pthread_mutex_lock", "pthread_mutex_unlock", "pthread_create", "pthread_cond_signal", "pthread_cond_timedwait", "pthread_join", "pthread_mutex_destroy", "pthread_cond_destroy", "clock_gettime", "strcmp", "strdup", "Vector_PushBack", "Vector_RemoveItem", "Vector_Create", "Vector_Destroy"], "search-terms": ["telemetry scheduler", "profile management", "timeout notification", "thread synchronization", "profile registration", "profile unregistration", "timed wait", "activation callback"], "state": 2, "file_id": 12859, "knowledge_revision": 25760, "git_revision": "", "ctags": [{"_type": "tag", "name": "DEFAULT_TIME_REFERENCE", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/scheduler/scheduler.c", "pattern": "/^#define DEFAULT_TIME_REFERENCE /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "SendInterruptToTimeoutThread", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/scheduler/scheduler.c", "pattern": "/^T2ERROR SendInterruptToTimeoutThread(char* profileName)$/", "language": "C", "typeref": "typename:T2ERROR", "kind": "function", "signature": "(char * profileName)"}, {"_type": "tag", "name": "TimeoutThread", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/scheduler/scheduler.c", "pattern": "/^void* TimeoutThread(void *arg)$/", "language": "C", "typeref": "typename:void *", "kind": "function", "signature": "(void * arg)"}, {"_type": "tag", "name": "_XOPEN_SOURCE", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/scheduler/scheduler.c", "pattern": "/^#define _XOPEN_SOURCE$/", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "activationTimeoutCb", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/scheduler/scheduler.c", "pattern": "/^static ActivationTimeoutCB activationTimeoutCb;$/", "file": true, "language": "C", "typeref": "typename:ActivationTimeoutCB", "kind": "variable"}, {"_type": "tag", "name": "freeSchedulerProfile", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/scheduler/scheduler.c", "pattern": "/^void freeSchedulerProfile(void *data)$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(void * data)"}, {"_type": "tag", "name": "getLapsedTime", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/scheduler/scheduler.c", "pattern": "/^int getLapsedTime (struct timespec *output, struct timespec *time1, struct timespec *time2)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(struct timespec * output,struct timespec * time1,struct timespec * time2)"}, {"_type": "tag", "name": "getSchdInSec", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/scheduler/scheduler.c", "pattern": "/^static unsigned int getSchdInSec(char* timeRef)$/", "file": true, "language": "C", "typeref": "typename:unsigned int", "kind": "function", "signature": "(char * timeRef)"}, {"_type": "tag", "name": "get_logdemand", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/scheduler/scheduler.c", "pattern": "/^bool get_logdemand ()$/", "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "initScheduler", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/scheduler/scheduler.c", "pattern": "/^T2ERROR initScheduler(TimeoutNotificationCB notificationCb, ActivationTimeoutCB activationCB, No/", "language": "C", "typeref": "typename:T2ERROR", "kind": "function", "signature": "(TimeoutNotificationCB notificationCb,ActivationTimeoutCB activationCB,NotifySchedulerstartCB notifyschedulerCB)"}, {"_type": "tag", "name": "islogdemand", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/scheduler/scheduler.c", "pattern": "/^static bool islogdemand = false;$/", "file": true, "language": "C", "typeref": "typename:bool", "kind": "variable"}, {"_type": "tag", "name": "notifySchedulerstartcb", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/scheduler/scheduler.c", "pattern": "/^static NotifySchedulerstartCB notifySchedulerstartcb;$/", "file": true, "language": "C", "typeref": "typename:NotifySchedulerstartCB", "kind": "variable"}, {"_type": "tag", "name": "profileList", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/scheduler/scheduler.c", "pattern": "/^static Vector *profileList = NULL;$/", "file": true, "language": "C", "typeref": "typename:Vector *", "kind": "variable"}, {"_type": "tag", "name": "registerProfileWithScheduler", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/scheduler/scheduler.c", "pattern": "/^T2ERROR registerProfileWithScheduler(const char* profileName, unsigned int timeInterval, unsigne/", "language": "C", "typeref": "typename:T2ERROR", "kind": "function", "signature": "(const char * profileName,unsigned int timeInterval,unsigned int activationTimeout,bool deleteonTimeout,bool repeat,bool reportOnUpdate,unsigned int firstReportingInterval,char * timeRef)"}, {"_type": "tag", "name": "scMutex", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/scheduler/scheduler.c", "pattern": "/^static pthread_mutex_t scMutex;$/", "file": true, "language": "C", "typeref": "typename:pthread_mutex_t", "kind": "variable"}, {"_type": "tag", "name": "sc_initialized", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/scheduler/scheduler.c", "pattern": "/^static bool sc_initialized = false;$/", "file": true, "language": "C", "typeref": "typename:bool", "kind": "variable"}, {"_type": "tag", "name": "set_logdemand", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/scheduler/scheduler.c", "pattern": "/^void set_logdemand (bool value)$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(bool value)"}, {"_type": "tag", "name": "timeoutNotificationCb", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/scheduler/scheduler.c", "pattern": "/^static TimeoutNotificationCB timeoutNotificationCb;$/", "file": true, "language": "C", "typeref": "typename:TimeoutNotificationCB", "kind": "variable"}, {"_type": "tag", "name": "uninitScheduler", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/scheduler/scheduler.c", "pattern": "/^void uninitScheduler()$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "unregisterProfileFromScheduler", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/scheduler/scheduler.c", "pattern": "/^T2ERROR unregisterProfileFromScheduler(const char* profileName)$/", "language": "C", "typeref": "typename:T2ERROR", "kind": "function", "signature": "(const char * profileName)"}], "hash": "9bf675458fdd4c2296fcd648fba5a48f", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "rdk/components/generic/telemetry/source/scheduler/scheduler.c", "fields": [{"name": "ActivationTimeoutCB activationTimeoutCb", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "bool islogdemand", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "NotifySchedulerstartCB notifySchedulerstartcb", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "Vector * profileList", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "pthread_mutex_t scMutex", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "bool sc_initialized", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "TimeoutNotificationCB timeoutNotificationCb", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"25760": ""}]}