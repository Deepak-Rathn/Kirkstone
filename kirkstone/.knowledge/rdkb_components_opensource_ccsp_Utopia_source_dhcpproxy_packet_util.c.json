{"is_source_file": true, "format": "C", "description": "This source file contains network packet utility functions for creating sockets, attaching filters, managing network interfaces, binding sockets, sending/receiving packets, and parsing Ethernet packets. It is part of a network driver or packet processing component.", "external_files": ["packet_util.h"], "external_methods": ["get_ip_header", "is_packet_truncated", "get_udp_header", "is_ip_fragmented", "get_udp_payload"], "published": ["packet_init_socket", "packet_attach_filter", "get_ifindex", "packet_add_interface", "packet_bind_socket", "packet_recvfrom", "packet_sendto", "parse_and_validate_ethernet_packet"], "classes": [], "methods": [{"name": "int packet_init_socket()", "description": "Creates a raw socket for packet capture.", "scope": "", "scopeKind": ""}, {"name": "int packet_attach_filter(struct sock_filter * filter,int filter_len)", "description": "Attaches a Berkeley Packet Filter (BPF) filter to the socket.", "scope": "", "scopeKind": ""}, {"name": "int get_ifindex(const char * device_name)", "description": "Retrieves the interface index for a given interface name.", "scope": "", "scopeKind": ""}, {"name": "int packet_add_interface(const char * ifname,int iftype)", "description": "Adds a network interface to the internal list, retrieving its index.", "scope": "", "scopeKind": ""}, {"name": "int packet_bind_socket()", "description": "Binds the socket to all interfaces with ETH_P_ALL protocol.", "scope": "", "scopeKind": ""}, {"name": "int packet_recvfrom(void * buf,size_t len,int flags,struct sockaddr_ll * from_addr,struct packet_intf ** from_intf,struct timeval * timeout)", "description": "Receives data from the packet socket, optionally with a timeout.", "scope": "", "scopeKind": ""}, {"name": "int packet_sendto(int ifindex,const void * buf,size_t len,int flags)", "description": "Sends data through the specified interface index.", "scope": "", "scopeKind": ""}, {"name": "void * parse_and_validate_ethernet_packet(void * packet,unsigned int size,struct mac_header ** machdr,struct ip_header ** iphdr,struct udp_header ** udphdr,unsigned int * udp_payload_size)", "description": "Validates and parses Ethernet, IP, and UDP headers, returning the UDP payload.", "scope": "", "scopeKind": ""}], "calls": ["socket(AF_PACKET, SOCK_RAW, ETH_P_ALL)", "perror()", "setsockopt(g_packet_socket, SOL_SOCKET, SO_ATTACH_FILTER, &fprog, sizeof(fprog))", "ioctl(g_packet_socket, SIOCGIFINDEX, &ifr)", "bind(g_packet_socket, ...)", "recvfrom(g_packet_socket, ...)", "sendto(g_packet_socket, ...)"], "search-terms": ["packet socket creation", "Ethernet packet parsing", "raw socket", "interface index retrieval", "filter attachment", "UDP payload extraction", "Ethernet/IP/UDP headers", "Linux packet socket"], "state": 2, "file_id": 7457, "knowledge_revision": 20527, "git_revision": "", "ctags": [{"_type": "tag", "name": "MAX_INTERFACES", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/dhcpproxy/packet_util.c", "pattern": "/^#define MAX_INTERFACES /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "g_num_interfaces", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/dhcpproxy/packet_util.c", "pattern": "/^int g_num_interfaces = 0;$/", "language": "C", "typeref": "typename:int", "kind": "variable"}, {"_type": "tag", "name": "g_packet_interfaces", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/dhcpproxy/packet_util.c", "pattern": "/^struct packet_intf g_packet_interfaces[MAX_INTERFACES];$/", "language": "C", "typeref": "struct:packet_intf[]", "kind": "variable"}, {"_type": "tag", "name": "g_packet_socket", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/dhcpproxy/packet_util.c", "pattern": "/^int g_packet_socket;$/", "language": "C", "typeref": "typename:int", "kind": "variable"}, {"_type": "tag", "name": "get_ifindex", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/dhcpproxy/packet_util.c", "pattern": "/^int get_ifindex(const char *device_name)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(const char * device_name)"}, {"_type": "tag", "name": "packet_add_interface", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/dhcpproxy/packet_util.c", "pattern": "/^int packet_add_interface(const char *ifname, int iftype)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(const char * ifname,int iftype)"}, {"_type": "tag", "name": "packet_attach_filter", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/dhcpproxy/packet_util.c", "pattern": "/^int packet_attach_filter(struct sock_filter *filter, int filter_len)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(struct sock_filter * filter,int filter_len)"}, {"_type": "tag", "name": "packet_bind_socket", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/dhcpproxy/packet_util.c", "pattern": "/^int packet_bind_socket()$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "packet_init_socket", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/dhcpproxy/packet_util.c", "pattern": "/^int packet_init_socket()$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "packet_recvfrom", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/dhcpproxy/packet_util.c", "pattern": "/^int packet_recvfrom(void *buf, size_t len, int flags,$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(void * buf,size_t len,int flags,struct sockaddr_ll * from_addr,struct packet_intf ** from_intf,struct timeval * timeout)"}, {"_type": "tag", "name": "packet_sendto", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/dhcpproxy/packet_util.c", "pattern": "/^int packet_sendto(int ifindex, const void *buf, size_t len, int flags)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(int ifindex,const void * buf,size_t len,int flags)"}, {"_type": "tag", "name": "parse_and_validate_ethernet_packet", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/dhcpproxy/packet_util.c", "pattern": "/^void *parse_and_validate_ethernet_packet(void *packet, unsigned int size,$/", "language": "C", "typeref": "typename:void *", "kind": "function", "signature": "(void * packet,unsigned int size,struct mac_header ** machdr,struct ip_header ** iphdr,struct udp_header ** udphdr,unsigned int * udp_payload_size)"}], "hash": "1c58bb862579e25366ff5bc764d5af42", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "rdkb/components/opensource/ccsp/Utopia/source/dhcpproxy/packet_util.c", "fields": [{"name": "int g_num_interfaces", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "struct:packet_intf[] g_packet_interfaces", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int g_packet_socket", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"20527": ""}]}