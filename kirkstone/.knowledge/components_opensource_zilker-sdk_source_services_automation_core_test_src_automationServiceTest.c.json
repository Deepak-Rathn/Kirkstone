{"is_source_file": true, "format": "C", "description": "This is a C source file containing unit tests for the 'automationService' component. It includes test functions that initialize and cleanup the service, add and remove automation 'machines', load and verify automation specs, and simulate events. The tests use mock functions for storage interactions and load specific JavaScript automation scripts. The code also defines helper functions such as 'loadFile'.", "external_files": ["icLog/logging.h", "unistd.h", "stdarg.h", "setjmp.h", "cmocka.h", "automationService.h", "stdio.h", "string.h", "errno.h", "icConfig/storage.h", "propsMgr/propsHelper.h", "cjson/cJSON.h"], "external_methods": ["loadFile", "__wrap_storageSave", "__wrap_storageLoad", "__wrap_storageDelete", "__wrap_storageGetKeys", "automationServiceInitPhase1", "automationServiceInitPhase2", "automationServiceCleanup", "automationServiceAddMachine", "getMachineState", "automationEnginePost", "linkedListCreate", "linkedListAppend", "linkedListCount", "linkedListDestroy", "linkedListGetElementAt", "machineInfoFreeFunc", "initIcLogger", "setPropertyValue", "closeIcLogger"], "published": ["loadFile", "__wrap_storageSave", "__wrap_storageLoad", "__wrap_storageDelete", "__wrap_storageGetKeys", "automationServiceInitPhase1", "automationServiceInitPhase2", "automationServiceCleanup", "automationServiceAddMachine", "getMachineState", "automationEnginePost"], "classes": [], "methods": [{"name": "bool loadFile(const char * filepath,char ** value)", "description": "Reads the content of a specified file path into a string buffer allocated dynamically. Returns true on success, false on failure.", "scope": "", "scopeKind": ""}, {"name": "bool __wrap_storageSave(const char * namespace,const char * key,const char * value)", "description": "Mocks the storage save operation; logs the call and returns true.", "scope": "", "scopeKind": ""}, {"name": "bool __wrap_storageLoad(const char * namespace,const char * key,char ** value)", "description": "Mocks the storage load operation; loads a predefined script if mock indicates success.", "scope": "", "scopeKind": ""}, {"name": "bool __wrap_storageDelete(const char * namespace,const char * key)", "description": "Mocks the storage delete operation; logs the call and returns the mock's decision.", "scope": "", "scopeKind": ""}, {"name": "icLinkedList * __wrap_storageGetKeys(const char * namespace)", "description": "Mocks retrieval of storage keys; returns linked list from mock.", "scope": "", "scopeKind": ""}, {"name": "int main(int argc,const char ** argv)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "void test_enable_disable_automation(void ** state)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "void test_init_cleanup(void ** state)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "void test_load_automation(void ** state)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "void test_remove_automation(void ** state)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "void test_simple_automation(void ** state)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "void test_thermostat_schedule_automation(void ** state)", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["automationServiceInitPhase1", "automationServiceInitPhase2", "automationServiceCleanup", "automationServiceAddMachine", "getMachineState", "automationEnginePost", "linkedListCreate", "linkedListAppend", "linkedListCount", "linkedListDestroy", "linkedListGetElementAt", "loadFile", "setPropertyValue"], "search-terms": ["automationService", "automationEnginePost", "test_init_cleanup", "loadFile", "cjson", "unit test", "automation machine", "storageMock", "AutomationSpec", "automation spec file", "automationServiceAddMachine", "Automation automation"], "state": 2, "file_id": 1156, "knowledge_revision": 14322, "git_revision": "", "ctags": [{"_type": "tag", "name": "__wrap_storageDelete", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/automation/core/test/src/automationServiceTest.c", "pattern": "/^bool __wrap_storageDelete(const char* namespace, const char* key)$/", "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(const char * namespace,const char * key)"}, {"_type": "tag", "name": "__wrap_storageGetKeys", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/automation/core/test/src/automationServiceTest.c", "pattern": "/^icLinkedList* __wrap_storageGetKeys(const char* namespace)$/", "language": "C", "typeref": "typename:icLinkedList *", "kind": "function", "signature": "(const char * namespace)"}, {"_type": "tag", "name": "__wrap_storageLoad", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/automation/core/test/src/automationServiceTest.c", "pattern": "/^bool __wrap_storageLoad(const char* namespace, const char* key, char** value)$/", "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(const char * namespace,const char * key,char ** value)"}, {"_type": "tag", "name": "__wrap_storageSave", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/automation/core/test/src/automationServiceTest.c", "pattern": "/^bool __wrap_storageSave(const char* namespace, const char* key, const char* value)$/", "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(const char * namespace,const char * key,const char * value)"}, {"_type": "tag", "name": "loadFile", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/automation/core/test/src/automationServiceTest.c", "pattern": "/^static bool loadFile(const char* filepath, char** value)$/", "file": true, "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(const char * filepath,char ** value)"}, {"_type": "tag", "name": "main", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/automation/core/test/src/automationServiceTest.c", "pattern": "/^int main(int argc, const char** argv)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(int argc,const char ** argv)"}, {"_type": "tag", "name": "test_enable_disable_automation", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/automation/core/test/src/automationServiceTest.c", "pattern": "/^static void test_enable_disable_automation(void** state)$/", "file": true, "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(void ** state)"}, {"_type": "tag", "name": "test_init_cleanup", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/automation/core/test/src/automationServiceTest.c", "pattern": "/^static void test_init_cleanup(void** state)$/", "file": true, "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(void ** state)"}, {"_type": "tag", "name": "test_load_automation", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/automation/core/test/src/automationServiceTest.c", "pattern": "/^static void test_load_automation(void** state)$/", "file": true, "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(void ** state)"}, {"_type": "tag", "name": "test_remove_automation", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/automation/core/test/src/automationServiceTest.c", "pattern": "/^static void test_remove_automation(void** state)$/", "file": true, "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(void ** state)"}, {"_type": "tag", "name": "test_simple_automation", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/automation/core/test/src/automationServiceTest.c", "pattern": "/^static void test_simple_automation(void** state)$/", "file": true, "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(void ** state)"}, {"_type": "tag", "name": "test_thermostat_schedule_automation", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/automation/core/test/src/automationServiceTest.c", "pattern": "/^static void test_thermostat_schedule_automation(void** state)$/", "file": true, "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(void ** state)"}], "hash": "b60fcb9b7a62c66574c832d03c4bb113", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "components/opensource/zilker-sdk/source/services/automation/core/test/src/automationServiceTest.c", "revision_history": [{"14322": ""}]}