{"is_source_file": true, "format": "Python", "description": "This file contains utility functions for file and path manipulations, including path joining, relative path calculation, symlink management, copying files/directories, removal, and other filesystem operations commonly used in build or deployment scripts.", "external_files": ["errno", "glob", "shutil", "subprocess", "os.path"], "external_methods": ["os.path.join", "os.path.normpath", "os.path.relpath", "os.readlink", "os.remove", "os.symlink", "os.unlink", "os.walk", "os.path.islink", "os.path.isdir", "os.link", "os.path.isabs", "os.access", "glob.glob", "shutil.copy", "shutil.rmtree", "subprocess.check_output"], "published": ["join", "relative", "make_relative_symlink", "replace_absolute_symlinks", "format_display", "copytree", "copyhardlinktree", "copyhardlink", "remove", "symlink", "find", "realpath", "is_path_parent", "which_wild", "canonicalize"], "classes": [], "methods": [{"name": "join(*paths)", "description": "Concatenates multiple path segments with slashes and normalizes the resulting path. Like os.path.join but treats absolute RHS differently.", "scope": "", "scopeKind": ""}, {"name": "relative(src, dest)", "description": "Computes a relative path from src to dest.", "scope": "", "scopeKind": ""}, {"name": "make_relative_symlink(path)", "description": "Converts an absolute symlink to a relative one by calculating the common ancestor directory.", "scope": "", "scopeKind": ""}, {"name": "replace_absolute_symlinks(basedir, d)", "description": "Walks through a directory, finds absolute symlinks, and replaces them with relative links based on their location.", "scope": "", "scopeKind": ""}, {"name": "format_display(path, metadata)", "description": "Prepares a file path for display, relative to a top directory.", "scope": "", "scopeKind": ""}, {"name": "copytree(src, dst)", "description": "Copies a directory tree using tar for efficiency and preserves metadata.", "scope": "", "scopeKind": ""}, {"name": "copyhardlinktree(src, dst)", "description": "Attempts to create hard links for files in a directory tree; falls back to copying if not possible.", "scope": "", "scopeKind": ""}, {"name": "copyhardlink(src, dst)", "description": "Creates a hard link for a file if possible, otherwise copies it.", "scope": "", "scopeKind": ""}, {"name": "remove(path, recurse=True)", "description": "Removes files or directories matching the given glob pattern, recursively if necessary.", "scope": "", "scopeKind": ""}, {"name": "symlink(source, destination, force=False)", "description": "Creates a symbolic link, optionally forcing removal of existing links.", "scope": "", "scopeKind": ""}, {"name": "find(dir, **walkoptions)", "description": "Recursively yields all files in a directory as absolute paths.", "scope": "", "scopeKind": ""}, {"name": "realpath(file, root, use_physdir = True, loop_cnt = 100, assume_dir = False)", "description": "Returns the canonical path for a given file, resolving symlinks and relative components.", "scope": "", "scopeKind": ""}, {"name": "is_path_parent(possible_parent, *paths)", "description": "Checks if one path is a parent directory of the given paths.", "scope": "", "scopeKind": ""}, {"name": "which_wild(pathname, path=None, mode=os.F_OK, *, reverse=False, candidates=False)", "description": "Searches for files matching a wildcard pattern in the system PATH, supporting wildcards.", "scope": "", "scopeKind": ""}, {"name": "canonicalize(paths, sep=',')", "description": "Expands a comma-separated list of paths to their real paths.", "scope": "", "scopeKind": ""}, {"name": "__is_path_below(file, root)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "__realpath(file, root, loop_cnt, assume_dir)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "__realpath_rel(start, rel_path, root, loop_cnt, assume_dir)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "abs_path_trailing(pth)", "scope": "is_path_parent", "scopeKind": "function", "description": "unavailable"}], "calls": ["os.path.normpath", "os.path.relpath", "os.readlink", "os.remove", "os.symlink", "os.unlink", "os.walk", "glob.glob", "shutil.copy", "shutil.rmtree", "subprocess.check_output", "os.link", "os.access"], "search-terms": ["symlink management", "path utilities", "filesystem copy", "relative paths", "hard link", "tar copy", "symlink conversion", "path resolution", "canonical paths", "absolute paths"], "state": 2, "file_id": 1815, "knowledge_revision": 14960, "git_revision": "", "ctags": [{"_type": "tag", "name": "__is_path_below", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/path.py", "pattern": "/^def __is_path_below(file, root):$/", "language": "Python", "kind": "function", "signature": "(file, root)"}, {"_type": "tag", "name": "__realpath", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/path.py", "pattern": "/^def __realpath(file, root, loop_cnt, assume_dir):$/", "language": "Python", "kind": "function", "signature": "(file, root, loop_cnt, assume_dir)"}, {"_type": "tag", "name": "__realpath_rel", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/path.py", "pattern": "/^def __realpath_rel(start, rel_path, root, loop_cnt, assume_dir):$/", "language": "Python", "kind": "function", "signature": "(start, rel_path, root, loop_cnt, assume_dir)"}, {"_type": "tag", "name": "abs_path_trailing", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/path.py", "pattern": "/^    def abs_path_trailing(pth):$/", "file": true, "language": "Python", "kind": "function", "signature": "(pth)", "scope": "is_path_parent", "scopeKind": "function"}, {"_type": "tag", "name": "canonicalize", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/path.py", "pattern": "/^def canonicalize(paths, sep=','):$/", "language": "Python", "kind": "function", "signature": "(paths, sep=',')"}, {"_type": "tag", "name": "copyhardlink", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/path.py", "pattern": "/^def copyhardlink(src, dst):$/", "language": "Python", "kind": "function", "signature": "(src, dst)"}, {"_type": "tag", "name": "copyhardlinktree", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/path.py", "pattern": "/^def copyhardlinktree(src, dst):$/", "language": "Python", "kind": "function", "signature": "(src, dst)"}, {"_type": "tag", "name": "copytree", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/path.py", "pattern": "/^def copytree(src, dst):$/", "language": "Python", "kind": "function", "signature": "(src, dst)"}, {"_type": "tag", "name": "find", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/path.py", "pattern": "/^def find(dir, **walkoptions):$/", "language": "Python", "kind": "function", "signature": "(dir, **walkoptions)"}, {"_type": "tag", "name": "format_display", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/path.py", "pattern": "/^def format_display(path, metadata):$/", "language": "Python", "kind": "function", "signature": "(path, metadata)"}, {"_type": "tag", "name": "is_path_parent", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/path.py", "pattern": "/^def is_path_parent(possible_parent, *paths):$/", "language": "Python", "kind": "function", "signature": "(possible_parent, *paths)"}, {"_type": "tag", "name": "join", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/path.py", "pattern": "/^def join(*paths):$/", "language": "Python", "kind": "function", "signature": "(*paths)"}, {"_type": "tag", "name": "make_relative_symlink", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/path.py", "pattern": "/^def make_relative_symlink(path):$/", "language": "Python", "kind": "function", "signature": "(path)"}, {"_type": "tag", "name": "realpath", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/path.py", "pattern": "/^def realpath(file, root, use_physdir = True, loop_cnt = 100, assume_dir = False):$/", "language": "Python", "kind": "function", "signature": "(file, root, use_physdir = True, loop_cnt = 100, assume_dir = False)"}, {"_type": "tag", "name": "relative", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/path.py", "pattern": "/^def relative(src, dest):$/", "language": "Python", "kind": "function", "signature": "(src, dest)"}, {"_type": "tag", "name": "remove", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/path.py", "pattern": "/^def remove(path, recurse=True):$/", "language": "Python", "kind": "function", "signature": "(path, recurse=True)"}, {"_type": "tag", "name": "replace_absolute_symlinks", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/path.py", "pattern": "/^def replace_absolute_symlinks(basedir, d):$/", "language": "Python", "kind": "function", "signature": "(basedir, d)"}, {"_type": "tag", "name": "symlink", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/path.py", "pattern": "/^def symlink(source, destination, force=False):$/", "language": "Python", "kind": "function", "signature": "(source, destination, force=False)"}, {"_type": "tag", "name": "which_wild", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/path.py", "pattern": "/^def which_wild(pathname, path=None, mode=os.F_OK, *, reverse=False, candidates=False):$/", "language": "Python", "kind": "function", "signature": "(pathname, path=None, mode=os.F_OK, *, reverse=False, candidates=False)"}], "hash": "ef270d82b11e9a7dbd7cd67ac30d4ab1", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "openembedded-core/meta/lib/oe/path.py", "revision_history": [{"14960": ""}]}