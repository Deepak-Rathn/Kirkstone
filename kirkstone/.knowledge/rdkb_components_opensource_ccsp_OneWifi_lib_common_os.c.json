{"is_source_file": true, "format": "C", "description": "This file contains implementations of threading, process management, and utility functions for Linux, including task creation, setting/getting thread names, process execution, PID handling, and command-line argument parsing.", "external_files": ["os.h", "os_time.h", "os_util.h", "log.h", "osa_assert.h", "util.h"], "external_methods": ["prctl()", "pthread_create()", "pthread_detach()", "pthread_mutex_lock()", "pthread_mutex_unlock()", "kill()", "fork()", "execl()", "popen()", "pclose()", "nanosleep()", "getopt()", "fgets()", "fopen()", "fclose()", "fprintf()", "exit()", "kill()", "atoi()", "strlen()", "strcpy()", "strcmp()", "strncpy()", "strnlen()", "strncpy()", "time()", "ticks()", "ticks_to_timespec()"], "published": ["task_name_get", "task_name_set", "task_create", "task_once", "hwaddr_aton", "os_popen", "os_pid_from_file", "os_pid_wait", "os_pid_terminate", "os_pid_exists", "cmd_log", "os_get_opt"], "classes": [], "methods": [{"name": "bool task_name_get(char * name,size_t sz)", "description": "Retrieves the current thread's name into the provided buffer if size is sufficient.", "scope": "", "scopeKind": ""}, {"name": "bool task_name_set(char * name)", "description": "Sets the current thread's name to the specified string.", "scope": "", "scopeKind": ""}, {"name": "bool task_create(task_id_t * id,char * name,task_entry_point_t * ep,void * arg)", "description": "Creates a new thread executing a specified function with given arguments, and detaches the thread.", "scope": "", "scopeKind": ""}, {"name": "bool task_once(task_once_t * once)", "description": "Ensures a specific initialization code runs only once in a thread-safe manner.", "scope": "", "scopeKind": ""}, {"name": "int32_t hwaddr_aton(const char * txt,uint8_t * addr)", "description": "Converts an ASCII MAC address string to a 6-byte binary representation.", "scope": "", "scopeKind": ""}, {"name": "pid_t os_popen(const char * shell_cmd,int * pipe_desc)", "description": "Executes a shell command and returns the process ID and the read file descriptor.", "scope": "", "scopeKind": ""}, {"name": "pid_t os_pid_from_file(char * pid_file)", "description": "Reads a PID from a file and verifies its existence.", "scope": "", "scopeKind": ""}, {"name": "bool os_pid_wait(pid_t pid,int timeout_ms)", "description": "Waits for a process with given PID to finish within a specified timeout.", "scope": "", "scopeKind": ""}, {"name": "bool os_pid_terminate(pid_t pid,int timeout_ms)", "description": "Attempts to gracefully terminate a process by PID with timeout, then kills if necessary.", "scope": "", "scopeKind": ""}, {"name": "bool os_pid_exists(pid_t pid)", "description": "Checks if a process with the specified PID exists.", "scope": "", "scopeKind": ""}, {"name": "int cmd_log(const char * shell_cmd)", "description": "Executes a shell command, logs its output, and returns the exit status.", "scope": "", "scopeKind": ""}, {"name": "int os_get_opt(int argc,char ** argv,log_severity_t * log_severity)", "description": "Parses command-line options, particularly verbosity and help flags, and sets logging severity.", "scope": "", "scopeKind": ""}, {"name": "int32_t hex2num(char c)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "void * task_create_fn(void * ctx)", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["prctl()", "pthread_create()", "pthread_detach()", "free()", "strlen()", "prctl()", "LOG()", "malloc()", "fork()", "execl()", "close()", "dup2()", "exit()", "kill()", "popen()", "pclose()", "fgets()", "ferror()", "pclose()", "ticks()", "ticks_to_timespec()", "nanosleep()", "getopt()", "fprintf()", "strcmp()", "strncpy()", "time()", "atoi()"], "search-terms": ["task_create", "hwaddr_aton", "os_pid_from_file", "os_pid_wait", "os_pid_terminate", "cmd_log", "os_get_opt", "task_name", "thread", "process"], "state": 2, "file_id": 6154, "knowledge_revision": 19256, "git_revision": "", "ctags": [{"_type": "tag", "name": "MODULE_ID", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/lib/common/os.c", "pattern": "/^#define MODULE_ID /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "arg", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/lib/common/os.c", "pattern": "/^    void*                  arg;$/", "file": true, "language": "C", "typeref": "typename:void *", "kind": "member", "scope": "task_args", "scopeKind": "struct"}, {"_type": "tag", "name": "cmd_log", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/lib/common/os.c", "pattern": "/^int cmd_log(const char *shell_cmd)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(const char * shell_cmd)"}, {"_type": "tag", "name": "ep", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/lib/common/os.c", "pattern": "/^    task_entry_point_t*    ep;$/", "file": true, "language": "C", "typeref": "typename:task_entry_point_t *", "kind": "member", "scope": "task_args", "scopeKind": "struct"}, {"_type": "tag", "name": "hex2num", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/lib/common/os.c", "pattern": "/^static int32_t hex2num(char c)$/", "file": true, "language": "C", "typeref": "typename:int32_t", "kind": "function", "signature": "(char c)"}, {"_type": "tag", "name": "hwaddr_aton", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/lib/common/os.c", "pattern": "/^int32_t hwaddr_aton(const char *txt, uint8_t *addr)$/", "language": "C", "typeref": "typename:int32_t", "kind": "function", "signature": "(const char * txt,uint8_t * addr)"}, {"_type": "tag", "name": "name", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/lib/common/os.c", "pattern": "/^    char                   name[64];$/", "file": true, "language": "C", "typeref": "typename:char[64]", "kind": "member", "scope": "task_args", "scopeKind": "struct"}, {"_type": "tag", "name": "os_get_opt", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/lib/common/os.c", "pattern": "/^int os_get_opt(int argc, char ** argv, log_severity_t* log_severity)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(int argc,char ** argv,log_severity_t * log_severity)"}, {"_type": "tag", "name": "os_pid_exists", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/lib/common/os.c", "pattern": "/^bool os_pid_exists(pid_t pid)$/", "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(pid_t pid)"}, {"_type": "tag", "name": "os_pid_from_file", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/lib/common/os.c", "pattern": "/^pid_t os_pid_from_file(char *pid_file)$/", "language": "C", "typeref": "typename:pid_t", "kind": "function", "signature": "(char * pid_file)"}, {"_type": "tag", "name": "os_pid_terminate", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/lib/common/os.c", "pattern": "/^bool os_pid_terminate(pid_t pid, int timeout_ms)$/", "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(pid_t pid,int timeout_ms)"}, {"_type": "tag", "name": "os_pid_wait", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/lib/common/os.c", "pattern": "/^bool os_pid_wait(pid_t pid, int timeout_ms)$/", "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(pid_t pid,int timeout_ms)"}, {"_type": "tag", "name": "os_popen", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/lib/common/os.c", "pattern": "/^pid_t os_popen(const char *shell_cmd, int *pipe_desc)$/", "language": "C", "typeref": "typename:pid_t", "kind": "function", "signature": "(const char * shell_cmd,int * pipe_desc)"}, {"_type": "tag", "name": "task_args", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/lib/common/os.c", "pattern": "/^struct task_args$/", "file": true, "language": "C", "kind": "struct"}, {"_type": "tag", "name": "task_create", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/lib/common/os.c", "pattern": "/^task_create (task_id_t          *id,$/", "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(task_id_t * id,char * name,task_entry_point_t * ep,void * arg)"}, {"_type": "tag", "name": "task_create_fn", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/lib/common/os.c", "pattern": "/^void* task_create_fn(void *ctx)$/", "language": "C", "typeref": "typename:void *", "kind": "function", "signature": "(void * ctx)"}, {"_type": "tag", "name": "task_name_get", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/lib/common/os.c", "pattern": "/^bool task_name_get(char *name, size_t sz)$/", "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(char * name,size_t sz)"}, {"_type": "tag", "name": "task_name_set", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/lib/common/os.c", "pattern": "/^bool task_name_set(char *name)$/", "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(char * name)"}, {"_type": "tag", "name": "task_once", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/lib/common/os.c", "pattern": "/^bool task_once(task_once_t *once)$/", "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(task_once_t * once)"}], "hash": "b3b79cd032f48f34d77bf6c2a87bec56", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "rdkb/components/opensource/ccsp/OneWifi/lib/common/os.c", "fields": [{"name": "void * arg", "scope": "task_args", "scopeKind": "struct", "description": "unavailable"}, {"name": "task_entry_point_t * ep", "scope": "task_args", "scopeKind": "struct", "description": "unavailable"}, {"name": "char[64] name", "scope": "task_args", "scopeKind": "struct", "description": "unavailable"}], "revision_history": [{"19256": ""}]}