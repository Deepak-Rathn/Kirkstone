{"is_source_file": true, "format": "C", "description": "This file implements the 'icStringBuffer' module, providing functions to create, destroy, and manipulate a string buffer backed by a FIFO buffer. The functions include appending strings, appending with comma, retrieving length, and converting to a null-terminated string.", "external_files": ["icTypes/icStringBuffer.h", "icTypes/icFifoBuffer.h", "<memory.h>", "<stdlib.h>"], "external_methods": ["fifoBuffCreate", "fifoBuffDestroy", "fifoBuffPush", "fifoBuffGetPullAvailable", "fifoBuffPullPointer"], "published": ["stringBufferCreate", "stringBufferDestroy", "stringBufferAppend", "stringBufferAppendLength", "stringBufferAppendWithComma", "stringBufferLength", "stringBufferToString"], "classes": [], "methods": [{"name": "icStringBuffer * stringBufferCreate(uint32_t initialSize)", "description": "Creates a new icStringBuffer instance with optional initial size.", "scope": "", "scopeKind": ""}, {"name": "void stringBufferDestroy(icStringBuffer * stringBuffer)", "description": "Destroys and frees the icStringBuffer instance.", "scope": "", "scopeKind": ""}, {"name": "void stringBufferAppend(icStringBuffer * stringBuffer,const char * string)", "description": "Appends a null-terminated string to the buffer by copying its contents.", "scope": "", "scopeKind": ""}, {"name": "void stringBufferAppendLength(icStringBuffer * stringBuffer,const char * string,uint16_t length)", "description": "Appends a specified number of characters from a string.", "scope": "", "scopeKind": ""}, {"name": "void stringBufferAppendWithComma(icStringBuffer * stringBuffer,const char * string,bool comaAtBeginning)", "description": "Appends a string with an optional preceding or following comma.", "scope": "", "scopeKind": ""}, {"name": "uint32_t stringBufferLength(icStringBuffer * stringBuffer)", "description": "Returns the current length of the buffer contents.", "scope": "", "scopeKind": ""}, {"name": "char * stringBufferToString(icStringBuffer * stringBuffer)", "description": "Returns a null-terminated copy of the buffer contents; caller must free it.", "scope": "", "scopeKind": ""}], "calls": ["fifoBuffCreate", "fifoBuffDestroy", "fifoBuffPush", "fifoBuffGetPullAvailable", "fifoBuffPullPointer"], "search-terms": ["icStringBuffer", "fifoBuff", "append string", "string buffer", "append with comma", "buffer length", "to string"], "state": 2, "file_id": 642, "knowledge_revision": 13803, "git_revision": "", "ctags": [{"_type": "tag", "name": "COMMA_STRING", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/types/c/src/icStringBuffer.c", "pattern": "/^#define COMMA_STRING /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "_icStringBuffer", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/types/c/src/icStringBuffer.c", "pattern": "/^struct _icStringBuffer$/", "file": true, "language": "C", "kind": "struct"}, {"_type": "tag", "name": "fifoBuffer", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/types/c/src/icStringBuffer.c", "pattern": "/^    icFifoBuff *fifoBuffer; \\/\\/ Internally this is just a nice API around a fifoBuffer$/", "file": true, "language": "C", "typeref": "typename:icFifoBuff *", "kind": "member", "scope": "_icStringBuffer", "scopeKind": "struct"}, {"_type": "tag", "name": "stringBufferAppend", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/types/c/src/icStringBuffer.c", "pattern": "/^void stringBufferAppend(icStringBuffer *stringBuffer, const char *string)$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(icStringBuffer * stringBuffer,const char * string)"}, {"_type": "tag", "name": "stringBufferAppendLength", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/types/c/src/icStringBuffer.c", "pattern": "/^void stringBufferAppendLength(icStringBuffer *stringBuffer, const char *string, uint16_t length)$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(icStringBuffer * stringBuffer,const char * string,uint16_t length)"}, {"_type": "tag", "name": "stringBufferAppendWithComma", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/types/c/src/icStringBuffer.c", "pattern": "/^void stringBufferAppendWithComma(icStringBuffer *stringBuffer, const char *string, bool comaAtBe/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(icStringBuffer * stringBuffer,const char * string,bool comaAtBeginning)"}, {"_type": "tag", "name": "stringBufferCreate", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/types/c/src/icStringBuffer.c", "pattern": "/^icStringBuffer *stringBufferCreate(uint32_t initialSize)$/", "language": "C", "typeref": "typename:icStringBuffer *", "kind": "function", "signature": "(uint32_t initialSize)"}, {"_type": "tag", "name": "stringBufferDestroy", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/types/c/src/icStringBuffer.c", "pattern": "/^void stringBufferDestroy(icStringBuffer *stringBuffer)$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(icStringBuffer * stringBuffer)"}, {"_type": "tag", "name": "stringBufferLength", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/types/c/src/icStringBuffer.c", "pattern": "/^uint32_t stringBufferLength(icStringBuffer *stringBuffer)$/", "language": "C", "typeref": "typename:uint32_t", "kind": "function", "signature": "(icStringBuffer * stringBuffer)"}, {"_type": "tag", "name": "stringBufferToString", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/types/c/src/icStringBuffer.c", "pattern": "/^char *stringBufferToString(icStringBuffer *stringBuffer)$/", "language": "C", "typeref": "typename:char *", "kind": "function", "signature": "(icStringBuffer * stringBuffer)"}], "hash": "6323618d1202b0c8c2d067ed3bb56ba1", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "components/opensource/zilker-sdk/source/libs/types/c/src/icStringBuffer.c", "fields": [{"name": "icFifoBuff * fifoBuffer", "scope": "_icStringBuffer", "scopeKind": "struct", "description": "unavailable"}], "revision_history": [{"13803": ""}]}