{"is_source_file": true, "format": "C", "description": "Source code for logging support in the Duktape JavaScript engine, including logger constructor, prototype methods, and initialization routine.", "external_files": ["duktape.h", "duk_logging.h"], "external_methods": ["duk_is_constructor_call", "duk_get_top", "duk_set_top", "duk_push_this", "duk_inspect_callstack_entry", "duk_get_prop_string", "duk_is_object", "duk_get_prop_string", "duk_get_prop_string", "duk_is_string", "duk_dup", "duk_put_prop_string", "duk_compact", "duk_require_buffer", "fwrite", "fputc", "fflush", "duk_get_now", "duk_time_to_components", "duk_get_length", "duk_get_prop_string", "duk_to_string", "duk_push_fixed_buffer", "memcpy", "duk_push_string", "duk_pcall_prop", "duk_to_lstring", "duk_get_lstring", "duk_push_global_stash", "duk_get_prop_string", "duk_get_prop_string", "duk_get_prop_string", "duk_def_prop", "duk_dup_top", "duk_set_property", "duk_set_magic", "duk_call", "duk_pop", "duk_eval_string"], "published": ["duk_log", "duk_logging_init"], "classes": [{"name": "Logger", "description": "A logger object for Duktape that supports various log levels and custom formatting."}], "methods": [{"name": "duk_ret_t duk__logger_constructor(duk_context * ctx)", "description": "Constructor for the Logger object, initializes logger with optional name.", "scope": "", "scopeKind": ""}, {"name": "duk_ret_t duk__logger_prototype_fmt(duk_context * ctx)", "description": "Formats objects to log strings using toLogString() or toString().", "scope": "", "scopeKind": ""}, {"name": "duk_ret_t duk__logger_prototype_raw(duk_context * ctx)", "description": "Outputs formatted log message buffer to stderr.", "scope": "", "scopeKind": ""}, {"name": "duk_ret_t duk__logger_prototype_log_shared(duk_context * ctx)", "description": "Shared internal method for logging at different levels with formatted output.", "scope": "", "scopeKind": ""}, {"name": "void duk_log_va(duk_context * ctx,duk_int_t level,const char * fmt,va_list ap)", "description": "Logs a formatted message with variable argument list at specified level.", "scope": "", "scopeKind": ""}, {"name": "void duk_log(duk_context * ctx,duk_int_t level,const char * fmt,...)", "description": "Convenience function to log formatted message at a given level.", "scope": "", "scopeKind": ""}, {"name": "void duk_logging_init(duk_context * ctx,duk_uint_t flags)", "description": "Initializes logging subsystem in the Duktape context, setting up the Logger constructor and prototype methods.", "scope": "", "scopeKind": ""}], "calls": ["duk_is_constructor_call", "duk_get_top", "duk_set_top", "duk_push_this", "duk_inspect_callstack_entry", "duk_get_prop_string", "duk_is_object", "duk_get_prop_string", "duk_get_prop_string", "duk_is_string", "duk_dup", "duk_put_prop_string", "duk_compact", "duk_require_buffer", "fwrite", "fputc", "fflush", "duk_get_now", "duk_time_to_components", "sprintf", "duk_get_prop_string", "duk_to_string", "duk_push_fixed_buffer", "memcpy", "duk_push_string", "duk_pcall_prop", "duk_get_lstring", "duk_get_lstring", "duk_push_global_stash", "duk_get_prop_string", "duk_get_prop_string", "duk_get_prop_string", "duk_def_prop", "duk_dup_top", "duk_set_property", "duk_set_magic", "duk_call", "duk_pop"], "search-terms": ["duktape", "duk_logging", "logger constructor", "log levels", "initialization routine", "stderr logging", "json object formatting"], "state": 2, "file_id": 12956, "knowledge_revision": 25854, "git_revision": "", "ctags": [{"_type": "tag", "name": "DUK_LOGGING_FLUSH", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/jst/source/duktape/duk_logging.c", "pattern": "/^#define DUK_LOGGING_FLUSH /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "duk__log_level_strings", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/jst/source/duktape/duk_logging.c", "pattern": "/^static const char duk__log_level_strings[] = {$/", "file": true, "language": "C", "typeref": "typename:const char[]", "kind": "variable"}, {"_type": "tag", "name": "duk__log_method_names", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/jst/source/duktape/duk_logging.c", "pattern": "/^static const char *duk__log_method_names[] = {$/", "file": true, "language": "C", "typeref": "typename:const char * []", "kind": "variable"}, {"_type": "tag", "name": "duk__logger_constructor", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/jst/source/duktape/duk_logging.c", "pattern": "/^static duk_ret_t duk__logger_constructor(duk_context *ctx) {$/", "file": true, "language": "C", "typeref": "typename:duk_ret_t", "kind": "function", "signature": "(duk_context * ctx)"}, {"_type": "tag", "name": "duk__logger_prototype_fmt", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/jst/source/duktape/duk_logging.c", "pattern": "/^static duk_ret_t duk__logger_prototype_fmt(duk_context *ctx) {$/", "file": true, "language": "C", "typeref": "typename:duk_ret_t", "kind": "function", "signature": "(duk_context * ctx)"}, {"_type": "tag", "name": "duk__logger_prototype_log_shared", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/jst/source/duktape/duk_logging.c", "pattern": "/^static duk_ret_t duk__logger_prototype_log_shared(duk_context *ctx) {$/", "file": true, "language": "C", "typeref": "typename:duk_ret_t", "kind": "function", "signature": "(duk_context * ctx)"}, {"_type": "tag", "name": "duk__logger_prototype_raw", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/jst/source/duktape/duk_logging.c", "pattern": "/^static duk_ret_t duk__logger_prototype_raw(duk_context *ctx) {$/", "file": true, "language": "C", "typeref": "typename:duk_ret_t", "kind": "function", "signature": "(duk_context * ctx)"}, {"_type": "tag", "name": "duk_log", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/jst/source/duktape/duk_logging.c", "pattern": "/^void duk_log(duk_context *ctx, duk_int_t level, const char *fmt, ...) {$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(duk_context * ctx,duk_int_t level,const char * fmt,...)"}, {"_type": "tag", "name": "duk_log_va", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/jst/source/duktape/duk_logging.c", "pattern": "/^void duk_log_va(duk_context *ctx, duk_int_t level, const char *fmt, va_list ap) {$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(duk_context * ctx,duk_int_t level,const char * fmt,va_list ap)"}, {"_type": "tag", "name": "duk_logging_init", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/jst/source/duktape/duk_logging.c", "pattern": "/^void duk_logging_init(duk_context *ctx, duk_uint_t flags) {$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(duk_context * ctx,duk_uint_t flags)"}], "hash": "96c50018b125240043f06062ae0e0ebe", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "rdk/components/generic/jst/source/duktape/duk_logging.c", "fields": [{"name": "const char[] duk__log_level_strings", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "const char * [] duk__log_method_names", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"25854": ""}]}