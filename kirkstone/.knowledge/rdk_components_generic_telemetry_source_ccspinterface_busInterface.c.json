{"is_source_file": true, "format": "C", "description": "This source file implements an interface for interacting with a message bus (RBUS or CCSP), providing functions to initialize the bus, check if RBUS mode is active, retrieve parameters, register and unregister for telemetry events, and cleanup. It handles different bus modes dynamically and uses conditional compilation to include support for CCSP.", "external_files": ["rbus/rbus.h", "t2log_wrapper.h", "busInterface.h", "ccspinterface.h", "rbusInterface.h"], "external_methods": ["rbus_checkStatus", "getRbusParameterVal", "getCCSPParamVal", "getRbusProfileParamValues", "getCCSPProfileParamValues", "registerRbusT2EventListener", "registerCcspT2EventListener", "unregisterRbusT2EventListener"], "published": ["isRbusEnabled", "getParameterValue", "getProfileParameterValues", "freeParamValueSt", "registerForTelemetryEvents", "unregisterForTelemetryEvents", "busUninit"], "classes": [], "methods": [{"name": "bool isRbusEnabled()", "description": "Checks if RBUS mode is active by verifying the status of rbus_checkStatus.", "scope": "", "scopeKind": ""}, {"name": "bool busInit()", "description": "Initializes the bus interface if not already initialized, logging active mode.", "scope": "", "scopeKind": ""}, {"name": "T2ERROR getParameterValue(const char * paramName,char ** paramValue)", "description": "Retrieves the value of a specified parameter, using RBUS or CCSP depending on mode.", "scope": "", "scopeKind": ""}, {"name": "Vector * getProfileParameterValues(Vector * paramList)", "description": "Retrieves multiple parameter values as a vector, depending on bus mode.", "scope": "", "scopeKind": ""}, {"name": "void freeParamValueSt(tr181ValStruct_t ** valStructs,int valSize)", "description": "Frees memory allocated for an array of parameter value structures.", "scope": "", "scopeKind": ""}, {"name": "T2ERROR registerForTelemetryEvents(TelemetryEventCallback eventCB)", "description": "Registers a callback function to receive telemetry events based on bus mode.", "scope": "", "scopeKind": ""}, {"name": "T2ERROR unregisterForTelemetryEvents()", "description": "Placeholder for unregistering telemetry events (currently a no-op).", "scope": "", "scopeKind": ""}, {"name": "T2ERROR busUninit()", "description": "Unregisters telemetry event listeners and performs cleanup.", "scope": "", "scopeKind": ""}], "calls": ["rbus_checkStatus", "getRbusParameterVal", "getCCSPParamVal", "getRbusProfileParamValues", "getCCSPProfileParamValues", "registerRbusT2EventListener", "registerCcspT2EventListener", "unregisterRbusT2EventListener"], "search-terms": ["ccspinterface", "rbus", "telemetry", "bus initialization", "parameter retrieval"], "state": 2, "file_id": 12830, "knowledge_revision": 25724, "git_revision": "", "ctags": [{"_type": "tag", "name": "busInit", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/ccspinterface/busInterface.c", "pattern": "/^static bool busInit( ) {$/", "file": true, "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "busUninit", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/ccspinterface/busInterface.c", "pattern": "/^T2ERROR busUninit()$/", "language": "C", "typeref": "typename:T2ERROR", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "freeParamValueSt", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/ccspinterface/busInterface.c", "pattern": "/^void freeParamValueSt(tr181ValStruct_t **valStructs, int valSize) {$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(tr181ValStruct_t ** valStructs,int valSize)"}, {"_type": "tag", "name": "getParameterValue", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/ccspinterface/busInterface.c", "pattern": "/^T2ERROR getParameterValue(const char* paramName, char **paramValue)$/", "language": "C", "typeref": "typename:T2ERROR", "kind": "function", "signature": "(const char * paramName,char ** paramValue)"}, {"_type": "tag", "name": "getProfileParameterValues", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/ccspinterface/busInterface.c", "pattern": "/^Vector* getProfileParameterValues(Vector *paramList)$/", "language": "C", "typeref": "typename:Vector *", "kind": "function", "signature": "(Vector * paramList)"}, {"_type": "tag", "name": "isBusInit", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/ccspinterface/busInterface.c", "pattern": "/^static bool isBusInit = false ;$/", "file": true, "language": "C", "typeref": "typename:bool", "kind": "variable"}, {"_type": "tag", "name": "isRbus", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/ccspinterface/busInterface.c", "pattern": "/^static bool isRbus = false ;$/", "file": true, "language": "C", "typeref": "typename:bool", "kind": "variable"}, {"_type": "tag", "name": "isRbusEnabled", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/ccspinterface/busInterface.c", "pattern": "/^bool isRbusEnabled( ) {$/", "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "registerForTelemetryEvents", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/ccspinterface/busInterface.c", "pattern": "/^T2ERROR registerForTelemetryEvents(TelemetryEventCallback eventCB)$/", "language": "C", "typeref": "typename:T2ERROR", "kind": "function", "signature": "(TelemetryEventCallback eventCB)"}, {"_type": "tag", "name": "unregisterForTelemetryEvents", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/ccspinterface/busInterface.c", "pattern": "/^T2ERROR unregisterForTelemetryEvents()$/", "language": "C", "typeref": "typename:T2ERROR", "kind": "function", "signature": "()"}], "hash": "6c024a11e26f95af31b209d69f5ba08f", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "rdk/components/generic/telemetry/source/ccspinterface/busInterface.c", "fields": [{"name": "bool isBusInit", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "bool isRbus", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"25724": ""}]}