{"is_source_file": true, "format": "C", "description": "This file provides utility functions and data structures for Wi-Fi interface management, including mapping between radios and interfaces, security mode handling, country and frequency class information, and various helper functions related to Wi-Fi hardware and configurations.", "external_files": ["<stdio.h>", "<string.h>", "<stdbool.h>", "<unistd.h>", "<signal.h>", "<errno.h>", "<stdarg.h>", "<pthread.h>", "<sys/socket.h>", "<net/if.h>", "<linux/rtnetlink.h>", "<netpacket/packet.h>", "<linux/netlink.h>", "<linux/genetlink.h>", "<netlink/handlers.h>", "<netlink/attr.h>", "<netlink/genl/genl.h>", "\"wifi_hal.h\"", "\"wifi_hal_priv.h\"", "\"netlink/handlers.h\"", "\"netlink/attr.h\"", "\"netlink/genl/genl.h\""], "external_methods": ["get_radio_by_rdk_index", "hash_map_get_first", "hash_map_get_next", "platform_pre_init", "platform_post_init", "platform_set_radio", "platform_set_radio_pre_init", "platform_pre_create_vap", "platform_create_vap", "platform_get_ssid_default", "platform_get_keypassphrase_default", "platform_get_radius_key_default", "platform_get_wps_pin_default", "platform_get_country_code_default", "platform_wps_event", "platform_flags_init", "platform_get_aid", "platform_free_aid", "platform_sync_done", "platform_update_radio_presence", "platform_set_txpower", "platform_get_acl_num", "platform_get_vendor_oui", "platform_set_neighbor_report", "platform_get_radio_phytemperature", "get_radio_by_phy_index", "hash_map_get_next", "get_radio_by_vap_index", "get_interface_by_vap_index", "get_interface_by_if_index", "is_6ghz_freq", "center_idx_to_bw_6ghz"], "published": ["is_wifi_hal_vap_private", "is_wifi_hal_vap_xhs", "is_wifi_hal_vap_hotspot", "is_wifi_hal_vap_hotspot_from_interfacename", "is_wifi_hal_6g_radio_from_interfacename", "is_wifi_hal_vap_hotspot_open", "is_wifi_hal_vap_lnf", "is_wifi_hal_vap_lnf_psk", "is_wifi_hal_vap_mesh", "is_wifi_hal_vap_mesh_backhaul", "is_wifi_hal_vap_hotspot_secure", "is_wifi_hal_vap_lnf_radius", "is_wifi_hal_vap_mesh_sta", "get_interface_name_from_radio_index", "get_rdk_radio_index", "is_backhaul_interface", "get_wifi_interface_info_map", "get_ap_vlan_id", "get_radio_interface_info_map", "get_primary_interface", "get_private_vap_interface", "getIpStringFromAdrress", "set_interface_properties", "get_interface_name_from_vap_index", "get_radio_by_rdk_index", "get_radio_by_phy_index", "get_interface_by_vap_index", "get_interface_by_if_index", "get_ie_ext_by_eid", "get_ie_by_eid", "get_vap_mode_str_from_int_mode", "get_security_mode_support_radius", "get_security_mode_int_from_str", "get_security_mode_str_from_int", "get_security_encryption_mode_str_from_int", "get_coutry_str_from_oper_params", "pick_akm_suite", "get_coutry_str_from_code", "get_wifi_op_class_info", "get_op_class_from_radio_params", "is_6ghz_freq"], "search-terms": ["wifi_interface_name_idex_map", "interface_index_map", "radio_interface_mapping_t", "wifi_country_map", "country_code", "country_str", "wifi_operating_env", "wifi_env_map", "op_class", "vap", "radio", "wifi_hal", "WIFI_FREQUENCY_6_BAND", "get_radio_by_rdk_index", "hash_map_get_first"], "methods": [{"name": "int get_sec_channel_offset(wifi_radio_info_t * radio,int freq)", "description": "Calculates secondary channel offset for a given radio and frequency based on the hardware mode and allowed bandwidth.", "scope": "", "scopeKind": ""}, {"name": "int get_bw80_center_freq(wifi_radio_operationParam_t * param,const char * country)", "description": "Determines the center frequency for 80MHz bandwidth for a specified channel and country context, considering 5GHz or 6GHz bands.", "scope": "", "scopeKind": ""}, {"name": "int get_bw160_center_freq(wifi_radio_operationParam_t * param,const char * country)", "description": "Determines the center frequency for 160MHz bandwidth for a specified channel and country context, considering 5GHz or 6GHz bands.", "scope": "", "scopeKind": ""}, {"name": "wifi_hal_print", "description": "Logger function that outputs formatted messages with timestamp and level, handling different output targets."}, {"name": "wpa_alg_to_string", "description": "Maps WPA encryption algorithms enumeration to their string representations."}, {"name": "nl80211_attribute_to_string", "description": "Converts nl80211 attribute enumerations to their string names for debugging and logging."}, {"name": "nl80211_command_to_string", "description": "Converts nl80211 command enumerations to their string representations for debugging and logging."}, {"name": "print_attributes", "description": "Prints the attributes for a given nl80211 command for debugging."}, {"name": "print_supported_commands", "description": "Prints the supported nl80211 commands for a given command table, aiding in debugging."}, {"name": "char * get_wifi_drv_name()", "description": "Returns the current Wi-Fi driver name.", "scope": "", "scopeKind": ""}, {"name": "wifi_device_info_t get_device_info_details()", "description": "Returns detailed device information related to Wi-Fi hardware.", "scope": "", "scopeKind": ""}, {"name": "platform_pre_init_t get_platform_pre_init_fn()", "description": "Returns the platform-specific pre-initialization function pointer.", "scope": "", "scopeKind": ""}, {"name": "platform_post_init_t get_platform_post_init_fn()", "description": "Returns the platform-specific post-initialization function pointer.", "scope": "", "scopeKind": ""}, {"name": "platform_ssid_default_t get_platform_ssid_default_fn()", "description": "Returns the default SSID function pointer for platform-specific configurations.", "scope": "", "scopeKind": ""}, {"name": "platform_keypassphrase_default_t get_platform_keypassphrase_default_fn()", "description": "Returns the default key passphrase function pointer for platform configurations.", "scope": "", "scopeKind": ""}, {"name": "platform_radius_key_default_t get_platform_radius_key_default_fn()", "description": "Returns the default RADIUS key function pointer.", "scope": "", "scopeKind": ""}, {"name": "platform_wps_pin_default_t get_platform_wps_pin_default_fn()", "description": "Returns the default WPS PIN function pointer.", "scope": "", "scopeKind": ""}, {"name": "platform_wps_event_t get_platform_wps_event_fn()", "description": "Returns the WPS event handler function pointer.", "scope": "", "scopeKind": ""}, {"name": "platform_country_code_default_t get_platform_country_code_default_fn()", "description": "Returns the default country code function pointer.", "scope": "", "scopeKind": ""}, {"name": "platform_set_radio_params_t get_platform_set_radio_fn()", "description": "Returns the function pointer for setting radio parameters.", "scope": "", "scopeKind": ""}, {"name": "platform_pre_create_vap_t get_platform_pre_create_vap_fn()", "description": "Returns the function pointer for pre-creating VAP interfaces.", "scope": "", "scopeKind": ""}, {"name": "platform_create_vap_t get_platform_create_vap_fn()", "description": "Returns the function pointer for creating VAP interfaces.", "scope": "", "scopeKind": ""}, {"name": "platform_set_radio_pre_init_t get_platform_set_radio_pre_init_fn()", "description": "Returns the function pointer for pre-initialization of radio settings.", "scope": "", "scopeKind": ""}, {"name": "platform_flags_init_t get_platform_flags_init_fn()", "description": "Returns the function pointer for initializing platform-specific flags.", "scope": "", "scopeKind": ""}, {"name": "platform_get_aid_t get_platform_get_aid_fn()", "description": "Returns the function pointer to obtain an AID (Association ID).", "scope": "", "scopeKind": ""}, {"name": "platform_free_aid_t get_platform_free_aid_fn()", "description": "Returns the function pointer to free an AID.", "scope": "", "scopeKind": ""}, {"name": "platform_sync_done_t get_platform_sync_done_fn()", "description": "Returns the function pointer to mark sync as done.", "scope": "", "scopeKind": ""}, {"name": "platform_update_radio_presence_t get_platform_update_radio_presence_fn()", "description": "Returns the function pointer for updating radio presence status.", "scope": "", "scopeKind": ""}, {"name": "platform_set_txpower_t get_platform_set_txpower_fn()", "description": "Returns the function pointer for setting transmit power.", "scope": "", "scopeKind": ""}, {"name": "platform_get_ApAclDeviceNum_t get_platform_ApAclDeviceNum_fn()", "description": "Returns the function pointer for obtaining AP ACL device number.", "scope": "", "scopeKind": ""}, {"name": "lsmod_by_name", "description": "Checks if a kernel module with the specified name is loaded."}, {"name": "update_ecomode_radio_capabilities", "description": "Updates appropriate radio capabilities for eco mode based on current interface and frequency band."}, {"name": "int create_ecomode_interfaces(void)", "description": "Creates and configures radio interfaces for eco mode, including setting up sleeping radio states and associated VAPs.", "scope": "", "scopeKind": ""}, {"name": "uint_array_set", "description": "Sets values for a uint_array_t structure, reallocating memory if necessary."}, {"name": "wifi_freq_to_channel", "description": "Converts a frequency to a Wi-Fi channel number."}, {"name": "wifi_channel_to_freq", "description": "Converts a channel number to frequency, considering country and operation class."}, {"name": "wifi_freq_band_to_nl80211_band", "description": "Maps internal Wi-Fi frequency band enumeration to nl80211 band enumeration."}, {"name": "const char * get_chan_dfs_state(struct hostapd_channel_data * chan)", "description": "Returns a string representing the DFS state of a Wi-Fi channel.", "scope": "", "scopeKind": ""}, {"name": "int get_total_num_of_vaps(void)", "description": "Computes the total number of VAPs across all radios.", "scope": "", "scopeKind": ""}, {"name": "wifi_strcpy", "description": "Safe string copy function with null checks and overlap detection."}, {"name": "wifi_strcat", "description": "Safe string concatenation function with null checks and overlap detection."}, {"name": "wifi_strncpy", "description": "Safe string copy with a limit, null checks, and overlap detection."}, {"name": "str_list_append", "description": "Appends a comma-separated string to a list stored in a buffer, handling initial empty buffer."}, {"name": "wifi_enum_bitmap_to_str", "description": "Converts a bitmap of enum values into a comma-separated string with prefix and map lookup."}, {"name": "wifi_ieee80211Variant_to_str", "description": "Returns string representation of ieee80211Variant type."}, {"name": "wifi_channelBandwidth_to_str", "description": "Returns string representation of channel bandwidth enumeration."}, {"name": "wifi_bitrate_to_str", "description": "Returns string representation of bitrate enumeration."}, {"name": "int find_country_code_match(const char * const cc[],const char * const country)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int getIpStringFromAdrress(char * ipString,ip_addr_t * ip)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int get_ap_vlan_id(char * interface_name)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "INT get_coutry_str_from_code(wifi_countrycode_type_t code,char * country)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "INT get_coutry_str_from_oper_params(wifi_radio_operationParam_t * operParams,char * country)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "BOOL get_ie_by_eid(unsigned int eid,unsigned char * buff,unsigned int buff_len,unsigned char ** ie_out,unsigned short * ie_out_len)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "BOOL get_ie_ext_by_eid(unsigned int eid,unsigned char * buff,unsigned int buff_len,unsigned char ** ie_out,unsigned short * ie_out_len)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "wifi_interface_info_t * get_interface_by_if_index(unsigned int if_index)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "wifi_interface_info_t * get_interface_by_vap_index(unsigned int vap_index)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int get_interface_name_from_radio_index(uint8_t radio_index,char * interface_name)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int get_interface_name_from_vap_index(unsigned int vap_index,char * interface_name)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int get_op_class_from_radio_params(wifi_radio_operationParam_t * param)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "platform_get_radio_phytemperature_t get_platform_get_radio_phytemperature_fn()", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "platform_set_neighbor_report_t get_platform_set_neighbor_report_fn()", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "platform_get_vendor_oui_t get_platform_vendor_oui_fn()", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "wifi_interface_info_t * get_primary_interface(wifi_radio_info_t * radio)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "wifi_interface_info_t * get_private_vap_interface(wifi_radio_info_t * radio)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "wifi_radio_info_t * get_radio_by_phy_index(wifi_radio_index_t index)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "wifi_radio_info_t * get_radio_by_rdk_index(wifi_radio_index_t index)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "void get_radio_interface_info_map(radio_interface_mapping_t * radio_interface_map)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int get_radio_variant_str_from_int(unsigned char variant,char * variant_str)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int get_rdk_radio_index(unsigned int phy_index)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int get_security_encryption_mode_str_from_int(wifi_encryption_method_t encryption_mode,char * encryption_mode_str)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int get_security_mode_int_from_str(char * security_mode_str,char * mfp_str,wifi_security_modes_t * security_mode)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int get_security_mode_str_from_int(wifi_security_modes_t security_mode,char * security_mode_str)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int get_security_mode_support_radius(int mode)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int get_vap_mode_str_from_int_mode(unsigned char vap_mode,char * vap_mode_str)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "void get_wifi_interface_info_map(wifi_interface_name_idex_map_t * interface_map)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int get_wifi_op_class_info(wifi_countrycode_type_t country_code,wifi_country_radio_op_class_t * op_classes)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int is_backhaul_interface(wifi_interface_info_t * interface)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "BOOL is_wifi_hal_6g_radio_from_interfacename(char * interface_name)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "BOOL is_wifi_hal_vap_hotspot(UINT ap_index)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "BOOL is_wifi_hal_vap_hotspot_from_interfacename(char * interface_name)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "BOOL is_wifi_hal_vap_hotspot_open(UINT ap_index)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "BOOL is_wifi_hal_vap_hotspot_secure(UINT ap_index)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "BOOL is_wifi_hal_vap_lnf(UINT ap_index)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "BOOL is_wifi_hal_vap_lnf_psk(UINT ap_index)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "BOOL is_wifi_hal_vap_lnf_radius(UINT ap_index)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "BOOL is_wifi_hal_vap_mesh(UINT ap_index)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "BOOL is_wifi_hal_vap_mesh_backhaul(UINT ap_index)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "BOOL is_wifi_hal_vap_mesh_sta(UINT ap_index)", "scope": "", "scopeKind": "", "description": "unavailable"}], "state": 2, "file_id": 8138, "knowledge_revision": 21208, "git_revision": "", "ctags": [{"_type": "tag", "name": "A2S", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/rdk-wifi-hal/src/wifi_hal_nl80211_utils.c", "pattern": "/^#define A2S(/", "file": true, "language": "C", "kind": "macro", "signature": "(x)"}, {"_type": "tag", "name": "ALG2S", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/rdk-wifi-hal/src/wifi_hal_nl80211_utils.c", "pattern": "/^#define ALG2S(/", "file": true, "language": "C", "kind": "macro", "signature": "(x)"}, {"_type": "tag", "name": "C2S", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/rdk-wifi-hal/src/wifi_hal_nl80211_utils.c", "pattern": "/^#define C2S(/", "file": true, "language": "C", "kind": "macro", "signature": "(x)"}, {"_type": "tag", "name": "cn_op_class", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/rdk-wifi-hal/src/wifi_hal_nl80211_utils.c", "pattern": "/^wifi_country_radio_op_class_t cn_op_class = {$/", "language": "C", "typeref": "typename:wifi_country_radio_op_class_t", "kind": "variable"}, {"_type": "tag", "name": "cn_op_class_cc", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/rdk-wifi-hal/src/wifi_hal_nl80211_utils.c", "pattern": "/^static const char *const cn_op_class_cc[] = {$/", "file": true, "language": "C", "typeref": "typename:const char * const[]", "kind": "variable"}, {"_type": "tag", "name": "create_ecomode_interfaces", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/rdk-wifi-hal/src/wifi_hal_nl80211_utils.c", "pattern": "/^int create_ecomode_interfaces(void)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(void)"}, {"_type": "tag", "name": "driver_info", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/rdk-wifi-hal/src/wifi_hal_nl80211_utils.c", "pattern": "/^const wifi_driver_info_t  driver_info = {$/", "language": "C", "typeref": "typename:const wifi_driver_info_t", "kind": "variable"}, {"_type": "tag", "name": "eu_op_class", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/rdk-wifi-hal/src/wifi_hal_nl80211_utils.c", "pattern": "/^wifi_country_radio_op_class_t eu_op_class = {$/", "language": "C", "typeref": "typename:wifi_country_radio_op_class_t", "kind": "variable"}, {"_type": "tag", "name": "eu_op_class_cc", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/rdk-wifi-hal/src/wifi_hal_nl80211_utils.c", "pattern": "/^static const char *const eu_op_class_cc[] = {$/", "file": true, "language": "C", "typeref": "typename:const char * const[]", "kind": "variable"}, {"_type": "tag", "name": "find_country_code_match", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/rdk-wifi-hal/src/wifi_hal_nl80211_utils.c", "pattern": "/^static int find_country_code_match(const char *const cc[], const char *const country)$/", "file": true, "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(const char * const cc[],const char * const country)"}, {"_type": "tag", "name": "getIpStringFromAdrress", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/rdk-wifi-hal/src/wifi_hal_nl80211_utils.c", "pattern": "/^int getIpStringFromAdrress (char * ipString, ip_addr_t * ip)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(char * ipString,ip_addr_t * ip)"}, {"_type": "tag", "name": "get_ap_vlan_id", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/rdk-wifi-hal/src/wifi_hal_nl80211_utils.c", "pattern": "/^int get_ap_vlan_id(char *interface_name)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(char * interface_name)"}, {"_type": "tag", "name": "get_bw160_center_freq", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/rdk-wifi-hal/src/wifi_hal_nl80211_utils.c", "pattern": "/^int get_bw160_center_freq(wifi_radio_operationParam_t *param, const char *country)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(wifi_radio_operationParam_t * param,const char * country)"}, {"_type": "tag", "name": "get_bw80_center_freq", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/rdk-wifi-hal/src/wifi_hal_nl80211_utils.c", "pattern": "/^int get_bw80_center_freq(wifi_radio_operationParam_t *param, const char *country)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(wifi_radio_operationParam_t * param,const char * country)"}, {"_type": "tag", "name": "get_chan_dfs_state", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/rdk-wifi-hal/src/wifi_hal_nl80211_utils.c", "pattern": "/^const char* get_chan_dfs_state(struct hostapd_channel_data *chan)$/", "language": "C", "typeref": "typename:const char *", "kind": "function", "signature": "(struct hostapd_channel_data * chan)"}, {"_type": "tag", "name": "get_coutry_str_from_code", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/rdk-wifi-hal/src/wifi_hal_nl80211_utils.c", "pattern": "/^INT get_coutry_str_from_code(wifi_countrycode_type_t code, char *country)$/", "language": "C", "typeref": "typename:INT", "kind": "function", "signature": "(wifi_countrycode_type_t code,char * country)"}, {"_type": "tag", "name": "get_coutry_str_from_oper_params", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/rdk-wifi-hal/src/wifi_hal_nl80211_utils.c", "pattern": "/^INT get_coutry_str_from_oper_params(wifi_radio_operationParam_t *operParams, char *country)$/", "language": "C", "typeref": "typename:INT", "kind": "function", "signature": "(wifi_radio_operationParam_t * operParams,char * country)"}, {"_type": "tag", "name": "get_device_info_details", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/rdk-wifi-hal/src/wifi_hal_nl80211_utils.c", "pattern": "/^wifi_device_info_t get_device_info_details()$/", "language": "C", "typeref": "typename:wifi_device_info_t", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "get_ie_by_eid", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/rdk-wifi-hal/src/wifi_hal_nl80211_utils.c", "pattern": "/^BOOL get_ie_by_eid(unsigned int eid, unsigned char *buff, unsigned int buff_len, unsigned char */", "language": "C", "typeref": "typename:BOOL", "kind": "function", "signature": "(unsigned int eid,unsigned char * buff,unsigned int buff_len,unsigned char ** ie_out,unsigned short * ie_out_len)"}, {"_type": "tag", "name": "get_ie_ext_by_eid", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/rdk-wifi-hal/src/wifi_hal_nl80211_utils.c", "pattern": "/^BOOL get_ie_ext_by_eid(unsigned int eid, unsigned char *buff, unsigned int buff_len, unsigned ch/", "language": "C", "typeref": "typename:BOOL", "kind": "function", "signature": "(unsigned int eid,unsigned char * buff,unsigned int buff_len,unsigned char ** ie_out,unsigned short * ie_out_len)"}, {"_type": "tag", "name": "get_interface_by_if_index", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/rdk-wifi-hal/src/wifi_hal_nl80211_utils.c", "pattern": "/^wifi_interface_info_t *get_interface_by_if_index(unsigned int if_index)$/", "language": "C", "typeref": "typename:wifi_interface_info_t *", "kind": "function", "signature": "(unsigned int if_index)"}, {"_type": "tag", "name": "get_interface_by_vap_index", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/rdk-wifi-hal/src/wifi_hal_nl80211_utils.c", "pattern": "/^wifi_interface_info_t *get_interface_by_vap_index(unsigned int vap_index)$/", "language": "C", "typeref": "typename:wifi_interface_info_t *", "kind": "function", "signature": "(unsigned int vap_index)"}, {"_type": "tag", "name": "get_interface_name_from_radio_index", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/rdk-wifi-hal/src/wifi_hal_nl80211_utils.c", "pattern": "/^int get_interface_name_from_radio_index(uint8_t radio_index, char *interface_name)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(uint8_t radio_index,char * interface_name)"}, {"_type": "tag", "name": "get_interface_name_from_vap_index", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/rdk-wifi-hal/src/wifi_hal_nl80211_utils.c", "pattern": "/^int get_interface_name_from_vap_index(unsigned int vap_index, char *interface_name)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(unsigned int vap_index,char * interface_name)"}, {"_type": "tag", "name": "get_op_class_from_radio_params", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/rdk-wifi-hal/src/wifi_hal_nl80211_utils.c", "pattern": "/^int get_op_class_from_radio_params(wifi_radio_operationParam_t *param)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(wifi_radio_operationParam_t * param)"}, {"_type": "tag", "name": "get_platform_ApAclDeviceNum_fn", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/rdk-wifi-hal/src/wifi_hal_nl80211_utils.c", "pattern": "/^platform_get_ApAclDeviceNum_t get_platform_ApAclDeviceNum_fn()$/", "language": "C", "typeref": "typename:platform_get_ApAclDeviceNum_t", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "get_platform_country_code_default_fn", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/rdk-wifi-hal/src/wifi_hal_nl80211_utils.c", "pattern": "/^platform_country_code_default_t get_platform_country_code_default_fn()$/", "language": "C", "typeref": "typename:platform_country_code_default_t", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "get_platform_create_vap_fn", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/rdk-wifi-hal/src/wifi_hal_nl80211_utils.c", "pattern": "/^platform_create_vap_t\tget_platform_create_vap_fn()$/", "language": "C", "typeref": "typename:platform_create_vap_t", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "get_platform_flags_init_fn", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/rdk-wifi-hal/src/wifi_hal_nl80211_utils.c", "pattern": "/^platform_flags_init_t   get_platform_flags_init_fn()$/", "language": "C", "typeref": "typename:platform_flags_init_t", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "get_platform_free_aid_fn", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/rdk-wifi-hal/src/wifi_hal_nl80211_utils.c", "pattern": "/^platform_free_aid_t get_platform_free_aid_fn()$/", "language": "C", "typeref": "typename:platform_free_aid_t", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "get_platform_get_aid_fn", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/rdk-wifi-hal/src/wifi_hal_nl80211_utils.c", "pattern": "/^platform_get_aid_t get_platform_get_aid_fn()$/", "language": "C", "typeref": "typename:platform_get_aid_t", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "get_platform_get_radio_phytemperature_fn", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/rdk-wifi-hal/src/wifi_hal_nl80211_utils.c", "pattern": "/^platform_get_radio_phytemperature_t get_platform_get_radio_phytemperature_fn()$/", "language": "C", "typeref": "typename:platform_get_radio_phytemperature_t", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "get_platform_keypassphrase_default_fn", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/rdk-wifi-hal/src/wifi_hal_nl80211_utils.c", "pattern": "/^platform_keypassphrase_default_t get_platform_keypassphrase_default_fn()$/", "language": "C", "typeref": "typename:platform_keypassphrase_default_t", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "get_platform_post_init_fn", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/rdk-wifi-hal/src/wifi_hal_nl80211_utils.c", "pattern": "/^platform_post_init_t \tget_platform_post_init_fn()$/", "language": "C", "typeref": "typename:platform_post_init_t", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "get_platform_pre_create_vap_fn", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/rdk-wifi-hal/src/wifi_hal_nl80211_utils.c", "pattern": "/^platform_pre_create_vap_t   get_platform_pre_create_vap_fn()$/", "language": "C", "typeref": "typename:platform_pre_create_vap_t", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "get_platform_pre_init_fn", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/rdk-wifi-hal/src/wifi_hal_nl80211_utils.c", "pattern": "/^platform_pre_init_t\tget_platform_pre_init_fn()$/", "language": "C", "typeref": "typename:platform_pre_init_t", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "get_platform_radius_key_default_fn", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/rdk-wifi-hal/src/wifi_hal_nl80211_utils.c", "pattern": "/^platform_radius_key_default_t get_platform_radius_key_default_fn()$/", "language": "C", "typeref": "typename:platform_radius_key_default_t", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "get_platform_set_neighbor_report_fn", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/rdk-wifi-hal/src/wifi_hal_nl80211_utils.c", "pattern": "/^platform_set_neighbor_report_t get_platform_set_neighbor_report_fn()$/", "language": "C", "typeref": "typename:platform_set_neighbor_report_t", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "get_platform_set_radio_fn", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/rdk-wifi-hal/src/wifi_hal_nl80211_utils.c", "pattern": "/^platform_set_radio_params_t\tget_platform_set_radio_fn()$/", "language": "C", "typeref": "typename:platform_set_radio_params_t", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "get_platform_set_radio_pre_init_fn", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/rdk-wifi-hal/src/wifi_hal_nl80211_utils.c", "pattern": "/^platform_set_radio_pre_init_t get_platform_set_radio_pre_init_fn()$/", "language": "C", "typeref": "typename:platform_set_radio_pre_init_t", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "get_platform_set_txpower_fn", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/rdk-wifi-hal/src/wifi_hal_nl80211_utils.c", "pattern": "/^platform_set_txpower_t get_platform_set_txpower_fn()$/", "language": "C", "typeref": "typename:platform_set_txpower_t", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "get_platform_ssid_default_fn", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/rdk-wifi-hal/src/wifi_hal_nl80211_utils.c", "pattern": "/^platform_ssid_default_t get_platform_ssid_default_fn()$/", "language": "C", "typeref": "typename:platform_ssid_default_t", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "get_platform_sync_done_fn", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/rdk-wifi-hal/src/wifi_hal_nl80211_utils.c", "pattern": "/^platform_sync_done_t get_platform_sync_done_fn()$/", "language": "C", "typeref": "typename:platform_sync_done_t", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "get_platform_update_radio_presence_fn", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/rdk-wifi-hal/src/wifi_hal_nl80211_utils.c", "pattern": "/^platform_update_radio_presence_t get_platform_update_radio_presence_fn()$/", "language": "C", "typeref": "typename:platform_update_radio_presence_t", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "get_platform_vendor_oui_fn", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/rdk-wifi-hal/src/wifi_hal_nl80211_utils.c", "pattern": "/^platform_get_vendor_oui_t get_platform_vendor_oui_fn()$/", "language": "C", "typeref": "typename:platform_get_vendor_oui_t", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "get_platform_wps_event_fn", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/rdk-wifi-hal/src/wifi_hal_nl80211_utils.c", "pattern": "/^platform_wps_event_t get_platform_wps_event_fn()$/", "language": "C", "typeref": "typename:platform_wps_event_t", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "get_platform_wps_pin_default_fn", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/rdk-wifi-hal/src/wifi_hal_nl80211_utils.c", "pattern": "/^platform_wps_pin_default_t get_platform_wps_pin_default_fn()$/", "language": "C", "typeref": "typename:platform_wps_pin_default_t", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "get_primary_interface", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/rdk-wifi-hal/src/wifi_hal_nl80211_utils.c", "pattern": "/^wifi_interface_info_t* get_primary_interface(wifi_radio_info_t *radio)$/", "language": "C", "typeref": "typename:wifi_interface_info_t *", "kind": "function", "signature": "(wifi_radio_info_t * radio)"}, {"_type": "tag", "name": "get_private_vap_interface", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/rdk-wifi-hal/src/wifi_hal_nl80211_utils.c", "pattern": "/^wifi_interface_info_t* get_private_vap_interface(wifi_radio_info_t *radio)$/", "language": "C", "typeref": "typename:wifi_interface_info_t *", "kind": "function", "signature": "(wifi_radio_info_t * radio)"}, {"_type": "tag", "name": "get_radio_by_phy_index", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/rdk-wifi-hal/src/wifi_hal_nl80211_utils.c", "pattern": "/^wifi_radio_info_t *get_radio_by_phy_index(wifi_radio_index_t index)$/", "language": "C", "typeref": "typename:wifi_radio_info_t *", "kind": "function", "signature": "(wifi_radio_index_t index)"}, {"_type": "tag", "name": "get_radio_by_rdk_index", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/rdk-wifi-hal/src/wifi_hal_nl80211_utils.c", "pattern": "/^wifi_radio_info_t *get_radio_by_rdk_index(wifi_radio_index_t index)$/", "language": "C", "typeref": "typename:wifi_radio_info_t *", "kind": "function", "signature": "(wifi_radio_index_t index)"}, {"_type": "tag", "name": "get_radio_interface_info_map", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/rdk-wifi-hal/src/wifi_hal_nl80211_utils.c", "pattern": "/^void get_radio_interface_info_map(radio_interface_mapping_t *radio_interface_map)$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(radio_interface_mapping_t * radio_interface_map)"}, {"_type": "tag", "name": "get_radio_variant_str_from_int", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/rdk-wifi-hal/src/wifi_hal_nl80211_utils.c", "pattern": "/^int get_radio_variant_str_from_int(unsigned char variant, char *variant_str)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(unsigned char variant,char * variant_str)"}, {"_type": "tag", "name": "get_rdk_radio_index", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/rdk-wifi-hal/src/wifi_hal_nl80211_utils.c", "pattern": "/^int get_rdk_radio_index(unsigned int phy_index)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(unsigned int phy_index)"}, {"_type": "tag", "name": "get_sec_channel_offset", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/rdk-wifi-hal/src/wifi_hal_nl80211_utils.c", "pattern": "/^int get_sec_channel_offset(wifi_radio_info_t *radio, int freq)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(wifi_radio_info_t * radio,int freq)"}, {"_type": "tag", "name": "get_security_encryption_mode_str_from_int", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/rdk-wifi-hal/src/wifi_hal_nl80211_utils.c", "pattern": "/^int get_security_encryption_mode_str_from_int(wifi_encryption_method_t encryption_mode, char *en/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(wifi_encryption_method_t encryption_mode,char * encryption_mode_str)"}, {"_type": "tag", "name": "get_security_mode_int_from_str", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/rdk-wifi-hal/src/wifi_hal_nl80211_utils.c", "pattern": "/^int get_security_mode_int_from_str(char *security_mode_str,char *mfp_str,wifi_security_modes_t */", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(char * security_mode_str,char * mfp_str,wifi_security_modes_t * security_mode)"}, {"_type": "tag", "name": "get_security_mode_str_from_int", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/rdk-wifi-hal/src/wifi_hal_nl80211_utils.c", "pattern": "/^int get_security_mode_str_from_int(wifi_security_modes_t security_mode, char *security_mode_str)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(wifi_security_modes_t security_mode,char * security_mode_str)"}, {"_type": "tag", "name": "get_security_mode_support_radius", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/rdk-wifi-hal/src/wifi_hal_nl80211_utils.c", "pattern": "/^int get_security_mode_support_radius(int mode)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(int mode)"}, {"_type": "tag", "name": "get_total_num_of_vaps", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/rdk-wifi-hal/src/wifi_hal_nl80211_utils.c", "pattern": "/^int get_total_num_of_vaps(void)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(void)"}, {"_type": "tag", "name": "get_vap_mode_str_from_int_mode", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/rdk-wifi-hal/src/wifi_hal_nl80211_utils.c", "pattern": "/^int get_vap_mode_str_from_int_mode(unsigned char vap_mode, char *vap_mode_str)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(unsigned char vap_mode,char * vap_mode_str)"}, {"_type": "tag", "name": "get_wifi_drv_name", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/rdk-wifi-hal/src/wifi_hal_nl80211_utils.c", "pattern": "/^char *get_wifi_drv_name()$/", "language": "C", "typeref": "typename:char *", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "get_wifi_interface_info_map", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/rdk-wifi-hal/src/wifi_hal_nl80211_utils.c", "pattern": "/^void get_wifi_interface_info_map(wifi_interface_name_idex_map_t *interface_map)$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(wifi_interface_name_idex_map_t * interface_map)"}, {"_type": "tag", "name": "get_wifi_op_class_info", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/rdk-wifi-hal/src/wifi_hal_nl80211_utils.c", "pattern": "/^int get_wifi_op_class_info(wifi_countrycode_type_t country_code, wifi_country_radio_op_class_t */", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(wifi_countrycode_type_t country_code,wifi_country_radio_op_class_t * op_classes)"}, {"_type": "tag", "name": "interface_index_map", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/rdk-wifi-hal/src/wifi_hal_nl80211_utils.c", "pattern": "/^wifi_interface_name_idex_map_t interface_index_map[] = {$/", "language": "C", "typeref": "typename:wifi_interface_name_idex_map_t[]", "kind": "variable"}, {"_type": "tag", "name": "is_backhaul_interface", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/rdk-wifi-hal/src/wifi_hal_nl80211_utils.c", "pattern": "/^int is_backhaul_interface(wifi_interface_info_t *interface)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(wifi_interface_info_t * interface)"}, {"_type": "tag", "name": "is_wifi_hal_6g_radio_from_interfacename", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/rdk-wifi-hal/src/wifi_hal_nl80211_utils.c", "pattern": "/^BOOL is_wifi_hal_6g_radio_from_interfacename(char *interface_name)$/", "language": "C", "typeref": "typename:BOOL", "kind": "function", "signature": "(char * interface_name)"}, {"_type": "tag", "name": "is_wifi_hal_vap_hotspot", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/rdk-wifi-hal/src/wifi_hal_nl80211_utils.c", "pattern": "/^BOOL is_wifi_hal_vap_hotspot(UINT ap_index)$/", "language": "C", "typeref": "typename:BOOL", "kind": "function", "signature": "(UINT ap_index)"}, {"_type": "tag", "name": "is_wifi_hal_vap_hotspot_from_interfacename", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/rdk-wifi-hal/src/wifi_hal_nl80211_utils.c", "pattern": "/^BOOL is_wifi_hal_vap_hotspot_from_interfacename(char *interface_name)$/", "language": "C", "typeref": "typename:BOOL", "kind": "function", "signature": "(char * interface_name)"}, {"_type": "tag", "name": "is_wifi_hal_vap_hotspot_open", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/rdk-wifi-hal/src/wifi_hal_nl80211_utils.c", "pattern": "/^BOOL is_wifi_hal_vap_hotspot_open(UINT ap_index)$/", "language": "C", "typeref": "typename:BOOL", "kind": "function", "signature": "(UINT ap_index)"}, {"_type": "tag", "name": "is_wifi_hal_vap_hotspot_secure", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/rdk-wifi-hal/src/wifi_hal_nl80211_utils.c", "pattern": "/^BOOL is_wifi_hal_vap_hotspot_secure(UINT ap_index)$/", "language": "C", "typeref": "typename:BOOL", "kind": "function", "signature": "(UINT ap_index)"}, {"_type": "tag", "name": "is_wifi_hal_vap_lnf", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/rdk-wifi-hal/src/wifi_hal_nl80211_utils.c", "pattern": "/^BOOL is_wifi_hal_vap_lnf(UINT ap_index)$/", "language": "C", "typeref": "typename:BOOL", "kind": "function", "signature": "(UINT ap_index)"}, {"_type": "tag", "name": "is_wifi_hal_vap_lnf_psk", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/rdk-wifi-hal/src/wifi_hal_nl80211_utils.c", "pattern": "/^BOOL is_wifi_hal_vap_lnf_psk(UINT ap_index)$/", "language": "C", "typeref": "typename:BOOL", "kind": "function", "signature": "(UINT ap_index)"}, {"_type": "tag", "name": "is_wifi_hal_vap_lnf_radius", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/rdk-wifi-hal/src/wifi_hal_nl80211_utils.c", "pattern": "/^BOOL is_wifi_hal_vap_lnf_radius(UINT ap_index)$/", "language": "C", "typeref": "typename:BOOL", "kind": "function", "signature": "(UINT ap_index)"}, {"_type": "tag", "name": "is_wifi_hal_vap_mesh", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/rdk-wifi-hal/src/wifi_hal_nl80211_utils.c", "pattern": "/^BOOL is_wifi_hal_vap_mesh(UINT ap_index)$/", "language": "C", "typeref": "typename:BOOL", "kind": "function", "signature": "(UINT ap_index)"}, {"_type": "tag", "name": "is_wifi_hal_vap_mesh_backhaul", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/rdk-wifi-hal/src/wifi_hal_nl80211_utils.c", "pattern": "/^BOOL is_wifi_hal_vap_mesh_backhaul(UINT ap_index)$/", "language": "C", "typeref": "typename:BOOL", "kind": "function", "signature": "(UINT ap_index)"}, {"_type": "tag", "name": "is_wifi_hal_vap_mesh_sta", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/rdk-wifi-hal/src/wifi_hal_nl80211_utils.c", "pattern": "/^BOOL is_wifi_hal_vap_mesh_sta(UINT ap_index)$/", "language": "C", "typeref": "typename:BOOL", "kind": "function", "signature": "(UINT ap_index)"}], "hash": "5a07e87033304ae81542850f5b61fd69", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "rdkb/components/opensource/ccsp/rdk-wifi-hal/src/wifi_hal_nl80211_utils.c", "fields": [{"name": "wifi_country_radio_op_class_t cn_op_class", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "const char * const[] cn_op_class_cc", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "const wifi_driver_info_t driver_info", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "wifi_country_radio_op_class_t eu_op_class", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "const char * const[] eu_op_class_cc", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "wifi_interface_name_idex_map_t[] interface_index_map", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"21208": ""}]}