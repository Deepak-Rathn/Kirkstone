{"is_source_file": true, "format": "C++", "description": "This file is a C++ source file implementing the CMHAL class, which provides various hardware abstraction layer (HAL) functions for a cable modem device. It includes methods for initialization, configuration, status retrieval, firmware update, reboot, and other device management operations, using underlying SSP HAL wrapper functions.", "external_files": ["CMHAL.h"], "external_methods": ["ssp_CMHAL_Init", "ssp_CMHAL_GetParamCharValue", "ssp_CMHAL_GetParamUlongValue", "ssp_CMHAL_GetErrorCodeWords", "ssp_CMHAL_GetDocsisEventLogItems", "ssp_CMHAL_SetLEDFlashStatus", "ssp_CMHAL_ClearDocsisEventLog", "ssp_CMHAL_GetCPEList", "ssp_CMHAL_SetMddIpModeOverride", "ssp_CMHAL_SetStartFreq", "ssp_CMHAL_SetUSChannelId", "ssp_CMHAL_SetHTTP_Download_Interface", "ssp_CMHAL_Download", "ssp_CMHAL_Reboot_Now", "ssp_CMHAL_GetHTTP_Download_Url", "ssp_CMHAL_SetHTTP_Download_Url", "ssp_CMHAL_FWupdateAndFactoryReset", "ssp_CMHAL_GetDsOfdmChanTable", "ssp_CMHAL_GetUsOfdmChanTable", "ssp_CMHAL_GetStatusOfdmaUsTable", "ssp_CMHAL_IsEnergyDetected"], "published": ["CMHAL::initialize", "CMHAL::testmodulepre_requisites", "CMHAL::testmodulepost_requisites", "CMHAL::CMHAL_GetParamCharValue", "CMHAL::CMHAL_GetParamUlongValue", "CMHAL::CMHAL_GetErrorCodeWords", "CMHAL::CMHAL_Init", "CMHAL::CMHAL_GetDocsisEventLogItems", "CMHAL::CMHAL_SetLEDFlashStatus", "CMHAL::CMHAL_ClearDocsisEventLog", "CMHAL::CMHAL_GetCPEList", "CMHAL::CMHAL_SetMddIpModeOverride", "CMHAL::CMHAL_SetStartFreq", "CMHAL::CMHAL_SetUSChannelId", "CMHAL::CMHAL_SetHTTP_Download_Interface", "CMHAL::CMHAL_HTTP_Download", "CMHAL::CMHAL_Reboot_Now", "CMHAL::CMHAL_GetHTTP_Download_Url", "CMHAL::CMHAL_SetHTTP_Download_Url", "CMHAL::CMHAL_FWupdateAndFactoryReset", "CMHAL::CMHAL_GetDsOfdmChanTable", "CMHAL::CMHAL_GetUsOfdmChanTable", "CMHAL::CMHAL_GetStatusOfdmaUsTable", "CMHAL::CMHAL_IsEnergyDetected"], "classes": [{"name": "CMHAL", "description": "A class providing hardware abstraction layer (HAL) functions for cable modem management, including initialization, status retrieval, configuration, firmware updates, and device control."}], "methods": [{"name": "bool initialize(IN const char * szVersion)", "description": "Initializes the CMHAL module for registering wrapper methods.", "scope": "CMHAL", "scopeKind": "class"}, {"name": "std::string testmodulepre_requisites()", "description": "Sets the pre-requisites necessary for this component, such as database and data store initializations.", "scope": "CMHAL", "scopeKind": "class"}, {"name": "bool testmodulepost_requisites()", "description": "Resets or cleans up the pre-requisites set for the component.", "scope": "CMHAL", "scopeKind": "class"}, {"name": "void CMHAL_GetParamCharValue(IN const Json::Value & req,OUT Json::Value & response)", "description": "Retrieves a character parameter value from the device via HAL wrapper.", "scope": "CMHAL", "scopeKind": "class"}, {"name": "void CMHAL_GetParamUlongValue(IN const Json::Value & req,OUT Json::Value & response)", "description": "Retrieves an unsigned long parameter value from the device via HAL wrapper.", "scope": "CMHAL", "scopeKind": "class"}, {"name": "void CMHAL_GetErrorCodeWords(IN const Json::Value & req,OUT Json::Value & response)", "description": "Fetches the ErrorCodeWords status via HAL wrapper.", "scope": "CMHAL", "scopeKind": "class"}, {"name": "void CMHAL_Init(IN const Json::Value & req,OUT Json::Value & response)", "description": "Initializes the cable modem with the specified parameters.", "scope": "CMHAL", "scopeKind": "class"}, {"name": "void CMHAL_GetDocsisEventLogItems(IN const Json::Value & req,OUT Json::Value & response)", "description": "Retrieves DOCSIS event log items from the device.", "scope": "CMHAL", "scopeKind": "class"}, {"name": "void CMHAL_SetLEDFlashStatus(IN const Json::Value & req,OUT Json::Value & response)", "description": "Sets the LED Flash Status on the device.", "scope": "CMHAL", "scopeKind": "class"}, {"name": "void CMHAL_ClearDocsisEventLog(IN const Json::Value & req,OUT Json::Value & response)", "description": "Clears the DOCSIS event logs.", "scope": "CMHAL", "scopeKind": "class"}, {"name": "void CMHAL_GetCPEList(IN const Json::Value & req,OUT Json::Value & response)", "description": "Retrieves the list of connected CPE devices.", "scope": "CMHAL", "scopeKind": "class"}, {"name": "void CMHAL_SetMddIpModeOverride(IN const Json::Value & req,OUT Json::Value & response)", "description": "Overrides the MddIpMode setting.", "scope": "CMHAL", "scopeKind": "class"}, {"name": "void CMHAL_SetStartFreq(IN const Json::Value & req,OUT Json::Value & response)", "description": "Sets the start frequency parameter.", "scope": "CMHAL", "scopeKind": "class"}, {"name": "void CMHAL_SetUSChannelId(IN const Json::Value & req,OUT Json::Value & response)", "description": "Sets the US Channel ID.", "scope": "CMHAL", "scopeKind": "class"}, {"name": "void CMHAL_SetHTTP_Download_Interface(IN const Json::Value & req,OUT Json::Value & response)", "description": "Sets the download interface for HTTP.", "scope": "CMHAL", "scopeKind": "class"}, {"name": "void CMHAL_HTTP_Download(IN const Json::Value & req,OUT Json::Value & response)", "description": "Initiates an HTTP download.", "scope": "CMHAL", "scopeKind": "class"}, {"name": "void CMHAL_Reboot_Now(IN const Json::Value & req,OUT Json::Value & response)", "description": "Reboots the device immediately.", "scope": "CMHAL", "scopeKind": "class"}, {"name": "void CMHAL_GetHTTP_Download_Url(IN const Json::Value & req,OUT Json::Value & response)", "description": "Retrieves the HTTP download URL and filename.", "scope": "CMHAL", "scopeKind": "class"}, {"name": "void CMHAL_SetHTTP_Download_Url(IN const Json::Value & req,OUT Json::Value & response)", "description": "Sets the HTTP download URL and filename.", "scope": "CMHAL", "scopeKind": "class"}, {"name": "void CMHAL_FWupdateAndFactoryReset(IN const Json::Value & req,OUT Json::Value & response)", "description": "Performs firmware update and factory reset with given URL and image name.", "scope": "CMHAL", "scopeKind": "class"}, {"name": "void CMHAL_GetDsOfdmChanTable(IN const Json::Value & req,OUT Json::Value & response)", "description": "Gets values in the DS OFDM channel table.", "scope": "CMHAL", "scopeKind": "class"}, {"name": "void CMHAL_GetUsOfdmChanTable(IN const Json::Value & req,OUT Json::Value & response)", "description": "Gets values in the US OFDM channel table.", "scope": "CMHAL", "scopeKind": "class"}, {"name": "void CMHAL_GetStatusOfdmaUsTable(IN const Json::Value & req,OUT Json::Value & response)", "description": "Gets status of the OFDMA US table.", "scope": "CMHAL", "scopeKind": "class"}, {"name": "void CMHAL_IsEnergyDetected(IN const Json::Value & req,OUT Json::Value & response)", "description": "Checks energy detection status from HAL.", "scope": "CMHAL", "scopeKind": "class"}, {"name": "CMHAL * CreateObject(TcpSocketServer & ptrtcpServer)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "void DestroyObject(CMHAL * stubobj)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "bool cleanup(IN const char * szVersion)", "scope": "CMHAL", "scopeKind": "class", "description": "unavailable"}], "calls": ["ssp_CMHAL_Init", "ssp_CMHAL_GetParamCharValue", "ssp_CMHAL_GetParamUlongValue", "ssp_CMHAL_GetErrorCodeWords", "ssp_CMHAL_GetDocsisEventLogItems", "ssp_CMHAL_SetLEDFlashStatus", "ssp_CMHAL_ClearDocsisEventLog", "ssp_CMHAL_GetCPEList", "ssp_CMHAL_SetMddIpModeOverride", "ssp_CMHAL_SetStartFreq", "ssp_CMHAL_SetUSChannelId", "ssp_CMHAL_SetHTTP_Download_Interface", "ssp_CMHAL_Download", "ssp_CMHAL_Reboot_Now", "ssp_CMHAL_GetHTTP_Download_Url", "ssp_CMHAL_SetHTTP_Download_Url", "ssp_CMHAL_FWupdateAndFactoryReset", "ssp_CMHAL_GetDsOfdmChanTable", "ssp_CMHAL_GetUsOfdmChanTable", "ssp_CMHAL_GetStatusOfdmaUsTable", "ssp_CMHAL_IsEnergyDetected"], "search-terms": ["CMHAL", "ssp_CMHAL", "testmodulepre_requisites", "testmodulepost_requisites", "GetParamCharValue", "GetParamUlongValue", "GetErrorCodeWords", "CMHAL_GetDocsisEventLogItems", "CMHAL_SetLEDFlashStatus", "CMHAL_ClearDocsisEventLog", "CMHAL_GetCPEList", "CMHAL_SetMddIpModeOverride", "CMHAL_SetStartFreq", "CMHAL_SetUSChannelId", "CMHAL_SetHTTP_Download_Interface", "CMHAL_HTTP_Download", "CMHAL_Reboot_Now", "CMHAL_GetHTTP_Download_Url", "CMHAL_SetHTTP_Download_Url", "CMHAL_FWupdateAndFactoryReset", "CMHAL_GetDsOfdmChanTable", "CMHAL_GetUsOfdmChanTable", "CMHAL_GetStatusOfdmaUsTable", "CMHAL_IsEnergyDetected"], "state": 2, "file_id": 5558, "knowledge_revision": 18673, "git_revision": "", "ctags": [{"_type": "tag", "name": "CMHAL_ClearDocsisEventLog", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/CMHAL_Stub/src/CMHAL.cpp", "pattern": "/^void CMHAL::CMHAL_ClearDocsisEventLog(IN const Json::Value& req, OUT Json::Value& response)$/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(IN const Json::Value & req,OUT Json::Value & response)", "scope": "CMHAL", "scopeKind": "class"}, {"_type": "tag", "name": "CMHAL_FWupdateAndFactoryReset", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/CMHAL_Stub/src/CMHAL.cpp", "pattern": "/^void CMHAL::CMHAL_FWupdateAndFactoryReset(IN const Json::Value& req, OUT Json::Value& response)$/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(IN const Json::Value & req,OUT Json::Value & response)", "scope": "CMHAL", "scopeKind": "class"}, {"_type": "tag", "name": "CMHAL_GetCPEList", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/CMHAL_Stub/src/CMHAL.cpp", "pattern": "/^void CMHAL::CMHAL_GetCPEList(IN const Json::Value& req, OUT Json::Value& response)$/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(IN const Json::Value & req,OUT Json::Value & response)", "scope": "CMHAL", "scopeKind": "class"}, {"_type": "tag", "name": "CMHAL_GetDocsisEventLogItems", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/CMHAL_Stub/src/CMHAL.cpp", "pattern": "/^void CMHAL::CMHAL_GetDocsisEventLogItems(IN const Json::Value& req, OUT Json::Value& response)$/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(IN const Json::Value & req,OUT Json::Value & response)", "scope": "CMHAL", "scopeKind": "class"}, {"_type": "tag", "name": "CMHAL_GetDsOfdmChanTable", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/CMHAL_Stub/src/CMHAL.cpp", "pattern": "/^void CMHAL::CMHAL_GetDsOfdmChanTable(IN const Json::Value& req, OUT Json::Value& response)$/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(IN const Json::Value & req,OUT Json::Value & response)", "scope": "CMHAL", "scopeKind": "class"}, {"_type": "tag", "name": "CMHAL_GetErrorCodeWords", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/CMHAL_Stub/src/CMHAL.cpp", "pattern": "/^void CMHAL::CMHAL_GetErrorCodeWords(IN const Json::Value& req, OUT Json::Value& response)$/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(IN const Json::Value & req,OUT Json::Value & response)", "scope": "CMHAL", "scopeKind": "class"}, {"_type": "tag", "name": "CMHAL_GetHTTP_Download_Url", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/CMHAL_Stub/src/CMHAL.cpp", "pattern": "/^void CMHAL::CMHAL_GetHTTP_Download_Url(IN const Json::Value& req, OUT Json::Value& response)$/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(IN const Json::Value & req,OUT Json::Value & response)", "scope": "CMHAL", "scopeKind": "class"}, {"_type": "tag", "name": "CMHAL_GetParamCharValue", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/CMHAL_Stub/src/CMHAL.cpp", "pattern": "/^void CMHAL::CMHAL_GetParamCharValue(IN const Json::Value& req, OUT Json::Value& response)$/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(IN const Json::Value & req,OUT Json::Value & response)", "scope": "CMHAL", "scopeKind": "class"}, {"_type": "tag", "name": "CMHAL_GetParamUlongValue", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/CMHAL_Stub/src/CMHAL.cpp", "pattern": "/^void CMHAL::CMHAL_GetParamUlongValue(IN const Json::Value& req, OUT Json::Value& response)$/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(IN const Json::Value & req,OUT Json::Value & response)", "scope": "CMHAL", "scopeKind": "class"}, {"_type": "tag", "name": "CMHAL_GetStatusOfdmaUsTable", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/CMHAL_Stub/src/CMHAL.cpp", "pattern": "/^void CMHAL::CMHAL_GetStatusOfdmaUsTable(IN const Json::Value& req, OUT Json::Value& response)$/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(IN const Json::Value & req,OUT Json::Value & response)", "scope": "CMHAL", "scopeKind": "class"}, {"_type": "tag", "name": "CMHAL_GetUsOfdmChanTable", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/CMHAL_Stub/src/CMHAL.cpp", "pattern": "/^void CMHAL::CMHAL_GetUsOfdmChanTable(IN const Json::Value& req, OUT Json::Value& response)$/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(IN const Json::Value & req,OUT Json::Value & response)", "scope": "CMHAL", "scopeKind": "class"}, {"_type": "tag", "name": "CMHAL_HTTP_Download", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/CMHAL_Stub/src/CMHAL.cpp", "pattern": "/^void CMHAL::CMHAL_HTTP_Download(IN const Json::Value& req, OUT Json::Value& response)$/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(IN const Json::Value & req,OUT Json::Value & response)", "scope": "CMHAL", "scopeKind": "class"}, {"_type": "tag", "name": "CMHAL_Init", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/CMHAL_Stub/src/CMHAL.cpp", "pattern": "/^void CMHAL::CMHAL_Init(IN const Json::Value& req, OUT Json::Value& response)$/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(IN const Json::Value & req,OUT Json::Value & response)", "scope": "CMHAL", "scopeKind": "class"}, {"_type": "tag", "name": "CMHAL_IsEnergyDetected", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/CMHAL_Stub/src/CMHAL.cpp", "pattern": "/^void CMHAL::CMHAL_IsEnergyDetected(IN const Json::Value& req, OUT Json::Value& response)$/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(IN const Json::Value & req,OUT Json::Value & response)", "scope": "CMHAL", "scopeKind": "class"}, {"_type": "tag", "name": "CMHAL_Reboot_Now", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/CMHAL_Stub/src/CMHAL.cpp", "pattern": "/^void CMHAL::CMHAL_Reboot_Now(IN const Json::Value& req, OUT Json::Value& response)$/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(IN const Json::Value & req,OUT Json::Value & response)", "scope": "CMHAL", "scopeKind": "class"}, {"_type": "tag", "name": "CMHAL_SetHTTP_Download_Interface", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/CMHAL_Stub/src/CMHAL.cpp", "pattern": "/^void CMHAL::CMHAL_SetHTTP_Download_Interface(IN const Json::Value& req, OUT Json::Value& respons/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(IN const Json::Value & req,OUT Json::Value & response)", "scope": "CMHAL", "scopeKind": "class"}, {"_type": "tag", "name": "CMHAL_SetHTTP_Download_Url", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/CMHAL_Stub/src/CMHAL.cpp", "pattern": "/^void CMHAL::CMHAL_SetHTTP_Download_Url(IN const Json::Value& req, OUT Json::Value& response)$/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(IN const Json::Value & req,OUT Json::Value & response)", "scope": "CMHAL", "scopeKind": "class"}, {"_type": "tag", "name": "CMHAL_SetLEDFlashStatus", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/CMHAL_Stub/src/CMHAL.cpp", "pattern": "/^void CMHAL::CMHAL_SetLEDFlashStatus(IN const Json::Value& req, OUT Json::Value& response)$/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(IN const Json::Value & req,OUT Json::Value & response)", "scope": "CMHAL", "scopeKind": "class"}, {"_type": "tag", "name": "CMHAL_SetMddIpModeOverride", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/CMHAL_Stub/src/CMHAL.cpp", "pattern": "/^void CMHAL::CMHAL_SetMddIpModeOverride(IN const Json::Value& req, OUT Json::Value& response)$/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(IN const Json::Value & req,OUT Json::Value & response)", "scope": "CMHAL", "scopeKind": "class"}, {"_type": "tag", "name": "CMHAL_SetStartFreq", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/CMHAL_Stub/src/CMHAL.cpp", "pattern": "/^void CMHAL::CMHAL_SetStartFreq(IN const Json::Value& req, OUT Json::Value& response)$/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(IN const Json::Value & req,OUT Json::Value & response)", "scope": "CMHAL", "scopeKind": "class"}, {"_type": "tag", "name": "CMHAL_SetUSChannelId", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/CMHAL_Stub/src/CMHAL.cpp", "pattern": "/^void CMHAL::CMHAL_SetUSChannelId(IN const Json::Value& req, OUT Json::Value& response)$/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(IN const Json::Value & req,OUT Json::Value & response)", "scope": "CMHAL", "scopeKind": "class"}, {"_type": "tag", "name": "CreateObject", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/CMHAL_Stub/src/CMHAL.cpp", "pattern": "/^extern \"C\" CMHAL* CreateObject(TcpSocketServer &ptrtcpServer)$/", "language": "C++", "typeref": "typename:CMHAL *", "kind": "function", "signature": "(TcpSocketServer & ptrtcpServer)"}, {"_type": "tag", "name": "DestroyObject", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/CMHAL_Stub/src/CMHAL.cpp", "pattern": "/^extern \"C\" void DestroyObject(CMHAL *stubobj)$/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(CMHAL * stubobj)"}, {"_type": "tag", "name": "cleanup", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/CMHAL_Stub/src/CMHAL.cpp", "pattern": "/^bool CMHAL::cleanup(IN const char* szVersion)$/", "language": "C++", "typeref": "typename:bool", "kind": "function", "signature": "(IN const char * szVersion)", "scope": "CMHAL", "scopeKind": "class"}, {"_type": "tag", "name": "initialize", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/CMHAL_Stub/src/CMHAL.cpp", "pattern": "/^bool CMHAL::initialize(IN const char* szVersion)$/", "language": "C++", "typeref": "typename:bool", "kind": "function", "signature": "(IN const char * szVersion)", "scope": "CMHAL", "scopeKind": "class"}, {"_type": "tag", "name": "testmodulepost_requisites", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/CMHAL_Stub/src/CMHAL.cpp", "pattern": "/^bool CMHAL::testmodulepost_requisites()$/", "language": "C++", "typeref": "typename:bool", "kind": "function", "signature": "()", "scope": "CMHAL", "scopeKind": "class"}, {"_type": "tag", "name": "testmodulepre_requisites", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/CMHAL_Stub/src/CMHAL.cpp", "pattern": "/^std::string CMHAL::testmodulepre_requisites()$/", "language": "C++", "typeref": "typename:std::string", "kind": "function", "signature": "()", "scope": "CMHAL", "scopeKind": "class"}], "hash": "39ac5c2becdf994f875ca04b2c48f944", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "rdkb/tools/tdkb/CMHAL_Stub/src/CMHAL.cpp", "revision_history": [{"18673": ""}]}