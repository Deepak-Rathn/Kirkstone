{"is_source_file": true, "format": "C", "description": "This file contains C source code implementing a library that interfaces with MoCA hardware abstraction APIs. It defines multiple wrapper functions for MoCA HAL API calls related to MoCA interface configuration, statistics, device management, and other utility functions.", "external_files": ["ssp_tdk_mocahal_wrp.h", "moca_GetIfConfig", "moca_SetIfConfig", "moca_IfGetDynamicInfo", "moca_IfGetStaticInfo", "moca_IfGetStats", "moca_GetNumAssociatedDevices", "moca_IfGetExtCounter", "moca_IfGetExtAggrCounter", "moca_GetMocaCPEs", "moca_GetAssociatedDevices", "moca_FreqMaskToValue", "moca_HardwareEquipped", "moca_GetFullMeshRates", "moca_GetFlowStatistics", "moca_GetResetCount", "moca_GetIfAcaConfig", "moca_cancelIfAca", "moca_getIfAcaStatus", "moca_setIfAcaConfig", "moca_getIfScmod"], "external_methods": ["moca_GetIfConfig", "moca_SetIfConfig", "moca_IfGetDynamicInfo", "moca_IfGetStaticInfo", "moca_IfGetStats", "moca_GetNumAssociatedDevices", "moca_IfGetExtCounter", "moca_IfGetExtAggrCounter", "moca_GetMocaCPEs", "moca_GetAssociatedDevices", "moca_FreqMaskToValue", "moca_HardwareEquipped", "moca_GetFullMeshRates", "moca_GetFlowStatistics", "moca_GetResetCount", "moca_GetIfAcaConfig", "moca_cancelIfAca", "moca_getIfAcaStatus", "moca_setIfAcaConfig"], "published": ["ssp_MoCAHAL_GetIfConfig", "ssp_MoCAHAL_SetIfConfig", "ssp_MoCAHAL_IfGetDynamicInfo", "ssp_MoCAHAL_IfGetStaticInfo", "ssp_MoCAHAL_IfGetStats", "ssp_MoCAHAL_GetNumAssociatedDevices", "ssp_MoCAHAL_IfGetExtCounter", "ssp_MoCAHAL_IfGetExtAggrCounter", "ssp_MoCAHAL_GetMocaCPEs", "ssp_MoCAHAL_GetAssociatedDevices", "ssp_MoCAHAL_FreqMaskToValue", "ssp_MoCAHAL_HardwareEquipped", "ssp_MoCAHAL_GetFullMeshRates", "ssp_MoCAHAL_GetFlowStatistics", "ssp_MoCAHAL_GetResetCount", "ssp_MoCAHAL_GetIfAcaConfig", "ssp_MoCAHAL_CancelIfAca", "ssp_MoCAHAL_GetIfAcaStatus", "ssp_MoCAHAL_SetIfAcaConfig", "ssp_MoCAHAL_GetIfScmod"], "classes": [], "methods": [{"name": "int ssp_MoCAHAL_GetIfConfig(unsigned long ifIndex,moca_cfg_t * pmoca_config)", "description": "Wrapper to invoke moca_GetIfConfig() and log entry.", "scope": "", "scopeKind": ""}, {"name": "int ssp_MoCAHAL_SetIfConfig(unsigned long ifIndex,moca_cfg_t * pmoca_config)", "description": "Wrapper to invoke moca_SetIfConfig() and log entry.", "scope": "", "scopeKind": ""}, {"name": "int ssp_MoCAHAL_IfGetDynamicInfo(unsigned long ifIndex,moca_dynamic_info_t * pdynamic_info)", "description": "Wrapper to invoke moca_IfGetDynamicInfo() and log entry.", "scope": "", "scopeKind": ""}, {"name": "int ssp_MoCAHAL_IfGetStaticInfo(unsigned long ifIndex,moca_static_info_t * pstatic_info)", "description": "Wrapper to invoke moca_IfGetStaticInfo() and log entry.", "scope": "", "scopeKind": ""}, {"name": "int ssp_MoCAHAL_IfGetStats(unsigned long ifIndex,moca_stats_t * pmoca_stats)", "description": "Wrapper to invoke moca_IfGetStats() and log entry.", "scope": "", "scopeKind": ""}, {"name": "int ssp_MoCAHAL_GetNumAssociatedDevices(unsigned long ifIndex,ULONG * pulCount)", "description": "Wrapper to invoke moca_GetNumAssociatedDevices() and log entry.", "scope": "", "scopeKind": ""}, {"name": "int ssp_MoCAHAL_IfGetExtCounter(unsigned long ifIndex,moca_mac_counters_t * pmoca_mac_counters)", "description": "Wrapper to invoke moca_IfGetExtCounter() and log entry.", "scope": "", "scopeKind": ""}, {"name": "int ssp_MoCAHAL_IfGetExtAggrCounter(unsigned long ifIndex,moca_aggregate_counters_t * pmoca_aggregate_counts)", "description": "Wrapper to invoke moca_IfGetExtAggrCounter() and log entry.", "scope": "", "scopeKind": ""}, {"name": "int ssp_MoCAHAL_GetMocaCPEs(unsigned long ifIndex,moca_cpe_t * cpes,int * pnum_cpes)", "description": "Wrapper to invoke moca_GetMocaCPEs() and log entry.", "scope": "", "scopeKind": ""}, {"name": "int ssp_MoCAHAL_GetAssociatedDevices(unsigned long ifIndex,moca_associated_device_t ** ppdevice_array)", "description": "Wrapper to invoke moca_GetAssociatedDevices() and log entry.", "scope": "", "scopeKind": ""}, {"name": "int ssp_MoCAHAL_FreqMaskToValue(unsigned char * mask)", "description": "Wrapper to invoke moca_FreqMaskToValue() and log entry.", "scope": "", "scopeKind": ""}, {"name": "int ssp_MoCAHAL_HardwareEquipped()", "description": "Wrapper to invoke moca_HardwareEquipped() and log entry.", "scope": "", "scopeKind": ""}, {"name": "int ssp_MoCAHAL_GetFullMeshRates(unsigned long ifIndex,moca_mesh_table_t * pDeviceArray,ULONG * pulCount)", "description": "Wrapper to invoke moca_GetFullMeshRates() and log entry.", "scope": "", "scopeKind": ""}, {"name": "int ssp_MoCAHAL_GetFlowStatistics(unsigned long ifIndex,moca_flow_table_t * pDeviceArray,unsigned long * pulCount)", "description": "Wrapper to invoke moca_GetFlowStatistics() and log entry.", "scope": "", "scopeKind": ""}, {"name": "int ssp_MoCAHAL_GetResetCount(unsigned long * resetcnt)", "description": "Wrapper to invoke moca_GetResetCount() and log entry.", "scope": "", "scopeKind": ""}, {"name": "int ssp_MoCAHAL_GetIfAcaConfig(int ifIndex,moca_aca_cfg_t * acaCfg)", "description": "Wrapper to invoke moca_GetIfAcaConfig() and log entry.", "scope": "", "scopeKind": ""}, {"name": "int ssp_MoCAHAL_CancelIfAca(int ifIndex)", "description": "Wrapper to invoke moca_cancelIfAca() and log entry.", "scope": "", "scopeKind": ""}, {"name": "int ssp_MoCAHAL_GetIfAcaStatus(int ifIndex,moca_aca_stat_t * acaStatus)", "description": "Wrapper to invoke moca_getIfAcaStatus() and log entry.", "scope": "", "scopeKind": ""}, {"name": "int ssp_MoCAHAL_SetIfAcaConfig(int ifIndex,moca_aca_cfg_t acaCfg)", "description": "Wrapper to invoke moca_setIfAcaConfig() and log entry.", "scope": "", "scopeKind": ""}, {"name": "int ssp_MoCAHAL_GetIfScmod(int ifIndex,int * pNumOfEntries,moca_scmod_stat_t ** ppscmodStat)", "description": "Wrapper to invoke moca_getIfScmod() and log entry.", "scope": "", "scopeKind": ""}], "calls": ["moca_GetIfConfig", "moca_SetIfConfig", "moca_IfGetDynamicInfo", "moca_IfGetStaticInfo", "moca_IfGetStats", "moca_GetNumAssociatedDevices", "moca_IfGetExtCounter", "moca_IfGetExtAggrCounter", "moca_GetMocaCPEs", "moca_GetAssociatedDevices", "moca_FreqMaskToValue", "moca_HardwareEquipped", "moca_GetFullMeshRates", "moca_GetFlowStatistics", "moca_GetResetCount", "moca_GetIfAcaConfig", "moca_cancelIfAca", "moca_getIfAcaStatus", "moca_setIfAcaConfig", "moca_getIfScmod"], "search-terms": ["MoCA HAL wrapper", "moca_config", "moca_statistics", "MoCA interface", "Moca CPEs", "Moca mesh rates", "Aca config"], "state": 2, "file_id": 5574, "knowledge_revision": 18692, "git_revision": "", "ctags": [{"_type": "tag", "name": "ssp_MoCAHAL_CancelIfAca", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/tdkb_lib/src/ssp_tdk_mocahal_wrp.c", "pattern": "/^int ssp_MoCAHAL_CancelIfAca(int ifIndex)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(int ifIndex)"}, {"_type": "tag", "name": "ssp_MoCAHAL_FreqMaskToValue", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/tdkb_lib/src/ssp_tdk_mocahal_wrp.c", "pattern": "/^int ssp_MoCAHAL_FreqMaskToValue(unsigned char* mask)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(unsigned char * mask)"}, {"_type": "tag", "name": "ssp_MoCAHAL_GetAssociatedDevices", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/tdkb_lib/src/ssp_tdk_mocahal_wrp.c", "pattern": "/^int ssp_MoCAHAL_GetAssociatedDevices(unsigned long ifIndex, moca_associated_device_t **ppdevice_/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(unsigned long ifIndex,moca_associated_device_t ** ppdevice_array)"}, {"_type": "tag", "name": "ssp_MoCAHAL_GetFlowStatistics", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/tdkb_lib/src/ssp_tdk_mocahal_wrp.c", "pattern": "/^int ssp_MoCAHAL_GetFlowStatistics(unsigned long ifIndex, moca_flow_table_t *pDeviceArray, unsign/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(unsigned long ifIndex,moca_flow_table_t * pDeviceArray,unsigned long * pulCount)"}, {"_type": "tag", "name": "ssp_MoCAHAL_GetFullMeshRates", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/tdkb_lib/src/ssp_tdk_mocahal_wrp.c", "pattern": "/^int ssp_MoCAHAL_GetFullMeshRates(unsigned long ifIndex, moca_mesh_table_t *pDeviceArray, ULONG */", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(unsigned long ifIndex,moca_mesh_table_t * pDeviceArray,ULONG * pulCount)"}, {"_type": "tag", "name": "ssp_MoCAHAL_GetIfAcaConfig", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/tdkb_lib/src/ssp_tdk_mocahal_wrp.c", "pattern": "/^int ssp_MoCAHAL_GetIfAcaConfig(int ifIndex, moca_aca_cfg_t *acaCfg)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(int ifIndex,moca_aca_cfg_t * acaCfg)"}, {"_type": "tag", "name": "ssp_MoCAHAL_GetIfAcaStatus", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/tdkb_lib/src/ssp_tdk_mocahal_wrp.c", "pattern": "/^int ssp_MoCAHAL_GetIfAcaStatus(int ifIndex, moca_aca_stat_t *acaStatus)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(int ifIndex,moca_aca_stat_t * acaStatus)"}, {"_type": "tag", "name": "ssp_MoCAHAL_GetIfConfig", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/tdkb_lib/src/ssp_tdk_mocahal_wrp.c", "pattern": "/^int ssp_MoCAHAL_GetIfConfig(unsigned long ifIndex, moca_cfg_t *pmoca_config)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(unsigned long ifIndex,moca_cfg_t * pmoca_config)"}, {"_type": "tag", "name": "ssp_MoCAHAL_GetIfScmod", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/tdkb_lib/src/ssp_tdk_mocahal_wrp.c", "pattern": "/^int ssp_MoCAHAL_GetIfScmod(int ifIndex, int *pNumOfEntries, moca_scmod_stat_t **ppscmodStat)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(int ifIndex,int * pNumOfEntries,moca_scmod_stat_t ** ppscmodStat)"}, {"_type": "tag", "name": "ssp_MoCAHAL_GetMocaCPEs", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/tdkb_lib/src/ssp_tdk_mocahal_wrp.c", "pattern": "/^int ssp_MoCAHAL_GetMocaCPEs(unsigned long ifIndex, moca_cpe_t *cpes, int *pnum_cpes)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(unsigned long ifIndex,moca_cpe_t * cpes,int * pnum_cpes)"}, {"_type": "tag", "name": "ssp_MoCAHAL_GetNumAssociatedDevices", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/tdkb_lib/src/ssp_tdk_mocahal_wrp.c", "pattern": "/^int ssp_MoCAHAL_GetNumAssociatedDevices(unsigned long ifIndex, ULONG *pulCount)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(unsigned long ifIndex,ULONG * pulCount)"}, {"_type": "tag", "name": "ssp_MoCAHAL_GetResetCount", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/tdkb_lib/src/ssp_tdk_mocahal_wrp.c", "pattern": "/^int ssp_MoCAHAL_GetResetCount(unsigned long *resetcnt)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(unsigned long * resetcnt)"}, {"_type": "tag", "name": "ssp_MoCAHAL_HardwareEquipped", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/tdkb_lib/src/ssp_tdk_mocahal_wrp.c", "pattern": "/^int ssp_MoCAHAL_HardwareEquipped()$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "ssp_MoCAHAL_IfGetDynamicInfo", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/tdkb_lib/src/ssp_tdk_mocahal_wrp.c", "pattern": "/^int ssp_MoCAHAL_IfGetDynamicInfo(unsigned long ifIndex, moca_dynamic_info_t *pdynamic_info)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(unsigned long ifIndex,moca_dynamic_info_t * pdynamic_info)"}, {"_type": "tag", "name": "ssp_MoCAHAL_IfGetExtAggrCounter", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/tdkb_lib/src/ssp_tdk_mocahal_wrp.c", "pattern": "/^int ssp_MoCAHAL_IfGetExtAggrCounter(unsigned long ifIndex, moca_aggregate_counters_t *pmoca_aggr/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(unsigned long ifIndex,moca_aggregate_counters_t * pmoca_aggregate_counts)"}, {"_type": "tag", "name": "ssp_MoCAHAL_IfGetExtCounter", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/tdkb_lib/src/ssp_tdk_mocahal_wrp.c", "pattern": "/^int ssp_MoCAHAL_IfGetExtCounter(unsigned long ifIndex, moca_mac_counters_t *pmoca_mac_counters)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(unsigned long ifIndex,moca_mac_counters_t * pmoca_mac_counters)"}, {"_type": "tag", "name": "ssp_MoCAHAL_IfGetStaticInfo", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/tdkb_lib/src/ssp_tdk_mocahal_wrp.c", "pattern": "/^int ssp_MoCAHAL_IfGetStaticInfo(unsigned long ifIndex, moca_static_info_t *pstatic_info)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(unsigned long ifIndex,moca_static_info_t * pstatic_info)"}, {"_type": "tag", "name": "ssp_MoCAHAL_IfGetStats", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/tdkb_lib/src/ssp_tdk_mocahal_wrp.c", "pattern": "/^int ssp_MoCAHAL_IfGetStats(unsigned long ifIndex, moca_stats_t *pmoca_stats)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(unsigned long ifIndex,moca_stats_t * pmoca_stats)"}, {"_type": "tag", "name": "ssp_MoCAHAL_SetIfAcaConfig", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/tdkb_lib/src/ssp_tdk_mocahal_wrp.c", "pattern": "/^int ssp_MoCAHAL_SetIfAcaConfig(int ifIndex, moca_aca_cfg_t acaCfg)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(int ifIndex,moca_aca_cfg_t acaCfg)"}, {"_type": "tag", "name": "ssp_MoCAHAL_SetIfConfig", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/tdkb_lib/src/ssp_tdk_mocahal_wrp.c", "pattern": "/^int ssp_MoCAHAL_SetIfConfig(unsigned long ifIndex, moca_cfg_t *pmoca_config)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(unsigned long ifIndex,moca_cfg_t * pmoca_config)"}], "hash": "be7066e034b08ac4de6c5f76db6d0abc", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "rdkb/tools/tdkb/tdkb_lib/src/ssp_tdk_mocahal_wrp.c", "revision_history": [{"18692": ""}]}