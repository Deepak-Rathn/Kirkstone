{"is_source_file": true, "format": "C", "description": "This file contains utility functions for DHCP client management, including process signaling, process collection, process identification, argument parsing, and process launching. It also includes resource cleanup functions related to DHCP options.", "external_files": ["dhcp_client_utils.h"], "external_methods": ["kill", "waitpid", "usleep", "strtoll", "strrchr", "strlen", "strcmp", "fopen", "fscanf", "fclose", "fread", "memset", "snprintf", "malloc", "calloc", "free", "strncpy", "signal", "execv", "opendir", "readdir", "closedir", "sigemptyset", "sigaddset", "sigprocmask", "sigaction", "open", "close", "dup2", "strerror", "errno", "getpid"], "published": ["signal_process", "collect_waiting_process", "get_process_pid", "start_exe", "start_exe2", "free_opt_list_data"], "classes": [], "methods": [{"name": "int signal_process(pid_t pid,int signal)", "description": "Sends a signal to the specified process ID to control process behavior, typically used to terminate or signal a process.", "scope": "", "scopeKind": ""}, {"name": "int collect_waiting_process(int pid,int timeout)", "description": "Waits for a process with specified pid to terminate within a given timeout, handling zombie processes.", "scope": "", "scopeKind": ""}, {"name": "pid_t get_process_pid(char * name,char * args,bool waitForProcEntry)", "description": "Finds and returns the PID of a running process by name and optional arguments, with an option to wait for process appearance.", "scope": "", "scopeKind": ""}, {"name": "pid_t start_exe(char * exe,char * args)", "description": "Creates a new process to run a specified executable with arguments, handles process forking and executing via execv.", "scope": "", "scopeKind": ""}, {"name": "pid_t start_exe2(char * exe,char * args)", "description": "Starts a process with additional signal handling and process isolation features.", "scope": "", "scopeKind": ""}, {"name": "void free_opt_list_data(dhcp_opt_list * opt_list)", "description": "Frees the dynamically allocated DHCP option list to prevent memory leaks.", "scope": "", "scopeKind": ""}, {"name": "int check_proc_entry_for_pid(char * name,char * args)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int find_strstr(char * basestr,int basestr_len,char * substr,int substr_len)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "void freeArgs(char ** argv)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int parseArgs(const char * cmd,const char * args,char *** argv)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int strtol64(const char * str,char ** endptr,int32_t base,int64_t * val)", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["kill", "waitpid", "usleep", "strtoll", "snprintf", "fopen", "fscanf", "fclose", "fread", "memset", "strrchr", "strlen", "strcmp", "malloc", "calloc", "free", "signal", "execv", "opendir", "readdir", "closedir", "sigemptyset", "sigaddset", "sigprocmask", "sigaction", "open", "close", "dup2", "strerror", "getpid"], "search-terms": ["DHCPClientUtils", "collect_waiting_process", "check_proc_entry_for_pid", "parseArgs", "start_exe", "start_exe2", "free_opt_list_data", "signal_process", "get_process_pid"], "state": 2, "file_id": 6288, "knowledge_revision": 19390, "git_revision": "", "ctags": [{"_type": "tag", "name": "check_proc_entry_for_pid", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/DhcpManager/source/DHCPClientUtils/DHCPv4Client/dhcp_client_common.c", "pattern": "/^static int check_proc_entry_for_pid (char * name, char * args)$/", "file": true, "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(char * name,char * args)"}, {"_type": "tag", "name": "collect_waiting_process", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/DhcpManager/source/DHCPClientUtils/DHCPv4Client/dhcp_client_common.c", "pattern": "/^int collect_waiting_process(int pid, int timeout)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(int pid,int timeout)"}, {"_type": "tag", "name": "find_strstr", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/DhcpManager/source/DHCPClientUtils/DHCPv4Client/dhcp_client_common.c", "pattern": "/^int find_strstr (char * basestr, int basestr_len, char * substr, int substr_len)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(char * basestr,int basestr_len,char * substr,int substr_len)"}, {"_type": "tag", "name": "freeArgs", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/DhcpManager/source/DHCPClientUtils/DHCPv4Client/dhcp_client_common.c", "pattern": "/^static void freeArgs(char **argv)$/", "file": true, "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(char ** argv)"}, {"_type": "tag", "name": "free_opt_list_data", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/DhcpManager/source/DHCPClientUtils/DHCPv4Client/dhcp_client_common.c", "pattern": "/^void free_opt_list_data (dhcp_opt_list * opt_list)$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(dhcp_opt_list * opt_list)"}, {"_type": "tag", "name": "get_process_pid", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/DhcpManager/source/DHCPClientUtils/DHCPv4Client/dhcp_client_common.c", "pattern": "/^pid_t get_process_pid (char * name, char * args, bool waitForProcEntry)$/", "language": "C", "typeref": "typename:pid_t", "kind": "function", "signature": "(char * name,char * args,bool waitForProcEntry)"}, {"_type": "tag", "name": "parseArgs", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/DhcpManager/source/DHCPClientUtils/DHCPv4Client/dhcp_client_common.c", "pattern": "/^static int parseArgs(const char *cmd, const char *args, char ***argv)$/", "file": true, "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(const char * cmd,const char * args,char *** argv)"}, {"_type": "tag", "name": "signal_process", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/DhcpManager/source/DHCPClientUtils/DHCPv4Client/dhcp_client_common.c", "pattern": "/^int signal_process (pid_t pid, int signal)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(pid_t pid,int signal)"}, {"_type": "tag", "name": "start_exe", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/DhcpManager/source/DHCPClientUtils/DHCPv4Client/dhcp_client_common.c", "pattern": "/^pid_t start_exe(char * exe, char * args)$/", "language": "C", "typeref": "typename:pid_t", "kind": "function", "signature": "(char * exe,char * args)"}, {"_type": "tag", "name": "start_exe2", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/DhcpManager/source/DHCPClientUtils/DHCPv4Client/dhcp_client_common.c", "pattern": "/^pid_t start_exe2(char * exe, char * args)$/", "language": "C", "typeref": "typename:pid_t", "kind": "function", "signature": "(char * exe,char * args)"}, {"_type": "tag", "name": "strtol64", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/DhcpManager/source/DHCPClientUtils/DHCPv4Client/dhcp_client_common.c", "pattern": "/^static int strtol64(const char *str, char **endptr, int32_t base, int64_t *val)$/", "file": true, "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(const char * str,char ** endptr,int32_t base,int64_t * val)"}], "hash": "00c54ba9b08c844e28cc71064902ac02", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "rdkb/components/opensource/ccsp/DhcpManager/source/DHCPClientUtils/DHCPv4Client/dhcp_client_common.c", "revision_history": [{"19390": ""}]}