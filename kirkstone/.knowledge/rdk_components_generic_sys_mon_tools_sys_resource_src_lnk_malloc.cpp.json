{"is_source_file": true, "format": "C++", "description": "This source file implements custom memory allocation functions that override standard malloc, calloc, realloc, free, memalign, valloc, and posix_memalign. It integrates with external malloc implementations and provides additional logging, locking, and conditional memory allocation behavior for a system monitoring tool.", "external_files": ["mlt_malloc.h", "lnk_malloc.h", "debugRecord.h", "logFileDescr.h", "procInfo.h", "countedFlag.h"], "external_methods": ["dlsym", "pthread_mutex_lock", "pthread_mutex_unlock", "getpid", "fileExists", "system", "dlerror"], "published": ["malloc", "calloc", "realloc", "free", "memalign", "valloc", "posix_memalign"], "classes": [], "methods": [{"name": "void __std_malloc_attr std_malloc_ctor()", "description": "Initializes function pointers for standard memory allocation functions and performs setup tasks such as reading memory maps.", "scope": "", "scopeKind": ""}, {"name": "void * malloc(size_t size)", "description": "Custom malloc implementation that decides whether to delegate to mlt_malloc or the standard malloc based on caller address and flag.", "scope": "", "scopeKind": ""}, {"name": "void free(void * p)", "description": "Custom free implementation that delegates to mlt_free or standard free depending on caller address and flags.", "scope": "", "scopeKind": ""}, {"name": "void * calloc(size_t num,size_t size)", "description": "Custom calloc implementation that delegates to mlt_calloc or standard calloc.", "scope": "", "scopeKind": ""}, {"name": "void * realloc(void * p,size_t size)", "description": "Custom realloc implementation that delegates to mlt_realloc or standard realloc.", "scope": "", "scopeKind": ""}, {"name": "void * memalign(size_t alignment,size_t size)", "description": "Custom memalign implementation that delegates to std_memalign.", "scope": "", "scopeKind": ""}, {"name": "void * valloc(size_t size)", "description": "Custom valloc implementation that delegates to std_valloc.", "scope": "", "scopeKind": ""}, {"name": "int posix_memalign(void ** memptr,size_t alignment,size_t size)", "description": "Custom posix_memalign implementation that delegates to std_posix_memalign.", "scope": "", "scopeKind": ""}], "calls": ["dlsym", "pthread_mutex_lock", "pthread_mutex_unlock", "mlt_malloc", "mlt_calloc", "mlt_realloc", "mlt_free", "std_malloc", "std_calloc", "std_realloc", "std_free", "std_memalign", "std_valloc", "std_posix_memalign", "__builtin_return_address", "fileExists", "system", "getpid"], "search-terms": ["lnk_malloc", "custom malloc", "memory hook", "memory override", "system monitor memory", "dlsym malloc", "thread safety memory"], "state": 2, "file_id": 12525, "knowledge_revision": 25420, "git_revision": "", "ctags": [{"_type": "tag", "name": "DEBUG_LNKM", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/sys_mon_tools/sys_resource/src/lnk_malloc.cpp", "pattern": "/^#define\tDEBUG_LNKM(/", "file": true, "language": "C++", "kind": "macro", "signature": "(x)"}, {"_type": "tag", "name": "DEBUG_LNKM_ENABLE", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/sys_mon_tools/sys_resource/src/lnk_malloc.cpp", "pattern": "/^#define\tDEBUG_LNKM_ENABLE\t/", "file": true, "language": "C++", "kind": "macro"}, {"_type": "tag", "name": "calloc", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/sys_mon_tools/sys_resource/src/lnk_malloc.cpp", "pattern": "/^void* calloc(size_t num, size_t size) $/", "language": "C++", "typeref": "typename:void *", "kind": "function", "signature": "(size_t num,size_t size)"}, {"_type": "tag", "name": "disable_mlt_malloc", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/sys_mon_tools/sys_resource/src/lnk_malloc.cpp", "pattern": "/^CountedFlag disable_mlt_malloc = false;$/", "language": "C++", "typeref": "typename:CountedFlag", "kind": "variable"}, {"_type": "tag", "name": "free", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/sys_mon_tools/sys_resource/src/lnk_malloc.cpp", "pattern": "/^void free(void *p) $/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(void * p)"}, {"_type": "tag", "name": "lock", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/sys_mon_tools/sys_resource/src/lnk_malloc.cpp", "pattern": "/^#define lock(/", "file": true, "language": "C++", "kind": "macro", "signature": "()"}, {"_type": "tag", "name": "malloc", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/sys_mon_tools/sys_resource/src/lnk_malloc.cpp", "pattern": "/^void* malloc(size_t size) $/", "language": "C++", "typeref": "typename:void *", "kind": "function", "signature": "(size_t size)"}, {"_type": "tag", "name": "memalign", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/sys_mon_tools/sys_resource/src/lnk_malloc.cpp", "pattern": "/^void* memalign(size_t alignment, size_t size) $/", "language": "C++", "typeref": "typename:void *", "kind": "function", "signature": "(size_t alignment,size_t size)"}, {"_type": "tag", "name": "posix_memalign", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/sys_mon_tools/sys_resource/src/lnk_malloc.cpp", "pattern": "/^int posix_memalign(void **memptr, size_t alignment, size_t size) $/", "language": "C++", "typeref": "typename:int", "kind": "function", "signature": "(void ** memptr,size_t alignment,size_t size)"}, {"_type": "tag", "name": "realloc", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/sys_mon_tools/sys_resource/src/lnk_malloc.cpp", "pattern": "/^void* realloc(void *p, size_t size) $/", "language": "C++", "typeref": "typename:void *", "kind": "function", "signature": "(void * p,size_t size)"}, {"_type": "tag", "name": "std_calloc", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/sys_mon_tools/sys_resource/src/lnk_malloc.cpp", "pattern": "/^calloc_call\t\tstd_calloc;$/", "language": "C++", "typeref": "typename:calloc_call", "kind": "variable"}, {"_type": "tag", "name": "std_free", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/sys_mon_tools/sys_resource/src/lnk_malloc.cpp", "pattern": "/^free_call\t\tstd_free;$/", "language": "C++", "typeref": "typename:free_call", "kind": "variable"}, {"_type": "tag", "name": "std_malloc", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/sys_mon_tools/sys_resource/src/lnk_malloc.cpp", "pattern": "/^malloc_call\t\tstd_malloc;$/", "language": "C++", "typeref": "typename:malloc_call", "kind": "variable"}, {"_type": "tag", "name": "std_malloc_ctor", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/sys_mon_tools/sys_resource/src/lnk_malloc.cpp", "pattern": "/^void __std_malloc_attr std_malloc_ctor() $/", "language": "C++", "typeref": "typename:void __std_malloc_attr", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "std_memalign", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/sys_mon_tools/sys_resource/src/lnk_malloc.cpp", "pattern": "/^memalign_call\t\tstd_memalign;$/", "language": "C++", "typeref": "typename:memalign_call", "kind": "variable"}, {"_type": "tag", "name": "std_memalign_end", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/sys_mon_tools/sys_resource/src/lnk_malloc.cpp", "pattern": "/^static unsigned int\tstd_memalign_end=0;$/", "file": true, "language": "C++", "typeref": "typename:unsigned int", "kind": "variable"}, {"_type": "tag", "name": "std_memalign_size", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/sys_mon_tools/sys_resource/src/lnk_malloc.cpp", "pattern": "/^static const unsigned int std_memalign_size=592;$/", "file": true, "language": "C++", "typeref": "typename:const unsigned int", "kind": "variable"}, {"_type": "tag", "name": "std_posix_memalign", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/sys_mon_tools/sys_resource/src/lnk_malloc.cpp", "pattern": "/^posix_memalign_call\tstd_posix_memalign;$/", "language": "C++", "typeref": "typename:posix_memalign_call", "kind": "variable"}, {"_type": "tag", "name": "std_realloc", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/sys_mon_tools/sys_resource/src/lnk_malloc.cpp", "pattern": "/^realloc_call\t\tstd_realloc;$/", "language": "C++", "typeref": "typename:realloc_call", "kind": "variable"}, {"_type": "tag", "name": "std_valloc", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/sys_mon_tools/sys_resource/src/lnk_malloc.cpp", "pattern": "/^valloc_call\t\tstd_valloc;$/", "language": "C++", "typeref": "typename:valloc_call", "kind": "variable"}, {"_type": "tag", "name": "unlock", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/sys_mon_tools/sys_resource/src/lnk_malloc.cpp", "pattern": "/^#define unlock(/", "file": true, "language": "C++", "kind": "macro", "signature": "()"}, {"_type": "tag", "name": "valloc", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/sys_mon_tools/sys_resource/src/lnk_malloc.cpp", "pattern": "/^void* valloc(size_t size) $/", "language": "C++", "typeref": "typename:void *", "kind": "function", "signature": "(size_t size)"}], "hash": "f4c4aaa0f018835a6bc1287d5adbf8be", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "rdk/components/generic/sys_mon_tools/sys_resource/src/lnk_malloc.cpp", "fields": [{"name": "CountedFlag disable_mlt_malloc", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "calloc_call std_calloc", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "free_call std_free", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "malloc_call std_malloc", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "memalign_call std_memalign", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "unsigned int std_memalign_end", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "const unsigned int std_memalign_size", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "posix_memalign_call std_posix_memalign", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "realloc_call std_realloc", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "valloc_call std_valloc", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"25420": ""}]}