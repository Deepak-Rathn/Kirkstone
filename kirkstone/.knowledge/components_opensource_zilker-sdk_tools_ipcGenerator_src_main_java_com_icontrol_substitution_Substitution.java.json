{"is_source_file": true, "format": "Java", "description": "This file defines the 'Substitution' class, a utility for variable substitution within strings, supporting macros, external sources, and method executions. It includes internal handling of built-in variables like ${TODAY}, and mechanisms for resolving variable methods, macros, and legacy syntax.", "external_files": ["org.slf4j.Logger", "org.slf4j.LoggerFactory", "com.icontrol.substitution.macro.ExpressionFactory", "com.icontrol.substitution.macro.InvalidMacroException", "com.icontrol.substitution.macro.Macro", "com.icontrol.substitution.macro.MacroExpression"], "external_methods": ["org.slf4j.LoggerFactory.getLogger", "ExpressionFactory.parseMacro", "ExpressionFactory.parseMacroLine"], "published": ["com.icontrol.substitution.Substitution", "com.icontrol.substitution.Substitution.copySubstitution", "com.icontrol.substitution.Substitution.addGlobalMethodResolver", "com.icontrol.substitution.Substitution.setIgnoreMacros", "com.icontrol.substitution.Substitution.substitute", "com.icontrol.substitution.Substitution.translate", "com.icontrol.substitution.Substitution.legacySubstitute", "com.icontrol.substitution.Substitution.evaluate"], "classes": [{"name": "Substitution", "description": "Main class providing variable substitution functionality including macro parsing, variable resolution, and method execution."}, {"name": "InternalSource", "description": "Private static class implementing SubstitutionSource for internal variables such as TODAY, YESTERDAY, TOMORROW, TEMP_DIR, and RANDOM."}], "methods": [{"name": "copySubstitution", "description": "Creates a copy of an existing Substitution object, excluding internal sources and global resolvers as needed."}, {"name": "addGlobalMethodResolver", "description": "Adds a method resolver to the static global list, making it available to all Substitution instances."}, {"name": "substitute", "description": "Performs substitution on input string, processing variables, macros, and legacy syntax."}, {"name": "translate", "description": "Resolves a variable, executing attached methods if present, and retrieves its value from sources."}, {"name": "legacySubstitute", "description": "Handles substitution for legacy syntax using '@variable@' format."}, {"name": "evaluate", "description": "Parses and evaluates a macro expression line, primarily for macro conditions."}], "calls": ["ExpressionFactory.parseMacro", "ExpressionFactory.parseMacroLine", "macro.evaluateMacro"], "search-terms": ["substitution", "macro", "variable resolution", "macro parsing", "method execution", "internal variables", "string substitution Java", "macro evaluation"], "state": 2, "file_id": 532, "knowledge_revision": 13712, "git_revision": "", "hash": "9d98fd15d3bf96a0738733c17205ab36", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "components/opensource/zilker-sdk/tools/ipcGenerator/src/main/java/com/icontrol/substitution/Substitution.java", "revision_history": [{"13712": ""}]}