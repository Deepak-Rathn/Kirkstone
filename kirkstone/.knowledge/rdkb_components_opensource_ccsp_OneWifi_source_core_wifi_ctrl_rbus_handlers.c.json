{"is_source_file": true, "format": "C source code", "description": "This file contains implementations of functions that handle various WiFi control operations using RBus inter-process communication, including event subscriptions, notifications, and data retrieval related to WiFi clients, access points, tunnel status, and device modes.", "external_files": ["const.h", "log.h", "wifi_passpoint.h", "wifi_hal.h", "wifi_ctrl.h", "wifi_mgr.h", "wifi_util.h", "msgpack.h", "wifi_monitor.h", "rbus.h"], "external_methods": ["rbusEvent_Publish", "rbusObject_Init", "rbusObject_SetValue", "rbusEvent_Subscribe", "rbusEvent_SubscribeExAsync", "rbus_get", "rbus_setStr", "rbus_getStr", "rbus_getBytes", "rbusValue_Init", "rbusValue_SetString", "rbusValue_SetBytes", "rbusValue_SetBoolean", "rbusValue_SetUInt32", "rbusValue_GetString", "rbusValue_GetBoolean", "rbusValue_GetUInt32", "rbusObject_Release", "rbusValue_Release", "rbusProperty_GetName", "rbusProperty_GetValue", "rbusProperty_SetValue", "rbusEvent_t", "rbusEventSubscription_t", "rbusError_t", "rbusHandle_t"], "published": ["get_assoc_clients_data", "get_null_subdoc_data", "get_sta_disconnection", "set_sta_disconnection", "set_kickassoc_command", "set_wifiapi_command", "wifiapi_result_publish", "get_assoc_devices_blob", "get_acl_device_data", "get_private_vap", "get_home_vap", "eventSubHandler", "rbus_subscribe_events", "get_sta_connection_timeout", "get_sta_attribs", "events_STAtable_removerowhandler", "events_STAtable_addrowhandler", "webconfig_get_subdoc", "webconfig_get_dml_subdoc", "webconfig_set_subdoc", "webconfig_rbus_apply", "webconfig_rbus_apply_for_dml_thread_update", "speed_test_handler", "update_speedtest_tout_value"], "classes": [], "methods": [{"name": "rbusError_t webconfig_get_subdoc(rbusHandle_t handle,rbusProperty_t property,rbusGetHandlerOptions_t * opts)", "description": "Handles get requests for websocket config subdocuments, providing encoded JSON data for radios, configs, and capabilities depending on the device mode (gateway or extender).", "scope": "", "scopeKind": ""}, {"name": "rbusError_t webconfig_get_dml_subdoc(rbusHandle_t handle,rbusProperty_t property,rbusGetHandlerOptions_t * opts)", "description": "Handles get requests for DML subdocuments, providing encoded data for radios, configs, and capabilities.", "scope": "", "scopeKind": ""}, {"name": "rbusError_t webconfig_set_subdoc(rbusHandle_t handle,rbusProperty_t property,rbusSetHandlerOptions_t * opts)", "description": "Handles set requests for websocket config subdocuments, processing incoming encoded JSON commands.", "scope": "", "scopeKind": ""}, {"name": "int webconfig_rbus_apply(wifi_ctrl_t * ctrl,webconfig_subdoc_encoded_data_t * data)", "description": "Publishes webconfig data as an RBUS event to apply configuration changes.", "scope": "", "scopeKind": ""}, {"name": "int webconfig_rbus_apply_for_dml_thread_update(wifi_ctrl_t * ctrl,webconfig_subdoc_encoded_data_t * data)", "description": "Publishes DML data to RBUS for thread-safe updates.", "scope": "", "scopeKind": ""}, {"name": "rbusError_t get_assoc_clients_data(rbusHandle_t handle,rbusProperty_t property,rbusGetHandlerOptions_t * opts)", "description": "Retrieves data about associated clients for a specific radio and encodes it as a JSON string.", "scope": "", "scopeKind": ""}, {"name": "rbusError_t get_null_subdoc_data(rbusHandle_t handle,rbusProperty_t property,rbusGetHandlerOptions_t * opts)", "description": "Provides a null (empty) subdocument, mainly for resetting or initializing devices.", "scope": "", "scopeKind": ""}, {"name": "rbusError_t get_sta_disconnection(rbusHandle_t handle,rbusProperty_t property,rbusGetHandlerOptions_t * opts)", "description": "Returns current disconnection state for STA, primarily for polling or status checks.", "scope": "", "scopeKind": ""}, {"name": "rbusError_t set_sta_disconnection(rbusHandle_t handle,rbusProperty_t property,rbusSetHandlerOptions_t * opts)", "description": "Sets disconnection state for STA, typically to trigger disconnects.", "scope": "", "scopeKind": ""}, {"name": "rbusError_t set_kickassoc_command(rbusHandle_t handle,rbusProperty_t property,rbusSetHandlerOptions_t * opts)", "description": "Sends a command to kick specific associated devices.", "scope": "", "scopeKind": ""}, {"name": "rbusError_t set_wifiapi_command(rbusHandle_t handle,rbusProperty_t property,rbusSetHandlerOptions_t * opts)", "description": "Sends a command for WiFi API execution, such as configuration or reset.", "scope": "", "scopeKind": ""}, {"name": "int wifiapi_result_publish(void)", "description": "Publishes the result of a WiFi API command over RBUS.", "scope": "", "scopeKind": ""}, {"name": "char * get_assoc_devices_blob()", "description": "Retrieves a large blob of data representing associated devices for telemetry/diagnostic purposes.", "scope": "", "scopeKind": ""}, {"name": "rbusError_t get_acl_device_data(rbusHandle_t handle,rbusProperty_t property,rbusGetHandlerOptions_t * opts)", "description": "Retrieves Access Control List device data for filtering or management.", "scope": "", "scopeKind": ""}, {"name": "rbusError_t get_private_vap(rbusHandle_t handle,rbusProperty_t property,rbusSetHandlerOptions_t * opts)", "description": "Handler for setting private VAP (Virtual Access Point) configuration.", "scope": "", "scopeKind": ""}, {"name": "rbusError_t get_home_vap(rbusHandle_t handle,rbusProperty_t property,rbusSetHandlerOptions_t * opts)", "description": "Handler for setting home VAP configuration.", "scope": "", "scopeKind": ""}, {"name": "rbusError_t eventSubHandler(rbusHandle_t handle,rbusEventSubAction_t action,const char * eventName,rbusFilter_t filter,int32_t interval,bool * autoPublish)", "description": "Generic handler for subscription event success or failure, with special handling for the SPEEDTEST_SUBSCRIBE.", "scope": "", "scopeKind": ""}, {"name": "void rbus_subscribe_events(wifi_ctrl_t * ctrl)", "description": "Subscribes to various RBUS events such as RSSI, SNR, WiFi stats, tunnel, mesh, and device mode status.", "scope": "", "scopeKind": ""}, {"name": "rbusError_t get_sta_connection_timeout(rbusHandle_t handle,rbusProperty_t property,rbusGetHandlerOptions_t * opts)", "description": "Gets the STA connection timeout value for a specific radio.", "scope": "", "scopeKind": ""}, {"name": "rbusError_t get_sta_attribs(rbusHandle_t handle,rbusProperty_t property,rbusGetHandlerOptions_t * opts)", "description": "Retrieves various station attributes like connection status, BSSID, or interface name based on the request.", "scope": "", "scopeKind": ""}, {"name": "rbusError_t events_STAtable_removerowhandler(rbusHandle_t handle,char const * rowName)", "description": "Handler for removing a row from the STA table, updating instance count.", "scope": "", "scopeKind": ""}, {"name": "rbusError_t events_STAtable_addrowhandler(rbusHandle_t handle,char const * tableName,char const * aliasName,uint32_t * instNum)", "description": "Handler for adding a row to the STA table, incrementing instance count.", "scope": "", "scopeKind": ""}, {"name": "webconfig_get_subdoc", "description": "Main handler for 'subdoc' get requests, providing encoded configuration for radios, configs, etc."}, {"name": "webconfig_get_dml_subdoc", "description": "Handler for DML-specific subdocument get requests providing current configuration info."}, {"name": "webconfig_set_subdoc", "description": "Handler for setting subdocument data via RBUS, processing incoming configuration commands."}, {"name": "void speed_test_handler(rbusHandle_t handle,rbusEvent_t const * event,rbusEventSubscription_t * subscription)", "description": "Handles speed test related events, updating internal control flags and pushing data to control queue.", "scope": "", "scopeKind": ""}, {"name": "void update_speedtest_tout_value()", "description": "Retrieves and updates speed test timeout value from RBUS.", "scope": "", "scopeKind": ""}, {"name": "eventSubHandler", "description": "Handles event subscription and unsubscription for WiFi related events, managing internal data buffers and logging, with specific handling for diagnostics, connection, and disconnection events."}, {"name": "rbusError_t ap_get_handler(rbusHandle_t handle,rbusProperty_t property,rbusGetHandlerOptions_t * opts)", "description": "Handles get requests for WiFi Access Point diagnostic data via RBUS, retrieving cached JSON buffers or generating new data if needed.", "scope": "", "scopeKind": ""}, {"name": "rbusError_t ap_table_addrowhandler(rbusHandle_t handle,char const * tableName,char const * aliasName,uint32_t * instNum)", "description": "Adds new rows to the WiFi Access Point table, representing different event types such as device connection, disconnection, deauthentication, and diagnostics.", "scope": "", "scopeKind": ""}, {"name": "rbusError_t ap_table_removerowhandler(rbusHandle_t handle,char const * rowName)", "description": "Removes specific rows from the WiFi Access Point table based on the row name.", "scope": "", "scopeKind": ""}, {"name": "BOOL events_getSubscribed(char * eventName)", "description": "Checks if a specific event is currently subscribed by examining the internal queue of event elements.", "scope": "", "scopeKind": ""}, {"name": "int events_rbus_publish(wifi_event_t * evt)", "description": "Publishes WiFi events over RBUS based on the event data, converting internal event representations into RBUS notifications with proper attributes and locking.", "scope": "", "scopeKind": ""}, {"name": "rbusError_t get_client_assoc_request_multi(rbusHandle_t handle,char const * methodName,rbusObject_t inParams,rbusObject_t outParams,rbusMethodAsyncHandle_t asyncHandle)", "description": "Retrieves the Association Request frame data for a specific client based on MAC address, associated with a particular VAP index, and publishes it via RBUS.", "scope": "", "scopeKind": ""}, {"name": "void rbus_register_handlers(wifi_ctrl_t * ctrl)", "description": "Registers various RBUS data elements, methods, and events related to WiFi control, including dynamic table rows for access points and subscriptions, initializing communication with RBUS.", "scope": "", "scopeKind": ""}, {"name": "void MarkerListConfigHandler(rbusHandle_t handle,rbusEvent_t const * event,rbusEventSubscription_t * subscription)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "void activeGatewayCheckHandler(rbusHandle_t handle,rbusEvent_t const * event,rbusEventSubscription_t * subscription)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "void deviceModeHandler(rbusHandle_t handle,rbusEvent_t const * event,rbusEventSubscription_t * subscription)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "void eth_bh_status_handler(rbusHandle_t handle,rbusEvent_t const * event,rbusEventSubscription_t * subscription)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int eth_bh_status_notify()", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "void eventReceiveHandler(rbusHandle_t handle,rbusEvent_t const * event,rbusEventSubscription_t * subscription)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "void event_receive_subscription_handler(rbusHandle_t handle,rbusEventSubscription_t * subscription,rbusError_t error)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "event_rbus_element_t * events_getEventElement(char * eventName)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "void frame_802_11_injector_Handler(rbusHandle_t handle,rbusEvent_t const * event,rbusEventSubscription_t * subscription)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int get_managed_guest_bridge(char * brval,unsigned long length)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "void hotspotTunnelHandler(rbusHandle_t handle,rbusEvent_t const * event,rbusEventSubscription_t * subscription)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "rbusError_t hotspot_event_handler(rbusHandle_t handle,rbusEventSubAction_t action,const char * eventName,rbusFilter_t filter,int32_t interval,bool * autoPublish)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "void meshStatusHandler(rbusHandle_t handle,rbusEvent_t const * event,rbusEventSubscription_t * subscription)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int notify_LM_Lite(wifi_ctrl_t * ctrl,LM_wifi_hosts_t * phosts,bool sync)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int notify_associated_entries(wifi_ctrl_t * ctrl,int ap_index,ULONG new_count,ULONG old_count)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int notify_deny_association(wifi_ctrl_t * ctrl,int ap_index,char * threshold,mac_addr_str_t mac,int threshold_val,int client_val)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int notify_force_disassociation(wifi_ctrl_t * ctrl,int ap_index,char * threshold,mac_addr_str_t mac,int threshold_val,int client_val)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int notify_hotspot(wifi_ctrl_t * ctrl,assoc_dev_data_t * assoc_device)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int set_managed_guest_interfaces(char * interface_name)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "rbusError_t set_sta_attribs(rbusHandle_t handle,rbusProperty_t property,rbusSetHandlerOptions_t * opts)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "void testDeviceModeHandler(rbusHandle_t handle,rbusEvent_t const * event,rbusEventSubscription_t * subscription)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "void wan_failover_handler(rbusHandle_t handle,rbusEvent_t const * event,rbusEventSubscription_t * subscription)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int webconfig_client_notify_apply(wifi_ctrl_t * ctrl,webconfig_subdoc_encoded_data_t * data)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int webconfig_null_subdoc_notify_apply(wifi_ctrl_t * ctrl,webconfig_subdoc_encoded_data_t * data)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "rbusError_t wifiapi_event_handler(rbusHandle_t handle,rbusEventSubAction_t action,const char * eventName,rbusFilter_t filter,int32_t interval,bool * autoPublish)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "void wps_test_event_receive_handler(rbusHandle_t handle,rbusEvent_t const * event,rbusEventSubscription_t * subscription)", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["rbusEvent_Publish", "rbusObject_Init", "rbusObject_SetValue", "rbusEvent_Subscribe", "rbusEvent_SubscribeExAsync", "rbus_get", "rbus_setStr", "rbus_getStr", "rbus_getBytes", "rbusValue_Init", "rbusValue_SetString", "rbusValue_SetBytes", "rbusValue_SetBoolean", "rbusValue_SetUInt32", "rbusObject_Release", "rbusValue_Release", "rbusProperty_GetName", "rbusProperty_GetValue", "rbusProperty_SetValue", "push_event_to_ctrl_queue", "webconfig_encode", "webconfig_data_free", "getNumberRadios", "check_wifi_radio_sched_timeout_active_status", "is_acs_channel_updated", "get_wifimgr_obj", "get_wifictrl_obj", "get_sta_vap_index_for_radio", "get_interface_name_for_vap_index", "getVapInfo", "to_mac_str", "get_current_ms_time", "mgmt_wifi_frame_recv", "hash_map_get_first", "hash_map_get_next", "queue_count", "queue_peek"], "search-terms": ["wifi_ctrl_rbus_handlers", "webconfig_subdoc", "rbus_event", "wifi_event", "RBUS_SUBSCRIBE", "wifi_get_assoc_clients", "rbus_apply_config", "SpeedTest", "meshStatus", "hotspotTunnel", "deviceMode", "WIFI_WAN_FAILOVER", "Ethernet_BH", "wifidb", "VAP", "WIFI_DEVICE_MODE", "WIFI_WPS", "frame_injector", "rbusNamespace"], "state": 2, "file_id": 6023, "knowledge_revision": 19128, "git_revision": "", "ctags": [{"_type": "tag", "name": "MAX_ACSD_SYNC_TIME_WAIT", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl_rbus_handlers.c", "pattern": "/^    #define MAX_ACSD_SYNC_TIME_WAIT /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "MAX_EVENT_NAME_SIZE", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl_rbus_handlers.c", "pattern": "/^#define MAX_EVENT_NAME_SIZE /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "MarkerListConfigHandler", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl_rbus_handlers.c", "pattern": "/^static void MarkerListConfigHandler (rbusHandle_t handle, rbusEvent_t const* event,$/", "file": true, "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(rbusHandle_t handle,rbusEvent_t const * event,rbusEventSubscription_t * subscription)"}, {"_type": "tag", "name": "activeGatewayCheckHandler", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl_rbus_handlers.c", "pattern": "/^static void activeGatewayCheckHandler(rbusHandle_t handle, rbusEvent_t const* event,$/", "file": true, "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(rbusHandle_t handle,rbusEvent_t const * event,rbusEventSubscription_t * subscription)"}, {"_type": "tag", "name": "ap_get_handler", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl_rbus_handlers.c", "pattern": "/^rbusError_t ap_get_handler(rbusHandle_t handle, rbusProperty_t property, rbusGetHandlerOptions_t/", "language": "C", "typeref": "typename:rbusError_t", "kind": "function", "signature": "(rbusHandle_t handle,rbusProperty_t property,rbusGetHandlerOptions_t * opts)"}, {"_type": "tag", "name": "ap_table_addrowhandler", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl_rbus_handlers.c", "pattern": "/^rbusError_t ap_table_addrowhandler(rbusHandle_t handle, char const* tableName, char const* alias/", "language": "C", "typeref": "typename:rbusError_t", "kind": "function", "signature": "(rbusHandle_t handle,char const * tableName,char const * aliasName,uint32_t * instNum)"}, {"_type": "tag", "name": "ap_table_removerowhandler", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl_rbus_handlers.c", "pattern": "/^rbusError_t ap_table_removerowhandler(rbusHandle_t handle, char const* rowName)$/", "language": "C", "typeref": "typename:rbusError_t", "kind": "function", "signature": "(rbusHandle_t handle,char const * rowName)"}, {"_type": "tag", "name": "deviceModeHandler", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl_rbus_handlers.c", "pattern": "/^static void deviceModeHandler(rbusHandle_t handle, rbusEvent_t const* event, rbusEventSubscripti/", "file": true, "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(rbusHandle_t handle,rbusEvent_t const * event,rbusEventSubscription_t * subscription)"}, {"_type": "tag", "name": "eth_bh_status_handler", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl_rbus_handlers.c", "pattern": "/^static void eth_bh_status_handler(rbusHandle_t handle, rbusEvent_t const *event,$/", "file": true, "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(rbusHandle_t handle,rbusEvent_t const * event,rbusEventSubscription_t * subscription)"}, {"_type": "tag", "name": "eth_bh_status_notify", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl_rbus_handlers.c", "pattern": "/^static int eth_bh_status_notify()$/", "file": true, "language": "C", "typeref": "typename:int", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "eventReceiveHandler", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl_rbus_handlers.c", "pattern": "/^static void eventReceiveHandler(rbusHandle_t handle, rbusEvent_t const* event, rbusEventSubscrip/", "file": true, "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(rbusHandle_t handle,rbusEvent_t const * event,rbusEventSubscription_t * subscription)"}, {"_type": "tag", "name": "eventSubHandler", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl_rbus_handlers.c", "pattern": "/^rbusError_t eventSubHandler(rbusHandle_t handle, rbusEventSubAction_t action, const char* eventN/", "language": "C", "typeref": "typename:rbusError_t", "kind": "function", "signature": "(rbusHandle_t handle,rbusEventSubAction_t action,const char * eventName,rbusFilter_t filter,int32_t interval,bool * autoPublish)"}, {"_type": "tag", "name": "event_receive_subscription_handler", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl_rbus_handlers.c", "pattern": "/^void event_receive_subscription_handler(rbusHandle_t handle, rbusEventSubscription_t* subscripti/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(rbusHandle_t handle,rbusEventSubscription_t * subscription,rbusError_t error)"}, {"_type": "tag", "name": "events_STAtable_addrowhandler", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl_rbus_handlers.c", "pattern": "/^rbusError_t events_STAtable_addrowhandler(rbusHandle_t handle, char const* tableName, char const/", "language": "C", "typeref": "typename:rbusError_t", "kind": "function", "signature": "(rbusHandle_t handle,char const * tableName,char const * aliasName,uint32_t * instNum)"}, {"_type": "tag", "name": "events_STAtable_removerowhandler", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl_rbus_handlers.c", "pattern": "/^rbusError_t events_STAtable_removerowhandler(rbusHandle_t handle, char const* rowName)$/", "language": "C", "typeref": "typename:rbusError_t", "kind": "function", "signature": "(rbusHandle_t handle,char const * rowName)"}, {"_type": "tag", "name": "events_getEventElement", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl_rbus_handlers.c", "pattern": "/^static event_rbus_element_t *events_getEventElement(char *eventName)$/", "file": true, "language": "C", "typeref": "typename:event_rbus_element_t *", "kind": "function", "signature": "(char * eventName)"}, {"_type": "tag", "name": "events_getSubscribed", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl_rbus_handlers.c", "pattern": "/^static BOOL events_getSubscribed(char *eventName)$/", "file": true, "language": "C", "typeref": "typename:BOOL", "kind": "function", "signature": "(char * eventName)"}, {"_type": "tag", "name": "events_rbus_publish", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl_rbus_handlers.c", "pattern": "/^int events_rbus_publish(wifi_event_t *evt)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(wifi_event_t * evt)"}, {"_type": "tag", "name": "frame_802_11_injector_Handler", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl_rbus_handlers.c", "pattern": "/^static void frame_802_11_injector_Handler(rbusHandle_t handle, rbusEvent_t const* event, rbusEve/", "file": true, "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(rbusHandle_t handle,rbusEvent_t const * event,rbusEventSubscription_t * subscription)"}, {"_type": "tag", "name": "get_acl_device_data", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl_rbus_handlers.c", "pattern": "/^rbusError_t get_acl_device_data(rbusHandle_t handle, rbusProperty_t property, rbusGetHandlerOpti/", "language": "C", "typeref": "typename:rbusError_t", "kind": "function", "signature": "(rbusHandle_t handle,rbusProperty_t property,rbusGetHandlerOptions_t * opts)"}, {"_type": "tag", "name": "get_assoc_clients_data", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl_rbus_handlers.c", "pattern": "/^rbusError_t get_assoc_clients_data(rbusHandle_t handle, rbusProperty_t property, rbusGetHandlerO/", "language": "C", "typeref": "typename:rbusError_t", "kind": "function", "signature": "(rbusHandle_t handle,rbusProperty_t property,rbusGetHandlerOptions_t * opts)"}, {"_type": "tag", "name": "get_assoc_devices_blob", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl_rbus_handlers.c", "pattern": "/^char *get_assoc_devices_blob()$/", "language": "C", "typeref": "typename:char *", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "get_client_assoc_request_multi", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl_rbus_handlers.c", "pattern": "/^rbusError_t get_client_assoc_request_multi(rbusHandle_t handle, char const* methodName, rbusObje/", "language": "C", "typeref": "typename:rbusError_t", "kind": "function", "signature": "(rbusHandle_t handle,char const * methodName,rbusObject_t inParams,rbusObject_t outParams,rbusMethodAsyncHandle_t asyncHandle)"}, {"_type": "tag", "name": "get_home_vap", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl_rbus_handlers.c", "pattern": "/^rbusError_t get_home_vap(rbusHandle_t handle, rbusProperty_t property, rbusSetHandlerOptions_t* /", "language": "C", "typeref": "typename:rbusError_t", "kind": "function", "signature": "(rbusHandle_t handle,rbusProperty_t property,rbusSetHandlerOptions_t * opts)"}, {"_type": "tag", "name": "get_managed_guest_bridge", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl_rbus_handlers.c", "pattern": "/^int get_managed_guest_bridge(char *brval, unsigned long length)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(char * brval,unsigned long length)"}, {"_type": "tag", "name": "get_null_subdoc_data", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl_rbus_handlers.c", "pattern": "/^rbusError_t get_null_subdoc_data(rbusHandle_t handle, rbusProperty_t property, rbusGetHandlerOpt/", "language": "C", "typeref": "typename:rbusError_t", "kind": "function", "signature": "(rbusHandle_t handle,rbusProperty_t property,rbusGetHandlerOptions_t * opts)"}, {"_type": "tag", "name": "get_private_vap", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl_rbus_handlers.c", "pattern": "/^rbusError_t get_private_vap(rbusHandle_t handle, rbusProperty_t property, rbusSetHandlerOptions_/", "language": "C", "typeref": "typename:rbusError_t", "kind": "function", "signature": "(rbusHandle_t handle,rbusProperty_t property,rbusSetHandlerOptions_t * opts)"}, {"_type": "tag", "name": "get_sta_attribs", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl_rbus_handlers.c", "pattern": "/^rbusError_t get_sta_attribs(rbusHandle_t handle, rbusProperty_t property, rbusGetHandlerOptions_/", "language": "C", "typeref": "typename:rbusError_t", "kind": "function", "signature": "(rbusHandle_t handle,rbusProperty_t property,rbusGetHandlerOptions_t * opts)"}, {"_type": "tag", "name": "get_sta_connection_timeout", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl_rbus_handlers.c", "pattern": "/^rbusError_t get_sta_connection_timeout(rbusHandle_t handle, rbusProperty_t property, rbusGetHand/", "language": "C", "typeref": "typename:rbusError_t", "kind": "function", "signature": "(rbusHandle_t handle,rbusProperty_t property,rbusGetHandlerOptions_t * opts)"}, {"_type": "tag", "name": "get_sta_disconnection", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl_rbus_handlers.c", "pattern": "/^rbusError_t get_sta_disconnection(rbusHandle_t handle, rbusProperty_t property, rbusGetHandlerOp/", "language": "C", "typeref": "typename:rbusError_t", "kind": "function", "signature": "(rbusHandle_t handle,rbusProperty_t property,rbusGetHandlerOptions_t * opts)"}, {"_type": "tag", "name": "hotspotTunnelHandler", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl_rbus_handlers.c", "pattern": "/^static void hotspotTunnelHandler(rbusHandle_t handle, rbusEvent_t const* event,$/", "file": true, "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(rbusHandle_t handle,rbusEvent_t const * event,rbusEventSubscription_t * subscription)"}, {"_type": "tag", "name": "hotspot_event_handler", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl_rbus_handlers.c", "pattern": "/^rbusError_t hotspot_event_handler(rbusHandle_t handle, rbusEventSubAction_t action, const char* /", "language": "C", "typeref": "typename:rbusError_t", "kind": "function", "signature": "(rbusHandle_t handle,rbusEventSubAction_t action,const char * eventName,rbusFilter_t filter,int32_t interval,bool * autoPublish)"}, {"_type": "tag", "name": "meshStatusHandler", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl_rbus_handlers.c", "pattern": "/^static void meshStatusHandler(rbusHandle_t handle, rbusEvent_t const* event,$/", "file": true, "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(rbusHandle_t handle,rbusEvent_t const * event,rbusEventSubscription_t * subscription)"}, {"_type": "tag", "name": "notify_LM_Lite", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl_rbus_handlers.c", "pattern": "/^int notify_LM_Lite(wifi_ctrl_t *ctrl, LM_wifi_hosts_t* phosts, bool sync)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(wifi_ctrl_t * ctrl,LM_wifi_hosts_t * phosts,bool sync)"}, {"_type": "tag", "name": "notify_associated_entries", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl_rbus_handlers.c", "pattern": "/^int notify_associated_entries(wifi_ctrl_t *ctrl, int ap_index, ULONG new_count, ULONG old_count)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(wifi_ctrl_t * ctrl,int ap_index,ULONG new_count,ULONG old_count)"}, {"_type": "tag", "name": "notify_deny_association", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl_rbus_handlers.c", "pattern": "/^int notify_deny_association(wifi_ctrl_t *ctrl, int ap_index, char *threshold, mac_addr_str_t mac/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(wifi_ctrl_t * ctrl,int ap_index,char * threshold,mac_addr_str_t mac,int threshold_val,int client_val)"}, {"_type": "tag", "name": "notify_force_disassociation", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl_rbus_handlers.c", "pattern": "/^int notify_force_disassociation(wifi_ctrl_t *ctrl, int ap_index, char *threshold, mac_addr_str_t/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(wifi_ctrl_t * ctrl,int ap_index,char * threshold,mac_addr_str_t mac,int threshold_val,int client_val)"}, {"_type": "tag", "name": "notify_hotspot", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl_rbus_handlers.c", "pattern": "/^int notify_hotspot(wifi_ctrl_t *ctrl, assoc_dev_data_t *assoc_device)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(wifi_ctrl_t * ctrl,assoc_dev_data_t * assoc_device)"}, {"_type": "tag", "name": "rbus_register_handlers", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl_rbus_handlers.c", "pattern": "/^void rbus_register_handlers(wifi_ctrl_t *ctrl)$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(wifi_ctrl_t * ctrl)"}, {"_type": "tag", "name": "rbus_subscribe_events", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl_rbus_handlers.c", "pattern": "/^void rbus_subscribe_events(wifi_ctrl_t *ctrl)$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(wifi_ctrl_t * ctrl)"}, {"_type": "tag", "name": "set_kickassoc_command", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl_rbus_handlers.c", "pattern": "/^rbusError_t set_kickassoc_command(rbusHandle_t handle, rbusProperty_t property, rbusSetHandlerOp/", "language": "C", "typeref": "typename:rbusError_t", "kind": "function", "signature": "(rbusHandle_t handle,rbusProperty_t property,rbusSetHandlerOptions_t * opts)"}, {"_type": "tag", "name": "set_managed_guest_interfaces", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl_rbus_handlers.c", "pattern": "/^int set_managed_guest_interfaces(char *interface_name)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(char * interface_name)"}, {"_type": "tag", "name": "set_sta_attribs", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl_rbus_handlers.c", "pattern": "/^rbusError_t set_sta_attribs(rbusHandle_t handle, rbusProperty_t property, rbusSetHandlerOptions_/", "language": "C", "typeref": "typename:rbusError_t", "kind": "function", "signature": "(rbusHandle_t handle,rbusProperty_t property,rbusSetHandlerOptions_t * opts)"}, {"_type": "tag", "name": "set_sta_disconnection", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl_rbus_handlers.c", "pattern": "/^rbusError_t set_sta_disconnection(rbusHandle_t handle, rbusProperty_t property, rbusSetHandlerOp/", "language": "C", "typeref": "typename:rbusError_t", "kind": "function", "signature": "(rbusHandle_t handle,rbusProperty_t property,rbusSetHandlerOptions_t * opts)"}, {"_type": "tag", "name": "set_wifiapi_command", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl_rbus_handlers.c", "pattern": "/^rbusError_t set_wifiapi_command(rbusHandle_t handle, rbusProperty_t property, rbusSetHandlerOpti/", "language": "C", "typeref": "typename:rbusError_t", "kind": "function", "signature": "(rbusHandle_t handle,rbusProperty_t property,rbusSetHandlerOptions_t * opts)"}, {"_type": "tag", "name": "speed_test_handler", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl_rbus_handlers.c", "pattern": "/^void speed_test_handler (rbusHandle_t handle, rbusEvent_t const* event,$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(rbusHandle_t handle,rbusEvent_t const * event,rbusEventSubscription_t * subscription)"}, {"_type": "tag", "name": "testDeviceModeHandler", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl_rbus_handlers.c", "pattern": "/^static void testDeviceModeHandler(rbusHandle_t handle, rbusEvent_t const* event, rbusEventSubscr/", "file": true, "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(rbusHandle_t handle,rbusEvent_t const * event,rbusEventSubscription_t * subscription)"}, {"_type": "tag", "name": "update_speedtest_tout_value", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl_rbus_handlers.c", "pattern": "/^void update_speedtest_tout_value()$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "wan_failover_handler", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl_rbus_handlers.c", "pattern": "/^static void wan_failover_handler(rbusHandle_t handle, rbusEvent_t const* event,$/", "file": true, "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(rbusHandle_t handle,rbusEvent_t const * event,rbusEventSubscription_t * subscription)"}, {"_type": "tag", "name": "webconfig_client_notify_apply", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl_rbus_handlers.c", "pattern": "/^int webconfig_client_notify_apply(wifi_ctrl_t *ctrl, webconfig_subdoc_encoded_data_t *data)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(wifi_ctrl_t * ctrl,webconfig_subdoc_encoded_data_t * data)"}, {"_type": "tag", "name": "webconfig_get_dml_subdoc", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl_rbus_handlers.c", "pattern": "/^rbusError_t webconfig_get_dml_subdoc(rbusHandle_t handle, rbusProperty_t property, rbusGetHandle/", "language": "C", "typeref": "typename:rbusError_t", "kind": "function", "signature": "(rbusHandle_t handle,rbusProperty_t property,rbusGetHandlerOptions_t * opts)"}, {"_type": "tag", "name": "webconfig_get_subdoc", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl_rbus_handlers.c", "pattern": "/^rbusError_t webconfig_get_subdoc(rbusHandle_t handle, rbusProperty_t property, rbusGetHandlerOpt/", "language": "C", "typeref": "typename:rbusError_t", "kind": "function", "signature": "(rbusHandle_t handle,rbusProperty_t property,rbusGetHandlerOptions_t * opts)"}, {"_type": "tag", "name": "webconfig_null_subdoc_notify_apply", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl_rbus_handlers.c", "pattern": "/^int webconfig_null_subdoc_notify_apply(wifi_ctrl_t *ctrl, webconfig_subdoc_encoded_data_t *data)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(wifi_ctrl_t * ctrl,webconfig_subdoc_encoded_data_t * data)"}, {"_type": "tag", "name": "webconfig_rbus_apply", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl_rbus_handlers.c", "pattern": "/^int webconfig_rbus_apply(wifi_ctrl_t *ctrl, webconfig_subdoc_encoded_data_t *data)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(wifi_ctrl_t * ctrl,webconfig_subdoc_encoded_data_t * data)"}, {"_type": "tag", "name": "webconfig_rbus_apply_for_dml_thread_update", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl_rbus_handlers.c", "pattern": "/^ int webconfig_rbus_apply_for_dml_thread_update(wifi_ctrl_t *ctrl, webconfig_subdoc_encoded_data/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(wifi_ctrl_t * ctrl,webconfig_subdoc_encoded_data_t * data)"}, {"_type": "tag", "name": "webconfig_set_subdoc", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl_rbus_handlers.c", "pattern": "/^rbusError_t webconfig_set_subdoc(rbusHandle_t handle, rbusProperty_t property, rbusSetHandlerOpt/", "language": "C", "typeref": "typename:rbusError_t", "kind": "function", "signature": "(rbusHandle_t handle,rbusProperty_t property,rbusSetHandlerOptions_t * opts)"}, {"_type": "tag", "name": "wifiapi_event_handler", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl_rbus_handlers.c", "pattern": "/^rbusError_t wifiapi_event_handler(rbusHandle_t handle, rbusEventSubAction_t action, const char* /", "language": "C", "typeref": "typename:rbusError_t", "kind": "function", "signature": "(rbusHandle_t handle,rbusEventSubAction_t action,const char * eventName,rbusFilter_t filter,int32_t interval,bool * autoPublish)"}, {"_type": "tag", "name": "wifiapi_result_publish", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl_rbus_handlers.c", "pattern": "/^int wifiapi_result_publish(void)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(void)"}, {"_type": "tag", "name": "wps_test_event_receive_handler", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl_rbus_handlers.c", "pattern": "/^static void wps_test_event_receive_handler(rbusHandle_t handle, rbusEvent_t const* event, rbusEv/", "file": true, "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(rbusHandle_t handle,rbusEvent_t const * event,rbusEventSubscription_t * subscription)"}], "hash": "6ad41746f9ebe598deecc64e8c88e40b", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "rdkb/components/opensource/ccsp/OneWifi/source/core/wifi_ctrl_rbus_handlers.c", "revision_history": [{"19128": ""}]}