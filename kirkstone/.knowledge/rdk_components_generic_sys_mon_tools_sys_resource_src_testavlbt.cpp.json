{"is_source_file": true, "format": "C++", "description": "This file contains a test function for AVL Tree operations such as insertion and search, including backtrace management, conditional compilation with USE_AVLBT, and usage of custom AVL Tree classes.", "external_files": ["avlTree.h", "backtrace.h"], "external_methods": ["AVLTree<int,Backtrace>::Insert", "AVLTree<int,Backtrace>::end", "AVLTree<int,Backtrace>::Find", "AVLNode<int,Backtrace>::GetDataPtr", "Backtrace::GetSize", "Backtrace::GetBacktrace", "Backtrace::Init"], "published": [], "classes": [{"name": "AVLTree", "description": "Template class implementing an AVL Tree data structure."}, {"name": "AVLTreeInOrderIterator", "description": "Iterator class for in-order traversal of AVL Tree."}, {"name": "AVLNode", "description": "Node class for AVL Tree, storing key-value pairs."}, {"name": "Backtrace", "description": "Class managing backtrace data associated with AVL nodes."}], "methods": [{"name": "int testavlbt()", "description": "Test function that inserts and searches nodes in an AVL Tree and outputs the process and results.", "scope": "", "scopeKind": ""}], "calls": ["printf", "mlt3Backtrace.Insert", "mlt3Backtrace.Find", "node->GetDataPtr", "backtrace->GetSize", "backtrace->GetBacktrace", "backtrace->Init"], "search-terms": ["AVLTree", "Backtrace", "testavlbt", "avlTree.h", "backtrace.h", "AVLTreeInOrderIterator"], "state": 2, "file_id": 12549, "knowledge_revision": 25444, "git_revision": "", "ctags": [{"_type": "tag", "name": "testavlbt", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/sys_mon_tools/sys_resource/src/testavlbt.cpp", "pattern": "/^int testavlbt()$/", "language": "C++", "typeref": "typename:int", "kind": "function", "signature": "()"}], "hash": "d0cc5af6afcf8bd8c241f643d9df9be7", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "rdk/components/generic/sys_mon_tools/sys_resource/src/testavlbt.cpp", "revision_history": [{"25444": ""}]}