{"is_source_file": true, "format": "C", "description": "This file contains utility functions for telemetry log management, including handling log seek positions, rotating log files, retrieving system load averages, and managing configuration paths. It primarily deals with file I/O, thread-safe hash maps, and log file navigation logic.", "external_files": ["t2log_wrapper.h", "legacyutils.h", "vector.h", "dcautil.h"], "external_methods": ["hash_map_create", "hash_map_get", "hash_map_put", "hash_map_remove", "hash_map_destroy", "hash_map_count", "Vector_PushBack", "T2Debug", "T2Error", "T2Warning", "T2Info"], "published": ["getLoadAvg", "updateLogSeek", "clearConfVal", "updateIncludeConfVal", "initProperties", "isPropsInitialized", "getLogLine", "updateLastSeekval"], "classes": [], "methods": [{"name": "void freeLogFileSeekMap(void * data)", "description": "Frees allocated memory for each hash map element containing log file seek position data.", "scope": "", "scopeKind": ""}, {"name": "void freeGrepSeekProfile(GrepSeekProfile * gsProfile)", "description": "Frees memory associated with a GrepSeekProfile object, including its internal hash map.", "scope": "", "scopeKind": ""}, {"name": "void freeProfileSeekHashMap(void * data)", "description": "Frees memory for a profile seek hash map element, including associated GrepSeekProfile.", "scope": "", "scopeKind": ""}, {"name": "GrepSeekProfile * addToProfileSeekMap(char * profileName)", "description": "Creates or retrieves a GrepSeekProfile for a given profile name and adds it to the profile seek map.", "scope": "", "scopeKind": ""}, {"name": "void removeProfileFromSeekMap(char * profileName)", "description": "Removes a profile's seek data from the map and saves its execution count.", "scope": "", "scopeKind": ""}, {"name": "void removeProfileFromExecMap(char * profileName)", "description": "Removes execution count for a profile and resets its seek profile's counter.", "scope": "", "scopeKind": ""}, {"name": "GrepSeekProfile * getLogSeekMapForProfile(char * profileName)", "description": "Retrieves the GrepSeekProfile (log seek map) associated with a profile name.", "scope": "", "scopeKind": ""}, {"name": "int getLogSeekValue(hash_map_t * logSeekMap,char * name,long * seek_value)", "description": "Retrieves the seek position for a log file from the hash map.", "scope": "", "scopeKind": ""}, {"name": "T2ERROR updateLogSeek(hash_map_t * logSeekMap,char * logFileName)", "description": "Updates the stored seek position for a log file in the hash map.", "scope": "", "scopeKind": ""}, {"name": "int getLoadAvg(Vector * grepResultList,bool trim)", "description": "Reads system load average from /proc/loadavg and adds it to a result list.", "scope": "", "scopeKind": ""}, {"name": "int fsize(FILE * fp)", "description": "Calculates the size of an open file stream.", "scope": "", "scopeKind": ""}, {"name": "void clearConfVal(void)", "description": "Frees global path configuration variables.", "scope": "", "scopeKind": ""}, {"name": "void updateLastSeekval(hash_map_t * logSeekMap,char ** prev_file,char * filename)", "description": "Calculates and updates the last seek position based on the current log file's size.", "scope": "", "scopeKind": ""}, {"name": "char * getLogLine(hash_map_t * logSeekMap,char * buf,int buflen,char * name,int * firstSeekFromEOF,int exec_count)", "description": "Retrieves a line from a log file, handling file rotation and seek position management.", "scope": "", "scopeKind": ""}, {"name": "void updateIncludeConfVal(char * logpath,char * perspath)", "description": "Reads configuration paths from included properties files and updates global variables.", "scope": "", "scopeKind": ""}, {"name": "void initProperties(char * logpath,char * perspath)", "description": "Reads device-specific properties and updates configuration accordingly.", "scope": "", "scopeKind": ""}, {"name": "bool isPropsInitialized()", "description": "Returns whether the properties have been initialized.", "scope": "", "scopeKind": ""}], "search-terms": ["telemetry", "log seek", "profile map", "log rotation", "load average", "file seek", "configuration paths", "device properties", "thread safety", "hash map"], "state": 2, "file_id": 12908, "knowledge_revision": 25816, "git_revision": "", "ctags": [{"_type": "tag", "name": "DEVICE_TYPE", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/dcautil/legacyutils.c", "pattern": "/^static char* DEVICE_TYPE     = NULL;$/", "file": true, "language": "C", "typeref": "typename:char *", "kind": "variable"}, {"_type": "tag", "name": "EC_BUF_LEN", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/dcautil/legacyutils.c", "pattern": "/^#define EC_BUF_LEN /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "LAST_SEEK_VALUE", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/dcautil/legacyutils.c", "pattern": "/^static long  LAST_SEEK_VALUE = 0;$/", "file": true, "language": "C", "typeref": "typename:long", "kind": "variable"}, {"_type": "tag", "name": "LOG_PATH", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/dcautil/legacyutils.c", "pattern": "/^static char* LOG_PATH        = NULL;$/", "file": true, "language": "C", "typeref": "typename:char *", "kind": "variable"}, {"_type": "tag", "name": "PERSISTENT_PATH", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/dcautil/legacyutils.c", "pattern": "/^static char* PERSISTENT_PATH = NULL;$/", "file": true, "language": "C", "typeref": "typename:char *", "kind": "variable"}, {"_type": "tag", "name": "addToProfileSeekMap", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/dcautil/legacyutils.c", "pattern": "/^GrepSeekProfile *addToProfileSeekMap(char* profileName){$/", "language": "C", "typeref": "typename:GrepSeekProfile *", "kind": "function", "signature": "(char * profileName)"}, {"_type": "tag", "name": "clearConfVal", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/dcautil/legacyutils.c", "pattern": "/^void clearConfVal(void) {$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(void)"}, {"_type": "tag", "name": "freeGrepSeekProfile", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/dcautil/legacyutils.c", "pattern": "/^static void freeGrepSeekProfile(GrepSeekProfile *gsProfile) {$/", "file": true, "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(GrepSeekProfile * gsProfile)"}, {"_type": "tag", "name": "freeLogFileSeekMap", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/dcautil/legacyutils.c", "pattern": "/^static void freeLogFileSeekMap(void *data) {$/", "file": true, "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(void * data)"}, {"_type": "tag", "name": "freeProfileSeekHashMap", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/dcautil/legacyutils.c", "pattern": "/^static void freeProfileSeekHashMap(void *data) {$/", "file": true, "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(void * data)"}, {"_type": "tag", "name": "fsize", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/dcautil/legacyutils.c", "pattern": "/^static int fsize(FILE *fp) {$/", "file": true, "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(FILE * fp)"}, {"_type": "tag", "name": "getLoadAvg", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/dcautil/legacyutils.c", "pattern": "/^int getLoadAvg(Vector* grepResultList, bool trim) {$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(Vector * grepResultList,bool trim)"}, {"_type": "tag", "name": "getLogLine", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/dcautil/legacyutils.c", "pattern": "/^char *getLogLine(hash_map_t *logSeekMap, char *buf, int buflen, char *name,int *firstSeekFromEOF/", "language": "C", "typeref": "typename:char *", "kind": "function", "signature": "(hash_map_t * logSeekMap,char * buf,int buflen,char * name,int * firstSeekFromEOF,int exec_count)"}, {"_type": "tag", "name": "getLogSeekMapForProfile", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/dcautil/legacyutils.c", "pattern": "/^GrepSeekProfile *getLogSeekMapForProfile(char* profileName)$/", "language": "C", "typeref": "typename:GrepSeekProfile *", "kind": "function", "signature": "(char * profileName)"}, {"_type": "tag", "name": "getLogSeekValue", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/dcautil/legacyutils.c", "pattern": "/^static int getLogSeekValue(hash_map_t *logSeekMap, char *name, long *seek_value) {$/", "file": true, "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(hash_map_t * logSeekMap,char * name,long * seek_value)"}, {"_type": "tag", "name": "initProperties", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/dcautil/legacyutils.c", "pattern": "/^void initProperties(char *logpath, char *perspath) {$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(char * logpath,char * perspath)"}, {"_type": "tag", "name": "isPropsInitialized", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/dcautil/legacyutils.c", "pattern": "/^bool isPropsInitialized() {$/", "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "isPropsIntialized", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/dcautil/legacyutils.c", "pattern": "/^static bool  isPropsIntialized = false ;$/", "file": true, "language": "C", "typeref": "typename:bool", "kind": "variable"}, {"_type": "tag", "name": "pExecCountLock", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/dcautil/legacyutils.c", "pattern": "/^static pthread_mutex_t pExecCountLock = PTHREAD_MUTEX_INITIALIZER;$/", "file": true, "language": "C", "typeref": "typename:pthread_mutex_t", "kind": "variable"}, {"_type": "tag", "name": "pSeekLock", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/dcautil/legacyutils.c", "pattern": "/^static pthread_mutex_t pSeekLock = PTHREAD_MUTEX_INITIALIZER;$/", "file": true, "language": "C", "typeref": "typename:pthread_mutex_t", "kind": "variable"}, {"_type": "tag", "name": "profileExecCountMap", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/dcautil/legacyutils.c", "pattern": "/^static hash_map_t *profileExecCountMap = NULL;$/", "file": true, "language": "C", "typeref": "typename:hash_map_t *", "kind": "variable"}, {"_type": "tag", "name": "profileSeekMap", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/dcautil/legacyutils.c", "pattern": "/^static hash_map_t *profileSeekMap = NULL;$/", "file": true, "language": "C", "typeref": "typename:hash_map_t *", "kind": "variable"}, {"_type": "tag", "name": "removeProfileFromExecMap", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/dcautil/legacyutils.c", "pattern": "/^void removeProfileFromExecMap(char *profileName) {$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(char * profileName)"}, {"_type": "tag", "name": "removeProfileFromSeekMap", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/dcautil/legacyutils.c", "pattern": "/^void removeProfileFromSeekMap(char *profileName) {$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(char * profileName)"}, {"_type": "tag", "name": "updateIncludeConfVal", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/dcautil/legacyutils.c", "pattern": "/^void updateIncludeConfVal(char *logpath, char *perspath) {$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(char * logpath,char * perspath)"}, {"_type": "tag", "name": "updateLastSeekval", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/dcautil/legacyutils.c", "pattern": "/^void updateLastSeekval(hash_map_t *logSeekMap, char **prev_file, char* filename) {$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(hash_map_t * logSeekMap,char ** prev_file,char * filename)"}, {"_type": "tag", "name": "updateLogSeek", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/dcautil/legacyutils.c", "pattern": "/^T2ERROR updateLogSeek(hash_map_t *logSeekMap, char* logFileName) {$/", "language": "C", "typeref": "typename:T2ERROR", "kind": "function", "signature": "(hash_map_t * logSeekMap,char * logFileName)"}], "hash": "2798a0ba25ffe9242813cfff531ac45b", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "rdk/components/generic/telemetry/source/dcautil/legacyutils.c", "fields": [{"name": "char * DEVICE_TYPE", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "long LAST_SEEK_VALUE", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "char * LOG_PATH", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "char * PERSISTENT_PATH", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "bool isPropsIntialized", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "pthread_mutex_t pExecCountLock", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "pthread_mutex_t pSeekLock", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "hash_map_t * profileExecCountMap", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "hash_map_t * profileSeekMap", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"25816": ""}]}