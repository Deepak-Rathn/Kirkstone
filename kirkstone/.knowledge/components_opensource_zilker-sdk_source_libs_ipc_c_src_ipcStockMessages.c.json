{"is_source_file": true, "format": "C", "description": "This file implements a set of IPC (Inter-Process Communication) message functions related to stock IPC messages, including service control (shutdown, start), status retrieval, and configuration restoration, using JSON encoding for payloads.", "external_files": ["icIpc/ipcStockMessages.h", "cJSON.h", "cJSON Print functions", "json encoding/decoding", "sendServiceRequestTimeout.h", "Functions to send IPC requests", "createIPCMessage.h", "Functions to create IPC message structs", "populateIPCMessageWithJSON.h", "Function to encode JSON into IPC message", "decode_runtimeStatsPojo_fromJSON.h", "decode_serviceStatusPojo_fromJSON.h", "decode_configRestoredOutput_fromJSON.h", "encode_configRestoredInput_toJSON.h", "cJSON.h", "JSON handling library"], "external_methods": ["sendServiceRequestTimeout()", "createIPCMessage()", "freeIPCMessage()", "populateIPCMessageWithJSON()", "decode_runtimeStatsPojo_fromJSON()", "decode_serviceStatusPojo_fromJSON()", "decode_configRestoredOutput_fromJSON()", "encode_configRestoredInput_toJSON()"], "published": ["requestServiceShutdown", "getServiceRuntimeStats", "getServiceStatus", "configRestored", "startInitialization"], "classes": [], "methods": [{"name": "IPCCode requestServiceShutdown(uint16_t servicePortNum,char * credentials,time_t timeoutSecs)", "description": "Requests the shutdown of a service, including credentials and timeout handling, encoding the credentials in JSON.", "scope": "", "scopeKind": ""}, {"name": "IPCCode getServiceRuntimeStats(uint16_t servicePortNum,bool thenClear,runtimeStatsPojo * output,time_t readTimeoutSecs)", "description": "Retrieves runtime statistics from a service, optionally clearing stats after retrieval.", "scope": "", "scopeKind": ""}, {"name": "IPCCode getServiceStatus(uint16_t servicePortNum,serviceStatusPojo * output,time_t readTimeoutSecs)", "description": "Fetches the current status of a service as key-value string pairs.", "scope": "", "scopeKind": ""}, {"name": "IPCCode configRestored(uint16_t servicePortNum,configRestoredInput * input,configRestoredOutput * output,time_t readTimeoutSecs)", "description": "Notifies a service that configuration data has been restored, allowing it to import files from a specified restore directory.", "scope": "", "scopeKind": ""}, {"name": "IPCCode startInitialization(uint16_t servicePortNum,bool * output,time_t timeoutSecs)", "description": "Signals that system startup initialization should occur, used during watchdog startup, returning success status.", "scope": "", "scopeKind": ""}], "calls": ["sendServiceRequestTimeout()"], "search-terms": ["IPC", "service shutdown", "runtime stats", "service status", "config restored", "initialization", "JSON", "IPCMessage", "IPCCode"], "state": 2, "file_id": 729, "knowledge_revision": 13892, "git_revision": "", "ctags": [{"_type": "tag", "name": "configRestored", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/ipc/c/src/ipcStockMessages.c", "pattern": "/^IPCCode configRestored(uint16_t servicePortNum, configRestoredInput *input, configRestoredOutput/", "language": "C", "typeref": "typename:IPCCode", "kind": "function", "signature": "(uint16_t servicePortNum,configRestoredInput * input,configRestoredOutput * output,time_t readTimeoutSecs)"}, {"_type": "tag", "name": "getServiceRuntimeStats", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/ipc/c/src/ipcStockMessages.c", "pattern": "/^IPCCode getServiceRuntimeStats(uint16_t servicePortNum, bool thenClear, runtimeStatsPojo *output/", "language": "C", "typeref": "typename:IPCCode", "kind": "function", "signature": "(uint16_t servicePortNum,bool thenClear,runtimeStatsPojo * output,time_t readTimeoutSecs)"}, {"_type": "tag", "name": "getServiceStatus", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/ipc/c/src/ipcStockMessages.c", "pattern": "/^IPCCode getServiceStatus(uint16_t servicePortNum, serviceStatusPojo *output, time_t readTimeoutS/", "language": "C", "typeref": "typename:IPCCode", "kind": "function", "signature": "(uint16_t servicePortNum,serviceStatusPojo * output,time_t readTimeoutSecs)"}, {"_type": "tag", "name": "requestServiceShutdown", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/ipc/c/src/ipcStockMessages.c", "pattern": "/^IPCCode requestServiceShutdown(uint16_t servicePortNum, char *credentials, time_t timeoutSecs)$/", "language": "C", "typeref": "typename:IPCCode", "kind": "function", "signature": "(uint16_t servicePortNum,char * credentials,time_t timeoutSecs)"}, {"_type": "tag", "name": "startInitialization", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/ipc/c/src/ipcStockMessages.c", "pattern": "/^IPCCode startInitialization(uint16_t servicePortNum, bool *output, time_t timeoutSecs)$/", "language": "C", "typeref": "typename:IPCCode", "kind": "function", "signature": "(uint16_t servicePortNum,bool * output,time_t timeoutSecs)"}], "hash": "0c32f32a102bcbfa395d3f4254b38782", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "components/opensource/zilker-sdk/source/libs/ipc/c/src/ipcStockMessages.c", "revision_history": [{"13892": ""}]}