{"is_source_file": true, "format": "Python", "description": "This file implements a plugin class for creating hybrid ISO images with EFI and legacy boot support in the 'wic' build system. It defines methods for configuring bootloader files, preparing partitions, and finalizing the ISO image.", "external_files": ["wic", "wic.engine", "wic.pluginbase", "wic.misc"], "external_methods": ["get_bitbake_var", "exec_cmd", "exec_native_cmd", "get_custom_config"], "published": ["IsoImagePlugin"], "classes": [{"name": "IsoImagePlugin", "description": "A plugin class for creating bootable ISO images with EFI and legacy support, handling configuration, partition setup, and disk installation."}], "methods": [{"name": "do_configure_syslinux(cls, creator, cr_workdir)", "description": "Creates syslinux bootloader configuration.", "scope": "IsoImagePlugin", "scopeKind": "class"}, {"name": "do_configure_grubefi(cls, part, creator, target_dir)", "description": "Creates grub-efi bootloader configuration.", "scope": "IsoImagePlugin", "scopeKind": "class"}, {"name": "_build_initramfs_path(rootfs_dir, cr_workdir)", "description": "Builds or locates the initramfs image path.", "scope": "IsoImagePlugin", "scopeKind": "class"}, {"name": "do_configure_partition(cls, part, source_params, creator, cr_workdir, oe_builddir, bootimg_dir, kernel_dir, native_sysroot)", "description": "Configures a partition before content population, sets image name.", "scope": "IsoImagePlugin", "scopeKind": "class"}, {"name": "_install_payload(source_params, iso_dir)", "description": "Copies payload content into the ISO directory.", "scope": "IsoImagePlugin", "scopeKind": "class"}, {"name": "do_prepare_partition(cls, part, source_params, creator, cr_workdir, oe_builddir, bootimg_dir, kernel_dir, rootfs_dir, native_sysroot)", "description": "Prepares and populates parts of the ISO image including bootloader and filesystem setup.", "scope": "IsoImagePlugin", "scopeKind": "class"}, {"name": "do_install_disk(cls, disk, disk_name, creator, workdir, oe_builddir, bootimg_dir, kernel_dir, native_sysroot)", "description": "Finalizes the disk image, applies isohybrid for BIOS boot compatibility.", "scope": "IsoImagePlugin", "scopeKind": "class"}], "calls": ["get_bitbake_var", "exec_cmd", "exec_native_cmd", "get_custom_config"], "search-terms": ["isoimage-isohybrid", "wic", "EFI", "bootloader", "hybrid ISO", "isohybrid", "iso image creation", "EFI boot support", "legacy boot", "partition setup"], "state": 2, "file_id": 1449, "knowledge_revision": 14597, "git_revision": "", "ctags": [{"_type": "tag", "name": "IsoImagePlugin", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/wic/plugins/source/isoimage-isohybrid.py", "pattern": "/^class IsoImagePlugin(SourcePlugin):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "_build_initramfs_path", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/wic/plugins/source/isoimage-isohybrid.py", "pattern": "/^    def _build_initramfs_path(rootfs_dir, cr_workdir):$/", "language": "Python", "kind": "member", "signature": "(rootfs_dir, cr_workdir)", "scope": "IsoImagePlugin", "scopeKind": "class"}, {"_type": "tag", "name": "_install_payload", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/wic/plugins/source/isoimage-isohybrid.py", "pattern": "/^    def _install_payload(source_params, iso_dir):$/", "language": "Python", "kind": "member", "signature": "(source_params, iso_dir)", "scope": "IsoImagePlugin", "scopeKind": "class"}, {"_type": "tag", "name": "do_configure_grubefi", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/wic/plugins/source/isoimage-isohybrid.py", "pattern": "/^    def do_configure_grubefi(cls, part, creator, target_dir):$/", "language": "Python", "kind": "member", "signature": "(cls, part, creator, target_dir)", "scope": "IsoImagePlugin", "scopeKind": "class"}, {"_type": "tag", "name": "do_configure_partition", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/wic/plugins/source/isoimage-isohybrid.py", "pattern": "/^    def do_configure_partition(cls, part, source_params, creator, cr_workdir,$/", "language": "Python", "kind": "member", "signature": "(cls, part, source_params, creator, cr_workdir, oe_builddir, bootimg_dir, kernel_dir, native_sysroot)", "scope": "IsoImagePlugin", "scopeKind": "class"}, {"_type": "tag", "name": "do_configure_syslinux", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/wic/plugins/source/isoimage-isohybrid.py", "pattern": "/^    def do_configure_syslinux(cls, creator, cr_workdir):$/", "language": "Python", "kind": "member", "signature": "(cls, creator, cr_workdir)", "scope": "IsoImagePlugin", "scopeKind": "class"}, {"_type": "tag", "name": "do_install_disk", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/wic/plugins/source/isoimage-isohybrid.py", "pattern": "/^    def do_install_disk(cls, disk, disk_name, creator, workdir, oe_builddir,$/", "language": "Python", "kind": "member", "signature": "(cls, disk, disk_name, creator, workdir, oe_builddir, bootimg_dir, kernel_dir, native_sysroot)", "scope": "IsoImagePlugin", "scopeKind": "class"}, {"_type": "tag", "name": "do_prepare_partition", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/wic/plugins/source/isoimage-isohybrid.py", "pattern": "/^    def do_prepare_partition(cls, part, source_params, creator, cr_workdir,$/", "language": "Python", "kind": "member", "signature": "(cls, part, source_params, creator, cr_workdir, oe_builddir, bootimg_dir, kernel_dir, rootfs_dir, native_sysroot)", "scope": "IsoImagePlugin", "scopeKind": "class"}, {"_type": "tag", "name": "logger", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/wic/plugins/source/isoimage-isohybrid.py", "pattern": "/^logger = logging.getLogger('wic')$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "name", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/wic/plugins/source/isoimage-isohybrid.py", "pattern": "/^    name = 'isoimage-isohybrid'$/", "language": "Python", "kind": "variable", "scope": "IsoImagePlugin", "scopeKind": "class"}], "hash": "abc63e779e4079f256d52340499ac734", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "openembedded-core/scripts/lib/wic/plugins/source/isoimage-isohybrid.py", "fields": [{"name": "logger = logging.getLogger('wic')", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "name = 'isoimage-isohybrid'", "scope": "IsoImagePlugin", "scopeKind": "class", "description": "unavailable"}], "revision_history": [{"14597": ""}]}