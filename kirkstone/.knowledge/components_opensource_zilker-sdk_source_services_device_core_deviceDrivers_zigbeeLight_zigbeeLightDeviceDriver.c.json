{"is_source_file": true, "format": "C", "description": "This file implements a Zigbee light device driver for a home automation system. It handles device initialization, resource registration, state updates, and property synchronization for Zigbee light devices, including on/off, level, color, power, and energy measurement features.", "external_files": ["<icBuildtime.h>", "<subsystems/zigbee/zigbeeCommonIds.h>", "<icLog/logging.h>", "<stdio.h>", "<resourceTypes.h>", "<commonDeviceDefs.h>", "<deviceModelHelper.h>", "<memory.h>", "<zigbeeClusters/electricalMeasurementCluster.h>", "<zigbeeClusters/meteringCluster.h>", "<zconf.h>", "<icUtil/stringUtils.h>", "zigbeeClusters/onOffCluster.h", "zigbeeClusters/levelControlCluster.h", "zigbeeClusters/colorControlCluster.h", "zigbeeDriverCommon.h", "zigbeeLightDeviceDriver.h"], "external_methods": ["zigbeeSubsystemEui64ToId()", "zigbeeSubsystemIdToEui64()", "onOffClusterCreate()", "levelControlClusterCreate()", "colorControlClusterCreate()", "electricalMeasurementClusterCreate()", "meteringClusterCreate()", "linkedListIteratorCreate()", "linkedListIteratorHasNext()", "linkedListIteratorGetNext()", "linkedListIteratorDestroy()", "createEndpoint()", "createEndpointResourceIfAvailable()", "createEndpointMetadata()", "zigbeeDriverCommonCreateDeviceDriver()", "zigbeeDriverCommonAddCluster()", "zigbeeDriverCommonSetEndpointNumber()", "zigbeeDriverCommonGetEndpointNumber()", "onOffClusterIsOn()", "onOffClusterSetOn()", "levelControlClusterGetLevel()", "levelControlClusterGetLevelString()", "levelControlClusterSetLevel()", "colorControlClusterGetX()", "colorControlClusterGetY()", "colorControlClusterMoveToColor()", "electricalMeasurementClusterGetActivePower()", "electricalMeasurementClusterGetAcPowerDivisor()", "electricalMeasurementClusterGetAcPowerMultiplier()", "meteringClusterGetDivisor()", "meteringClusterGetMultiplier()"], "published": ["zigbeeLightDeviceDriverInitialize"], "classes": [], "methods": [{"name": "DeviceDriver * zigbeeLightDeviceDriverInitialize(DeviceServiceCallbacks * deviceService)", "description": "Initializes the zigbeeLight device driver with specified device service callbacks, creating clusters for on/off, level, color, electrical measurement, and metering, and returning the driver instance.", "scope": "", "scopeKind": ""}, {"name": "void onOffStateChangedCallback(uint64_t eui64,uint8_t endpointId,bool isOn,const void * ctx)", "description": "Callback invoked when the on/off state of the light changes, updating the corresponding resource.", "scope": "", "scopeKind": ""}, {"name": "void levelChangedCallback(uint64_t eui64,uint8_t endpointId,uint8_t level,const void * ctx)", "description": "Callback invoked when the light's level changes, updating the resource accordingly.", "scope": "", "scopeKind": ""}, {"name": "void updateColorResource(uint64_t eui64,uint8_t endpointId,uint16_t * x,uint16_t * y)", "description": "Updates the color resource (X and Y) based on received values, parsing and saving previous state if needed.", "scope": "", "scopeKind": ""}, {"name": "void colorControlXChanged(uint64_t eui64,uint8_t endpointId,uint16_t x,const void * ctx)", "description": "Handles changes in the color X coordinate, updating the resource.", "scope": "", "scopeKind": ""}, {"name": "void colorControlYChanged(uint64_t eui64,uint8_t endpointId,uint16_t y,const void * ctx)", "description": "Handles changes in the color Y coordinate, updating the resource.", "scope": "", "scopeKind": ""}, {"name": "bool getPowerComponent(uint64_t eui64,uint8_t endpointId,bool useElectricalMeasurementCluster,bool getDivisor,uint64_t * value)", "description": "Retrieves power measurement components (divisor or multiplier) from metadata cache or device clusters.", "scope": "", "scopeKind": ""}, {"name": "bool getPowerDivisor(uint64_t eui64,uint8_t endpointId,bool useElectricalMeasurementCluster,uint64_t * divisor)", "description": "Gets the power divisor for electrical measurement.", "scope": "", "scopeKind": ""}, {"name": "bool getPowerMultiplier(uint64_t eui64,uint8_t endpointId,bool useElectricalMeasurementCluster,uint64_t * multiplier)", "description": "Gets the power multiplier for electrical measurement.", "scope": "", "scopeKind": ""}, {"name": "void updatePowerResource(uint64_t eui64,uint8_t endpointId,int64_t val)", "description": "Updates the resource representing current power based on measurement data, applying multiplier/divisor.", "scope": "", "scopeKind": ""}, {"name": "void activePowerChanged(uint64_t eui64,uint8_t endpointId,int16_t watts,const void * ctx)", "description": "Callback for active power measurement change, updates resource.", "scope": "", "scopeKind": ""}, {"name": "void instantaneousDemandChanged(uint64_t eui64,uint8_t endpointId,int32_t kilowatts,const void * ctx)", "description": "Callback for instantaneous demand (power) change, updates resource.", "scope": "", "scopeKind": ""}, {"name": "bool getWattsFromDeviceWithType(uint64_t eui64,uint8_t endpointId,bool useEm,uint64_t * watts)", "description": "Fetches the current watts measurement from device clusters, accounting for cluster type.", "scope": "", "scopeKind": ""}, {"name": "bool fetchInitialLightResourceValues(icDevice * device,IcDiscoveredDeviceDetails * discoveredDeviceDetails,uint64_t eui64,uint8_t endpointId,uint16_t deviceId,const char * epName,icInitialResourceValues * initialResourceValues)", "description": "Reads initial state and energy measurement values for a light endpoint for resource initialization.", "scope": "", "scopeKind": ""}, {"name": "bool registerLightResources(icDevice * device,IcDiscoveredDeviceDetails * discoveredDeviceDetails,uint64_t eui64,uint8_t endpointId,const char * epName,icInitialResourceValues * initialResourceValues)", "description": "Registers resources related to a light endpoint, including on/off, level, color, and power measurement.", "scope": "", "scopeKind": ""}, {"name": "bool fetchInitialSwitchResourceValues(icDevice * device,IcDiscoveredDeviceDetails * discoveredDeviceDetails,uint64_t eui64,uint8_t endpointId,uint16_t deviceId,const char * epName,icInitialResourceValues * initialResourceValues)", "description": "Fetches initial states for switch endpoints (currently no resources).", "scope": "", "scopeKind": ""}, {"name": "bool registerSwitchResources(icDevice * device,IcDiscoveredDeviceDetails * discoveredDeviceDetails,uint64_t eui64,uint8_t endpointId,uint16_t deviceId,const char * epName,icInitialResourceValues * initialResourceValues)", "description": "Registers resources for switch endpoints (currently only endpoint creation with profile).", "scope": "", "scopeKind": ""}, {"name": "bool fetchInitialResourceValues(ZigbeeDriverCommon * ctx,icDevice * device,IcDiscoveredDeviceDetails * discoveredDeviceDetails,icInitialResourceValues * initialResourceValues)", "description": "Fetches initial resource values for all device endpoints, distinguishing between switch and light devices.", "scope": "", "scopeKind": ""}, {"name": "bool registerResources(ZigbeeDriverCommon * ctx,icDevice * device,IcDiscoveredDeviceDetails * discoveredDeviceDetails,icInitialResourceValues * initialResourceValues)", "description": "Registers resources for all device endpoints, setting up profiles and associated resources.", "scope": "", "scopeKind": ""}, {"name": "char * getColorString(uint16_t x,uint16_t y)", "description": "Creates a string representation of color coordinates.", "scope": "", "scopeKind": ""}, {"name": "const char * mapDeviceIdToProfile(ZigbeeDriverCommon * ctx,uint16_t deviceId)", "description": "Maps device IDs to device profile types.", "scope": "", "scopeKind": ""}, {"name": "bool writeEndpointResource(ZigbeeDriverCommon * ctx,uint32_t endpointNumber,icDeviceResource * resource,const char * previousValue,const char * newValue,bool * baseDriverUpdatesResource)", "description": "Writes a resource value to a device endpoint, issuing appropriate cluster commands.", "scope": "", "scopeKind": ""}, {"name": "bool preConfigureCluster(ZigbeeDriverCommon * ctx,ZigbeeCluster * cluster,DeviceConfigurationContext * deviceConfigContext)", "description": "Pre-configuration hook for clusters, suppressing metering if electrical measurement cluster is present.", "scope": "", "scopeKind": ""}, {"name": "void synchronizeDevice(ZigbeeDriverCommon * ctx,icDevice * device,IcDiscoveredDeviceDetails * details)", "description": "Synchronizes device resource states with current cluster readings.", "scope": "", "scopeKind": ""}], "calls": ["zigbeeSubsystemEui64ToId()", "zigbeeSubsystemIdToEui64()", "onOffClusterIsOn()", "onOffClusterSetOn()", "levelControlClusterGetLevel()", "levelControlClusterGetLevelString()", "levelControlClusterSetLevel()", "colorControlClusterGetX()", "colorControlClusterGetY()", "colorControlClusterMoveToColor()", "electricalMeasurementClusterGetActivePower()", "electricalMeasurementClusterGetAcPowerDivisor()", "electricalMeasurementClusterGetAcPowerMultiplier()", "meteringClusterGetDivisor()", "meteringClusterGetMultiplier()", "linkedListIteratorCreate()", "linkedListIteratorHasNext()", "linkedListIteratorGetNext()", "linkedListIteratorDestroy()", "createEndpoint()", "createEndpointResourceIfAvailable()", "createEndpointMetadata()", "zigbeeDriverCommonCreateDeviceDriver()", "zigbeeDriverCommonAddCluster()", "zigbeeDriverCommonSetEndpointNumber()", "zigbeeDriverCommonGetEndpointNumber()", "deviceServiceCallbacks->updateResource()", "deviceServiceCallbacks->getMetadata()", "deviceServiceCallbacks->setMetadata()"], "search-terms": ["zigbeeLightDeviceDriver", "onOffCluster", "levelControlCluster", "colorControlCluster", "powerMeasurement", "energyMeasurement", "resourceRegistration", "initialResourceValues", "deviceDriverInitialization", "powerResourceUpdate", "colorCoordinates", "deviceProfiles"], "state": 2, "file_id": 1023, "knowledge_revision": 14176, "git_revision": "", "ctags": [{"_type": "tag", "name": "DEVICE_CLASS_NAME", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/device/core/deviceDrivers/zigbeeLight/zigbeeLightDeviceDriver.c", "pattern": "/^#define DEVICE_CLASS_NAME /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "DIVISOR_METADATA", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/device/core/deviceDrivers/zigbeeLight/zigbeeLightDeviceDriver.c", "pattern": "/^#define DIVISOR_METADATA /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "DRIVER_NAME", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/device/core/deviceDrivers/zigbeeLight/zigbeeLightDeviceDriver.c", "pattern": "/^#define DRIVER_NAME /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "LOG_TAG", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/device/core/deviceDrivers/zigbeeLight/zigbeeLightDeviceDriver.c", "pattern": "/^#define LOG_TAG /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "MULTIPLIER_METADATA", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/device/core/deviceDrivers/zigbeeLight/zigbeeLightDeviceDriver.c", "pattern": "/^#define MULTIPLIER_METADATA /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "MY_DC_VERSION", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/device/core/deviceDrivers/zigbeeLight/zigbeeLightDeviceDriver.c", "pattern": "/^#define MY_DC_VERSION /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "POWER_MEASUREMENT_TYPE_EM", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/device/core/deviceDrivers/zigbeeLight/zigbeeLightDeviceDriver.c", "pattern": "/^#define POWER_MEASUREMENT_TYPE_EM /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "POWER_MEASUREMENT_TYPE_METADATA", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/device/core/deviceDrivers/zigbeeLight/zigbeeLightDeviceDriver.c", "pattern": "/^#define POWER_MEASUREMENT_TYPE_METADATA /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "POWER_MEASUREMENT_TYPE_SM", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/device/core/deviceDrivers/zigbeeLight/zigbeeLightDeviceDriver.c", "pattern": "/^#define POWER_MEASUREMENT_TYPE_SM /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "activePowerChanged", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/device/core/deviceDrivers/zigbeeLight/zigbeeLightDeviceDriver.c", "pattern": "/^static void activePowerChanged(uint64_t eui64,$/", "file": true, "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(uint64_t eui64,uint8_t endpointId,int16_t watts,const void * ctx)"}, {"_type": "tag", "name": "colorControlClusterCallbacks", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/device/core/deviceDrivers/zigbeeLight/zigbeeLightDeviceDriver.c", "pattern": "/^static const ColorControlClusterCallbacks colorControlClusterCallbacks =$/", "file": true, "language": "C", "typeref": "typename:const ColorControlClusterCallbacks", "kind": "variable"}, {"_type": "tag", "name": "colorControlXChanged", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/device/core/deviceDrivers/zigbeeLight/zigbeeLightDeviceDriver.c", "pattern": "/^static void colorControlXChanged(uint64_t eui64,$/", "file": true, "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(uint64_t eui64,uint8_t endpointId,uint16_t x,const void * ctx)"}, {"_type": "tag", "name": "colorControlYChanged", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/device/core/deviceDrivers/zigbeeLight/zigbeeLightDeviceDriver.c", "pattern": "/^static void colorControlYChanged(uint64_t eui64,$/", "file": true, "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(uint64_t eui64,uint8_t endpointId,uint16_t y,const void * ctx)"}, {"_type": "tag", "name": "commonCallbacks", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/device/core/deviceDrivers/zigbeeLight/zigbeeLightDeviceDriver.c", "pattern": "/^static const ZigbeeDriverCommonCallbacks commonCallbacks =$/", "file": true, "language": "C", "typeref": "typename:const ZigbeeDriverCommonCallbacks", "kind": "variable"}, {"_type": "tag", "name": "deviceServiceCallbacks", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/device/core/deviceDrivers/zigbeeLight/zigbeeLightDeviceDriver.c", "pattern": "/^static DeviceServiceCallbacks *deviceServiceCallbacks = NULL;$/", "file": true, "language": "C", "typeref": "typename:DeviceServiceCallbacks *", "kind": "variable"}, {"_type": "tag", "name": "electricalMeasurementClusterCallbacks", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/device/core/deviceDrivers/zigbeeLight/zigbeeLightDeviceDriver.c", "pattern": "/^static const ElectricalMeasurementClusterCallbacks electricalMeasurementClusterCallbacks =$/", "file": true, "language": "C", "typeref": "typename:const ElectricalMeasurementClusterCallbacks", "kind": "variable"}, {"_type": "tag", "name": "fetchInitialLightResourceValues", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/device/core/deviceDrivers/zigbeeLight/zigbeeLightDeviceDriver.c", "pattern": "/^static bool fetchInitialLightResourceValues(icDevice *device,$/", "file": true, "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(icDevice * device,IcDiscoveredDeviceDetails * discoveredDeviceDetails,uint64_t eui64,uint8_t endpointId,uint16_t deviceId,const char * epName,icInitialResourceValues * initialResourceValues)"}, {"_type": "tag", "name": "fetchInitialResourceValues", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/device/core/deviceDrivers/zigbeeLight/zigbeeLightDeviceDriver.c", "pattern": "/^static bool fetchInitialResourceValues(ZigbeeDriverCommon *ctx, icDevice *device,$/", "file": true, "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(ZigbeeDriverCommon * ctx,icDevice * device,IcDiscoveredDeviceDetails * discoveredDeviceDetails,icInitialResourceValues * initialResourceValues)"}, {"_type": "tag", "name": "fetchInitialSwitchResourceValues", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/device/core/deviceDrivers/zigbeeLight/zigbeeLightDeviceDriver.c", "pattern": "/^static bool fetchInitialSwitchResourceValues(icDevice *device,$/", "file": true, "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(icDevice * device,IcDiscoveredDeviceDetails * discoveredDeviceDetails,uint64_t eui64,uint8_t endpointId,uint16_t deviceId,const char * epName,icInitialResourceValues * initialResourceValues)"}, {"_type": "tag", "name": "getColorString", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/device/core/deviceDrivers/zigbeeLight/zigbeeLightDeviceDriver.c", "pattern": "/^static char *getColorString(uint16_t x, uint16_t y)$/", "file": true, "language": "C", "typeref": "typename:char *", "kind": "function", "signature": "(uint16_t x,uint16_t y)"}, {"_type": "tag", "name": "getPowerComponent", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/device/core/deviceDrivers/zigbeeLight/zigbeeLightDeviceDriver.c", "pattern": "/^static bool getPowerComponent(uint64_t eui64,$/", "file": true, "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(uint64_t eui64,uint8_t endpointId,bool useElectricalMeasurementCluster,bool getDivisor,uint64_t * value)"}, {"_type": "tag", "name": "getPowerDivisor", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/device/core/deviceDrivers/zigbeeLight/zigbeeLightDeviceDriver.c", "pattern": "/^static bool getPowerDivisor(uint64_t eui64, uint8_t endpointId, bool useElectricalMeasurementClu/", "file": true, "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(uint64_t eui64,uint8_t endpointId,bool useElectricalMeasurementCluster,uint64_t * divisor)"}, {"_type": "tag", "name": "getPowerMultiplier", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/device/core/deviceDrivers/zigbeeLight/zigbeeLightDeviceDriver.c", "pattern": "/^static bool getPowerMultiplier(uint64_t eui64,$/", "file": true, "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(uint64_t eui64,uint8_t endpointId,bool useElectricalMeasurementCluster,uint64_t * multiplier)"}, {"_type": "tag", "name": "getWattsFromDeviceWithType", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/device/core/deviceDrivers/zigbeeLight/zigbeeLightDeviceDriver.c", "pattern": "/^static bool getWattsFromDeviceWithType(uint64_t eui64, uint8_t endpointId, bool useEm, uint64_t /", "file": true, "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(uint64_t eui64,uint8_t endpointId,bool useEm,uint64_t * watts)"}, {"_type": "tag", "name": "instantaneousDemandChanged", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/device/core/deviceDrivers/zigbeeLight/zigbeeLightDeviceDriver.c", "pattern": "/^static void instantaneousDemandChanged(uint64_t eui64,$/", "file": true, "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(uint64_t eui64,uint8_t endpointId,int32_t kilowatts,const void * ctx)"}, {"_type": "tag", "name": "isSwitchDevice", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/device/core/deviceDrivers/zigbeeLight/zigbeeLightDeviceDriver.c", "pattern": "/^#define isSwitchDevice(/", "file": true, "language": "C", "kind": "macro", "signature": "(deviceId)"}, {"_type": "tag", "name": "levelChangedCallback", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/device/core/deviceDrivers/zigbeeLight/zigbeeLightDeviceDriver.c", "pattern": "/^static void levelChangedCallback(uint64_t eui64,$/", "file": true, "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(uint64_t eui64,uint8_t endpointId,uint8_t level,const void * ctx)"}, {"_type": "tag", "name": "levelControlClusterCallbacks", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/device/core/deviceDrivers/zigbeeLight/zigbeeLightDeviceDriver.c", "pattern": "/^static const LevelControlClusterCallbacks levelControlClusterCallbacks =$/", "file": true, "language": "C", "typeref": "typename:const LevelControlClusterCallbacks", "kind": "variable"}, {"_type": "tag", "name": "mapDeviceIdToProfile", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/device/core/deviceDrivers/zigbeeLight/zigbeeLightDeviceDriver.c", "pattern": "/^static const char *mapDeviceIdToProfile(ZigbeeDriverCommon *ctx, uint16_t deviceId)$/", "file": true, "language": "C", "typeref": "typename:const char *", "kind": "function", "signature": "(ZigbeeDriverCommon * ctx,uint16_t deviceId)"}, {"_type": "tag", "name": "meteringClusterCallbacks", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/device/core/deviceDrivers/zigbeeLight/zigbeeLightDeviceDriver.c", "pattern": "/^static const MeteringClusterCallbacks meteringClusterCallbacks =$/", "file": true, "language": "C", "typeref": "typename:const MeteringClusterCallbacks", "kind": "variable"}, {"_type": "tag", "name": "myDeviceIds", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/device/core/deviceDrivers/zigbeeLight/zigbeeLightDeviceDriver.c", "pattern": "/^static uint16_t myDeviceIds[] =$/", "file": true, "language": "C", "typeref": "typename:uint16_t[]", "kind": "variable"}, {"_type": "tag", "name": "onOffClusterCallbacks", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/device/core/deviceDrivers/zigbeeLight/zigbeeLightDeviceDriver.c", "pattern": "/^static const OnOffClusterCallbacks onOffClusterCallbacks =$/", "file": true, "language": "C", "typeref": "typename:const OnOffClusterCallbacks", "kind": "variable"}, {"_type": "tag", "name": "onOffStateChangedCallback", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/device/core/deviceDrivers/zigbeeLight/zigbeeLightDeviceDriver.c", "pattern": "/^static void onOffStateChangedCallback(uint64_t eui64,$/", "file": true, "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(uint64_t eui64,uint8_t endpointId,bool isOn,const void * ctx)"}, {"_type": "tag", "name": "preConfigureCluster", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/device/core/deviceDrivers/zigbeeLight/zigbeeLightDeviceDriver.c", "pattern": "/^static bool preConfigureCluster(ZigbeeDriverCommon *ctx,$/", "file": true, "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(ZigbeeDriverCommon * ctx,ZigbeeCluster * cluster,DeviceConfigurationContext * deviceConfigContext)"}, {"_type": "tag", "name": "registerLightResources", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/device/core/deviceDrivers/zigbeeLight/zigbeeLightDeviceDriver.c", "pattern": "/^static bool registerLightResources(icDevice *device,$/", "file": true, "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(icDevice * device,IcDiscoveredDeviceDetails * discoveredDeviceDetails,uint64_t eui64,uint8_t endpointId,const char * epName,icInitialResourceValues * initialResourceValues)"}, {"_type": "tag", "name": "registerResources", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/device/core/deviceDrivers/zigbeeLight/zigbeeLightDeviceDriver.c", "pattern": "/^registerResources(ZigbeeDriverCommon *ctx, icDevice *device, IcDiscoveredDeviceDetails *discover/", "file": true, "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(ZigbeeDriverCommon * ctx,icDevice * device,IcDiscoveredDeviceDetails * discoveredDeviceDetails,icInitialResourceValues * initialResourceValues)"}, {"_type": "tag", "name": "registerSwitchResources", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/device/core/deviceDrivers/zigbeeLight/zigbeeLightDeviceDriver.c", "pattern": "/^static bool registerSwitchResources(icDevice *device,$/", "file": true, "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(icDevice * device,IcDiscoveredDeviceDetails * discoveredDeviceDetails,uint64_t eui64,uint8_t endpointId,uint16_t deviceId,const char * epName,icInitialResourceValues * initialResourceValues)"}, {"_type": "tag", "name": "synchronizeDevice", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/device/core/deviceDrivers/zigbeeLight/zigbeeLightDeviceDriver.c", "pattern": "/^static void synchronizeDevice(ZigbeeDriverCommon *ctx, icDevice *device, IcDiscoveredDeviceDetai/", "file": true, "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(ZigbeeDriverCommon * ctx,icDevice * device,IcDiscoveredDeviceDetails * details)"}, {"_type": "tag", "name": "updateColorResource", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/device/core/deviceDrivers/zigbeeLight/zigbeeLightDeviceDriver.c", "pattern": "/^static void updateColorResource(uint64_t eui64,$/", "file": true, "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(uint64_t eui64,uint8_t endpointId,uint16_t * x,uint16_t * y)"}, {"_type": "tag", "name": "updatePowerResource", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/device/core/deviceDrivers/zigbeeLight/zigbeeLightDeviceDriver.c", "pattern": "/^static void updatePowerResource(uint64_t eui64, uint8_t endpointId, int64_t val)$/", "file": true, "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(uint64_t eui64,uint8_t endpointId,int64_t val)"}, {"_type": "tag", "name": "writeEndpointResource", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/device/core/deviceDrivers/zigbeeLight/zigbeeLightDeviceDriver.c", "pattern": "/^static bool writeEndpointResource(ZigbeeDriverCommon *ctx,$/", "file": true, "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(ZigbeeDriverCommon * ctx,uint32_t endpointNumber,icDeviceResource * resource,const char * previousValue,const char * newValue,bool * baseDriverUpdatesResource)"}, {"_type": "tag", "name": "zigbeeLightDeviceDriverInitialize", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/device/core/deviceDrivers/zigbeeLight/zigbeeLightDeviceDriver.c", "pattern": "/^DeviceDriver *zigbeeLightDeviceDriverInitialize(DeviceServiceCallbacks *deviceService)$/", "language": "C", "typeref": "typename:DeviceDriver *", "kind": "function", "signature": "(DeviceServiceCallbacks * deviceService)"}], "hash": "8949747bdfb76bc4783b28bc5c7fdc13", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "components/opensource/zilker-sdk/source/services/device/core/deviceDrivers/zigbeeLight/zigbeeLightDeviceDriver.c", "fields": [{"name": "const ColorControlClusterCallbacks colorControlClusterCallbacks", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "const ZigbeeDriverCommonCallbacks commonCallbacks", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "DeviceServiceCallbacks * deviceServiceCallbacks", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "const ElectricalMeasurementClusterCallbacks electricalMeasurementClusterCallbacks", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "const LevelControlClusterCallbacks levelControlClusterCallbacks", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "const MeteringClusterCallbacks meteringClusterCallbacks", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "uint16_t[] myDeviceIds", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "const OnOffClusterCallbacks onOffClusterCallbacks", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"14176": ""}]}