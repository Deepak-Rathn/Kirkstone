{"is_source_file": true, "format": "C", "description": "This file contains utility functions for Wi-Fi configuration and management. It features functions for converting between string and enum representations of Wi-Fi modes, handling MAC addresses, IP addresses, logging, and accessing Wi-Fi interface properties. It also defines mappings for country codes and Wi-Fi environment settings. The file appears to be part of a larger Wi-Fi or network management system, providing low-level helper functions for other components.", "external_files": ["const.h", "wifi_util.h", "wifi_ctrl.h", "wifi_mgr.h", "<netinet/in.h>", "<time.h>", "<openssl/sha.h>"], "external_methods": ["gettimeofday", "access", "popen", "pclose", "sscanf", "inet_pton", "inet_ntop", "strcmp", "strncmp", "strcpy", "snprintf", "strlen", "localtime", "syscall", "isxdigit", "fgets", "fclose", "fprintf", "vfprintf", "va_start", "va_end", "vfprintf", "syscall", "syscall(__NR_gettid)"], "published": ["test_names", "write_to_file", "copy_string", "get_interface_name_for_vap_index", "print_interface_map", "get_number_of_radios", "get_total_number_of_vaps", "get_radio_presence", "get_number_of_interfaces", "wifi_util_is_vap_index_valid", "convert_vap_name_to_index", "convert_vap_name_to_array_index", "convert_vap_index_to_vap_array_index", "convert_vap_index_to_name", "convert_radio_name_to_index", "convert_radio_index_to_radio_name", "convert_security_mode_integer_to_string", "convert_security_mode_string_to_integer", "security_mode_support_radius", "is_sec_mode_enterprise", "is_sec_mode_personal", "convert_freq_band_to_radio_index", "is_vap_private", "is_vap_xhs", "is_vap_hotspot", "is_vap_hotspot_open", "is_vap_lnf", "is_vap_lnf_psk", "is_vap_mesh", "is_vap_mesh_backhaul", "is_vap_hotspot_secure", "is_vap_lnf_radius", "is_vap_mesh_sta", "is_vap_hotspot_secure_5g", "is_vap_hotspot_secure_6g", "is_vap_hotspot_open_5g", "is_vap_hotspot_open_6g", "country_code_conversion", "country_id_conversion", "hw_mode_conversion", "ht_mode_conversion", "get_sta_vap_index_for_radio", "channel_mode_conversion", "channel_state_enum_to_str", "is_wifi_channel_valid", "is_ssid_name_valid", "str_to_mac_bytes", "string_mac_to_uint8_mac", "get_cm_mac_address", "get_ssid_from_device_mac"], "classes": [], "methods": [{"name": "int WiFi_IsValidMacAddr(const char * mac)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int channel_mode_conversion(BOOL * auto_channel_bool,char * auto_channel_string,int auto_channel_strlen,unsigned int conv_type)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int channel_state_enum_to_str(wifi_channelState_t channel_state_enum,char * channel_state_string,unsigned int channel_state_strlen)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int convert_apindex_to_ifname(wifi_platform_property_t * wifi_prop,int idx,char * if_name,unsigned int len)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int convert_ascii_string_to_bool(char * l_string,bool * l_bool_param)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int convert_bool_to_ascii_string(bool l_bool_param,char * l_string,size_t str_len)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int convert_channel_to_freq(int band,unsigned char chan)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int convert_freq_band_to_radio_index(int band,int * radio_index)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int convert_ifname_to_radio_index(wifi_platform_property_t * wifi_prop,char * if_name,unsigned int * radio_index)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int convert_ifname_to_vap_index(wifi_platform_property_t * wifi_prop,char * if_name)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int convert_ifname_to_vapname(wifi_platform_property_t * wifi_prop,char * if_name,char * vap_name,int vapname_len)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int convert_radio_index_to_freq_band(wifi_platform_property_t * wifi_prop,unsigned int radio_index,int * band)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int convert_radio_index_to_ifname(wifi_platform_property_t * wifi_prop,unsigned int radio_index,char * if_name,int ifname_len)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int convert_radio_index_to_radio_name(int index,char * name)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int convert_radio_name_to_index(unsigned int * index,char * name)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int convert_radio_name_to_radio_index(char * name)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int convert_security_mode_integer_to_string(int m,char * mode)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int convert_security_mode_string_to_integer(int * m,char * mode)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int convert_vap_index_to_name(wifi_platform_property_t * wifi_prop,int vap_index,char * vap_name)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int convert_vap_index_to_vap_array_index(wifi_platform_property_t * wifi_prop,unsigned int vap_index)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int convert_vap_name_to_array_index(wifi_platform_property_t * wifi_prop,char * vap_name)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int convert_vap_name_to_index(wifi_platform_property_t * wifi_prop,char * vap_name)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int convert_vap_name_to_radio_array_index(wifi_platform_property_t * wifi_prop,char * vap_name)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int convert_vapname_to_ifname(wifi_platform_property_t * wifi_prop,char * vap_name,char * if_name,int ifname_len)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "void copy_string(char * destination,char * source)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int country_code_conversion(wifi_countrycode_type_t * country_code,char * country,int country_len,unsigned int conv_type)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int country_id_conversion(wifi_countrycode_type_t * country_code,char * country_id,int country_id_len,unsigned int conv_type)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "unsigned int create_vap_mask(wifi_platform_property_t * wifi_prop,unsigned int num_names,...)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int cs_mode_type_conversion(cs_mode_t * cs_mode_type_enum,char * cs_mode,int cs_mode_len,unsigned int conv_type)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int cs_state_type_conversion(cs_state_t * cs_state_type_enum,char * cs_state,int cs_state_len,unsigned int conv_type)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int force_kick_type_conversion(force_kick_t * force_kick_type_enum,char * force_kick,int force_kick_len,unsigned int conv_type)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int freq_band_conversion(wifi_freq_bands_t * band_enum,char * freq_band,int freq_band_len,unsigned int conv_type)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "INT getIpAddressFromString(const char * ipString,ip_addr_t * ip)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "INT getIpStringFromAdrress(char * ipString,const ip_addr_t * ip)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int get_allowed_channels(wifi_freq_bands_t band,wifi_radio_capabilities_t * radio_cap,int * channels,int * channels_len,bool dfs_enabled)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int get_allowed_channels_str(wifi_freq_bands_t band,wifi_radio_capabilities_t * radio_cap,char * buf,size_t buf_size,bool dfs_enabled)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int get_bridgename_from_vapname(wifi_platform_property_t * wifi_prop,char * vap_name,char * bridge_name,int bridge_name_len)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int get_cm_mac_address(char * mac)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "unsigned long long int get_current_ms_time(void)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "long long int get_current_time_in_sec(void)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "char * get_formatted_time(char * time)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "wifi_interface_name_idex_map_t * get_ifname_property(wifi_platform_property_t * wifi_prop,const char * if_name,const char * func)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "wifi_interface_name_t * get_interface_name_for_vap_index(unsigned int vap_index,wifi_platform_property_t * wifi_prop)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int get_list_of_hotspot_open(wifi_platform_property_t * wifi_prop,int list_size,wifi_vap_name_t * vap_names)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int get_list_of_hotspot_secure(wifi_platform_property_t * wifi_prop,int list_size,wifi_vap_name_t * vap_names)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int get_list_of_iot_ssid(wifi_platform_property_t * wifi_prop,int list_size,wifi_vap_name_t vap_names[])", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int get_list_of_lnf_psk(wifi_platform_property_t * wifi_prop,int list_size,wifi_vap_name_t vap_names[])", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int get_list_of_lnf_radius(wifi_platform_property_t * wifi_prop,int list_size,wifi_vap_name_t vap_names[])", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int get_list_of_mesh_backhaul(wifi_platform_property_t * wifi_prop,int list_size,wifi_vap_name_t vap_names[])", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int get_list_of_mesh_sta(wifi_platform_property_t * wifi_prop,int list_size,wifi_vap_name_t vap_names[])", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int get_list_of_private_ssid(wifi_platform_property_t * wifi_prop,int list_size,wifi_vap_name_t vap_names[])", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int get_list_of_vap_names(wifi_platform_property_t * wifi_prop,wifi_vap_name_t * vap_names,int list_size,int num_types,...)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int get_number_of_interfaces(wifi_platform_property_t * wifi_prop)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int get_number_of_radios(wifi_platform_property_t * wifi_prop)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int get_radio_if_hw_type(char * str,int str_len)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int get_radio_index_for_vap_index(wifi_platform_property_t * wifi_prop,int vap_index)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "bool get_radio_presence(wifi_platform_property_t * wifi_prop,int radio_index)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int get_ssid_from_device_mac(char * ssid)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int get_sta_vap_index_for_radio(wifi_platform_property_t * wifi_prop,unsigned int radio_index)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int get_stats_cfg_id(char * key,int key_len,unsigned char * id,int id_len,const unsigned int stats_type,const unsigned int report_type,const unsigned int radio_type,const unsigned int survey_type)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int get_steering_cfg_id(char * key,int key_len,unsigned char * id,int id_len,const steering_config_t * st_cfg)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int get_steering_clients_id(char * key,int key_len,unsigned char * id,int id_len,const char * mac)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int get_total_number_of_vaps(wifi_platform_property_t * wifi_prop)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int get_vap_and_radio_index_from_vap_instance(wifi_platform_property_t * wifi_prop,uint8_t vap_instance,uint8_t * radio_index,uint8_t * vap_index)", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["get_vap_index_property", "get_vap_name_property", "get_ifname_property", "TOTAL_INTERFACES", "get_vap_name", "get_ip_addr_from_string", "get_ip_string_from_address", "uint8_mac_to_string_mac", "string_mac_to_uint8_mac", "convert_radio_name_to_radio_index", "convert_radio_index_to_radio_name", "convert_security_mode_integer_to_string", "convert_security_mode_string_to_integer", "security_mode_support_radius", "is_sec_mode_enterprise", "is_sec_mode_personal", "convert_freq_band_to_radio_index", "is_vap_private", "is_vap_xhs", "is_vap_hotspot", "is_vap_hotspot_open", "is_vap_lnf", "is_vap_lnf_psk", "is_vap_mesh", "is_vap_mesh_backhaul", "is_vap_hotspot_secure", "is_vap_lnf_radius", "is_vap_mesh_sta", "is_vap_hotspot_secure_5g", "is_vap_hotspot_secure_6g", "is_vap_hotspot_open_5g", "is_vap_hotspot_open_6g", "country_code_conversion", "country_id_conversion", "hw_mode_conversion", "ht_mode_conversion", "get_sta_vap_index_for_radio", "channel_mode_conversion", "channel_state_enum_to_str", "is_wifi_channel_valid", "get_cm_mac_address", "get_ssid_from_device_mac"], "search-terms": ["wifi_util", "convert_vap_name", "countryCode", "mac_addr", "hw_mode", "ssid", "channelState", "securityMode", "vaps", "radio", "interface_map", "wifi_platform_property"], "state": 2, "file_id": 5942, "knowledge_revision": 19054, "git_revision": "", "ctags": [{"_type": "tag", "name": "GET_IFNAME_PROPERTY", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/utils/wifi_util.c", "pattern": "/^#define GET_IFNAME_PROPERTY(/", "file": true, "language": "C", "kind": "macro", "signature": "(wifi_prop,if_name)"}, {"_type": "tag", "name": "GET_VAP_INDEX_PROPERTY", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/utils/wifi_util.c", "pattern": "/^#define GET_VAP_INDEX_PROPERTY(/", "file": true, "language": "C", "kind": "macro", "signature": "(wifi_prop,vap_index)"}, {"_type": "tag", "name": "GET_VAP_NAME_PROPERTY", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/utils/wifi_util.c", "pattern": "/^#define GET_VAP_NAME_PROPERTY(/", "file": true, "language": "C", "kind": "macro", "signature": "(wifi_prop,vap_name)"}, {"_type": "tag", "name": "LOG_PATH_PREFIX", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/utils/wifi_util.c", "pattern": "/^#define LOG_PATH_PREFIX /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "MAX_SEC_LEN", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/utils/wifi_util.c", "pattern": "/^#define MAX_SEC_LEN /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "TOTAL_INTERFACES", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/utils/wifi_util.c", "pattern": "/^#define TOTAL_INTERFACES(/", "file": true, "language": "C", "kind": "macro", "signature": "(num_iface,wifi_prop)"}, {"_type": "tag", "name": "TOTAL_VAPS", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/utils/wifi_util.c", "pattern": "/^#define TOTAL_VAPS(/", "file": true, "language": "C", "kind": "macro", "signature": "(vaps,wifi_prop)"}, {"_type": "tag", "name": "WiFi_IsValidMacAddr", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/utils/wifi_util.c", "pattern": "/^int WiFi_IsValidMacAddr(const char* mac)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(const char * mac)"}, {"_type": "tag", "name": "__ENABLE_PID__", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/utils/wifi_util.c", "pattern": "/^#define __ENABLE_PID__ /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "channel_mode_conversion", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/utils/wifi_util.c", "pattern": "/^int channel_mode_conversion(BOOL *auto_channel_bool, char *auto_channel_string, int auto_channel/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(BOOL * auto_channel_bool,char * auto_channel_string,int auto_channel_strlen,unsigned int conv_type)"}, {"_type": "tag", "name": "channel_state_enum_to_str", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/utils/wifi_util.c", "pattern": "/^int channel_state_enum_to_str(wifi_channelState_t channel_state_enum, char *channel_state_string/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(wifi_channelState_t channel_state_enum,char * channel_state_string,unsigned int channel_state_strlen)"}, {"_type": "tag", "name": "convert_apindex_to_ifname", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/utils/wifi_util.c", "pattern": "/^int convert_apindex_to_ifname(wifi_platform_property_t *wifi_prop, int idx, char *if_name, unsig/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(wifi_platform_property_t * wifi_prop,int idx,char * if_name,unsigned int len)"}, {"_type": "tag", "name": "convert_ascii_string_to_bool", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/utils/wifi_util.c", "pattern": "/^int convert_ascii_string_to_bool(char *l_string, bool *l_bool_param)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(char * l_string,bool * l_bool_param)"}, {"_type": "tag", "name": "convert_bool_to_ascii_string", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/utils/wifi_util.c", "pattern": "/^int convert_bool_to_ascii_string(bool l_bool_param, char *l_string, size_t str_len)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(bool l_bool_param,char * l_string,size_t str_len)"}, {"_type": "tag", "name": "convert_channel_to_freq", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/utils/wifi_util.c", "pattern": "/^int convert_channel_to_freq(int band, unsigned char chan)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(int band,unsigned char chan)"}, {"_type": "tag", "name": "convert_freq_band_to_radio_index", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/utils/wifi_util.c", "pattern": "/^int convert_freq_band_to_radio_index(int band, int *radio_index)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(int band,int * radio_index)"}, {"_type": "tag", "name": "convert_ifname_to_radio_index", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/utils/wifi_util.c", "pattern": "/^int convert_ifname_to_radio_index(wifi_platform_property_t *wifi_prop, char *if_name, unsigned i/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(wifi_platform_property_t * wifi_prop,char * if_name,unsigned int * radio_index)"}, {"_type": "tag", "name": "convert_ifname_to_vap_index", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/utils/wifi_util.c", "pattern": "/^int convert_ifname_to_vap_index(wifi_platform_property_t *wifi_prop, char *if_name)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(wifi_platform_property_t * wifi_prop,char * if_name)"}, {"_type": "tag", "name": "convert_ifname_to_vapname", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/utils/wifi_util.c", "pattern": "/^int convert_ifname_to_vapname(wifi_platform_property_t *wifi_prop, char *if_name, char *vap_name/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(wifi_platform_property_t * wifi_prop,char * if_name,char * vap_name,int vapname_len)"}, {"_type": "tag", "name": "convert_radio_index_to_freq_band", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/utils/wifi_util.c", "pattern": "/^int convert_radio_index_to_freq_band(wifi_platform_property_t *wifi_prop, unsigned int radio_ind/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(wifi_platform_property_t * wifi_prop,unsigned int radio_index,int * band)"}, {"_type": "tag", "name": "convert_radio_index_to_ifname", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/utils/wifi_util.c", "pattern": "/^int convert_radio_index_to_ifname(wifi_platform_property_t *wifi_prop, unsigned int radio_index,/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(wifi_platform_property_t * wifi_prop,unsigned int radio_index,char * if_name,int ifname_len)"}, {"_type": "tag", "name": "convert_radio_index_to_radio_name", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/utils/wifi_util.c", "pattern": "/^int convert_radio_index_to_radio_name(int index, char *name)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(int index,char * name)"}, {"_type": "tag", "name": "convert_radio_name_to_index", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/utils/wifi_util.c", "pattern": "/^int convert_radio_name_to_index(unsigned int *index,char *name)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(unsigned int * index,char * name)"}, {"_type": "tag", "name": "convert_radio_name_to_radio_index", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/utils/wifi_util.c", "pattern": "/^int convert_radio_name_to_radio_index(char *name)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(char * name)"}, {"_type": "tag", "name": "convert_security_mode_integer_to_string", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/utils/wifi_util.c", "pattern": "/^int convert_security_mode_integer_to_string(int m,char *mode)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(int m,char * mode)"}, {"_type": "tag", "name": "convert_security_mode_string_to_integer", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/utils/wifi_util.c", "pattern": "/^int convert_security_mode_string_to_integer(int *m,char *mode)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(int * m,char * mode)"}, {"_type": "tag", "name": "convert_vap_index_to_name", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/utils/wifi_util.c", "pattern": "/^int convert_vap_index_to_name(wifi_platform_property_t* wifi_prop, int vap_index, char *vap_name/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(wifi_platform_property_t * wifi_prop,int vap_index,char * vap_name)"}, {"_type": "tag", "name": "convert_vap_index_to_vap_array_index", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/utils/wifi_util.c", "pattern": "/^int convert_vap_index_to_vap_array_index(wifi_platform_property_t *wifi_prop, unsigned int vap_i/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(wifi_platform_property_t * wifi_prop,unsigned int vap_index)"}, {"_type": "tag", "name": "convert_vap_name_to_array_index", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/utils/wifi_util.c", "pattern": "/^int convert_vap_name_to_array_index(wifi_platform_property_t *wifi_prop, char *vap_name)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(wifi_platform_property_t * wifi_prop,char * vap_name)"}, {"_type": "tag", "name": "convert_vap_name_to_index", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/utils/wifi_util.c", "pattern": "/^int convert_vap_name_to_index(wifi_platform_property_t *wifi_prop, char *vap_name)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(wifi_platform_property_t * wifi_prop,char * vap_name)"}, {"_type": "tag", "name": "convert_vap_name_to_radio_array_index", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/utils/wifi_util.c", "pattern": "/^int convert_vap_name_to_radio_array_index(wifi_platform_property_t *wifi_prop, char *vap_name)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(wifi_platform_property_t * wifi_prop,char * vap_name)"}, {"_type": "tag", "name": "convert_vapname_to_ifname", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/utils/wifi_util.c", "pattern": "/^int convert_vapname_to_ifname(wifi_platform_property_t *wifi_prop, char *vap_name, char *if_name/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(wifi_platform_property_t * wifi_prop,char * vap_name,char * if_name,int ifname_len)"}, {"_type": "tag", "name": "copy_string", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/utils/wifi_util.c", "pattern": "/^void copy_string(char*  destination, char*  source)$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(char * destination,char * source)"}, {"_type": "tag", "name": "country_code_conversion", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/utils/wifi_util.c", "pattern": "/^int country_code_conversion(wifi_countrycode_type_t *country_code, char *country, int country_le/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(wifi_countrycode_type_t * country_code,char * country,int country_len,unsigned int conv_type)"}, {"_type": "tag", "name": "country_id_conversion", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/utils/wifi_util.c", "pattern": "/^int country_id_conversion(wifi_countrycode_type_t *country_code, char *country_id, int country_i/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(wifi_countrycode_type_t * country_code,char * country_id,int country_id_len,unsigned int conv_type)"}, {"_type": "tag", "name": "create_vap_mask", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/utils/wifi_util.c", "pattern": "/^unsigned int create_vap_mask(wifi_platform_property_t *wifi_prop, unsigned int num_names, ...)$/", "language": "C", "typeref": "typename:unsigned int", "kind": "function", "signature": "(wifi_platform_property_t * wifi_prop,unsigned int num_names,...)"}, {"_type": "tag", "name": "cs_mode_type_conversion", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/utils/wifi_util.c", "pattern": "/^int cs_mode_type_conversion(cs_mode_t *cs_mode_type_enum, char *cs_mode, int cs_mode_len, unsign/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(cs_mode_t * cs_mode_type_enum,char * cs_mode,int cs_mode_len,unsigned int conv_type)"}, {"_type": "tag", "name": "cs_state_type_conversion", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/utils/wifi_util.c", "pattern": "/^int cs_state_type_conversion(cs_state_t *cs_state_type_enum, char *cs_state, int cs_state_len, u/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(cs_state_t * cs_state_type_enum,char * cs_state,int cs_state_len,unsigned int conv_type)"}, {"_type": "tag", "name": "force_kick_type_conversion", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/utils/wifi_util.c", "pattern": "/^int force_kick_type_conversion(force_kick_t *force_kick_type_enum, char *force_kick, int force_k/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(force_kick_t * force_kick_type_enum,char * force_kick,int force_kick_len,unsigned int conv_type)"}, {"_type": "tag", "name": "freq_band_conversion", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/utils/wifi_util.c", "pattern": "/^int freq_band_conversion(wifi_freq_bands_t *band_enum, char *freq_band, int freq_band_len, unsig/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(wifi_freq_bands_t * band_enum,char * freq_band,int freq_band_len,unsigned int conv_type)"}, {"_type": "tag", "name": "getIpAddressFromString", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/utils/wifi_util.c", "pattern": "/^INT getIpAddressFromString (const char * ipString, ip_addr_t * ip)$/", "language": "C", "typeref": "typename:INT", "kind": "function", "signature": "(const char * ipString,ip_addr_t * ip)"}, {"_type": "tag", "name": "getIpStringFromAdrress", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/utils/wifi_util.c", "pattern": "/^INT getIpStringFromAdrress (char * ipString, const ip_addr_t * ip)$/", "language": "C", "typeref": "typename:INT", "kind": "function", "signature": "(char * ipString,const ip_addr_t * ip)"}, {"_type": "tag", "name": "get_allowed_channels", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/utils/wifi_util.c", "pattern": "/^int get_allowed_channels(wifi_freq_bands_t band, wifi_radio_capabilities_t *radio_cap, int *chan/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(wifi_freq_bands_t band,wifi_radio_capabilities_t * radio_cap,int * channels,int * channels_len,bool dfs_enabled)"}, {"_type": "tag", "name": "get_allowed_channels_str", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/utils/wifi_util.c", "pattern": "/^int get_allowed_channels_str(wifi_freq_bands_t band, wifi_radio_capabilities_t *radio_cap,$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(wifi_freq_bands_t band,wifi_radio_capabilities_t * radio_cap,char * buf,size_t buf_size,bool dfs_enabled)"}, {"_type": "tag", "name": "get_bridgename_from_vapname", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/utils/wifi_util.c", "pattern": "/^int get_bridgename_from_vapname(wifi_platform_property_t *wifi_prop, char *vap_name, char *bridg/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(wifi_platform_property_t * wifi_prop,char * vap_name,char * bridge_name,int bridge_name_len)"}, {"_type": "tag", "name": "get_cm_mac_address", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/utils/wifi_util.c", "pattern": "/^int get_cm_mac_address(char *mac)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(char * mac)"}, {"_type": "tag", "name": "get_current_ms_time", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/utils/wifi_util.c", "pattern": "/^unsigned long long int get_current_ms_time(void)$/", "language": "C", "typeref": "typename:unsigned long long int", "kind": "function", "signature": "(void)"}, {"_type": "tag", "name": "get_current_time_in_sec", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/utils/wifi_util.c", "pattern": "/^long long int get_current_time_in_sec(void)$/", "language": "C", "typeref": "typename:long long int", "kind": "function", "signature": "(void)"}, {"_type": "tag", "name": "get_formatted_time", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/utils/wifi_util.c", "pattern": "/^char *get_formatted_time(char *time)$/", "language": "C", "typeref": "typename:char *", "kind": "function", "signature": "(char * time)"}, {"_type": "tag", "name": "get_ifname_property", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/utils/wifi_util.c", "pattern": "/^static wifi_interface_name_idex_map_t* get_ifname_property(wifi_platform_property_t *wifi_prop, /", "file": true, "language": "C", "typeref": "typename:wifi_interface_name_idex_map_t *", "kind": "function", "signature": "(wifi_platform_property_t * wifi_prop,const char * if_name,const char * func)"}, {"_type": "tag", "name": "get_interface_name_for_vap_index", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/utils/wifi_util.c", "pattern": "/^wifi_interface_name_t *get_interface_name_for_vap_index(unsigned int vap_index, wifi_platform_pr/", "language": "C", "typeref": "typename:wifi_interface_name_t *", "kind": "function", "signature": "(unsigned int vap_index,wifi_platform_property_t * wifi_prop)"}, {"_type": "tag", "name": "get_list_of_hotspot_open", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/utils/wifi_util.c", "pattern": "/^int get_list_of_hotspot_open(wifi_platform_property_t *wifi_prop, int list_size, wifi_vap_name_t/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(wifi_platform_property_t * wifi_prop,int list_size,wifi_vap_name_t * vap_names)"}, {"_type": "tag", "name": "get_list_of_hotspot_secure", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/utils/wifi_util.c", "pattern": "/^int get_list_of_hotspot_secure(wifi_platform_property_t *wifi_prop, int list_size, wifi_vap_name/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(wifi_platform_property_t * wifi_prop,int list_size,wifi_vap_name_t * vap_names)"}, {"_type": "tag", "name": "get_list_of_iot_ssid", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/utils/wifi_util.c", "pattern": "/^int get_list_of_iot_ssid(wifi_platform_property_t *wifi_prop, int list_size, wifi_vap_name_t vap/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(wifi_platform_property_t * wifi_prop,int list_size,wifi_vap_name_t vap_names[])"}, {"_type": "tag", "name": "get_list_of_lnf_psk", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/utils/wifi_util.c", "pattern": "/^int get_list_of_lnf_psk(wifi_platform_property_t *wifi_prop, int list_size, wifi_vap_name_t vap_/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(wifi_platform_property_t * wifi_prop,int list_size,wifi_vap_name_t vap_names[])"}, {"_type": "tag", "name": "get_list_of_lnf_radius", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/utils/wifi_util.c", "pattern": "/^int get_list_of_lnf_radius(wifi_platform_property_t *wifi_prop, int list_size, wifi_vap_name_t v/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(wifi_platform_property_t * wifi_prop,int list_size,wifi_vap_name_t vap_names[])"}, {"_type": "tag", "name": "get_list_of_mesh_backhaul", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/utils/wifi_util.c", "pattern": "/^int get_list_of_mesh_backhaul(wifi_platform_property_t *wifi_prop, int list_size, wifi_vap_name_/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(wifi_platform_property_t * wifi_prop,int list_size,wifi_vap_name_t vap_names[])"}, {"_type": "tag", "name": "get_list_of_mesh_sta", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/utils/wifi_util.c", "pattern": "/^int get_list_of_mesh_sta(wifi_platform_property_t *wifi_prop, int list_size, wifi_vap_name_t vap/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(wifi_platform_property_t * wifi_prop,int list_size,wifi_vap_name_t vap_names[])"}, {"_type": "tag", "name": "get_list_of_private_ssid", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/utils/wifi_util.c", "pattern": "/^int get_list_of_private_ssid(wifi_platform_property_t *wifi_prop, int list_size, wifi_vap_name_t/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(wifi_platform_property_t * wifi_prop,int list_size,wifi_vap_name_t vap_names[])"}, {"_type": "tag", "name": "get_list_of_vap_names", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/utils/wifi_util.c", "pattern": "/^int get_list_of_vap_names(wifi_platform_property_t *wifi_prop, wifi_vap_name_t *vap_names, int l/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(wifi_platform_property_t * wifi_prop,wifi_vap_name_t * vap_names,int list_size,int num_types,...)"}, {"_type": "tag", "name": "get_number_of_interfaces", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/utils/wifi_util.c", "pattern": "/^int get_number_of_interfaces(wifi_platform_property_t *wifi_prop)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(wifi_platform_property_t * wifi_prop)"}, {"_type": "tag", "name": "get_number_of_radios", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/utils/wifi_util.c", "pattern": "/^int get_number_of_radios(wifi_platform_property_t *wifi_prop)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(wifi_platform_property_t * wifi_prop)"}, {"_type": "tag", "name": "get_radio_if_hw_type", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/utils/wifi_util.c", "pattern": "/^int get_radio_if_hw_type(char *str, int str_len)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(char * str,int str_len)"}, {"_type": "tag", "name": "get_radio_index_for_vap_index", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/utils/wifi_util.c", "pattern": "/^int get_radio_index_for_vap_index(wifi_platform_property_t* wifi_prop, int vap_index)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(wifi_platform_property_t * wifi_prop,int vap_index)"}, {"_type": "tag", "name": "get_radio_presence", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/utils/wifi_util.c", "pattern": "/^bool get_radio_presence(wifi_platform_property_t *wifi_prop, int radio_index)$/", "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(wifi_platform_property_t * wifi_prop,int radio_index)"}, {"_type": "tag", "name": "get_ssid_from_device_mac", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/utils/wifi_util.c", "pattern": "/^int get_ssid_from_device_mac(char *ssid)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(char * ssid)"}, {"_type": "tag", "name": "get_sta_vap_index_for_radio", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/utils/wifi_util.c", "pattern": "/^int get_sta_vap_index_for_radio(wifi_platform_property_t *wifi_prop, unsigned int radio_index)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(wifi_platform_property_t * wifi_prop,unsigned int radio_index)"}, {"_type": "tag", "name": "get_stats_cfg_id", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/utils/wifi_util.c", "pattern": "/^int get_stats_cfg_id(char *key, int key_len, unsigned char *id, int id_len, const unsigned int s/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(char * key,int key_len,unsigned char * id,int id_len,const unsigned int stats_type,const unsigned int report_type,const unsigned int radio_type,const unsigned int survey_type)"}, {"_type": "tag", "name": "get_steering_cfg_id", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/utils/wifi_util.c", "pattern": "/^int get_steering_cfg_id(char *key, int key_len, unsigned char * id, int id_len, const steering_c/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(char * key,int key_len,unsigned char * id,int id_len,const steering_config_t * st_cfg)"}, {"_type": "tag", "name": "get_steering_clients_id", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/utils/wifi_util.c", "pattern": "/^int get_steering_clients_id(char *key, int key_len, unsigned char *id, int id_len, const char *m/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(char * key,int key_len,unsigned char * id,int id_len,const char * mac)"}, {"_type": "tag", "name": "get_total_number_of_vaps", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/utils/wifi_util.c", "pattern": "/^int get_total_number_of_vaps(wifi_platform_property_t *wifi_prop)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(wifi_platform_property_t * wifi_prop)"}, {"_type": "tag", "name": "get_vap_and_radio_index_from_vap_instance", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/utils/wifi_util.c", "pattern": "/^int get_vap_and_radio_index_from_vap_instance(wifi_platform_property_t *wifi_prop, uint8_t vap_i/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(wifi_platform_property_t * wifi_prop,uint8_t vap_instance,uint8_t * radio_index,uint8_t * vap_index)"}], "hash": "f76ac169ec30a8692026098fffc761d6", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "rdkb/components/opensource/ccsp/OneWifi/source/utils/wifi_util.c", "revision_history": [{"19054": ""}]}