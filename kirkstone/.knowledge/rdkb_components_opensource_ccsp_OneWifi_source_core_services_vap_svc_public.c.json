{"is_source_file": true, "format": "C", "description": "This file implements core service functions related to Wi-Fi VAP management, including starting, stopping, updating configurations, managing ACL entries, and handling specific Wi-Fi events like RFC and neighbor report configurations. It includes functions for creating and updating VAPs, managing MAC address filters, and processing inline events related to Wi-Fi operations.", "external_files": ["vap_svc.h", "wifi_ctrl.h", "wifi_mgr.h", "wifi_util.h"], "external_methods": ["isVapHotspot", "getNumberRadios", "get_wifidb_vap_map", "get_wifidb_rdk_vap_info", "hash_map_create", "hash_map_count", "hash_map_get", "hash_map_put", "hash_map_get_first", "hash_map_get_next", "wifi_hal_addApAclDevice", "wifi_addApAclDevice", "wifi_hal_delApAclDevices", "wifi_delApAclDevices", "wifi_hal_setNeighborReport", "wifi_hal_createVAP", "wifi_setApMacAddressControlMode", "get_wifimgr_obj", "get_wifi_db_rfc_parameters", "get_wifidb_wifi_global_param", "get_current_ms_time", "wifidb_update_wifi_vap_info", "wifidb_update_wifi_interworking_config", "wifidb_update_wifi_security_config", "wifidb_update_wifi_passpoint_config", "wifidb_update_wifi_anqp_config", "update_global_cache", "wifidb_print", "to_mac_str", "str_tolower", "memset", "memcpy", "strcmp", "strncpy", "snprintf", "malloc", "free", "get_wifidb_radio_map", "get_wifidb_vap_map", "get_wifidb_rdk_vap_info", "wifi_vap_info_map_t", "rdk_wifi_vap_info_t", "wifi_event_type_t", "wifi_event_subtype_t", "vap_svc_event_t", "wifi_vap_info_t", "mac_address_t"], "published": ["vap_svc_is_public", "vap_svc_public_start", "vap_svc_public_stop", "vap_svc_public_update", "update_xfinity_acl_entries", "add_mac_mode_to_public_vaps", "process_prefer_private_rfc_event", "process_xfinity_enable", "process_xfinity_rrm", "process_public_service_command", "vap_svc_public_event"], "classes": [], "methods": [{"name": "bool vap_svc_is_public(unsigned int vap_index)", "description": "Determines if a given VAP (Virtual Access Point) index corresponds to a public hotspot (hotspot-enabled VAP).", "scope": "", "scopeKind": ""}, {"name": "int vap_svc_public_start(vap_svc_t * svc,unsigned int radio_index,wifi_vap_info_map_t * map)", "description": "Starts public VAP services based on radio index and configuration map. For all radios, it initiates VAP creation.", "scope": "", "scopeKind": ""}, {"name": "int vap_svc_public_stop(vap_svc_t * svc,unsigned int radio_index,wifi_vap_info_map_t * map)", "description": "Stops public VAP services based on radio index, halting all VAPs if 'WIFI_ALL_RADIO_INDICES' is specified.", "scope": "", "scopeKind": ""}, {"name": "int vap_svc_public_update(vap_svc_t * svc,unsigned int radio_index,wifi_vap_info_map_t * map,rdk_wifi_vap_info_t * rdk_vap_info)", "description": "Updates the configuration and state of public VAPs, creating or modifying VAPs, applying RFC and passpoint settings, and updating associated DB entries.", "scope": "", "scopeKind": ""}, {"name": "int update_xfinity_acl_entries(char * tgt_vap_name)", "description": "Loads and applies ACL entries (MAC filters) to the specified public VAP, synchronized with internal hash maps.", "scope": "", "scopeKind": ""}, {"name": "void add_mac_mode_to_public_vaps(bool mac_mode)", "description": "Sets the MAC address control mode (e.g., open or restricted) for all public VAPs based on the input flag.", "scope": "", "scopeKind": ""}, {"name": "void process_prefer_private_rfc_event(vap_svc_event_t event,void * data)", "description": "Handles RFC-related events for preferred private MAC address filtering and MAC mode setting.", "scope": "", "scopeKind": ""}, {"name": "void process_xfinity_enable(vap_svc_event_t event,void * data)", "description": "Processes events to enable or disable specific hotspot interfaces, updating RFC parameters accordingly.", "scope": "", "scopeKind": ""}, {"name": "void process_xfinity_rrm(vap_svc_event_t event)", "description": "Handles neighbor report configuration for 6GHz hotspots, setting neighbor report information based on current VAP configurations.", "scope": "", "scopeKind": ""}, {"name": "void process_public_service_command(vap_svc_event_t event,wifi_event_subtype_t sub_type,void * data)", "description": "Dispatches public Wi-Fi service commands based on event subtype, such as RFC settings and neighbor report updates.", "scope": "", "scopeKind": ""}, {"name": "int vap_svc_public_event(vap_svc_t * svc,wifi_event_type_t type,wifi_event_subtype_t sub_type,vap_svc_event_t event,void * arg)", "description": "Main entry point to handle Wi-Fi public service-related events, calling appropriate handlers based on event type and subtype.", "scope": "", "scopeKind": ""}, {"name": "void process_prefer_private_mac_filter(mac_address_t prefer_private_mac)", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["isVapHotspot", "getNumberRadios", "get_wifidb_vap_map", "get_wifidb_rdk_vap_info", "hash_map_create", "hash_map_count", "hash_map_get", "hash_map_put", "hash_map_get_first", "hash_map_get_next", "wifi_hal_addApAclDevice", "wifi_addApAclDevice", "wifi_hal_delApAclDevices", "wifi_delApAclDevices", "wifi_hal_setNeighborReport", "wifi_hal_createVAP", "wifi_setApMacAddressControlMode", "get_wifimgr_obj", "get_wifi_db_rfc_parameters", "get_wifidb_wifi_global_param", "get_current_ms_time", "wifidb_update_wifi_vap_info", "wifidb_update_wifi_interworking_config", "wifidb_update_wifi_security_config", "wifidb_update_wifi_passpoint_config", "wifidb_update_wifi_anqp_config", "update_global_cache", "wifidb_print", "to_mac_str", "str_tolower", "memset", "memcpy", "strcmp", "strncpy", "snprintf", "malloc", "free", "get_wifidb_radio_map", "get_wifidb_vap_map", "get_wifidb_rdk_vap_info", "wifi_hal_addApAclDevice", "wifi_addApAclDevice", "wifi_hal_delApAclDevices", "wifi_delApAclDevices", "wifi_hal_setNeighborReport", "wifi_hal_createVAP", "wifi_setApMacAddressControlMode", "get_wifidb_rdk_vap_info", "hash_map_get", "hash_map_get_next", "strstr"], "search-terms": ["vap_svc_public", "core/services/vap_svc_public.c", "public Wi-Fi", "ACL MAC filter", "RFC configuration", "neighbor report", "hotspot open/secure", "passpoint", "VAP create/update", "Wi-Fi event handling"], "state": 2, "file_id": 6030, "knowledge_revision": 19139, "git_revision": "", "ctags": [{"_type": "tag", "name": "add_mac_mode_to_public_vaps", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/services/vap_svc_public.c", "pattern": "/^void add_mac_mode_to_public_vaps(bool mac_mode)$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(bool mac_mode)"}, {"_type": "tag", "name": "process_prefer_private_mac_filter", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/services/vap_svc_public.c", "pattern": "/^void process_prefer_private_mac_filter(mac_address_t prefer_private_mac)$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(mac_address_t prefer_private_mac)"}, {"_type": "tag", "name": "process_prefer_private_rfc_event", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/services/vap_svc_public.c", "pattern": "/^void process_prefer_private_rfc_event(vap_svc_event_t event, void *data)$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(vap_svc_event_t event,void * data)"}, {"_type": "tag", "name": "process_public_service_command", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/services/vap_svc_public.c", "pattern": "/^void process_public_service_command(vap_svc_event_t event,wifi_event_subtype_t sub_type,void *da/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(vap_svc_event_t event,wifi_event_subtype_t sub_type,void * data)"}, {"_type": "tag", "name": "process_xfinity_enable", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/services/vap_svc_public.c", "pattern": "/^void process_xfinity_enable(vap_svc_event_t event, void *data)$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(vap_svc_event_t event,void * data)"}, {"_type": "tag", "name": "process_xfinity_rrm", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/services/vap_svc_public.c", "pattern": "/^void process_xfinity_rrm(vap_svc_event_t event)$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(vap_svc_event_t event)"}, {"_type": "tag", "name": "update_xfinity_acl_entries", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/services/vap_svc_public.c", "pattern": "/^int update_xfinity_acl_entries(char* tgt_vap_name)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(char * tgt_vap_name)"}, {"_type": "tag", "name": "vap_svc_is_public", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/services/vap_svc_public.c", "pattern": "/^bool vap_svc_is_public(unsigned int vap_index)$/", "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(unsigned int vap_index)"}, {"_type": "tag", "name": "vap_svc_public_event", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/services/vap_svc_public.c", "pattern": "/^int vap_svc_public_event(vap_svc_t *svc, wifi_event_type_t type, wifi_event_subtype_t sub_type, /", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(vap_svc_t * svc,wifi_event_type_t type,wifi_event_subtype_t sub_type,vap_svc_event_t event,void * arg)"}, {"_type": "tag", "name": "vap_svc_public_start", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/services/vap_svc_public.c", "pattern": "/^int vap_svc_public_start(vap_svc_t *svc, unsigned int radio_index, wifi_vap_info_map_t *map)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(vap_svc_t * svc,unsigned int radio_index,wifi_vap_info_map_t * map)"}, {"_type": "tag", "name": "vap_svc_public_stop", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/services/vap_svc_public.c", "pattern": "/^int vap_svc_public_stop(vap_svc_t *svc, unsigned int radio_index, wifi_vap_info_map_t *map)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(vap_svc_t * svc,unsigned int radio_index,wifi_vap_info_map_t * map)"}, {"_type": "tag", "name": "vap_svc_public_update", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/services/vap_svc_public.c", "pattern": "/^int vap_svc_public_update(vap_svc_t *svc, unsigned int radio_index, wifi_vap_info_map_t *map,$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(vap_svc_t * svc,unsigned int radio_index,wifi_vap_info_map_t * map,rdk_wifi_vap_info_t * rdk_vap_info)"}], "hash": "4a4be4fd72a09124faa3dc69e82d4524", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "rdkb/components/opensource/ccsp/OneWifi/source/core/services/vap_svc_public.c", "revision_history": [{"19139": ""}]}