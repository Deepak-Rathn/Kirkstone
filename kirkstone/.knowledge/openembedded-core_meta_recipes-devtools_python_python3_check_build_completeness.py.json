{"is_source_file": true, "format": "Python", "description": "This script processes a logfile to extract information about missing modules and build failures during a Python build process.", "external_files": ["sys module (standard library)"], "external_methods": ["sys.argv", "sys.exit", "open", "str.find", "print"], "published": [], "classes": [], "methods": [{"name": "<module-level code>", "description": "Main script logic that reads a logfile, searches for specific substrings related to build issues, and outputs relevant sections."}], "calls": ["sys.argv", "sys.exit", "open", "str.find", "print"], "search-terms": ["check_build_completeness", "logfile processing", "module build failure", "optional modules", "detect_modules", "setup.py"], "state": 2, "file_id": 2075, "knowledge_revision": 15224, "git_revision": "", "ctags": [{"_type": "tag", "name": "failed_to_build", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/recipes-devtools/python/python3/check_build_completeness.py", "pattern": "/^failed_to_build = logfile.find(\"Failed to build these modules:\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "failed_to_build_end", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/recipes-devtools/python/python3/check_build_completeness.py", "pattern": "/^    failed_to_build_end = logfile.find(\"\\\\n\\\\n\", failed_to_build)$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "logfile", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/recipes-devtools/python/python3/check_build_completeness.py", "pattern": "/^logfile = open(sys.argv[1]).read()$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "necessary_bits", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/recipes-devtools/python/python3/check_build_completeness.py", "pattern": "/^necessary_bits = logfile.find(\"The necessary bits to build these optional modules were not found/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "to_find_bits", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/recipes-devtools/python/python3/check_build_completeness.py", "pattern": "/^to_find_bits = logfile.find(\"To find the necessary bits, look in setup.py in detect_modules() fo/", "language": "Python", "kind": "variable"}], "hash": "38d87a6c34c389ec69ddf68c9b3b1a35", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "openembedded-core/meta/recipes-devtools/python/python3/check_build_completeness.py", "fields": [{"name": "failed_to_build = logfile.find(\"Failed to build these modules:\")", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "failed_to_build_end = logfile.find(\"\\\\n\\\\n\", failed_to_build)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "logfile = open(sys.argv[1]).read()", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "necessary_bits = logfile.find(\"The necessary bits to build these optional modules were not found/", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "to_find_bits = logfile.find(\"To find the necessary bits, look in setup.py in detect_modules() fo/", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"15224": ""}]}