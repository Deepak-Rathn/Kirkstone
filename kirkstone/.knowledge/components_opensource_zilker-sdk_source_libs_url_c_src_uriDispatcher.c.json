{"is_source_file": true, "format": "C", "description": "The file uriDispatcher.c implements a trie-based URI dispatcher for processing REST-like URIs with support for wildcards, directives, and callback handlers. It manages registration and lookup of URI templates and handlers, including variable parsing and directive handling.", "external_files": ["<icLog/logging.h>", "<icTypes/icLinkedList.h>", "<icUtil/stringUtils.h>", "<urlHelper/uriDispatcher.h>"], "external_methods": ["hashMapCreate", "hashMapDestroy", "hashMapGet", "hashMapPut", "linkedListCreate", "linkedListDestroy", "linkedListPrepend", "linkedListAppend", "linkedListFind", "linkedListGetElementAt"], "published": ["uriDispatcherCreate", "uriDispatcherDestroy", "registerUriHandler", "locateUriHandler", "uriHandlerContainerDestroy", "uriDispatcherRegisterDirective"], "classes": [], "methods": [{"name": "uriDispatcher * uriDispatcherCreate()", "description": "Creates and initializes a new URI dispatcher with an internal trie structure and directive map.", "scope": "", "scopeKind": ""}, {"name": "void uriDispatcherDestroy(uriDispatcher * dispatcher)", "description": "Cleans up and frees resources associated with a URI dispatcher.", "scope": "", "scopeKind": ""}, {"name": "uriDispatchAddResult registerUriHandler(uriDispatcher * dispatcher,const char * uriTemplate,const char * description,handleUriPath handler)", "description": "Registers a handler callback for a specified URI template with support for wildcards and directives.", "scope": "", "scopeKind": ""}, {"name": "uriHandlerContainer * locateUriHandler(uriDispatcher * dispatcher,char * uri,icStringHashMap * valuesMap)", "description": "Finds the handler associated with a given URI and extracts variable values into a provided hashmap.", "scope": "", "scopeKind": ""}, {"name": "void uriHandlerContainerDestroy(uriHandlerContainer * container)", "description": "Frees the memory associated with a uriHandlerContainer object.", "scope": "", "scopeKind": ""}, {"name": "bool uriDispatcherRegisterDirective(uriDispatcher * dispatcher,const char * directiveName,UriDispatcherDirectiveHandler handler,void * context)", "description": "Registers a directive (custom variable handler) with the dispatcher.", "scope": "", "scopeKind": ""}, {"name": "trieNode * createNode(char * name)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "void destroyDirective(variableDirective * directive)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "void destroyDirectiveEntry(void * key,void * value)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "void destroyNode(trieNode * node)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "trieNode * findChildTrieNode(trieNode * node,char * name)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "trieNode * getNodeVarChild(trieNode * node)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "bool searchListByName(void * searchVal,void * item)", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["hashMapCreate", "hashMapDestroy", "hashMapGet", "hashMapPut", "linkedListCreate", "linkedListDestroy", "linkedListPrepend", "linkedListAppend", "linkedListFind", "linkedListGetElementAt"], "search-terms": ["trie", "URI dispatcher", "wildcard variables", "callback handlers", "register URI", "lookup URI", "directives", "slash-separated tokens", "REST URI processing", "variable node", "path matching"], "state": 2, "file_id": 832, "knowledge_revision": 13995, "git_revision": "", "ctags": [{"_type": "tag", "name": "HEAD_LABEL", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/url/c/src/uriDispatcher.c", "pattern": "/^#define HEAD_LABEL /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "LOG_TAG", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/url/c/src/uriDispatcher.c", "pattern": "/^#define LOG_TAG /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "URL_SEPARATOR", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/url/c/src/uriDispatcher.c", "pattern": "/^#define URL_SEPARATOR /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "VARIABLE_BEGIN", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/url/c/src/uriDispatcher.c", "pattern": "/^#define VARIABLE_BEGIN /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "VARIABLE_END", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/url/c/src/uriDispatcher.c", "pattern": "/^#define VARIABLE_END /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "VAR_BASIC", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/url/c/src/uriDispatcher.c", "pattern": "/^    VAR_BASIC,          \\/\\/ node is a variable,$/", "file": true, "language": "C", "kind": "enumerator", "scope": "__anon6c1d539c0103", "scopeKind": "enum"}, {"_type": "tag", "name": "VAR_DIRECTIVE", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/url/c/src/uriDispatcher.c", "pattern": "/^    VAR_DIRECTIVE       \\/\\/ node is a variable that should be formatted with custom directive$/", "file": true, "language": "C", "kind": "enumerator", "scope": "__anon6c1d539c0103", "scopeKind": "enum"}, {"_type": "tag", "name": "VAR_NONE", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/url/c/src/uriDispatcher.c", "pattern": "/^    VAR_NONE,           \\/\\/ node is NOT a variable node$/", "file": true, "language": "C", "kind": "enumerator", "scope": "__anon6c1d539c0103", "scopeKind": "enum"}, {"_type": "tag", "name": "__anon6c1d539c0103", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/url/c/src/uriDispatcher.c", "pattern": "/^{$/", "file": true, "language": "C", "kind": "enum"}, {"_type": "tag", "name": "__anon6c1d539c0208", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/url/c/src/uriDispatcher.c", "pattern": "/^{$/", "file": true, "language": "C", "kind": "struct"}, {"_type": "tag", "name": "_trieNode", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/url/c/src/uriDispatcher.c", "pattern": "/^typedef struct _trieNode$/", "file": true, "language": "C", "kind": "struct"}, {"_type": "tag", "name": "_uriDispatcher", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/url/c/src/uriDispatcher.c", "pattern": "/^struct _uriDispatcher$/", "file": true, "language": "C", "kind": "struct"}, {"_type": "tag", "name": "children", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/url/c/src/uriDispatcher.c", "pattern": "/^    icLinkedList        *children;    \\/\\/ contains trieNode objects$/", "file": true, "language": "C", "typeref": "typename:icLinkedList *", "kind": "member", "scope": "_trieNode", "scopeKind": "struct"}, {"_type": "tag", "name": "context", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/url/c/src/uriDispatcher.c", "pattern": "/^    void                            *context;       \\/\\/ callback context$/", "file": true, "language": "C", "typeref": "typename:void *", "kind": "member", "scope": "__anon6c1d539c0208", "scopeKind": "struct"}, {"_type": "tag", "name": "createNode", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/url/c/src/uriDispatcher.c", "pattern": "/^static trieNode *createNode(char *name)$/", "file": true, "language": "C", "typeref": "typename:trieNode *", "kind": "function", "signature": "(char * name)"}, {"_type": "tag", "name": "destroyDirective", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/url/c/src/uriDispatcher.c", "pattern": "/^static void destroyDirective(variableDirective *directive)$/", "file": true, "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(variableDirective * directive)"}, {"_type": "tag", "name": "destroyDirectiveEntry", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/url/c/src/uriDispatcher.c", "pattern": "/^static void destroyDirectiveEntry(void *key, void *value)$/", "file": true, "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(void * key,void * value)"}, {"_type": "tag", "name": "destroyNode", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/url/c/src/uriDispatcher.c", "pattern": "/^static void destroyNode(trieNode *node)$/", "file": true, "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(trieNode * node)"}, {"_type": "tag", "name": "directive", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/url/c/src/uriDispatcher.c", "pattern": "/^    variableDirective   *directive;   \\/\\/ if varType is VAR_DIRECTIVE, the directive used to pr/", "file": true, "language": "C", "typeref": "typename:variableDirective *", "kind": "member", "scope": "_trieNode", "scopeKind": "struct"}, {"_type": "tag", "name": "directiveName", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/url/c/src/uriDispatcher.c", "pattern": "/^    char                            *directiveName; \\/\\/ the directive name as it appears in the/", "file": true, "language": "C", "typeref": "typename:char *", "kind": "member", "scope": "__anon6c1d539c0208", "scopeKind": "struct"}, {"_type": "tag", "name": "findChildTrieNode", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/url/c/src/uriDispatcher.c", "pattern": "/^static trieNode *findChildTrieNode(trieNode *node, char *name)$/", "file": true, "language": "C", "typeref": "typename:trieNode *", "kind": "function", "signature": "(trieNode * node,char * name)"}, {"_type": "tag", "name": "getNodeVarChild", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/url/c/src/uriDispatcher.c", "pattern": "/^static trieNode *getNodeVarChild(trieNode *node)$/", "file": true, "language": "C", "typeref": "typename:trieNode *", "kind": "function", "signature": "(trieNode * node)"}, {"_type": "tag", "name": "handler", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/url/c/src/uriDispatcher.c", "pattern": "/^    UriDispatcherDirectiveHandler   handler;        \\/\\/ callback to handle the directive$/", "file": true, "language": "C", "typeref": "typename:UriDispatcherDirectiveHandler", "kind": "member", "scope": "__anon6c1d539c0208", "scopeKind": "struct"}, {"_type": "tag", "name": "handler", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/url/c/src/uriDispatcher.c", "pattern": "/^    handleUriPath       handler;      \\/\\/ optional, function to call if this is the end of the /", "file": true, "language": "C", "typeref": "typename:handleUriPath", "kind": "member", "scope": "_trieNode", "scopeKind": "struct"}, {"_type": "tag", "name": "handlerDesc", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/url/c/src/uriDispatcher.c", "pattern": "/^    char                *handlerDesc; \\/\\/ optional description of the handler$/", "file": true, "language": "C", "typeref": "typename:char *", "kind": "member", "scope": "_trieNode", "scopeKind": "struct"}, {"_type": "tag", "name": "head", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/url/c/src/uriDispatcher.c", "pattern": "/^    trieNode      *head;                \\/\\/ head of the Trie$/", "file": true, "language": "C", "typeref": "typename:trieNode *", "kind": "member", "scope": "_uriDispatcher", "scopeKind": "struct"}, {"_type": "tag", "name": "label", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/url/c/src/uriDispatcher.c", "pattern": "/^    char                *label;       \\/\\/ name of the node (or variable name)$/", "file": true, "language": "C", "typeref": "typename:char *", "kind": "member", "scope": "_trieNode", "scopeKind": "struct"}, {"_type": "tag", "name": "locateUriHandler", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/url/c/src/uriDispatcher.c", "pattern": "/^uriHandlerContainer *locateUriHandler(uriDispatcher *dispatcher, char *uri, icStringHashMap *val/", "language": "C", "typeref": "typename:uriHandlerContainer *", "kind": "function", "signature": "(uriDispatcher * dispatcher,char * uri,icStringHashMap * valuesMap)"}, {"_type": "tag", "name": "registerUriHandler", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/url/c/src/uriDispatcher.c", "pattern": "/^uriDispatchAddResult registerUriHandler(uriDispatcher *dispatcher, const char *uriTemplate, cons/", "language": "C", "typeref": "typename:uriDispatchAddResult", "kind": "function", "signature": "(uriDispatcher * dispatcher,const char * uriTemplate,const char * description,handleUriPath handler)"}, {"_type": "tag", "name": "searchListByName", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/url/c/src/uriDispatcher.c", "pattern": "/^static bool searchListByName(void *searchVal, void *item)$/", "file": true, "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(void * searchVal,void * item)"}, {"_type": "tag", "name": "size", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/url/c/src/uriDispatcher.c", "pattern": "/^    uint16_t      size;                 \\/\\/ total number of nodes within this Trie$/", "file": true, "language": "C", "typeref": "typename:uint16_t", "kind": "member", "scope": "_uriDispatcher", "scopeKind": "struct"}, {"_type": "tag", "name": "trieNode", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/url/c/src/uriDispatcher.c", "pattern": "/^} trieNode;$/", "file": true, "language": "C", "typeref": "struct:_trieNode", "kind": "typedef"}, {"_type": "tag", "name": "trieVarType", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/url/c/src/uriDispatcher.c", "pattern": "/^} trieVarType;$/", "file": true, "language": "C", "typeref": "enum:__anon6c1d539c0103", "kind": "typedef"}, {"_type": "tag", "name": "uriDispatcherCreate", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/url/c/src/uriDispatcher.c", "pattern": "/^uriDispatcher *uriDispatcherCreate()$/", "language": "C", "typeref": "typename:uriDispatcher *", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "uriDispatcherDestroy", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/url/c/src/uriDispatcher.c", "pattern": "/^void uriDispatcherDestroy(uriDispatcher *dispatcher)$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(uriDispatcher * dispatcher)"}, {"_type": "tag", "name": "uriDispatcherRegisterDirective", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/url/c/src/uriDispatcher.c", "pattern": "/^bool uriDispatcherRegisterDirective(uriDispatcher *dispatcher, const char *directiveName,$/", "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(uriDispatcher * dispatcher,const char * directiveName,UriDispatcherDirectiveHandler handler,void * context)"}, {"_type": "tag", "name": "uriHandlerContainerDestroy", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/url/c/src/uriDispatcher.c", "pattern": "/^void uriHandlerContainerDestroy(uriHandlerContainer *container)$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(uriHandlerContainer * container)"}, {"_type": "tag", "name": "varType", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/url/c/src/uriDispatcher.c", "pattern": "/^    trieVarType         varType;      \\/\\/ if not NONE, use label as the variable name$/", "file": true, "language": "C", "typeref": "typename:trieVarType", "kind": "member", "scope": "_trieNode", "scopeKind": "struct"}, {"_type": "tag", "name": "variableDirective", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/url/c/src/uriDispatcher.c", "pattern": "/^} variableDirective;$/", "file": true, "language": "C", "typeref": "struct:__anon6c1d539c0208", "kind": "typedef"}, {"_type": "tag", "name": "variableDirectives", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/url/c/src/uriDispatcher.c", "pattern": "/^    icHashMap     *variableDirectives;  \\/\\/ Map of directive name -> variableDirective$/", "file": true, "language": "C", "typeref": "typename:icHashMap *", "kind": "member", "scope": "_uriDispatcher", "scopeKind": "struct"}], "hash": "331e1cbf81e7e58a1806a9569b689d07", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "components/opensource/zilker-sdk/source/libs/url/c/src/uriDispatcher.c", "fields": [{"name": "icLinkedList * children", "scope": "_trieNode", "scopeKind": "struct", "description": "unavailable"}, {"name": "void * context", "scope": "__anon6c1d539c0208", "scopeKind": "struct", "description": "unavailable"}, {"name": "variableDirective * directive", "scope": "_trieNode", "scopeKind": "struct", "description": "unavailable"}, {"name": "char * directiveName", "scope": "__anon6c1d539c0208", "scopeKind": "struct", "description": "unavailable"}, {"name": "UriDispatcherDirectiveHandler handler", "scope": "__anon6c1d539c0208", "scopeKind": "struct", "description": "unavailable"}, {"name": "handleUriPath handler", "scope": "_trieNode", "scopeKind": "struct", "description": "unavailable"}, {"name": "char * handlerDesc", "scope": "_trieNode", "scopeKind": "struct", "description": "unavailable"}, {"name": "trieNode * head", "scope": "_uriDispatcher", "scopeKind": "struct", "description": "unavailable"}, {"name": "char * label", "scope": "_trieNode", "scopeKind": "struct", "description": "unavailable"}, {"name": "uint16_t size", "scope": "_uriDispatcher", "scopeKind": "struct", "description": "unavailable"}, {"name": "trieVarType varType", "scope": "_trieNode", "scopeKind": "struct", "description": "unavailable"}, {"name": "icHashMap * variableDirectives", "scope": "_uriDispatcher", "scopeKind": "struct", "description": "unavailable"}], "revision_history": [{"13995": ""}]}