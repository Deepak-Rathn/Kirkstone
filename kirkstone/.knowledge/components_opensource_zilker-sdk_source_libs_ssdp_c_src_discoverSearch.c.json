{"is_source_file": true, "format": "C", "description": "Source file implementing SSDP discovery search logic, including creation, destruction, and management of discoverSearch objects, as well as IP address lookup functions.", "external_files": ["discoverSearch.h", "linkedListCreate", "linkedListDestroy", "linkedListFind", "linkedListAppend"], "external_methods": ["linkedListCreate", "linkedListDestroy", "linkedListFind", "linkedListAppend"], "published": ["createDiscoverSearch", "destroyDiscoverSearch", "discoverSearchDidProcessedIp", "discoverSearchAddProcessedIp"], "classes": [], "methods": [{"name": "discoverSearch * createDiscoverSearch()", "description": "Allocates and initializes a new discoverSearch object, including creation of linked lists for target search list and processed IPs.", "scope": "", "scopeKind": ""}, {"name": "void destroyDiscoverSearch(discoverSearch * obj)", "description": "Safely releases memory associated with a discoverSearch object, including its internal linked lists.", "scope": "", "scopeKind": ""}, {"name": "bool discoverSearchDidProcessedIp(discoverSearch * obj,char * ipAddress)", "description": "Checks if a given IP address has already been processed in the current discovery search.", "scope": "", "scopeKind": ""}, {"name": "void discoverSearchAddProcessedIp(discoverSearch * obj,char * ipAddress)", "description": "Adds an IP address to the processed list to prevent re-processing in subsequent searches.", "scope": "", "scopeKind": ""}, {"name": "bool findIpAddressInList(void * searchVal,void * item)", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["linkedListCreate", "linkedListDestroy", "linkedListFind", "linkedListAppend", "malloc", "free", "memset", "strcasecmp", "strdup"], "search-terms": ["discoverSearch", "SSDP", "discovery", "IP address list", "processed list", "linked list management", "search targets"], "state": 2, "file_id": 795, "knowledge_revision": 13961, "git_revision": "", "ctags": [{"_type": "tag", "name": "createDiscoverSearch", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/ssdp/c/src/discoverSearch.c", "pattern": "/^discoverSearch *createDiscoverSearch()$/", "language": "C", "typeref": "typename:discoverSearch *", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "destroyDiscoverSearch", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/ssdp/c/src/discoverSearch.c", "pattern": "/^void destroyDiscoverSearch(discoverSearch *obj)$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(discoverSearch * obj)"}, {"_type": "tag", "name": "discoverSearchAddProcessedIp", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/ssdp/c/src/discoverSearch.c", "pattern": "/^void discoverSearchAddProcessedIp(discoverSearch *obj, char *ipAddress)$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(discoverSearch * obj,char * ipAddress)"}, {"_type": "tag", "name": "discoverSearchDidProcessedIp", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/ssdp/c/src/discoverSearch.c", "pattern": "/^bool discoverSearchDidProcessedIp(discoverSearch *obj, char *ipAddress)$/", "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(discoverSearch * obj,char * ipAddress)"}, {"_type": "tag", "name": "findIpAddressInList", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/ssdp/c/src/discoverSearch.c", "pattern": "/^static bool findIpAddressInList(void *searchVal, void *item)$/", "file": true, "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(void * searchVal,void * item)"}], "hash": "b38ee4f59a38356189827eb55295830a", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "components/opensource/zilker-sdk/source/libs/ssdp/c/src/discoverSearch.c", "revision_history": [{"13961": ""}]}