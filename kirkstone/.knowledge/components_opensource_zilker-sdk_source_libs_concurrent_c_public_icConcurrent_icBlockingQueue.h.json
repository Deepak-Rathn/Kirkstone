{"is_source_file": true, "format": "C header file", "description": "This file defines the interface of a thread-safe blocking queue implementation in C. It specifies data types, function prototypes for creating, destroying, enqueueing, dequeueing, and manipulating the queue, along with callback function types for item management operations.", "external_files": ["<stdint.h>", "<stdbool.h>", "<limits.h>"], "external_methods": [], "published": ["blockingQueueCreate", "blockingQueueDestroy", "blockingQueueCount", "blockingQueuePush", "blockingQueuePushTimeout", "blockingQueuePushTimeoutGranular", "blockingQueuePop", "blockingQueuePopTimeout", "blockingQueuePopTimeoutGranular", "blockingQueueDelete", "blockingQueueIterate", "blockingQueueClear", "blockingQueueDisable", "blockingQueueIsDisabled"], "classes": [], "methods": [{"name": "blockingQueueCreate", "description": "Creates a new blocking queue with a specified maximum capacity."}, {"name": "blockingQueueDestroy", "description": "Destroys a queue instance, optionally freeing contained items using a custom free function."}, {"name": "blockingQueueCount", "description": "Returns the number of items currently in the queue."}, {"name": "blockingQueuePush", "description": "Adds an item to the end of the queue."}, {"name": "blockingQueuePushTimeout", "description": "Adds an item to the queue, blocking with a timeout if the queue is full."}, {"name": "blockingQueuePushTimeoutGranular", "description": "Adds an item to the queue with nanosecond-precision timeout."}, {"name": "blockingQueuePop", "description": "Removes and returns the next item from the queue, blocking indefinitely if empty."}, {"name": "blockingQueuePopTimeout", "description": "Removes and returns the next item, with a timeout option."}, {"name": "blockingQueuePopTimeoutGranular", "description": "Removes and returns the next item with nanosecond-precision timeout."}, {"name": "blockingQueueDelete", "description": "Finds and deletes an item matching a search criterion using a compare function."}, {"name": "blockingQueueIterate", "description": "Iterates over items, calling a callback function."}, {"name": "blockingQueueClear", "description": "Clears the queue, freeing items optionally with a custom function."}, {"name": "blockingQueueDisable", "description": "Disables the queue from accepting new items and unblocks waiting calls."}, {"name": "blockingQueueIsDisabled", "description": "Checks if the queue is disabled."}], "search-terms": ["icBlockingQueue", "blockingQueueCreate", "blockingQueueDestroy", "blockingQueuePush", "blockingQueuePop", "blockingQueueDelete", "blockingQueueIterate", "blockingQueueDisable", "concurrent queue", "thread-safe queue"], "state": 2, "file_id": 895, "knowledge_revision": 14054, "git_revision": "", "ctags": [{"_type": "tag", "name": "BLOCKINGQUEUE_MAX_CAPACITY", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/public/icConcurrent/icBlockingQueue.h", "pattern": "/^#define BLOCKINGQUEUE_MAX_CAPACITY /", "language": "C++", "kind": "macro"}, {"_type": "tag", "name": "BLOCKINGQUEUE_TIMEOUT_INFINITE", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/public/icConcurrent/icBlockingQueue.h", "pattern": "/^#define BLOCKINGQUEUE_TIMEOUT_INFINITE /", "language": "C++", "kind": "macro"}, {"_type": "tag", "name": "ZILKER_ICBLOCKINGQUEUE_H", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/public/icConcurrent/icBlockingQueue.h", "pattern": "/^#define ZILKER_ICBLOCKINGQUEUE_H$/", "language": "C++", "kind": "macro"}, {"_type": "tag", "name": "blockingQueueCompareFunc", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/public/icConcurrent/icBlockingQueue.h", "pattern": "/^typedef bool (*blockingQueueCompareFunc)(void *searchVal, void *item);$/", "language": "C++", "typeref": "typename:bool (*)(void * searchVal,void * item)", "kind": "typedef"}, {"_type": "tag", "name": "blockingQueueItemFreeFunc", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/public/icConcurrent/icBlockingQueue.h", "pattern": "/^typedef void (*blockingQueueItemFreeFunc)(void *item);$/", "language": "C++", "typeref": "typename:void (*)(void * item)", "kind": "typedef"}, {"_type": "tag", "name": "blockingQueueIterateFunc", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/public/icConcurrent/icBlockingQueue.h", "pattern": "/^typedef bool (*blockingQueueIterateFunc)(void *item, void *arg);$/", "language": "C++", "typeref": "typename:bool (*)(void * item,void * arg)", "kind": "typedef"}, {"_type": "tag", "name": "icBlockingQueue", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/public/icConcurrent/icBlockingQueue.h", "pattern": "/^typedef struct _icBlockingQueue icBlockingQueue;$/", "language": "C++", "typeref": "struct:_icBlockingQueue", "kind": "typedef"}], "hash": "73483939635cbb74b49ea65f3e228bb3", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "components/opensource/zilker-sdk/source/libs/concurrent/c/public/icConcurrent/icBlockingQueue.h", "revision_history": [{"14054": ""}]}