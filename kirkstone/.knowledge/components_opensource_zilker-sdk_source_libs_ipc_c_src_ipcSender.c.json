{"is_source_file": true, "format": "C", "description": "This file contains client-side functions for making IPC (Inter-Process Communication) calls to services, including checking service availability, waiting for services, and sending IPC requests via sockets. It implements mechanisms for connecting to services, handling responses, and managing communication timeouts.", "external_files": ["icLog/logging.h", "icIpc/ipcSender.h", "ipcCommon.h", "serviceRegistry.h", "transport/transport.h"], "external_methods": ["sendServiceRequest", "transport_connect", "transport_send", "transport_recv", "transport_close", "transport_shutdown", "getServiceAddressForIpcPort", "transport_free_msg"], "published": ["isServiceAvailable", "waitForServiceAvailable", "sendServiceRequest", "sendServiceRequestTimeout", "ipcSenderShutdown"], "classes": [], "methods": [{"name": "bool isServiceAvailable(uint16_t servicePortNum)", "description": "Checks if a local service on a given port is alive by sending a PING request and awaiting a PING response.", "scope": "", "scopeKind": ""}, {"name": "bool waitForServiceAvailable(uint16_t servicePortNum,time_t timeoutSecs)", "description": "Repeatedly checks for a service's availability until it responds or a timeout occurs.", "scope": "", "scopeKind": ""}, {"name": "IPCCode sendServiceRequest(uint16_t servicePortNum,IPCMessage * request,IPCMessage * response)", "description": "Sends an IPC request to a service and waits for a response using default timeout.", "scope": "", "scopeKind": ""}, {"name": "IPCCode sendServiceRequestTimeout(uint16_t servicePortNum,IPCMessage * request,IPCMessage * response,time_t readTimeoutSecs)", "description": "Sends an IPC request to a service with a specified response wait timeout, handling socket connection, data transfer, and response processing.", "scope": "", "scopeKind": ""}, {"name": "void ipcSenderShutdown()", "description": "Shuts down any pending IPC senders by shutting down the transport layer.", "scope": "", "scopeKind": ""}], "calls": ["transport_connect", "transport_send", "transport_recv", "transport_close", "getServiceAddressForIpcPort", "transport_free_msg"], "search-terms": ["IPC", "ipcSender", "service port check", "send IPC message", "socket IPC C", "client IPC functions"], "state": 2, "file_id": 739, "knowledge_revision": 13898, "git_revision": "", "ctags": [{"_type": "tag", "name": "DEFAULT_READ_TIMEOUT_SECS", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/ipc/c/src/ipcSender.c", "pattern": "/^#define DEFAULT_READ_TIMEOUT_SECS /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "DEFAULT_WRITE_TIMEOUT_SECS", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/ipc/c/src/ipcSender.c", "pattern": "/^#define DEFAULT_WRITE_TIMEOUT_SECS /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "ipcSenderShutdown", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/ipc/c/src/ipcSender.c", "pattern": "/^void ipcSenderShutdown()$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "isServiceAvailable", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/ipc/c/src/ipcSender.c", "pattern": "/^bool isServiceAvailable(uint16_t servicePortNum)$/", "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(uint16_t servicePortNum)"}, {"_type": "tag", "name": "sendServiceRequest", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/ipc/c/src/ipcSender.c", "pattern": "/^IPCCode sendServiceRequest(uint16_t servicePortNum, IPCMessage *request, IPCMessage *response)$/", "language": "C", "typeref": "typename:IPCCode", "kind": "function", "signature": "(uint16_t servicePortNum,IPCMessage * request,IPCMessage * response)"}, {"_type": "tag", "name": "sendServiceRequestTimeout", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/ipc/c/src/ipcSender.c", "pattern": "/^IPCCode sendServiceRequestTimeout(uint16_t servicePortNum, IPCMessage *request, IPCMessage *resp/", "language": "C", "typeref": "typename:IPCCode", "kind": "function", "signature": "(uint16_t servicePortNum,IPCMessage * request,IPCMessage * response,time_t readTimeoutSecs)"}, {"_type": "tag", "name": "waitForServiceAvailable", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/ipc/c/src/ipcSender.c", "pattern": "/^bool waitForServiceAvailable(uint16_t servicePortNum, time_t timeoutSecs)$/", "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(uint16_t servicePortNum,time_t timeoutSecs)"}], "hash": "4b19d4e4a01e5fd545079a2a535b01c1", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "components/opensource/zilker-sdk/source/libs/ipc/c/src/ipcSender.c", "revision_history": [{"13898": ""}]}