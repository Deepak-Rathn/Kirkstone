{"is_source_file": true, "format": "C", "description": "This source file provides wrapper implementations for platform hardware abstraction layer (HAL) APIs related to platform configuration, management, and monitoring in a networking device. It includes functions for retrieving and setting device parameters such as MAC address, firmware version, memory sizes, fan controls, and network settings, as well as initiating certain platform features.", "external_files": ["ssp_tdk_platform_hal_wrp.h", "ssp_hal_logger.h"], "external_methods": ["platform_hal_DocsisParamsDBInit", "platform_hal_GetBaseMacAddress", "platform_hal_GetBootloaderVersion", "platform_hal_GetDeviceConfigStatus", "platform_hal_getFactoryPartnerId", "platform_hal_GetFirmwareName", "platform_hal_GetFreeMemorySize", "platform_hal_GetHardware", "platform_hal_GetHardware_MemFree", "platform_hal_GetHardwareVersion", "platform_hal_GetHardware_MemUsed", "platform_hal_GetModelName", "platform_hal_GetSerialNumber", "platform_hal_GetSNMPEnable", "platform_hal_GetSoftwareVersion", "platform_hal_GetSSHEnable", "platform_hal_GetTelnetEnable", "platform_hal_GetTotalMemorySize", "platform_hal_GetUsedMemorySize", "platform_hal_GetWebUITimeout", "platform_hal_PandMDBInit", "platform_hal_SetSNMPEnable", "platform_hal_SetSSHEnable", "platform_hal_SetTelnetEnable", "platform_hal_SetWebUITimeout", "platform_hal_GetFactoryResetCount", "platform_hal_ClearResetCount", "platform_hal_getTimeOffSet", "platform_hal_getCMTSMac", "platform_hal_GetChipTemperature", "platform_hal_getFanSpeed", "platform_hal_SetFanSpeed", "platform_hal_SetMACsecEnable", "platform_hal_GetMACsecEnable", "platform_hal_GetMACsecOperationalStatus", "platform_hal_getFactoryCmVariant", "platform_hal_setFactoryCmVariant", "platform_hal_getRPM", "platform_hal_getRotorLock", "platform_hal_getFanStatus", "platform_hal_setFanMaxOverride", "platform_hal_SetSNMPOnboardRebootEnable", "platform_hal_GetRouterRegion", "platform_hal_GetMemoryPaths", "platform_hal_SetLowPowerModeState", "platform_hal_StartMACsec", "platform_hal_StopMACsec", "platform_hal_GetWebAccessLevel", "platform_hal_setDscp", "platform_hal_resetDscpCounts", "platform_hal_getDscpClientList"], "published": ["platform_hal_DocsisParamsDBInit", "platform_hal_GetBaseMacAddress", "platform_hal_GetBootloaderVersion", "platform_hal_GetDeviceConfigStatus", "platform_hal_getFactoryPartnerId", "platform_hal_GetFirmwareName", "platform_hal_GetFreeMemorySize", "platform_hal_GetHardware", "platform_hal_GetHardware_MemFree", "platform_hal_GetHardwareVersion", "platform_hal_GetHardware_MemUsed", "platform_hal_GetModelName", "platform_hal_GetSerialNumber", "platform_hal_GetSNMPEnable", "platform_hal_GetSoftwareVersion", "platform_hal_GetSSHEnable", "platform_hal_GetTelnetEnable", "platform_hal_GetTotalMemorySize", "platform_hal_GetUsedMemorySize", "platform_hal_GetWebUITimeout", "platform_hal_PandMDBInit", "platform_hal_SetSNMPEnable", "platform_hal_SetSSHEnable", "platform_hal_SetTelnetEnable", "platform_hal_SetWebUITimeout", "platform_hal_GetFactoryResetCount", "platform_hal_ClearResetCount", "platform_hal_getTimeOffSet", "platform_hal_getCMTSMac", "platform_hal_GetChipTemperature", "platform_hal_getFanSpeed", "platform_hal_SetFanSpeed", "platform_hal_SetMACsecEnable", "platform_hal_GetMACsecEnable", "platform_hal_GetMACsecOperationalStatus", "platform_hal_getFactoryCmVariant", "platform_hal_setFactoryCmVariant", "platform_hal_getRPM", "platform_hal_getRotorLock", "platform_hal_getFanStatus", "platform_hal_setFanMaxOverride", "platform_hal_SetSNMPOnboardRebootEnable", "platform_hal_GetRouterRegion", "platform_hal_GetMemoryPaths", "platform_hal_SetLowPowerModeState", "platform_hal_StartMACsec", "platform_hal_StopMACsec", "platform_hal_GetWebAccessLevel", "platform_hal_setDscp", "platform_hal_resetDscpCounts", "platform_hal_getDscpClientList"], "classes": [], "methods": [{"name": "int ssp_DocsisParamsDBInit()", "description": "Wrapper for initializing Docsis database via HAL.", "scope": "", "scopeKind": ""}, {"name": "int ssp_GetBaseMacAddress(char * pValue)", "description": "Wrapper to fetch device MAC address.", "scope": "", "scopeKind": ""}, {"name": "int ssp_GetBootloaderVersion(char * pValue,unsigned long int maxSize)", "description": "Wrapper to retrieve the bootloader version.", "scope": "", "scopeKind": ""}, {"name": "int ssp_GetDeviceConfigStatus(char * pValue)", "description": "Wrapper to get device configuration status.", "scope": "", "scopeKind": ""}, {"name": "int ssp_getFactoryPartnerId(char * pValue)", "description": "Wrapper to obtain factory partner ID.", "scope": "", "scopeKind": ""}, {"name": "int ssp_GetFirmwareName(char * pValue,unsigned long int maxSize)", "description": "Wrapper to get firmware name.", "scope": "", "scopeKind": ""}, {"name": "int ssp_GetFreeMemorySize(unsigned long int * pulSize)", "description": "Wrapper to fetch free memory size.", "scope": "", "scopeKind": ""}, {"name": "int ssp_GetHardware(char * pValue)", "description": "Wrapper to get hardware info.", "scope": "", "scopeKind": ""}, {"name": "int ssp_GetHardwareMemFree(char * pValue)", "description": "Wrapper to get free hardware memory.", "scope": "", "scopeKind": ""}, {"name": "int ssp_GetHardwareVersion(char * rx_test)", "description": "Wrapper to get hardware version.", "scope": "", "scopeKind": ""}, {"name": "int ssp_GetHardwareMemUsed(char * pValue)", "description": "Wrapper to get used hardware memory.", "scope": "", "scopeKind": ""}, {"name": "int ssp_GetModelName(char * pValue)", "description": "Wrapper to get device model name.", "scope": "", "scopeKind": ""}, {"name": "int ssp_GetSerialNumber(char * pValue)", "description": "Wrapper to get device serial number.", "scope": "", "scopeKind": ""}, {"name": "int ssp_GetSNMPEnable(char * pValue)", "description": "Wrapper to get SNMP enable status.", "scope": "", "scopeKind": ""}, {"name": "int ssp_GetSoftwareVersion(char * pValue,unsigned long int maxSize)", "description": "Wrapper to get software version.", "scope": "", "scopeKind": ""}, {"name": "int ssp_GetSSHEnable(BOOLEAN * pflag)", "description": "Wrapper to get SSH enable status.", "scope": "", "scopeKind": ""}, {"name": "int ssp_GetTelEnable(BOOLEAN * pflag)", "description": "Wrapper to get Telnet enable status.", "scope": "", "scopeKind": ""}, {"name": "int ssp_GetTotalMemorySize(unsigned long int * pulSize)", "description": "Wrapper to get total memory size.", "scope": "", "scopeKind": ""}, {"name": "int ssp_GetUsedMemorySize(unsigned long int * pulSize)", "description": "Wrapper to get used memory size.", "scope": "", "scopeKind": ""}, {"name": "int ssp_GetWebUITimeout(unsigned long int * pulSize)", "description": "Wrapper to get Web UI timeout configuration.", "scope": "", "scopeKind": ""}, {"name": "int ssp_PandMDBInit()", "description": "Wrapper to initialize PandMDB.", "scope": "", "scopeKind": ""}, {"name": "int ssp_SetSNMPEnable(char * pEnable)", "description": "Wrapper to set SNMP enable/disable.", "scope": "", "scopeKind": ""}, {"name": "int ssp_SetSSHEnable(BOOLEAN flag)", "description": "Wrapper to enable/disable SSH.", "scope": "", "scopeKind": ""}, {"name": "int ssp_SetTelnetEnable(BOOLEAN flag)", "description": "Wrapper to enable/disable Telnet.", "scope": "", "scopeKind": ""}, {"name": "int ssp_SetWebUITimeout(unsigned long int Value)", "description": "Wrapper to set Web UI timeout.", "scope": "", "scopeKind": ""}, {"name": "int ssp_GetFactoryResetCount(unsigned long int * pulSize)", "description": "Wrapper to retrieve factory reset count.", "scope": "", "scopeKind": ""}, {"name": "int ssp_ClearResetCount(BOOLEAN flag)", "description": "Wrapper to clear reset count.", "scope": "", "scopeKind": ""}, {"name": "int ssp_GetTimeOffSet(char * pValue)", "description": "Wrapper to get device time offset.", "scope": "", "scopeKind": ""}, {"name": "int ssp_GetCMTSMac(char * pValue)", "description": "Wrapper to get CMTS MAC address.", "scope": "", "scopeKind": ""}, {"name": "int ssp_GetChipTemperature(unsigned int chipIndex,unsigned long int * pTempValue)", "description": "Wrapper to get chip temperature.", "scope": "", "scopeKind": ""}, {"name": "int ssp_GetFanSpeed(unsigned int fanIndex,unsigned long int * pSpeedValue)", "description": "Wrapper to get fan speed.", "scope": "", "scopeKind": ""}, {"name": "int ssp_SetFanSpeed(unsigned long int Value)", "description": "Wrapper to set fan speed.", "scope": "", "scopeKind": ""}, {"name": "int ssp_SetMACsecEnable(int ethPort,BOOLEAN flag)", "description": "Wrapper to enable/disable MACsec.", "scope": "", "scopeKind": ""}, {"name": "int ssp_GetMACsecEnable(int ethPort,BOOLEAN * pflag)", "description": "Wrapper to get MACsec enable status.", "scope": "", "scopeKind": ""}, {"name": "int ssp_GetMACsecOperationalStatus(int ethPort,BOOLEAN * pflag)", "description": "Wrapper to get MACsec operational status.", "scope": "", "scopeKind": ""}, {"name": "int ssp_getFactoryCmVariant(char * pValue)", "description": "Wrapper to get factory CM variant.", "scope": "", "scopeKind": ""}, {"name": "int ssp_setFactoryCmVariant(char * pValue)", "description": "Wrapper to set factory CM variant.", "scope": "", "scopeKind": ""}, {"name": "int ssp_getRPM(unsigned int fanIndex,unsigned int * rpmbuf)", "description": "Wrapper to get fan RPM.", "scope": "", "scopeKind": ""}, {"name": "int ssp_getRotorLock(unsigned int fanIndex,int * rotorLockbuf)", "description": "Wrapper to get rotor lock status.", "scope": "", "scopeKind": ""}, {"name": "int ssp_getFanStatus(unsigned int fanIndex,int * flag)", "description": "Wrapper to get fan status.", "scope": "", "scopeKind": ""}, {"name": "int ssp_setFanMaxOverride(BOOLEAN flag,unsigned int fanIndex)", "description": "Wrapper to override max fan speed.", "scope": "", "scopeKind": ""}, {"name": "int ssp_SetSNMPOnboardRebootEnable(char * pEnable)", "description": "Wrapper to enable/disable SNMP onboard reboot.", "scope": "", "scopeKind": ""}, {"name": "int ssp_GetRouterRegion(char * pValue)", "description": "Wrapper to get router region.", "scope": "", "scopeKind": ""}, {"name": "int ssp_GetMemoryPaths(RDK_CPUS index,PPLAT_PROC_MEM_INFO * ppinfo)", "description": "Wrapper to get memory paths.", "scope": "", "scopeKind": ""}, {"name": "int ssp_SetLowPowerModeState(PSM_STATE state)", "description": "Wrapper to set low power mode.", "scope": "", "scopeKind": ""}, {"name": "int ssp_StartMACsec(int ethPort,int timeout)", "description": "Wrapper to start MACsec.", "scope": "", "scopeKind": ""}, {"name": "int ssp_StopMACsec(int ethPort)", "description": "Wrapper to stop MACsec.", "scope": "", "scopeKind": ""}, {"name": "int ssp_GetWebAccessLevel(int user,int index,unsigned long int * pulValue)", "description": "Wrapper to get web access level.", "scope": "", "scopeKind": ""}, {"name": "int ssp_setDscp(WAN_INTERFACE interfaceType,TRAFFIC_CNT_COMMAND cmd,char * dscpVal)", "description": "Wrapper to set DSCP policy.", "scope": "", "scopeKind": ""}, {"name": "int ssp_resetDscpCounts(WAN_INTERFACE interfaceType)", "description": "Wrapper to reset DSCP counters.", "scope": "", "scopeKind": ""}, {"name": "int ssp_getDscpClientList(WAN_INTERFACE interfaceType,pDSCP_list_t DSCP_List)", "description": "Wrapper to get DSCP client list.", "scope": "", "scopeKind": ""}], "search-terms": ["tdkb_lib", "ssp_tdk_platform_hal_wrp", "platform_hal_getFanSpeed", "platform_hal_getChipTemperature", "platform_hal_getCMTSMac", "platform_hal_getFactoryCmVariant", "pfPlatform_hal_StartMACsec", "platform_hal_getDscpClientList"], "state": 2, "file_id": 5577, "knowledge_revision": 18700, "git_revision": "", "ctags": [{"_type": "tag", "name": "ssp_ClearResetCount", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/tdkb_lib/src/ssp_tdk_platform_hal_wrp.c", "pattern": "/^int ssp_ClearResetCount(BOOLEAN flag)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(BOOLEAN flag)"}, {"_type": "tag", "name": "ssp_DocsisParamsDBInit", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/tdkb_lib/src/ssp_tdk_platform_hal_wrp.c", "pattern": "/^int ssp_DocsisParamsDBInit()$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "ssp_GetBaseMacAddress", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/tdkb_lib/src/ssp_tdk_platform_hal_wrp.c", "pattern": "/^int ssp_GetBaseMacAddress(char* pValue)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(char * pValue)"}, {"_type": "tag", "name": "ssp_GetBootloaderVersion", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/tdkb_lib/src/ssp_tdk_platform_hal_wrp.c", "pattern": "/^int ssp_GetBootloaderVersion(char* pValue, unsigned long int maxSize)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(char * pValue,unsigned long int maxSize)"}, {"_type": "tag", "name": "ssp_GetCMTSMac", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/tdkb_lib/src/ssp_tdk_platform_hal_wrp.c", "pattern": "/^int ssp_GetCMTSMac(char* pValue)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(char * pValue)"}, {"_type": "tag", "name": "ssp_GetChipTemperature", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/tdkb_lib/src/ssp_tdk_platform_hal_wrp.c", "pattern": "/^int ssp_GetChipTemperature(unsigned int chipIndex,unsigned long int* pTempValue)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(unsigned int chipIndex,unsigned long int * pTempValue)"}, {"_type": "tag", "name": "ssp_GetDeviceConfigStatus", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/tdkb_lib/src/ssp_tdk_platform_hal_wrp.c", "pattern": "/^int ssp_GetDeviceConfigStatus(char* pValue)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(char * pValue)"}, {"_type": "tag", "name": "ssp_GetFactoryResetCount", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/tdkb_lib/src/ssp_tdk_platform_hal_wrp.c", "pattern": "/^int ssp_GetFactoryResetCount(unsigned long int* pulSize)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(unsigned long int * pulSize)"}, {"_type": "tag", "name": "ssp_GetFanSpeed", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/tdkb_lib/src/ssp_tdk_platform_hal_wrp.c", "pattern": "/^int ssp_GetFanSpeed(unsigned int fanIndex,unsigned long int* pSpeedValue)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(unsigned int fanIndex,unsigned long int * pSpeedValue)"}, {"_type": "tag", "name": "ssp_GetFirmwareName", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/tdkb_lib/src/ssp_tdk_platform_hal_wrp.c", "pattern": "/^int ssp_GetFirmwareName(char* pValue,unsigned long int maxSize)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(char * pValue,unsigned long int maxSize)"}, {"_type": "tag", "name": "ssp_GetFreeMemorySize", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/tdkb_lib/src/ssp_tdk_platform_hal_wrp.c", "pattern": "/^int ssp_GetFreeMemorySize(unsigned long int* pulSize)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(unsigned long int * pulSize)"}, {"_type": "tag", "name": "ssp_GetHardware", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/tdkb_lib/src/ssp_tdk_platform_hal_wrp.c", "pattern": "/^int ssp_GetHardware(char* pValue)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(char * pValue)"}, {"_type": "tag", "name": "ssp_GetHardwareMemFree", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/tdkb_lib/src/ssp_tdk_platform_hal_wrp.c", "pattern": "/^int ssp_GetHardwareMemFree(char* pValue)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(char * pValue)"}, {"_type": "tag", "name": "ssp_GetHardwareMemUsed", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/tdkb_lib/src/ssp_tdk_platform_hal_wrp.c", "pattern": "/^int ssp_GetHardwareMemUsed(char* pValue)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(char * pValue)"}, {"_type": "tag", "name": "ssp_GetHardwareVersion", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/tdkb_lib/src/ssp_tdk_platform_hal_wrp.c", "pattern": "/^int ssp_GetHardwareVersion(char *rx_test)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(char * rx_test)"}, {"_type": "tag", "name": "ssp_GetMACsecEnable", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/tdkb_lib/src/ssp_tdk_platform_hal_wrp.c", "pattern": "/^int ssp_GetMACsecEnable(int ethPort, BOOLEAN* pflag)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(int ethPort,BOOLEAN * pflag)"}, {"_type": "tag", "name": "ssp_GetMACsecOperationalStatus", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/tdkb_lib/src/ssp_tdk_platform_hal_wrp.c", "pattern": "/^int ssp_GetMACsecOperationalStatus(int ethPort, BOOLEAN* pflag)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(int ethPort,BOOLEAN * pflag)"}, {"_type": "tag", "name": "ssp_GetMemoryPaths", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/tdkb_lib/src/ssp_tdk_platform_hal_wrp.c", "pattern": "/^int ssp_GetMemoryPaths(RDK_CPUS index, PPLAT_PROC_MEM_INFO *ppinfo)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(RDK_CPUS index,PPLAT_PROC_MEM_INFO * ppinfo)"}, {"_type": "tag", "name": "ssp_GetModelName", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/tdkb_lib/src/ssp_tdk_platform_hal_wrp.c", "pattern": "/^int ssp_GetModelName(char* pValue)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(char * pValue)"}, {"_type": "tag", "name": "ssp_GetRouterRegion", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/tdkb_lib/src/ssp_tdk_platform_hal_wrp.c", "pattern": "/^int ssp_GetRouterRegion(char* pValue)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(char * pValue)"}, {"_type": "tag", "name": "ssp_GetSNMPEnable", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/tdkb_lib/src/ssp_tdk_platform_hal_wrp.c", "pattern": "/^int ssp_GetSNMPEnable(char* pValue)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(char * pValue)"}, {"_type": "tag", "name": "ssp_GetSSHEnable", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/tdkb_lib/src/ssp_tdk_platform_hal_wrp.c", "pattern": "/^int ssp_GetSSHEnable(BOOLEAN* pflag)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(BOOLEAN * pflag)"}, {"_type": "tag", "name": "ssp_GetSerialNumber", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/tdkb_lib/src/ssp_tdk_platform_hal_wrp.c", "pattern": "/^int ssp_GetSerialNumber(char* pValue)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(char * pValue)"}, {"_type": "tag", "name": "ssp_GetSoftwareVersion", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/tdkb_lib/src/ssp_tdk_platform_hal_wrp.c", "pattern": "/^int ssp_GetSoftwareVersion(char* pValue,unsigned long int maxSize)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(char * pValue,unsigned long int maxSize)"}, {"_type": "tag", "name": "ssp_GetTelEnable", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/tdkb_lib/src/ssp_tdk_platform_hal_wrp.c", "pattern": "/^int ssp_GetTelEnable(BOOLEAN* pflag)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(BOOLEAN * pflag)"}, {"_type": "tag", "name": "ssp_GetTimeOffSet", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/tdkb_lib/src/ssp_tdk_platform_hal_wrp.c", "pattern": "/^int ssp_GetTimeOffSet(char* pValue)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(char * pValue)"}, {"_type": "tag", "name": "ssp_GetTotalMemorySize", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/tdkb_lib/src/ssp_tdk_platform_hal_wrp.c", "pattern": "/^int ssp_GetTotalMemorySize(unsigned long int* pulSize)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(unsigned long int * pulSize)"}, {"_type": "tag", "name": "ssp_GetUsedMemorySize", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/tdkb_lib/src/ssp_tdk_platform_hal_wrp.c", "pattern": "/^int ssp_GetUsedMemorySize(unsigned long int* pulSize)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(unsigned long int * pulSize)"}, {"_type": "tag", "name": "ssp_GetWebAccessLevel", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/tdkb_lib/src/ssp_tdk_platform_hal_wrp.c", "pattern": "/^int ssp_GetWebAccessLevel(int user, int index, unsigned long int* pulValue)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(int user,int index,unsigned long int * pulValue)"}, {"_type": "tag", "name": "ssp_GetWebUITimeout", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/tdkb_lib/src/ssp_tdk_platform_hal_wrp.c", "pattern": "/^int ssp_GetWebUITimeout(unsigned long int* pulSize)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(unsigned long int * pulSize)"}, {"_type": "tag", "name": "ssp_PandMDBInit", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/tdkb_lib/src/ssp_tdk_platform_hal_wrp.c", "pattern": "/^int ssp_PandMDBInit()$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "ssp_SetFanSpeed", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/tdkb_lib/src/ssp_tdk_platform_hal_wrp.c", "pattern": "/^int ssp_SetFanSpeed(unsigned long int Value)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(unsigned long int Value)"}, {"_type": "tag", "name": "ssp_SetLowPowerModeState", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/tdkb_lib/src/ssp_tdk_platform_hal_wrp.c", "pattern": "/^int ssp_SetLowPowerModeState(PSM_STATE state)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(PSM_STATE state)"}, {"_type": "tag", "name": "ssp_SetMACsecEnable", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/tdkb_lib/src/ssp_tdk_platform_hal_wrp.c", "pattern": "/^int ssp_SetMACsecEnable(int ethPort, BOOLEAN flag)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(int ethPort,BOOLEAN flag)"}, {"_type": "tag", "name": "ssp_SetSNMPEnable", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/tdkb_lib/src/ssp_tdk_platform_hal_wrp.c", "pattern": "/^int ssp_SetSNMPEnable(char *pEnable)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(char * pEnable)"}, {"_type": "tag", "name": "ssp_SetSNMPOnboardRebootEnable", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/tdkb_lib/src/ssp_tdk_platform_hal_wrp.c", "pattern": "/^int ssp_SetSNMPOnboardRebootEnable(char *pEnable)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(char * pEnable)"}, {"_type": "tag", "name": "ssp_SetSSHEnable", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/tdkb_lib/src/ssp_tdk_platform_hal_wrp.c", "pattern": "/^int ssp_SetSSHEnable(BOOLEAN flag)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(BOOLEAN flag)"}, {"_type": "tag", "name": "ssp_SetTelnetEnable", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/tdkb_lib/src/ssp_tdk_platform_hal_wrp.c", "pattern": "/^int ssp_SetTelnetEnable(BOOLEAN flag)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(BOOLEAN flag)"}, {"_type": "tag", "name": "ssp_SetWebUITimeout", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/tdkb_lib/src/ssp_tdk_platform_hal_wrp.c", "pattern": "/^int ssp_SetWebUITimeout(unsigned long int Value)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(unsigned long int Value)"}, {"_type": "tag", "name": "ssp_StartMACsec", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/tdkb_lib/src/ssp_tdk_platform_hal_wrp.c", "pattern": "/^int ssp_StartMACsec(int ethPort, int timeout)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(int ethPort,int timeout)"}, {"_type": "tag", "name": "ssp_StopMACsec", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/tdkb_lib/src/ssp_tdk_platform_hal_wrp.c", "pattern": "/^int ssp_StopMACsec(int ethPort)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(int ethPort)"}, {"_type": "tag", "name": "ssp_getDscpClientList", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/tdkb_lib/src/ssp_tdk_platform_hal_wrp.c", "pattern": "/^int ssp_getDscpClientList(WAN_INTERFACE interfaceType , pDSCP_list_t DSCP_List)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(WAN_INTERFACE interfaceType,pDSCP_list_t DSCP_List)"}, {"_type": "tag", "name": "ssp_getFactoryCmVariant", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/tdkb_lib/src/ssp_tdk_platform_hal_wrp.c", "pattern": "/^int ssp_getFactoryCmVariant(char *pValue)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(char * pValue)"}, {"_type": "tag", "name": "ssp_getFactoryPartnerId", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/tdkb_lib/src/ssp_tdk_platform_hal_wrp.c", "pattern": "/^int ssp_getFactoryPartnerId(char* pValue)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(char * pValue)"}, {"_type": "tag", "name": "ssp_getFanStatus", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/tdkb_lib/src/ssp_tdk_platform_hal_wrp.c", "pattern": "/^int ssp_getFanStatus(unsigned int fanIndex,int *flag)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(unsigned int fanIndex,int * flag)"}, {"_type": "tag", "name": "ssp_getRPM", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/tdkb_lib/src/ssp_tdk_platform_hal_wrp.c", "pattern": "/^int ssp_getRPM(unsigned int fanIndex,unsigned int *rpmbuf)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(unsigned int fanIndex,unsigned int * rpmbuf)"}, {"_type": "tag", "name": "ssp_getRotorLock", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/tdkb_lib/src/ssp_tdk_platform_hal_wrp.c", "pattern": "/^int ssp_getRotorLock(unsigned int fanIndex,int *rotorLockbuf)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(unsigned int fanIndex,int * rotorLockbuf)"}, {"_type": "tag", "name": "ssp_resetDscpCounts", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/tdkb_lib/src/ssp_tdk_platform_hal_wrp.c", "pattern": "/^int ssp_resetDscpCounts(WAN_INTERFACE interfaceType)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(WAN_INTERFACE interfaceType)"}, {"_type": "tag", "name": "ssp_setDscp", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/tdkb_lib/src/ssp_tdk_platform_hal_wrp.c", "pattern": "/^int ssp_setDscp(WAN_INTERFACE interfaceType , TRAFFIC_CNT_COMMAND cmd , char* dscpVal)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(WAN_INTERFACE interfaceType,TRAFFIC_CNT_COMMAND cmd,char * dscpVal)"}, {"_type": "tag", "name": "ssp_setFactoryCmVariant", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/tdkb_lib/src/ssp_tdk_platform_hal_wrp.c", "pattern": "/^int ssp_setFactoryCmVariant(char *pValue)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(char * pValue)"}, {"_type": "tag", "name": "ssp_setFanMaxOverride", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/tdkb_lib/src/ssp_tdk_platform_hal_wrp.c", "pattern": "/^int ssp_setFanMaxOverride(BOOLEAN flag, unsigned int fanIndex)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(BOOLEAN flag,unsigned int fanIndex)"}], "hash": "569b3cd960c6d2aec585075d57c14e06", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "rdkb/tools/tdkb/tdkb_lib/src/ssp_tdk_platform_hal_wrp.c", "revision_history": [{"18700": ""}]}