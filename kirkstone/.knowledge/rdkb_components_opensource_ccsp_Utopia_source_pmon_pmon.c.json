{"is_source_file": true, "format": "C", "description": "This file contains a process monitor implementation in C that reads configuration lines from a file specifying process names, PID files, and restart commands, and then monitors and restarts processes if they are not running.", "external_files": ["telemetry_busmessage_sender.h", "secure_wrapper.h"], "external_methods": ["v_secure_system()"], "published": ["main"], "classes": [], "methods": [{"name": "void pmon_usage()", "description": "Prints usage information for the process monitor program.", "scope": "", "scopeKind": ""}, {"name": "void str_trim(char ** p)", "description": "Trims leading whitespace (spaces and tabs) from a string pointer.", "scope": "", "scopeKind": ""}, {"name": "int find_process(const char * proc_name,const char * pidfile)", "description": "Checks if a process with given name is running by reading its PID from a file and inspecting /proc entries.", "scope": "", "scopeKind": ""}, {"name": "int proc_mon(const char * proc_name,const char * pid_file,const char * cmd)", "description": "Monitors a process; if not found, attempts to restart it using a specified command.", "scope": "", "scopeKind": ""}, {"name": "int main(int argc,char * argv[])", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["v_secure_system", "unlink", "execl", "fork", "fopen", "fgets", "fclose", "strlen", "strsep", "strcasecmp"], "search-terms": ["pmon", "process monitor", "PID file check", "restart process", "monitoring scripts"], "state": 2, "file_id": 7661, "knowledge_revision": 20729, "git_revision": "", "ctags": [{"_type": "tag", "name": "find_process", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/pmon/pmon.c", "pattern": "/^static int find_process (const char *proc_name,const char *pidfile)$/", "file": true, "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(const char * proc_name,const char * pidfile)"}, {"_type": "tag", "name": "main", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/pmon/pmon.c", "pattern": "/^int main (int argc, char *argv[])$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(int argc,char * argv[])"}, {"_type": "tag", "name": "pmon_usage", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/pmon/pmon.c", "pattern": "/^static void pmon_usage ()$/", "file": true, "language": "C", "typeref": "typename:void", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "proc_mon", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/pmon/pmon.c", "pattern": "/^static int proc_mon (const char *proc_name, const char *pid_file, const char *cmd)$/", "file": true, "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(const char * proc_name,const char * pid_file,const char * cmd)"}, {"_type": "tag", "name": "str_trim", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/Utopia/source/pmon/pmon.c", "pattern": "/^static void str_trim (char **p)$/", "file": true, "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(char ** p)"}], "hash": "74684705053c5913fae9b631aedf4798", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "rdkb/components/opensource/ccsp/Utopia/source/pmon/pmon.c", "revision_history": [{"20729": ""}]}