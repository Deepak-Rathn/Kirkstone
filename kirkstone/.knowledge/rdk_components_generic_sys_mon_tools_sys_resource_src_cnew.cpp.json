{"is_source_file": true, "format": "C++", "description": "This file defines custom memory allocation and deallocation operators and template functions for creating and destroying objects using a memory partition interface, providing support for custom memory management in a C++ project.", "external_files": ["IMemoryPartition.h"], "external_methods": ["IMemoryPartition::allocate", "IMemoryPartition::deallocate"], "published": ["operator new (size_t, IMemoryPartition*)", "operator delete (void*, IMemoryPartition*)", "create<IMemoryPartition>", "destroy<T>"], "classes": [], "methods": [{"name": "void * operator new(size_t size,IMemoryPartition * partition)", "description": "Custom operator new that allocates memory from a specified IMemoryPartition.", "scope": "", "scopeKind": ""}, {"name": "void operator delete(void * p,IMemoryPartition * partition)", "description": "Custom operator delete that deallocates memory back to a specified IMemoryPartition.", "scope": "", "scopeKind": ""}, {"name": "T * create(IMemoryPartition * partition)", "description": "Template function to create an object of type T within a specific memory partition, conditionally using custom memory management based on USE_CUSTOM_MM.", "scope": "", "scopeKind": ""}, {"name": "void destroy(T * p,IMemoryPartition * partition)", "description": "Template function to destroy an object of type T and deallocate its memory within a specific memory partition if custom memory management is enabled.", "scope": "", "scopeKind": ""}], "calls": ["IMemoryPartition::allocate", "IMemoryPartition::deallocate"], "search-terms": ["custom new delete", "IMemoryPartition", "memory management", "template create destroy", "operator overloading"], "state": 2, "file_id": 12556, "knowledge_revision": 25452, "git_revision": "", "ctags": [{"_type": "tag", "name": "create", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/sys_mon_tools/sys_resource/src/cnew.cpp", "pattern": "/^template<class T> T* create(IMemoryPartition *partition)$/", "language": "C++", "typeref": "typename:T *", "kind": "function", "signature": "(IMemoryPartition * partition)"}, {"_type": "tag", "name": "destroy", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/sys_mon_tools/sys_resource/src/cnew.cpp", "pattern": "/^template<class T> void destroy(T* p, IMemoryPartition *partition)$/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(T * p,IMemoryPartition * partition)"}, {"_type": "tag", "name": "operator delete", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/sys_mon_tools/sys_resource/src/cnew.cpp", "pattern": "/^void operator delete (void *p, IMemoryPartition *partition)$/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(void * p,IMemoryPartition * partition)"}, {"_type": "tag", "name": "operator new", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/sys_mon_tools/sys_resource/src/cnew.cpp", "pattern": "/^void * operator new (size_t size, IMemoryPartition *partition) throw()$/", "language": "C++", "typeref": "typename:void *", "kind": "function", "signature": "(size_t size,IMemoryPartition * partition)"}], "hash": "31251a8df268777c11dc01cacacc886a", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "rdk/components/generic/sys_mon_tools/sys_resource/src/cnew.cpp", "revision_history": [{"25452": ""}]}