{"is_source_file": true, "format": "C", "description": "This file appears to be a C source file responsible for initializing and managing telemetry functionality, including signal handling, daemon process setup, crash reporting, and external resource management within a software project.", "external_files": ["telemetry2_0.h", "t2log_wrapper.h", "syslog.h", "reportprofiles.h", "xconfclient.h", "scheduler.h", "interChipHelper.h", "t2eventreceiver.h", "breakpad_wrapper.h", "breakpadwrap.h"], "external_methods": ["initReportProfiles()", "initXConfClient()", "generateDcaReport()", "uninitXConfClient()", "ReportProfiles_uninit()", "set_logdemand()", "ReportProfiles_Interrupt()", "startXConfClient()", "stopXConfClient()", "execNotifier()", "listenForInterProcessorChipEvents()", "createNotifyDir()", "breakpad_ExceptionHandler()", "newBreakPadWrapExceptionHandler()"], "published": ["initTelemetry()", "main()"], "classes": [{"name": "BreakPadWrapExceptionHandler", "description": "A class or interface related to breakpad exception handling, instantiated or utilized for crash reporting."}], "methods": [{"name": "T2ERROR initTelemetry()", "description": "Initializes telemetry report profiles and configuration client, returning success or failure code.", "scope": "", "scopeKind": ""}, {"name": "void terminate()", "description": "Performs cleanup by uninitializing configuration and removing temporary files.", "scope": "", "scopeKind": ""}, {"name": "void _print_stack_backtrace(void)", "description": "Prints the current call stack backtrace (Linux-specific).", "scope": "", "scopeKind": ""}, {"name": "void sig_handler(int sig,siginfo_t * info,void * uc)", "description": "Handles various signals for process control, log upload, and restart scenarios.", "scope": "", "scopeKind": ""}, {"name": "void t2DaemonMainModeInit()", "description": "Initializes the daemon in main mode: sets up signal handlers, initializes telemetry, and enters an infinite loop.", "scope": "", "scopeKind": ""}, {"name": "void t2DaemonHelperModeInit()", "description": "Initializes an inotify-based watcher for helper mode operation, mainly for specific hardware platforms.", "scope": "", "scopeKind": ""}, {"name": "int checkAnotherTelemetryInstance(void)", "description": "Checks for existing instances using a lock file to prevent multiple copies running simultaneously.", "scope": "", "scopeKind": ""}, {"name": "int main(int argc,char * argv[])", "description": "The entry point of the telemetry daemon, which performs singleton check, daemonization, and initializes the appropriate mode.", "scope": "", "scopeKind": ""}], "calls": ["initReportProfiles()", "initXConfClient()", "generateDcaReport()", "uninitXConfClient()", "ReportProfiles_uninit()", "set_logdemand()", "ReportProfiles_Interrupt()", "startXConfClient()", "stopXConfClient()", "execNotifier()", "listenForInterProcessorChipEvents()", "createNotifyDir()", "breakpad_ExceptionHandler()", "newBreakPadWrapExceptionHandler()"], "search-terms": ["telemetry initialization", "signal handling", "daemon process", "breakpad crash reporting", "inotify watcher", "single instance lock", "telemetry configuration", "startXConfClient", "stopXConfClient"], "state": 2, "file_id": 12860, "knowledge_revision": 25758, "git_revision": "", "ctags": [{"_type": "tag", "name": "DAEMONPID", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/telemetry2_0.c", "pattern": "/^static pid_t DAEMONPID; \\/\\/static varible store the Main Pid$/", "file": true, "language": "C", "typeref": "typename:pid_t", "kind": "variable"}, {"_type": "tag", "name": "EXEC_RELOAD", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/telemetry2_0.c", "pattern": "/^#define EXEC_RELOAD /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "LOG_UPLOAD", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/telemetry2_0.c", "pattern": "/^#define LOG_UPLOAD /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "LOG_UPLOAD_ONDEMAND", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/telemetry2_0.c", "pattern": "/^#define LOG_UPLOAD_ONDEMAND /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "MAX_PARAMETERNAME_LEN", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/telemetry2_0.c", "pattern": "/^#define MAX_PARAMETERNAME_LEN /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "_print_stack_backtrace", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/telemetry2_0.c", "pattern": "/^static void _print_stack_backtrace(void)$/", "file": true, "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(void)"}, {"_type": "tag", "name": "blocking_signal", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/telemetry2_0.c", "pattern": "/^sigset_t blocking_signal;$/", "language": "C", "typeref": "typename:sigset_t", "kind": "variable"}, {"_type": "tag", "name": "checkAnotherTelemetryInstance", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/telemetry2_0.c", "pattern": "/^static int checkAnotherTelemetryInstance (void)$/", "file": true, "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(void)"}, {"_type": "tag", "name": "initTelemetry", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/telemetry2_0.c", "pattern": "/^T2ERROR initTelemetry()$/", "language": "C", "typeref": "typename:T2ERROR", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "initcomplete", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/telemetry2_0.c", "pattern": "/^static int initcomplete = 0;$/", "file": true, "language": "C", "typeref": "typename:int", "kind": "variable"}, {"_type": "tag", "name": "isDebugEnabled", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/telemetry2_0.c", "pattern": "/^static bool isDebugEnabled = true;$/", "file": true, "language": "C", "typeref": "typename:bool", "kind": "variable"}, {"_type": "tag", "name": "main", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/telemetry2_0.c", "pattern": "/^int main(int argc, char* argv[])$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(int argc,char * argv[])"}, {"_type": "tag", "name": "sig_handler", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/telemetry2_0.c", "pattern": "/^void sig_handler(int sig, siginfo_t* info, void* uc)$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(int sig,siginfo_t * info,void * uc)"}, {"_type": "tag", "name": "t2DaemonHelperModeInit", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/telemetry2_0.c", "pattern": "/^static void t2DaemonHelperModeInit( ) {$/", "file": true, "language": "C", "typeref": "typename:void", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "t2DaemonMainModeInit", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/telemetry2_0.c", "pattern": "/^static void t2DaemonMainModeInit( ) {$/", "file": true, "language": "C", "typeref": "typename:void", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "terminate", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/telemetry2_0.c", "pattern": "/^static void terminate()$/", "file": true, "language": "C", "typeref": "typename:void", "kind": "function", "signature": "()"}], "hash": "529746c239f10aba94a65bbee68d2908", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "rdk/components/generic/telemetry/source/telemetry2_0.c", "fields": [{"name": "pid_t DAEMONPID", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "sigset_t blocking_signal", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int initcomplete", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "bool isDebugEnabled", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"25758": ""}]}