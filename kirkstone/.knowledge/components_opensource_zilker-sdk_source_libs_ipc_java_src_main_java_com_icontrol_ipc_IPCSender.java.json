{"is_source_file": true, "format": "Java", "description": "The file defines the IPCSender class, a utility for sending inter-process communication requests over sockets or direct VM calls within a Java-based project. It handles connecting to services, sending request messages, and processing responses, with support for local and remote services.", "external_files": ["java.io.EOFException", "java.io.IOException", "java.io.InputStream", "java.io.OutputStream", "java.net.ConnectException", "java.net.InetAddress", "java.net.Socket", "com.icontrol.ipc.impl.ObjectIPC", "com.icontrol.registry.ServiceHandle", "com.icontrol.registry.ServiceRegistry", "com.icontrol.registry.scope.RemoteHostServiceHandle", "com.icontrol.registry.scope.SameProcessServiceHandle", "com.icontrol.util.StringUtils", "org.json.JSONException", "org.json.JSONObject", "org.json.JSONTokener", "org.slf4j.Logger", "org.slf4j.LoggerFactory"], "external_methods": ["ServiceRegistry.getServiceForIpcPort(int)", "ServiceHandle.isSameProcess()", "ServiceHandle.isRemoteHost()", "RemoteHostServiceHandle.getRemoteIp()", "IPCSender.connect(InetAddress, int)", "ObjectIPC.toJSON()", "ObjectIPC.fromJSON(JSONObject)"], "published": [], "classes": [{"name": "IPCSender", "description": "Helper class providing static methods to send IPC requests and check service availability, supporting both direct in-VM calls and network socket communication."}], "methods": [{"name": "sendRequest", "description": "Sends an IPC request with optional payload objects and returns an IPCMessage with the response."}, {"name": "isServiceAvailable", "description": "Checks if a service on a given port is available and responsive."}, {"name": "waitForServiceAvailable", "description": "Repeatedly checks service availability until it becomes responsive or a timeout occurs."}], "calls": ["ServiceRegistry.getServiceForIpcPort", "service.isSameProcess", "service.isRemoteHost", "InetAddress.getByName", "connect", "IPCSender.encodePayload", "IPCSender.decodePayload", "Socket.getInputStream", "Socket.getOutputStream", "IPCSender.sendRequest", "IPCSender.isServiceAvailable"], "search-terms": ["IPCSender", "IPCMessage", "sendRequest", "service port connection", "local VM direct call", "socket communication", "inter process communication", "JSON payload", "service registry"], "state": 2, "file_id": 760, "knowledge_revision": 13923, "git_revision": "", "hash": "0ecd2d6feb4efc17c3afe371200baf34", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "components/opensource/zilker-sdk/source/libs/ipc/java/src/main/java/com/icontrol/ipc/IPCSender.java", "revision_history": [{"13923": ""}]}