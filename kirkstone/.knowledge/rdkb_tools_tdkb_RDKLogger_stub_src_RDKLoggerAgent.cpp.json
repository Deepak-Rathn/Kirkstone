{"is_source_file": true, "format": "C++", "description": "This source file implements the RDKLoggerAgent class which manages logging functions for the RDK platform. It includes methods for initializing the logger, setting log levels, adding log messages, checking log statuses, and managing configuration files related to logging. It also provides functions for enabling/disabling MPE logs, and for integrating these functionalities into a testing framework via JSON interface.", "external_files": ["RDKLoggerAgent.h"], "external_methods": ["rdk_logger_init", "rdk_logger_deinit", "rdk_logger_envGet", "rdk_logger_envGetNum", "rdk_logger_envGetValueFromNum", "rdk_logger_envGetModFromNum", "rdk_dbg_enabled", "RDK_LOG"], "published": ["RDKBLoggerAgent::initialize", "RDKBLoggerAgent::testmodulepre_requisites", "RDKBLoggerAgent::testmodulepost_requisites", "RDKBLoggerAgent::RDKBLoggerAgent_Init", "RDKBLoggerAgent::RDKBLoggerAgent_Log", "RDKBLoggerAgent::RDKBLoggerAgent_Dbg_Enabled_Status", "RDKBLoggerAgent::RDKBLoggerAgent_EnvGet", "RDKBLoggerAgent::RDKBLoggerAgent_EnvGetNum", "RDKBLoggerAgent::RDKBLoggerAgent_EnvGetValueFromNum", "RDKBLoggerAgent::RDKBLoggerAgent_EnvGetModFromNum", "RDKBLoggerAgent::RDKBLoggerAgent_CheckMPELogEnabled", "RDKBLoggerAgent::RDKBLoggerAgent_Log_All", "RDKBLoggerAgent::RDKBLoggerAgent_Log_None", "RDKBLoggerAgent::RDKBLoggerAgent_Log_Trace", "RDKBLoggerAgent::RDKBLoggerAgent_Log_InverseTrace", "RDKBLoggerAgent::RDKBLoggerAgent_Log_Msg", "RDKBLoggerAgent::RDKBLoggerAgent_SetLogLevel", "RDKBLoggerAgent::RDKBLoggerAgent_GetLogLevel", "RDKBLoggerAgent::RDKBLoggerAgent_Log_MPEOSDisabled"], "classes": [{"name": "RDKBLoggerAgent", "description": "A class to manage and interface with the RDK platform's logging system, providing methods to initialize, configure, and test logging functionalities via a JSON interface."}], "methods": [{"name": "bool initialize(IN const char * szVersion)", "description": "Initializes the logger configuration and settings, preparing the environment for logging operations.", "scope": "RDKBLoggerAgent", "scopeKind": "class"}, {"name": "std::string testmodulepre_requisites()", "description": "Sets up necessary preconditions before testing, such as creating configuration files and initializing the logger.", "scope": "RDKBLoggerAgent", "scopeKind": "class"}, {"name": "bool testmodulepost_requisites()", "description": "Cleans up or resets preconditions after tests, like deleting temporary config files or de-initializing the logger.", "scope": "RDKBLoggerAgent", "scopeKind": "class"}, {"name": "void RDKBLoggerAgent_Init(IN const Json::Value & req,OUT Json::Value & response)", "description": "Handles the request to initialize the logger module and provides a success or failure response.", "scope": "RDKBLoggerAgent", "scopeKind": "class"}, {"name": "void RDKBLoggerAgent_Log(IN const Json::Value & req,OUT Json::Value & response)", "description": "Logs a message with specified module and level, and verifies if the message was logged successfully.", "scope": "RDKBLoggerAgent", "scopeKind": "class"}, {"name": "void RDKBLoggerAgent_Dbg_Enabled_Status(IN const Json::Value & req,OUT Json::Value & response)", "description": "Checks whether a specified log level for a module is enabled.", "scope": "RDKBLoggerAgent", "scopeKind": "class"}, {"name": "void RDKBLoggerAgent_EnvGet(IN const Json::Value & req,OUT Json::Value & response)", "description": "Retrieves the logging level environment variable for a given module.", "scope": "RDKBLoggerAgent", "scopeKind": "class"}, {"name": "void RDKBLoggerAgent_EnvGetNum(IN const Json::Value & req,OUT Json::Value & response)", "description": "Returns the registered number associated with a specified environment variable.", "scope": "RDKBLoggerAgent", "scopeKind": "class"}, {"name": "void RDKBLoggerAgent_EnvGetValueFromNum(IN const Json::Value & req,OUT Json::Value & response)", "description": "Gets the logging level value associated with a registered number.", "scope": "RDKBLoggerAgent", "scopeKind": "class"}, {"name": "void RDKBLoggerAgent_EnvGetModFromNum(IN const Json::Value & req,OUT Json::Value & response)", "description": "Retrieves the module name corresponding to a registered number.", "scope": "RDKBLoggerAgent", "scopeKind": "class"}, {"name": "void RDKBLoggerAgent_CheckMPELogEnabled(IN const Json::Value & req,OUT Json::Value & response)", "description": "Verifies if the EnableMPELog setting is enabled.", "scope": "RDKBLoggerAgent", "scopeKind": "class"}, {"name": "void RDKBLoggerAgent_Log_All(IN const Json::Value & req,OUT Json::Value & response)", "description": "Logs a set of all levels (INFO, NOTICE, WARNING, ERROR, FATAL) for a module to test full logging capability.", "scope": "RDKBLoggerAgent", "scopeKind": "class"}, {"name": "void RDKBLoggerAgent_Log_None(IN const Json::Value & req,OUT Json::Value & response)", "description": "Ensures no logs are generated at any level, validating the NONE threshold.", "scope": "RDKBLoggerAgent", "scopeKind": "class"}, {"name": "void RDKBLoggerAgent_Log_Trace(IN const Json::Value & req,OUT Json::Value & response)", "description": "Logs a sequence of TRACE levels (TRACE1 to TRACE9) for a module.", "scope": "RDKBLoggerAgent", "scopeKind": "class"}, {"name": "void RDKBLoggerAgent_Log_InverseTrace(IN const Json::Value & req,OUT Json::Value & response)", "description": "Verifies that none of the TRACE logs are generated when inverse TRACE threshold is set.", "scope": "RDKBLoggerAgent", "scopeKind": "class"}, {"name": "void RDKBLoggerAgent_Log_Msg(IN const Json::Value & req,OUT Json::Value & response)", "description": "Logs a custom message with specified module and level.", "scope": "RDKBLoggerAgent", "scopeKind": "class"}, {"name": "void RDKBLoggerAgent_SetLogLevel(IN const Json::Value & req,OUT Json::Value & response)", "description": "Stub function to set log level; currently returns failure.", "scope": "RDKBLoggerAgent", "scopeKind": "class"}, {"name": "void RDKBLoggerAgent_GetLogLevel(IN const Json::Value & req,OUT Json::Value & response)", "description": "Stub function to get log level; currently returns failure.", "scope": "RDKBLoggerAgent", "scopeKind": "class"}, {"name": "void RDKBLoggerAgent_Log_MPEOSDisabled(IN const Json::Value & req,OUT Json::Value & response)", "description": "Tests logging behavior when MPEOS debug support is disabled.", "scope": "RDKBLoggerAgent", "scopeKind": "class"}, {"name": "bool CheckLog(const char * search)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "RDKBLoggerAgent * CreateObject(TcpSocketServer & ptrtcpServer)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "void DestroyObject(RDKBLoggerAgent * stubobj)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "bool cleanup(IN const char * szVersion)", "scope": "RDKBLoggerAgent", "scopeKind": "class", "description": "unavailable"}, {"name": "bool createTdkDebugIniFile(bool enableMPELog=true)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "bool dbgFinder(const char * module,const char * level)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int logNameToEnum(const char * name)", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["rdk_logger_init", "rdk_logger_deinit", "rdk_logger_envGet", "rdk_logger_envGetNum", "rdk_logger_envGetValueFromNum", "rdk_logger_envGetModFromNum", "rdk_dbg_enabled", "RDK_LOG"], "search-terms": ["RDKLoggerAgent", "logging", "rdk_logger", "debug", "MPEOS", "configuration", "log levels", "test module", "INSTANTIATION", "environment variables", "test logs"], "state": 2, "file_id": 5550, "knowledge_revision": 18670, "git_revision": "", "ctags": [{"_type": "tag", "name": "CheckLog", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/RDKLogger_stub/src/RDKLoggerAgent.cpp", "pattern": "/^bool CheckLog(const char* search)$/", "language": "C++", "typeref": "typename:bool", "kind": "function", "signature": "(const char * search)"}, {"_type": "tag", "name": "CreateObject", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/RDKLogger_stub/src/RDKLoggerAgent.cpp", "pattern": "/^extern \"C\" RDKBLoggerAgent* CreateObject(TcpSocketServer &ptrtcpServer)$/", "language": "C++", "typeref": "typename:RDKBLoggerAgent *", "kind": "function", "signature": "(TcpSocketServer & ptrtcpServer)"}, {"_type": "tag", "name": "DestroyObject", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/RDKLogger_stub/src/RDKLoggerAgent.cpp", "pattern": "/^extern \"C\" void DestroyObject(RDKBLoggerAgent *stubobj)$/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(RDKBLoggerAgent * stubobj)"}, {"_type": "tag", "name": "RDKBLoggerAgent_CheckMPELogEnabled", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/RDKLogger_stub/src/RDKLoggerAgent.cpp", "pattern": "/^void RDKBLoggerAgent::RDKBLoggerAgent_CheckMPELogEnabled(IN const Json::Value& req, OUT Json::Va/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(IN const Json::Value & req,OUT Json::Value & response)", "scope": "RDKBLoggerAgent", "scopeKind": "class"}, {"_type": "tag", "name": "RDKBLoggerAgent_Dbg_Enabled_Status", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/RDKLogger_stub/src/RDKLoggerAgent.cpp", "pattern": "/^void RDKBLoggerAgent::RDKBLoggerAgent_Dbg_Enabled_Status(IN const Json::Value& req, OUT Json::Va/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(IN const Json::Value & req,OUT Json::Value & response)", "scope": "RDKBLoggerAgent", "scopeKind": "class"}, {"_type": "tag", "name": "RDKBLoggerAgent_EnvGet", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/RDKLogger_stub/src/RDKLoggerAgent.cpp", "pattern": "/^void RDKBLoggerAgent::RDKBLoggerAgent_EnvGet(IN const Json::Value& req, OUT Json::Value& respons/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(IN const Json::Value & req,OUT Json::Value & response)", "scope": "RDKBLoggerAgent", "scopeKind": "class"}, {"_type": "tag", "name": "RDKBLoggerAgent_EnvGetModFromNum", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/RDKLogger_stub/src/RDKLoggerAgent.cpp", "pattern": "/^void RDKBLoggerAgent::RDKBLoggerAgent_EnvGetModFromNum(IN const Json::Value& req, OUT Json::Valu/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(IN const Json::Value & req,OUT Json::Value & response)", "scope": "RDKBLoggerAgent", "scopeKind": "class"}, {"_type": "tag", "name": "RDKBLoggerAgent_EnvGetNum", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/RDKLogger_stub/src/RDKLoggerAgent.cpp", "pattern": "/^void RDKBLoggerAgent::RDKBLoggerAgent_EnvGetNum(IN const Json::Value& req, OUT Json::Value& resp/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(IN const Json::Value & req,OUT Json::Value & response)", "scope": "RDKBLoggerAgent", "scopeKind": "class"}, {"_type": "tag", "name": "RDKBLoggerAgent_EnvGetValueFromNum", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/RDKLogger_stub/src/RDKLoggerAgent.cpp", "pattern": "/^void RDKBLoggerAgent::RDKBLoggerAgent_EnvGetValueFromNum(IN const Json::Value& req, OUT Json::Va/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(IN const Json::Value & req,OUT Json::Value & response)", "scope": "RDKBLoggerAgent", "scopeKind": "class"}, {"_type": "tag", "name": "RDKBLoggerAgent_GetLogLevel", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/RDKLogger_stub/src/RDKLoggerAgent.cpp", "pattern": "/^void RDKBLoggerAgent::RDKBLoggerAgent_GetLogLevel(IN const Json::Value& req, OUT Json::Value& re/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(IN const Json::Value & req,OUT Json::Value & response)", "scope": "RDKBLoggerAgent", "scopeKind": "class"}, {"_type": "tag", "name": "RDKBLoggerAgent_Init", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/RDKLogger_stub/src/RDKLoggerAgent.cpp", "pattern": "/^void RDKBLoggerAgent::RDKBLoggerAgent_Init(IN const Json::Value& req, OUT Json::Value& response)$/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(IN const Json::Value & req,OUT Json::Value & response)", "scope": "RDKBLoggerAgent", "scopeKind": "class"}, {"_type": "tag", "name": "RDKBLoggerAgent_Log", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/RDKLogger_stub/src/RDKLoggerAgent.cpp", "pattern": "/^void RDKBLoggerAgent::RDKBLoggerAgent_Log(IN const Json::Value& req, OUT Json::Value& response)$/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(IN const Json::Value & req,OUT Json::Value & response)", "scope": "RDKBLoggerAgent", "scopeKind": "class"}, {"_type": "tag", "name": "RDKBLoggerAgent_Log_All", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/RDKLogger_stub/src/RDKLoggerAgent.cpp", "pattern": "/^void RDKBLoggerAgent::RDKBLoggerAgent_Log_All(IN const Json::Value& req, OUT Json::Value& respon/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(IN const Json::Value & req,OUT Json::Value & response)", "scope": "RDKBLoggerAgent", "scopeKind": "class"}, {"_type": "tag", "name": "RDKBLoggerAgent_Log_InverseTrace", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/RDKLogger_stub/src/RDKLoggerAgent.cpp", "pattern": "/^void RDKBLoggerAgent::RDKBLoggerAgent_Log_InverseTrace(IN const Json::Value& req, OUT Json::Valu/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(IN const Json::Value & req,OUT Json::Value & response)", "scope": "RDKBLoggerAgent", "scopeKind": "class"}, {"_type": "tag", "name": "RDKBLoggerAgent_Log_MPEOSDisabled", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/RDKLogger_stub/src/RDKLoggerAgent.cpp", "pattern": "/^void RDKBLoggerAgent::RDKBLoggerAgent_Log_MPEOSDisabled(IN const Json::Value& req, OUT Json::Val/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(IN const Json::Value & req,OUT Json::Value & response)", "scope": "RDKBLoggerAgent", "scopeKind": "class"}, {"_type": "tag", "name": "RDKBLoggerAgent_Log_Msg", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/RDKLogger_stub/src/RDKLoggerAgent.cpp", "pattern": "/^void RDKBLoggerAgent::RDKBLoggerAgent_Log_Msg(IN const Json::Value& req, OUT Json::Value& respon/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(IN const Json::Value & req,OUT Json::Value & response)", "scope": "RDKBLoggerAgent", "scopeKind": "class"}, {"_type": "tag", "name": "RDKBLoggerAgent_Log_None", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/RDKLogger_stub/src/RDKLoggerAgent.cpp", "pattern": "/^void RDKBLoggerAgent::RDKBLoggerAgent_Log_None(IN const Json::Value& req, OUT Json::Value& respo/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(IN const Json::Value & req,OUT Json::Value & response)", "scope": "RDKBLoggerAgent", "scopeKind": "class"}, {"_type": "tag", "name": "RDKBLoggerAgent_Log_Trace", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/RDKLogger_stub/src/RDKLoggerAgent.cpp", "pattern": "/^void RDKBLoggerAgent::RDKBLoggerAgent_Log_Trace(IN const Json::Value& req, OUT Json::Value& resp/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(IN const Json::Value & req,OUT Json::Value & response)", "scope": "RDKBLoggerAgent", "scopeKind": "class"}, {"_type": "tag", "name": "RDKBLoggerAgent_SetLogLevel", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/RDKLogger_stub/src/RDKLoggerAgent.cpp", "pattern": "/^void RDKBLoggerAgent::RDKBLoggerAgent_SetLogLevel(IN const Json::Value& req, OUT Json::Value& re/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(IN const Json::Value & req,OUT Json::Value & response)", "scope": "RDKBLoggerAgent", "scopeKind": "class"}, {"_type": "tag", "name": "b_rdk_logger_enabled", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/RDKLogger_stub/src/RDKLoggerAgent.cpp", "pattern": "/^bool b_rdk_logger_enabled = false;$/", "language": "C++", "typeref": "typename:bool", "kind": "variable"}, {"_type": "tag", "name": "cleanup", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/RDKLogger_stub/src/RDKLoggerAgent.cpp", "pattern": "/^bool RDKBLoggerAgent::cleanup(IN const char* szVersion)$/", "language": "C++", "typeref": "typename:bool", "kind": "function", "signature": "(IN const char * szVersion)", "scope": "RDKBLoggerAgent", "scopeKind": "class"}, {"_type": "tag", "name": "createTdkDebugIniFile", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/RDKLogger_stub/src/RDKLoggerAgent.cpp", "pattern": "/^bool createTdkDebugIniFile(bool enableMPELog=true)$/", "language": "C++", "typeref": "typename:bool", "kind": "function", "signature": "(bool enableMPELog=true)"}, {"_type": "tag", "name": "dbgFinder", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/RDKLogger_stub/src/RDKLoggerAgent.cpp", "pattern": "/^bool dbgFinder( const char *module, const char *level)$/", "language": "C++", "typeref": "typename:bool", "kind": "function", "signature": "(const char * module,const char * level)"}, {"_type": "tag", "name": "g_tdkPath", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/RDKLogger_stub/src/RDKLoggerAgent.cpp", "pattern": "/^string g_tdkPath = getenv(\"TDK_LOGGER_PATH\");$/", "language": "C++", "typeref": "typename:string", "kind": "variable"}, {"_type": "tag", "name": "initialize", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/RDKLogger_stub/src/RDKLoggerAgent.cpp", "pattern": "/^bool RDKBLoggerAgent::initialize(IN const char* szVersion)$/", "language": "C++", "typeref": "typename:bool", "kind": "function", "signature": "(IN const char * szVersion)", "scope": "RDKBLoggerAgent", "scopeKind": "class"}, {"_type": "tag", "name": "logNameToEnum", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/RDKLogger_stub/src/RDKLoggerAgent.cpp", "pattern": "/^static int logNameToEnum(const char *name)$/", "file": true, "language": "C++", "typeref": "typename:int", "kind": "function", "signature": "(const char * name)"}, {"_type": "tag", "name": "log_path", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/RDKLogger_stub/src/RDKLoggerAgent.cpp", "pattern": "/^string log_path = getenv(\"LOG_PATH\");$/", "language": "C++", "typeref": "typename:string", "kind": "variable"}, {"_type": "tag", "name": "tdkDebugIniFile", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/RDKLogger_stub/src/RDKLoggerAgent.cpp", "pattern": "/^string tdkDebugIniFile = g_tdkPath + \"\\/\" + DEBUG_CONF;$/", "language": "C++", "typeref": "typename:string", "kind": "variable"}, {"_type": "tag", "name": "testmodulepost_requisites", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/RDKLogger_stub/src/RDKLoggerAgent.cpp", "pattern": "/^bool RDKBLoggerAgent::testmodulepost_requisites()$/", "language": "C++", "typeref": "typename:bool", "kind": "function", "signature": "()", "scope": "RDKBLoggerAgent", "scopeKind": "class"}, {"_type": "tag", "name": "testmodulepre_requisites", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/RDKLogger_stub/src/RDKLoggerAgent.cpp", "pattern": "/^std::string RDKBLoggerAgent::testmodulepre_requisites()$/", "language": "C++", "typeref": "typename:std::string", "kind": "function", "signature": "()", "scope": "RDKBLoggerAgent", "scopeKind": "class"}], "hash": "2579fa284633d6e0a37351f8752462bb", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "rdkb/tools/tdkb/RDKLogger_stub/src/RDKLoggerAgent.cpp", "fields": [{"name": "bool b_rdk_logger_enabled", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "string g_tdkPath", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "string log_path", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "string tdkDebugIniFile", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"18670": ""}]}