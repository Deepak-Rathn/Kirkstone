{"is_source_file": true, "format": "C header file", "description": "This file declares the interface for a dynamic thread pool implementation using POSIX threads. It includes definitions for creating, destroying, and managing thread pools, as well as tracking statistics and handling tasks and their arguments.", "external_files": ["<stdint.h>", "<stdbool.h>", "<icTypes/icQueue.h>"], "external_methods": [], "published": ["threadPoolCreate", "threadPoolDestroy", "threadPoolAddTask", "threadPoolGetActiveCount", "threadPoolGetThreadCount", "threadPoolGetBacklogCount", "threadPoolShowBacklog", "threadPoolGetStatistics", "threadPoolClearStatistics", "threadPoolTaskArgDoNotFreeFunc"], "classes": [{"name": "icThreadPool", "description": "Opaque structure representing the thread pool instance."}, {"name": "threadPoolStats", "description": "Structure holding statistical data about the thread pool's operation."}], "methods": [{"name": "threadPoolCreate", "description": "Creates and initializes a new thread pool with specified bounds and queue size."}, {"name": "threadPoolDestroy", "description": "Cleans up and frees resources associated with the thread pool, waiting for ongoing tasks to complete."}, {"name": "threadPoolAddTask", "description": "Adds a task to the thread pool's queue for execution, with optional argument cleanup."}, {"name": "threadPoolGetActiveCount", "description": "Returns the number of tasks currently being executed."}, {"name": "threadPoolGetThreadCount", "description": "Returns the current number of threads in the pool."}, {"name": "threadPoolGetBacklogCount", "description": "Returns the number of tasks waiting in the queue."}, {"name": "threadPoolShowBacklog", "description": "Iterates over the backlog of tasks for debugging purposes."}, {"name": "threadPoolGetStatistics", "description": "Retrieves a snapshot of the current thread pool statistics, optionally clearing stats afterward."}, {"name": "threadPoolClearStatistics", "description": "Resets the statistical data collected so far."}, {"name": "threadPoolTaskArgDoNotFreeFunc", "description": "A cleanup function that does not free the task argument."}], "calls": ["threadPoolCreate", "threadPoolDestroy", "threadPoolAddTask", "threadPoolGetActiveCount", "threadPoolGetThreadCount", "threadPoolGetBacklogCount", "threadPoolShowBacklog", "threadPoolGetStatistics", "threadPoolClearStatistics", "threadPoolTaskArgDoNotFreeFunc"], "search-terms": ["thread pool", "POSIX threads", "task queue", "concurrent execution", "dynamic thread management"], "state": 2, "file_id": 897, "knowledge_revision": 14053, "git_revision": "", "ctags": [{"_type": "tag", "name": "MAX_NUM_THREADS", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/public/icConcurrent/threadPool.h", "pattern": "/^#define MAX_NUM_THREADS /", "language": "C++", "kind": "macro"}, {"_type": "tag", "name": "MAX_QUEUE_SIZE", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/public/icConcurrent/threadPool.h", "pattern": "/^#define MAX_QUEUE_SIZE /", "language": "C++", "kind": "macro"}, {"_type": "tag", "name": "ZILKER_THREADPOOL_H", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/public/icConcurrent/threadPool.h", "pattern": "/^#define ZILKER_THREADPOOL_H$/", "language": "C++", "kind": "macro"}, {"_type": "tag", "name": "_threadPoolStats", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/public/icConcurrent/threadPool.h", "pattern": "/^typedef struct _threadPoolStats$/", "language": "C++", "kind": "struct"}, {"_type": "tag", "name": "icThreadPool", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/public/icConcurrent/threadPool.h", "pattern": "/^typedef struct _icThreadPool icThreadPool;$/", "language": "C++", "typeref": "struct:_icThreadPool", "kind": "typedef"}, {"_type": "tag", "name": "maxConcurrentTasks", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/public/icConcurrent/threadPool.h", "pattern": "/^    uint32_t maxConcurrentTasks;    \\/\\/ largest number of tasks running at the same time$/", "language": "C++", "typeref": "typename:uint32_t", "kind": "member", "scope": "_threadPoolStats", "scopeKind": "struct"}, {"_type": "tag", "name": "maxTasksQueued", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/public/icConcurrent/threadPool.h", "pattern": "/^    uint32_t maxTasksQueued;        \\/\\/ largest size the task queue got to (backlog of tasks)$/", "language": "C++", "typeref": "typename:uint32_t", "kind": "member", "scope": "_threadPoolStats", "scopeKind": "struct"}, {"_type": "tag", "name": "threadPoolStats", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/public/icConcurrent/threadPool.h", "pattern": "/^} threadPoolStats;$/", "language": "C++", "typeref": "struct:_threadPoolStats", "kind": "typedef"}, {"_type": "tag", "name": "threadPoolTask", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/public/icConcurrent/threadPool.h", "pattern": "/^typedef void (*threadPoolTask)(void *arg);$/", "language": "C++", "typeref": "typename:void (*)(void * arg)", "kind": "typedef"}, {"_type": "tag", "name": "threadPoolTaskArgFreeFunc", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/public/icConcurrent/threadPool.h", "pattern": "/^typedef void (*threadPoolTaskArgFreeFunc)(void *arg);$/", "language": "C++", "typeref": "typename:void (*)(void * arg)", "kind": "typedef"}, {"_type": "tag", "name": "totalTasksQueued", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/public/icConcurrent/threadPool.h", "pattern": "/^    uint32_t totalTasksQueued;      \\/\\/ total number of tasks added to the queue$/", "language": "C++", "typeref": "typename:uint32_t", "kind": "member", "scope": "_threadPoolStats", "scopeKind": "struct"}, {"_type": "tag", "name": "totalTasksRan", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/public/icConcurrent/threadPool.h", "pattern": "/^    uint32_t totalTasksRan;         \\/\\/ total number of tasks executed$/", "language": "C++", "typeref": "typename:uint32_t", "kind": "member", "scope": "_threadPoolStats", "scopeKind": "struct"}], "hash": "6229e40cba9e44e7f6e172ea35094492", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "components/opensource/zilker-sdk/source/libs/concurrent/c/public/icConcurrent/threadPool.h", "fields": [{"name": "uint32_t maxConcurrentTasks", "scope": "_threadPoolStats", "scopeKind": "struct", "description": "unavailable"}, {"name": "uint32_t maxTasksQueued", "scope": "_threadPoolStats", "scopeKind": "struct", "description": "unavailable"}, {"name": "uint32_t totalTasksQueued", "scope": "_threadPoolStats", "scopeKind": "struct", "description": "unavailable"}, {"name": "uint32_t totalTasksRan", "scope": "_threadPoolStats", "scopeKind": "struct", "description": "unavailable"}], "revision_history": [{"14053": ""}]}