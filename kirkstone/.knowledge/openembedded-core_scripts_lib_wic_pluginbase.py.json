{"is_source_file": true, "format": "Python", "description": "This file defines a plugin system for image generating and source management in a build infrastructure, including plugin registration, plugin classes, and hooks for source and imager plugins.", "external_files": ["os", "logging", "types", "collections", "importlib", "importlib.util", "wic/WicError", "wic/misc/get_bitbake_var"], "external_methods": ["get_bitbake_var", "WicError"], "published": ["ImagerPlugin", "SourcePlugin"], "classes": [{"name": "PluginMgr", "description": "Manages plugin discovery and loading from specified plugin directories."}, {"name": "PluginMeta", "description": "Metaclass that registers plugin classes based on their 'name' attribute and plugin type."}, {"name": "ImagerPlugin", "description": "Base class for 'imager' type plugins, enforces implementing do_create method."}, {"name": "SourcePlugin", "description": "Base class for 'source' type plugins, providing optional hooks for disk installation, partition staging, configuration, preparation, and post-partition actions."}], "methods": [{"name": "get_plugins(cls, ptype)", "description": "Returns a dictionary of plugin name to class mappings for a given plugin type.", "scope": "PluginMgr", "scopeKind": "class"}, {"name": "do_create(self)", "description": "Abstract method in ImagerPlugin, must be implemented by subclasses to create an image.", "scope": "ImagerPlugin", "scopeKind": "class"}, {"name": "do_install_disk(cls, disk, disk_name, creator, workdir, oe_builddir, bootimg_dir, kernel_dir, native_sysroot)", "description": "Hook called after disk image is assembled, for final finalization.", "scope": "SourcePlugin", "scopeKind": "class"}, {"name": "do_stage_partition(cls, part, source_params, creator, cr_workdir, oe_builddir, bootimg_dir, kernel_dir, native_sysroot)", "description": "Hook called before partition preparation to stage content.", "scope": "SourcePlugin", "scopeKind": "class"}, {"name": "do_configure_partition(cls, part, source_params, creator, cr_workdir, oe_builddir, bootimg_dir, kernel_dir, native_sysroot)", "description": "Hook used to create configuration files for partitions, called before partition preparation.", "scope": "SourcePlugin", "scopeKind": "class"}, {"name": "do_prepare_partition(cls, part, source_params, creator, cr_workdir, oe_builddir, bootimg_dir, kernel_dir, rootfs_dir, native_sysroot)", "description": "Performs the actual population of a partition's content.", "scope": "SourcePlugin", "scopeKind": "class"}, {"name": "do_post_partition(cls, part, source_params, creator, cr_workdir, oe_builddir, bootimg_dir, kernel_dir, rootfs_dir, native_sysroot)", "description": "Hook called after a partition is created, for post-processing tasks.", "scope": "SourcePlugin", "scopeKind": "class"}, {"name": "__new__(cls, name, bases, attrs)", "scope": "PluginMeta", "scopeKind": "class", "description": "unavailable"}], "calls": ["os.path.join", "os.path.dirname", "os.path.isdir", "os.listdir", "importlib.util.spec_from_file_location", "importlib.util.module_from_spec", "spec.loader.exec_module", "get_bitbake_var"], "search-terms": ["plugin system", "source plugin base", "imager plugin base", "partition hooks", "build system", "wic", "python plugin architecture"], "state": 2, "file_id": 1460, "knowledge_revision": 14605, "git_revision": "", "ctags": [{"_type": "tag", "name": "ImagerPlugin", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/wic/pluginbase.py", "pattern": "/^class ImagerPlugin(metaclass=PluginMeta):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "PLUGINS", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/wic/pluginbase.py", "pattern": "/^PLUGINS = defaultdict(dict)$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "PLUGIN_TYPES", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/wic/pluginbase.py", "pattern": "/^PLUGIN_TYPES = [\"imager\", \"source\"]$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "PluginMeta", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/wic/pluginbase.py", "pattern": "/^class PluginMeta(type):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "PluginMgr", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/wic/pluginbase.py", "pattern": "/^class PluginMgr:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "SCRIPTS_PLUGIN_DIR", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/wic/pluginbase.py", "pattern": "/^SCRIPTS_PLUGIN_DIR = [\"scripts\\/lib\\/wic\\/plugins\", \"lib\\/wic\\/plugins\"]$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "SourcePlugin", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/wic/pluginbase.py", "pattern": "/^class SourcePlugin(metaclass=PluginMeta):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "__all__", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/wic/pluginbase.py", "pattern": "/^__all__ = ['ImagerPlugin', 'SourcePlugin']$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "__new__", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/wic/pluginbase.py", "pattern": "/^    def __new__(cls, name, bases, attrs):$/", "language": "Python", "kind": "member", "signature": "(cls, name, bases, attrs)", "scope": "PluginMeta", "scopeKind": "class"}, {"_type": "tag", "name": "_plugin_dirs", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/wic/pluginbase.py", "pattern": "/^    _plugin_dirs = []$/", "language": "Python", "kind": "variable", "scope": "PluginMgr", "scopeKind": "class"}, {"_type": "tag", "name": "do_configure_partition", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/wic/pluginbase.py", "pattern": "/^    def do_configure_partition(cls, part, source_params, creator, cr_workdir,$/", "language": "Python", "kind": "member", "signature": "(cls, part, source_params, creator, cr_workdir, oe_builddir, bootimg_dir, kernel_dir, native_sysroot)", "scope": "SourcePlugin", "scopeKind": "class"}, {"_type": "tag", "name": "do_create", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/wic/pluginbase.py", "pattern": "/^    def do_create(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "ImagerPlugin", "scopeKind": "class"}, {"_type": "tag", "name": "do_install_disk", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/wic/pluginbase.py", "pattern": "/^    def do_install_disk(cls, disk, disk_name, creator, workdir, oe_builddir,$/", "language": "Python", "kind": "member", "signature": "(cls, disk, disk_name, creator, workdir, oe_builddir, bootimg_dir, kernel_dir, native_sysroot)", "scope": "SourcePlugin", "scopeKind": "class"}, {"_type": "tag", "name": "do_post_partition", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/wic/pluginbase.py", "pattern": "/^    def do_post_partition(cls, part, source_params, creator, cr_workdir,$/", "language": "Python", "kind": "member", "signature": "(cls, part, source_params, creator, cr_workdir, oe_builddir, bootimg_dir, kernel_dir, rootfs_dir, native_sysroot)", "scope": "SourcePlugin", "scopeKind": "class"}, {"_type": "tag", "name": "do_prepare_partition", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/wic/pluginbase.py", "pattern": "/^    def do_prepare_partition(cls, part, source_params, creator, cr_workdir,$/", "language": "Python", "kind": "member", "signature": "(cls, part, source_params, creator, cr_workdir, oe_builddir, bootimg_dir, kernel_dir, rootfs_dir, native_sysroot)", "scope": "SourcePlugin", "scopeKind": "class"}, {"_type": "tag", "name": "do_stage_partition", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/wic/pluginbase.py", "pattern": "/^    def do_stage_partition(cls, part, source_params, creator, cr_workdir,$/", "language": "Python", "kind": "member", "signature": "(cls, part, source_params, creator, cr_workdir, oe_builddir, bootimg_dir, kernel_dir, native_sysroot)", "scope": "SourcePlugin", "scopeKind": "class"}, {"_type": "tag", "name": "get_plugins", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/wic/pluginbase.py", "pattern": "/^    def get_plugins(cls, ptype):$/", "language": "Python", "kind": "member", "signature": "(cls, ptype)", "scope": "PluginMgr", "scopeKind": "class"}, {"_type": "tag", "name": "logger", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/wic/pluginbase.py", "pattern": "/^logger = logging.getLogger('wic')$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "wic_plugin_type", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/wic/pluginbase.py", "pattern": "/^    wic_plugin_type = \"imager\"$/", "language": "Python", "kind": "variable", "scope": "ImagerPlugin", "scopeKind": "class"}, {"_type": "tag", "name": "wic_plugin_type", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/scripts/lib/wic/pluginbase.py", "pattern": "/^    wic_plugin_type = \"source\"$/", "language": "Python", "kind": "variable", "scope": "SourcePlugin", "scopeKind": "class"}], "hash": "1976d99e2628b47829aa7644553ef329", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "openembedded-core/scripts/lib/wic/pluginbase.py", "fields": [{"name": "PLUGINS = defaultdict(dict)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "PLUGIN_TYPES = [\"imager\", \"source\"]", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "SCRIPTS_PLUGIN_DIR = [\"scripts\\/lib\\/wic\\/plugins\", \"lib\\/wic\\/plugins\"]", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "__all__ = ['ImagerPlugin', 'SourcePlugin']", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "_plugin_dirs = []", "scope": "PluginMgr", "scopeKind": "class", "description": "unavailable"}, {"name": "logger = logging.getLogger('wic')", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "wic_plugin_type = \"imager\"", "scope": "ImagerPlugin", "scopeKind": "class", "description": "unavailable"}, {"name": "wic_plugin_type = \"source\"", "scope": "SourcePlugin", "scopeKind": "class", "description": "unavailable"}], "revision_history": [{"14605": ""}]}