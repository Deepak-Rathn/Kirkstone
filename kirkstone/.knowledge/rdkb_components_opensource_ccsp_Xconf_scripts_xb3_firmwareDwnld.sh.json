{"is_source_file": true, "format": "Shell Script", "description": "This file is a shell script for firmware download and upgrade management in a device, including logic for fetching firmware details, delay scheduling, download via direct or Codebig connections, and reboot handling after upgrade.", "external_files": ["/etc/utopia/service.d/log_capture_path.sh", "/fss/gw/etc/utopia/service.d/log_env_var.sh", "/lib/rdk/getpartnerid.sh", "/lib/rdk/getaccountid.sh", "/lib/rdk/t2Shared_api.sh", "/etc/waninfo.sh", "/etc/device.properties", "/etc/bundleUtils.sh", "/etc/rdkfwupgrader_message.sh", "/etc/whitelist.sh", "/usr/ccsp/tad/check_gw_health.sh", "/etc/rdm/rdmBundleMgr.sh", "/bin/XconfHttpDl"], "external_methods": ["getWanInterfaceName", "getWanMacInterfaceName", "getPartnerId", "getAccountId", "syscfg get PeriodicFWCheck_Enable", "syscfg get wanlinkheal", "syscfg get unit_activated", "getInstalledBundleList", "dmcli eRT getv", "dmcli eRT setv", "LTime H", "LTime M"], "published": ["getCurrentFw", "getRequestType", "checkFirmwareUpgCriteria", "IsCodebigBlocked", "get_Codebigconfig", "do_Codebig_signing", "useDirectRequest", "useCodebigRequest", "getFirmwareUpgDetail", "fetchFirmwareDetail", "calcRandTime", "getMacAddress", "getBuildType", "removeLegacyResources", "checkMaintenanceWindow"], "classes": [], "methods": [{"name": "getCurrentFw", "description": "Reads the current firmware version from version files"}, {"name": "getRequestType", "description": "Determines the request type based on the domain name"}, {"name": "checkFirmwareUpgCriteria", "description": "Checks if an upgrade is needed based on current and target firmware versions"}, {"name": "IsCodebigBlocked", "description": "Checks if Codebig connection attempts should be blocked based on previous failures"}, {"name": "get_Codebigconfig", "description": "Retrieves Codebig configuration settings"}, {"name": "do_Codebig_signing", "description": "Signs requests for Codebig connections"}, {"name": "useDirectRequest", "description": "Performs firmware download over direct connection"}, {"name": "useCodebigRequest", "description": "Performs firmware download via Codebig"}, {"name": "getFirmwareUpgDetail", "description": "Queries server for firmware upgrade details"}, {"name": "fetchFirmwareDetail", "description": "Fetches stored firmware details from last response"}, {"name": "calcRandTime", "description": "Calculates randomized scheduled times within maintenance windows"}, {"name": "getMacAddress", "description": "Retrieves MAC address of WAN interface"}, {"name": "getBuildType", "description": "Determines build type (DEV, VBN, PROD, GSLB) from version info"}, {"name": "removeLegacyResources", "description": "Cleans up old log and resource files"}, {"name": "checkMaintenanceWindow", "description": "Checks if current time is within scheduled maintenance windows for reboot"}], "calls": ["getWanInterfaceName", "getWanMacInterfaceName", "syscfg get PeriodicFWCheck_Enable", "syscfg get wanlinkheal", "syscfg get unit_activated", "getInstalledBundleList", "dmcli eRT getv", "dmcli eRT setv", "LTime H", "LTime M", "rm -f", "touch", "sleep", "echo", "date", "awk", "grep", "sed", "expr", "crontab", "cat", "printf", "eval", "result="], "search-terms": ["XCONF", "firmwareDownloadProtocol", "firmwareLocation", "firmwareFilename", "getCurrentFw", "checkFirmwareUpgCriteria", "useCodebigRequest", "useDirectRequest", "fetchFirmwareDetail", "calcRandTime", "checkMaintenanceWindow", "RebootPendingNotification", "FirmwareDownloadStartedNotification", "FirmwareDownloadCompletedNotification"], "state": 2, "file_id": 8161, "knowledge_revision": 21216, "git_revision": "", "hash": "8627b1d30455d5ad3fb4fc65958ede65", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "rdkb/components/opensource/ccsp/Xconf/scripts/xb3_firmwareDwnld.sh", "revision_history": [{"21216": ""}]}