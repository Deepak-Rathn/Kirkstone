{"is_source_file": true, "format": "C++ header file", "description": "This file is a C++ header file containing mock classes for sys event handling used in testing. It defines an interface and a mock implementation for the SyseventInterface, utilizing Google Mock library for unit tests.", "external_files": ["<gtest/gtest.h>", "<gmock/gmock.h>"], "external_methods": ["testing::NiceMock", "testing::StrictMock", "MOCK_METHOD6", "MOCK_METHOD5"], "published": ["SyseventInterface", "SyseventMock", "sysevent_set_unique", "sysevent_set"], "classes": [{"name": "SyseventInterface", "description": "An abstract interface class defining sys event set methods for testing."}, {"name": "SyseventMock", "description": "A mock implementation of SyseventInterface for unit testing, using Google Mock."}], "methods": [{"name": "sysevent_set_unique", "description": "Abstract method to set a unique sys event, to be implemented or mocked."}, {"name": "sysevent_set", "description": "Abstract method to set a sys event, to be implemented or mocked."}, {"name": "~SyseventInterface()", "scope": "SyseventInterface", "scopeKind": "class", "description": "unavailable"}, {"name": "~SyseventMock()", "scope": "SyseventMock", "scopeKind": "class", "description": "unavailable"}], "calls": ["MOCK_METHOD6(sysevent_set_unique, int(const int fd, const token_t token, const char *name, const char *value, char *outbuf, int outbytes))", "MOCK_METHOD5(sysevent_set, int(const int fd, const token_t token, const char *name, const char *value, int conf_req))"], "search-terms": ["mock_sysevent", "SyseventMock", "sysevent interface", "unit testing sys events", "gmock sys event"], "state": 2, "file_id": 9731, "knowledge_revision": 22739, "git_revision": "", "ctags": [{"_type": "tag", "name": "MOCK_SYSEVENT_H", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/hotspot/source/test/mocks/mock_sysevent.h", "pattern": "/^#define MOCK_SYSEVENT_H$/", "language": "C++", "kind": "macro"}, {"_type": "tag", "name": "SyseventInterface", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/hotspot/source/test/mocks/mock_sysevent.h", "pattern": "/^class SyseventInterface {$/", "language": "C++", "kind": "class"}, {"_type": "tag", "name": "SyseventMock", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/hotspot/source/test/mocks/mock_sysevent.h", "pattern": "/^class SyseventMock : public SyseventInterface {$/", "language": "C++", "kind": "class"}, {"_type": "tag", "name": "token_t", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/hotspot/source/test/mocks/mock_sysevent.h", "pattern": "/^typedef unsigned int token_t; \\/\\/ from sysevent.h$/", "language": "C++", "typeref": "typename:unsigned int", "kind": "typedef"}, {"_type": "tag", "name": "~SyseventInterface", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/hotspot/source/test/mocks/mock_sysevent.h", "pattern": "/^    virtual ~SyseventInterface() {}$/", "language": "C++", "kind": "function", "signature": "()", "scope": "SyseventInterface", "scopeKind": "class"}, {"_type": "tag", "name": "~SyseventMock", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/hotspot/source/test/mocks/mock_sysevent.h", "pattern": "/^    virtual ~SyseventMock() {}$/", "language": "C++", "kind": "function", "signature": "()", "scope": "SyseventMock", "scopeKind": "class"}], "hash": "13ee1be9e827c1796207747b3435dfef", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "rdkb/components/opensource/ccsp/hotspot/source/test/mocks/mock_sysevent.h", "revision_history": [{"22739": ""}]}