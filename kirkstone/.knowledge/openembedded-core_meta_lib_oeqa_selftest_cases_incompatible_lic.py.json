{"is_source_file": true, "format": "Python", "description": "This file contains unit test cases for verifying the behavior of the 'incompatible licenses' feature in the build system, including various license compatibility scenarios, alias handling, wildcards, and image-specific configurations.", "external_files": ["oeqa.selftest.case", "oeqa.utils.commands"], "external_methods": ["OESelftestTestCase", "bitbake"], "published": ["IncompatibleLicenseTestObsolete", "IncompatibleLicenseTests", "IncompatibleLicensePerImageTests", "NoGPL3InImagesTests"], "classes": [{"name": "IncompatibleLicenseTestObsolete", "description": "Test class for obsolete license compatibility checks."}, {"name": "IncompatibleLicenseTests", "description": "Test class for standard license compatibility checks."}, {"name": "IncompatibleLicensePerImageTests", "description": "Test class for license incompatibility validation within specific images."}, {"name": "NoGPL3InImagesTests", "description": "Test class ensuring GPL-3.0 licenses are excluded from specific images."}], "methods": [{"name": "lic_test(self, pn, pn_lic, lic)", "description": "Performs license comparison test, asserting that the result output contains expected error message when incompatible licenses are detected.", "scope": "IncompatibleLicenseTests", "scopeKind": "class"}, {"name": "test_incompatible_spdx_license(self)", "description": "Verifies that a package with an SPDX license cannot be built when that license is marked as incompatible.", "scope": "IncompatibleLicenseTests", "scopeKind": "class"}, {"name": "test_incompatible_spdx_license_wildcard(self)", "description": "Checks that wildcards matching SPDX licenses correctly mark incompatibility.", "scope": "IncompatibleLicenseTests", "scopeKind": "class"}, {"name": "test_incompatible_spdx_license_alias(self)", "description": "Verifies that license aliases from SPDXLICENSEMAP are correctly handled.", "scope": "IncompatibleLicenseTests", "scopeKind": "class"}, {"name": "test_incompatible_spdx_licenses(self)", "description": "Checks multiple SPDX licenses with certain combinations for incompatibility.", "scope": "IncompatibleLicenseTests", "scopeKind": "class"}, {"name": "test_incompatible_nonspdx_license(self)", "description": "Verifies that non-SPDX licenses are handled as incompatible when specified.", "scope": "IncompatibleLicenseTests", "scopeKind": "class"}, {"name": "test_bash_default(self)", "description": "Tests that the default configuration flags bash as incompatible when specified.", "scope": "IncompatibleLicensePerImageTests", "scopeKind": "class"}, {"name": "test_bash_and_license(self)", "description": "Checks the behavior when additional license exceptions are appended in image configuration.", "scope": "IncompatibleLicensePerImageTests", "scopeKind": "class"}, {"name": "test_bash_or_license(self)", "description": "Verifies that the OR condition in license exceptions is handled correctly.", "scope": "IncompatibleLicensePerImageTests", "scopeKind": "class"}, {"name": "test_bash_license_exceptions(self)", "description": "Ensures license exceptions are correctly configured and understood.", "scope": "IncompatibleLicensePerImageTests", "scopeKind": "class"}, {"name": "test_core_image_minimal(self)", "description": "Test to ensure GPL-3.0 licenses are excluded from core-image-minimal.", "scope": "NoGPL3InImagesTests", "scopeKind": "class"}, {"name": "test_core_image_full_cmdline_weston(self)", "description": "Checks exclusion of GPL-3.0 licenses from complex image configurations involving weston.", "scope": "NoGPL3InImagesTests", "scopeKind": "class"}, {"name": "default_config(self)", "scope": "IncompatibleLicensePerImageTests", "scopeKind": "class", "description": "unavailable"}, {"name": "lic_test(self, pn, pn_lic, lic, error_msg=None)", "scope": "IncompatibleLicenseTestObsolete", "scopeKind": "class", "description": "unavailable"}, {"name": "test_incompatible_alias_spdx_license(self)", "scope": "IncompatibleLicenseTestObsolete", "scopeKind": "class", "description": "unavailable"}, {"name": "test_incompatible_alias_spdx_license_alias(self)", "scope": "IncompatibleLicenseTestObsolete", "scopeKind": "class", "description": "unavailable"}, {"name": "test_incompatible_alias_spdx_license_alias_wildcard(self)", "scope": "IncompatibleLicenseTestObsolete", "scopeKind": "class", "description": "unavailable"}, {"name": "test_incompatible_alias_spdx_license_wildcard(self)", "scope": "IncompatibleLicenseTestObsolete", "scopeKind": "class", "description": "unavailable"}, {"name": "test_incompatible_all_licenses_wildcard(self)", "scope": "IncompatibleLicenseTestObsolete", "scopeKind": "class", "description": "unavailable"}, {"name": "test_incompatible_spdx_license_alias_wildcard(self)", "scope": "IncompatibleLicenseTestObsolete", "scopeKind": "class", "description": "unavailable"}, {"name": "test_incompatible_spdx_licenses_wildcard(self)", "scope": "IncompatibleLicenseTestObsolete", "scopeKind": "class", "description": "unavailable"}], "calls": ["bitbake", "self.write_config"], "search-terms": ["incompatible_lic", "lic_test", "GPL-3.0-only", "SPDX", "incompatibility", "license compatibility", "OE selftest"], "state": 2, "file_id": 1940, "knowledge_revision": 15085, "git_revision": "", "ctags": [{"_type": "tag", "name": "IncompatibleLicensePerImageTests", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oeqa/selftest/cases/incompatible_lic.py", "pattern": "/^class IncompatibleLicensePerImageTests(OESelftestTestCase):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "IncompatibleLicenseTestObsolete", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oeqa/selftest/cases/incompatible_lic.py", "pattern": "/^class IncompatibleLicenseTestObsolete(OESelftestTestCase):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "IncompatibleLicenseTests", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oeqa/selftest/cases/incompatible_lic.py", "pattern": "/^class IncompatibleLicenseTests(OESelftestTestCase):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "NoGPL3InImagesTests", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oeqa/selftest/cases/incompatible_lic.py", "pattern": "/^class NoGPL3InImagesTests(OESelftestTestCase):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "default_config", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oeqa/selftest/cases/incompatible_lic.py", "pattern": "/^    def default_config(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "IncompatibleLicensePerImageTests", "scopeKind": "class"}, {"_type": "tag", "name": "lic_test", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oeqa/selftest/cases/incompatible_lic.py", "pattern": "/^    def lic_test(self, pn, pn_lic, lic):$/", "language": "Python", "kind": "member", "signature": "(self, pn, pn_lic, lic)", "scope": "IncompatibleLicenseTests", "scopeKind": "class"}, {"_type": "tag", "name": "lic_test", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oeqa/selftest/cases/incompatible_lic.py", "pattern": "/^    def lic_test(self, pn, pn_lic, lic, error_msg=None):$/", "language": "Python", "kind": "member", "signature": "(self, pn, pn_lic, lic, error_msg=None)", "scope": "IncompatibleLicenseTestObsolete", "scopeKind": "class"}, {"_type": "tag", "name": "test_bash_and_license", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oeqa/selftest/cases/incompatible_lic.py", "pattern": "/^    def test_bash_and_license(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "IncompatibleLicensePerImageTests", "scopeKind": "class"}, {"_type": "tag", "name": "test_bash_default", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oeqa/selftest/cases/incompatible_lic.py", "pattern": "/^    def test_bash_default(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "IncompatibleLicensePerImageTests", "scopeKind": "class"}, {"_type": "tag", "name": "test_bash_license_exceptions", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oeqa/selftest/cases/incompatible_lic.py", "pattern": "/^    def test_bash_license_exceptions(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "IncompatibleLicensePerImageTests", "scopeKind": "class"}, {"_type": "tag", "name": "test_bash_or_license", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oeqa/selftest/cases/incompatible_lic.py", "pattern": "/^    def test_bash_or_license(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "IncompatibleLicensePerImageTests", "scopeKind": "class"}, {"_type": "tag", "name": "test_core_image_full_cmdline_weston", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oeqa/selftest/cases/incompatible_lic.py", "pattern": "/^    def test_core_image_full_cmdline_weston(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "NoGPL3InImagesTests", "scopeKind": "class"}, {"_type": "tag", "name": "test_core_image_minimal", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oeqa/selftest/cases/incompatible_lic.py", "pattern": "/^    def test_core_image_minimal(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "NoGPL3InImagesTests", "scopeKind": "class"}, {"_type": "tag", "name": "test_incompatible_alias_spdx_license", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oeqa/selftest/cases/incompatible_lic.py", "pattern": "/^    def test_incompatible_alias_spdx_license(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "IncompatibleLicenseTestObsolete", "scopeKind": "class"}, {"_type": "tag", "name": "test_incompatible_alias_spdx_license_alias", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oeqa/selftest/cases/incompatible_lic.py", "pattern": "/^    def test_incompatible_alias_spdx_license_alias(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "IncompatibleLicenseTestObsolete", "scopeKind": "class"}, {"_type": "tag", "name": "test_incompatible_alias_spdx_license_alias_wildcard", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oeqa/selftest/cases/incompatible_lic.py", "pattern": "/^    def test_incompatible_alias_spdx_license_alias_wildcard(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "IncompatibleLicenseTestObsolete", "scopeKind": "class"}, {"_type": "tag", "name": "test_incompatible_alias_spdx_license_wildcard", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oeqa/selftest/cases/incompatible_lic.py", "pattern": "/^    def test_incompatible_alias_spdx_license_wildcard(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "IncompatibleLicenseTestObsolete", "scopeKind": "class"}, {"_type": "tag", "name": "test_incompatible_all_licenses_wildcard", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oeqa/selftest/cases/incompatible_lic.py", "pattern": "/^    def test_incompatible_all_licenses_wildcard(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "IncompatibleLicenseTestObsolete", "scopeKind": "class"}, {"_type": "tag", "name": "test_incompatible_nonspdx_license", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oeqa/selftest/cases/incompatible_lic.py", "pattern": "/^    def test_incompatible_nonspdx_license(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "IncompatibleLicenseTests", "scopeKind": "class"}, {"_type": "tag", "name": "test_incompatible_spdx_license", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oeqa/selftest/cases/incompatible_lic.py", "pattern": "/^    def test_incompatible_spdx_license(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "IncompatibleLicenseTests", "scopeKind": "class"}, {"_type": "tag", "name": "test_incompatible_spdx_license_alias", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oeqa/selftest/cases/incompatible_lic.py", "pattern": "/^    def test_incompatible_spdx_license_alias(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "IncompatibleLicenseTests", "scopeKind": "class"}, {"_type": "tag", "name": "test_incompatible_spdx_license_alias_wildcard", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oeqa/selftest/cases/incompatible_lic.py", "pattern": "/^    def test_incompatible_spdx_license_alias_wildcard(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "IncompatibleLicenseTestObsolete", "scopeKind": "class"}, {"_type": "tag", "name": "test_incompatible_spdx_license_wildcard", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oeqa/selftest/cases/incompatible_lic.py", "pattern": "/^    def test_incompatible_spdx_license_wildcard(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "IncompatibleLicenseTests", "scopeKind": "class"}, {"_type": "tag", "name": "test_incompatible_spdx_licenses", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oeqa/selftest/cases/incompatible_lic.py", "pattern": "/^    def test_incompatible_spdx_licenses(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "IncompatibleLicenseTests", "scopeKind": "class"}, {"_type": "tag", "name": "test_incompatible_spdx_licenses_wildcard", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oeqa/selftest/cases/incompatible_lic.py", "pattern": "/^    def test_incompatible_spdx_licenses_wildcard(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "IncompatibleLicenseTestObsolete", "scopeKind": "class"}], "hash": "ce95b28984bf5e0d41f6241f030b02c3", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "openembedded-core/meta/lib/oeqa/selftest/cases/incompatible_lic.py", "revision_history": [{"15085": ""}]}