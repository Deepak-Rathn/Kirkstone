{"is_source_file": true, "format": "C++", "description": "Test source file for Xconf client component using Google Test framework; contains unit tests and fixture setup.", "external_files": ["gmock/gmock.h", "gtest/gtest.h", "xconfclientMocks/fileMock.h", "<stdio.h>", "<string.h>", "<assert.h>", "<stdlib.h>", "<unistd.h>", "<stdarg.h>", "<signal.h>", "<bulkdata/reportprofiles.h>", "<bulkdata/profilexconf.h>", "<xconf-client/xconfclient.h>", "<xconf-client/xconfclient.c>", "<utils/t2MtlsUtils.h>", "<t2parser/t2parserxconf.h>", "<utils/vector.h>", "<utils/persistence.h>", "<telemetry2_0.h>", "<ccspinterface/busInterface.h>"], "external_methods": ["getBuildType", "getTimezone", "appendRequestParams", "doHttpGet", "fetchRemoteConfiguration", "getRemoteConfigURL"], "published": [], "classes": [{"name": "XconfcliTestFixture", "description": "Test fixture class for setting up and tearing down tests related to Xconf client."}], "methods": [{"name": "GETBUILDTYPE", "description": "Test that verifies getBuildType returns failure on null input."}, {"name": "GETTIMEZONE", "description": "Test that verifies getTimezone handles access failures properly."}, {"name": "APPENDREQUEST", "description": "Test for appendRequestParams with null buffer or invalid length."}, {"name": "DOHTTPGET", "description": "Test for doHttpGet with null URL."}, {"name": "FETCHREMOTECONFIG", "description": "Test for fetchRemoteConfiguration with invalid URL."}, {"name": "getBuildType", "description": "Method invoked within test to retrieve build type."}, {"name": "getTimezone", "description": "Method invoked within test to retrieve timezone."}, {"name": "doHttpGet", "description": "Performs HTTP GET and returns status."}, {"name": "fetchRemoteConfiguration", "description": "Fetches remote configuration data."}, {"name": "getRemoteConfigURL", "description": "Retrieves remote configuration URL."}, {"name": "void SetUp()", "scope": "XconfcliTestFixture", "scopeKind": "class", "description": "unavailable"}, {"name": "void SetUpTestCase()", "scope": "XconfcliTestFixture", "scopeKind": "class", "description": "unavailable"}, {"name": "TEST(APPENDREQUEST,NULL_CHECK)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "TEST(DOHTTPGET,HTTPURL_CHECK)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "TEST(FETCHREMOTECONFIG,CONFIGURL_NULL_INVALID)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "TEST(GETBUILDTYPE,NULL_CHECK)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "TEST(GETTIMEZONE,NULL_CHECK)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "TEST_F(XconfcliTestFixture,getRemoteConfigURL)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "TEST_F(XconfcliTestFixture,doHttpGet)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "TEST_F(XconfcliTestFixture,doHttpGet1)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "TEST_F(XconfcliTestFixture,getBuildType)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "TEST_F(XconfcliTestFixture,getTimezone)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "void TearDown()", "scope": "XconfcliTestFixture", "scopeKind": "class", "description": "unavailable"}, {"name": "void TearDownTestCase()", "scope": "XconfcliTestFixture", "scopeKind": "class", "description": "unavailable"}, {"name": "XconfcliTestFixture()", "scope": "XconfcliTestFixture", "scopeKind": "class", "description": "unavailable"}, {"name": "~XconfcliTestFixture()", "scope": "XconfcliTestFixture", "scopeKind": "class", "description": "unavailable"}], "calls": ["getBuildType", "getTimezone", "appendRequestParams", "doHttpGet", "fetchRemoteConfiguration", "getRemoteConfigURL"], "search-terms": ["XconfcliTestFixture", "getBuildType", "getTimezone", "doHttpGet", "fetchRemoteConfiguration", "xconfclient"], "state": 2, "file_id": 12824, "knowledge_revision": 25723, "git_revision": "", "ctags": [{"_type": "tag", "name": "SetUp", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/test/xconf-client/xconfclientTest.cpp", "pattern": "/^         virtual void SetUp()$/", "file": true, "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "()", "scope": "XconfcliTestFixture", "scopeKind": "class"}, {"_type": "tag", "name": "SetUpTestCase", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/test/xconf-client/xconfclientTest.cpp", "pattern": "/^        static void SetUpTestCase()$/", "file": true, "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "()", "scope": "XconfcliTestFixture", "scopeKind": "class"}, {"_type": "tag", "name": "TEST", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/test/xconf-client/xconfclientTest.cpp", "pattern": "/^TEST(APPENDREQUEST, NULL_CHECK)$/", "language": "C++", "kind": "function", "signature": "(APPENDREQUEST,NULL_CHECK)"}, {"_type": "tag", "name": "TEST", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/test/xconf-client/xconfclientTest.cpp", "pattern": "/^TEST(DOHTTPGET, HTTPURL_CHECK)$/", "language": "C++", "kind": "function", "signature": "(DOHTTPGET,HTTPURL_CHECK)"}, {"_type": "tag", "name": "TEST", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/test/xconf-client/xconfclientTest.cpp", "pattern": "/^TEST(FETCHREMOTECONFIG, CONFIGURL_NULL_INVALID)$/", "language": "C++", "kind": "function", "signature": "(FETCHREMOTECONFIG,CONFIGURL_NULL_INVALID)"}, {"_type": "tag", "name": "TEST", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/test/xconf-client/xconfclientTest.cpp", "pattern": "/^TEST(GETBUILDTYPE, NULL_CHECK)$/", "language": "C++", "kind": "function", "signature": "(GETBUILDTYPE,NULL_CHECK)"}, {"_type": "tag", "name": "TEST", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/test/xconf-client/xconfclientTest.cpp", "pattern": "/^TEST(GETTIMEZONE, NULL_CHECK)$/", "language": "C++", "kind": "function", "signature": "(GETTIMEZONE,NULL_CHECK)"}, {"_type": "tag", "name": "TEST_F", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/test/xconf-client/xconfclientTest.cpp", "pattern": "/^TEST_F(XconfcliTestFixture,  getRemoteConfigURL)$/", "language": "C++", "kind": "function", "signature": "(XconfcliTestFixture,getRemoteConfigURL)"}, {"_type": "tag", "name": "TEST_F", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/test/xconf-client/xconfclientTest.cpp", "pattern": "/^TEST_F(XconfcliTestFixture, doHttpGet)$/", "language": "C++", "kind": "function", "signature": "(XconfcliTestFixture,doHttpGet)"}, {"_type": "tag", "name": "TEST_F", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/test/xconf-client/xconfclientTest.cpp", "pattern": "/^TEST_F(XconfcliTestFixture, doHttpGet1)$/", "language": "C++", "kind": "function", "signature": "(XconfcliTestFixture,doHttpGet1)"}, {"_type": "tag", "name": "TEST_F", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/test/xconf-client/xconfclientTest.cpp", "pattern": "/^TEST_F(XconfcliTestFixture, getBuildType)$/", "language": "C++", "kind": "function", "signature": "(XconfcliTestFixture,getBuildType)"}, {"_type": "tag", "name": "TEST_F", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/test/xconf-client/xconfclientTest.cpp", "pattern": "/^TEST_F(XconfcliTestFixture, getTimezone)$/", "language": "C++", "kind": "function", "signature": "(XconfcliTestFixture,getTimezone)"}, {"_type": "tag", "name": "TearDown", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/test/xconf-client/xconfclientTest.cpp", "pattern": "/^        virtual void TearDown()$/", "file": true, "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "()", "scope": "XconfcliTestFixture", "scopeKind": "class"}, {"_type": "tag", "name": "TearDownTestCase", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/test/xconf-client/xconfclientTest.cpp", "pattern": "/^        static void TearDownTestCase()$/", "file": true, "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "()", "scope": "XconfcliTestFixture", "scopeKind": "class"}, {"_type": "tag", "name": "XconfcliTestFixture", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/test/xconf-client/xconfclientTest.cpp", "pattern": "/^        XconfcliTestFixture()$/", "file": true, "language": "C++", "kind": "function", "signature": "()", "scope": "XconfcliTestFixture", "scopeKind": "class"}, {"_type": "tag", "name": "XconfcliTestFixture", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/test/xconf-client/xconfclientTest.cpp", "pattern": "/^class XconfcliTestFixture : public ::testing::Test {$/", "file": true, "language": "C++", "kind": "class"}, {"_type": "tag", "name": "blocking_signal", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/test/xconf-client/xconfclientTest.cpp", "pattern": "/^sigset_t blocking_signal;$/", "language": "C++", "typeref": "typename:sigset_t", "kind": "variable"}, {"_type": "tag", "name": "m_fileIOMock", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/test/xconf-client/xconfclientTest.cpp", "pattern": "/^FileioMock *m_fileIOMock = NULL;$/", "language": "C++", "typeref": "typename:FileioMock *", "kind": "variable"}, {"_type": "tag", "name": "mockedpfileIO", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/test/xconf-client/xconfclientTest.cpp", "pattern": "/^        FileioMock mockedpfileIO;$/", "file": true, "language": "C++", "typeref": "typename:FileioMock", "kind": "member", "scope": "XconfcliTestFixture", "scopeKind": "class"}, {"_type": "tag", "name": "~XconfcliTestFixture", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/test/xconf-client/xconfclientTest.cpp", "pattern": "/^        virtual ~XconfcliTestFixture()$/", "file": true, "language": "C++", "kind": "function", "signature": "()", "scope": "XconfcliTestFixture", "scopeKind": "class"}], "hash": "3366ac77c7267732a2108d76506e1a2d", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "rdk/components/generic/telemetry/source/test/xconf-client/xconfclientTest.cpp", "fields": [{"name": "sigset_t blocking_signal", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "FileioMock * m_fileIOMock", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "FileioMock mockedpfileIO", "scope": "XconfcliTestFixture", "scopeKind": "class", "description": "unavailable"}], "revision_history": [{"25723": ""}]}