{"is_source_file": true, "format": "Python", "description": "This file contains unit tests for the runCmd utility function from oeqa.utils.commands, including tests for different command execution scenarios, timeouts, and logging behaviors.", "external_files": ["oeqa.selftest.case", "oeqa.utils.commands", "oeqa.utils"], "external_methods": ["OESelftestTestCase.assertEqual", "OESelftestTestCase.assertRaises", "OESelftestTestCase.assertRaisesRegexp", "runCmd"], "published": [], "classes": [{"name": "MemLogger", "description": "A simple logger class for capturing info and error messages during command execution."}, {"name": "RunCmdTests", "description": "Test case class for testing the runCmd function with various scenarios."}], "methods": [{"name": "test_result_okay(self)", "description": "Test that runCmd returns a successful status for the 'true' command.", "scope": "RunCmdTests", "scopeKind": "class"}, {"name": "test_result_false(self)", "description": "Test that runCmd returns a failure status for the 'false' command when ignore_status=True.", "scope": "RunCmdTests", "scopeKind": "class"}, {"name": "test_shell(self)", "description": "Test that runCmd executes shell commands correctly.", "scope": "RunCmdTests", "scopeKind": "class"}, {"name": "test_no_shell(self)", "description": "Test that runCmd raises FileNotFoundError when command not found and shell=False.", "scope": "RunCmdTests", "scopeKind": "class"}, {"name": "test_list_not_found(self)", "description": "Test that runCmd raises FileNotFoundError when given an invalid command list.", "scope": "RunCmdTests", "scopeKind": "class"}, {"name": "test_list_okay(self)", "description": "Test that runCmd returns success status for command list such as ['true'].", "scope": "RunCmdTests", "scopeKind": "class"}, {"name": "test_result_assertion(self)", "description": "Test that runCmd raises AssertionError when command returns non-zero status with assert_error=True.", "scope": "RunCmdTests", "scopeKind": "class"}, {"name": "test_result_exception(self)", "description": "Test that runCmd raises CommandError with output info when command fails and assert_error=False.", "scope": "RunCmdTests", "scopeKind": "class"}, {"name": "test_output(self)", "description": "Test that runCmd captures stdout and stderr correctly with sync=False and shell=True.", "scope": "RunCmdTests", "scopeKind": "class"}, {"name": "test_output_split(self)", "description": "Test that runCmd captures stdout and stderr separately when stderr=subprocess.PIPE.", "scope": "RunCmdTests", "scopeKind": "class"}, {"name": "test_timeout(self)", "description": "Test that runCmd times out and sends SIGTERM for long-running commands.", "scope": "RunCmdTests", "scopeKind": "class"}, {"name": "test_timeout_split(self)", "description": "Similar timeout test with stderr captured separately.", "scope": "RunCmdTests", "scopeKind": "class"}, {"name": "test_stdin(self)", "description": "Test that runCmd can send data to stdin correctly.", "scope": "RunCmdTests", "scopeKind": "class"}, {"name": "test_stdin_timeout(self)", "description": "Test that runCmd times out even when sending data to stdin.", "scope": "RunCmdTests", "scopeKind": "class"}, {"name": "test_log(self)", "description": "Test that runCmd logs command start and output messages correctly.", "scope": "RunCmdTests", "scopeKind": "class"}, {"name": "test_log_split(self)", "description": "Test logging behavior when stderr is captured separately.", "scope": "RunCmdTests", "scopeKind": "class"}, {"name": "__init__(self)", "scope": "MemLogger", "scopeKind": "class", "description": "unavailable"}, {"name": "error(self, msg)", "scope": "MemLogger", "scopeKind": "class", "description": "unavailable"}, {"name": "info(self, msg)", "scope": "MemLogger", "scopeKind": "class", "description": "unavailable"}], "calls": ["runCmd(\"true\")", "runCmd(\"false\", ignore_status=True)", "runCmd(\"false; true\", ignore_status=True)", "runCmd(\"echo foobar >&2; false\", shell=True, assert_error=False)", "runCmd(\"echo stdout; echo stderr >&2\", shell=True, sync=False)", "runCmd([\"sleep\", \"60\"], timeout=self.TIMEOUT, ignore_status=True, sync=False)", "runCmd(\"cat\", data=b\"hello world\", timeout=self.TIMEOUT, sync=False)", "runCmd([\"sleep\", \"60\"], data=b\"hello world\", timeout=self.TIMEOUT, ignore_status=True, sync=False)", "runCmd(\"echo stdout; echo stderr >&2\", shell=True, output_log=log, sync=False)"], "search-terms": ["runCmd", "OESelftestTestCase", "selftest", "unit test", "command execution", "timeout handling", "logging"], "state": 2, "file_id": 1899, "knowledge_revision": 15045, "git_revision": "", "ctags": [{"_type": "tag", "name": "DELTA", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oeqa/selftest/cases/runcmd.py", "pattern": "/^    DELTA = 8$/", "language": "Python", "kind": "variable", "scope": "RunCmdTests", "scopeKind": "class"}, {"_type": "tag", "name": "MemLogger", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oeqa/selftest/cases/runcmd.py", "pattern": "/^class MemLogger(object):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "RunCmdTests", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oeqa/selftest/cases/runcmd.py", "pattern": "/^class RunCmdTests(OESelftestTestCase):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "TIMEOUT", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oeqa/selftest/cases/runcmd.py", "pattern": "/^    TIMEOUT = 10$/", "language": "Python", "kind": "variable", "scope": "RunCmdTests", "scopeKind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oeqa/selftest/cases/runcmd.py", "pattern": "/^    def __init__(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "MemLogger", "scopeKind": "class"}, {"_type": "tag", "name": "error", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oeqa/selftest/cases/runcmd.py", "pattern": "/^    def error(self, msg):$/", "language": "Python", "kind": "member", "signature": "(self, msg)", "scope": "MemLogger", "scopeKind": "class"}, {"_type": "tag", "name": "info", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oeqa/selftest/cases/runcmd.py", "pattern": "/^    def info(self, msg):$/", "language": "Python", "kind": "member", "signature": "(self, msg)", "scope": "MemLogger", "scopeKind": "class"}, {"_type": "tag", "name": "test_list_not_found", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oeqa/selftest/cases/runcmd.py", "pattern": "/^    def test_list_not_found(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "RunCmdTests", "scopeKind": "class"}, {"_type": "tag", "name": "test_list_okay", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oeqa/selftest/cases/runcmd.py", "pattern": "/^    def test_list_okay(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "RunCmdTests", "scopeKind": "class"}, {"_type": "tag", "name": "test_log", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oeqa/selftest/cases/runcmd.py", "pattern": "/^    def test_log(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "RunCmdTests", "scopeKind": "class"}, {"_type": "tag", "name": "test_log_split", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oeqa/selftest/cases/runcmd.py", "pattern": "/^    def test_log_split(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "RunCmdTests", "scopeKind": "class"}, {"_type": "tag", "name": "test_no_shell", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oeqa/selftest/cases/runcmd.py", "pattern": "/^    def test_no_shell(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "RunCmdTests", "scopeKind": "class"}, {"_type": "tag", "name": "test_output", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oeqa/selftest/cases/runcmd.py", "pattern": "/^    def test_output(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "RunCmdTests", "scopeKind": "class"}, {"_type": "tag", "name": "test_output_split", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oeqa/selftest/cases/runcmd.py", "pattern": "/^    def test_output_split(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "RunCmdTests", "scopeKind": "class"}, {"_type": "tag", "name": "test_result_assertion", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oeqa/selftest/cases/runcmd.py", "pattern": "/^    def test_result_assertion(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "RunCmdTests", "scopeKind": "class"}, {"_type": "tag", "name": "test_result_exception", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oeqa/selftest/cases/runcmd.py", "pattern": "/^    def test_result_exception(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "RunCmdTests", "scopeKind": "class"}, {"_type": "tag", "name": "test_result_false", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oeqa/selftest/cases/runcmd.py", "pattern": "/^    def test_result_false(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "RunCmdTests", "scopeKind": "class"}, {"_type": "tag", "name": "test_result_okay", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oeqa/selftest/cases/runcmd.py", "pattern": "/^    def test_result_okay(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "RunCmdTests", "scopeKind": "class"}, {"_type": "tag", "name": "test_shell", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oeqa/selftest/cases/runcmd.py", "pattern": "/^    def test_shell(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "RunCmdTests", "scopeKind": "class"}, {"_type": "tag", "name": "test_stdin", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oeqa/selftest/cases/runcmd.py", "pattern": "/^    def test_stdin(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "RunCmdTests", "scopeKind": "class"}, {"_type": "tag", "name": "test_stdin_timeout", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oeqa/selftest/cases/runcmd.py", "pattern": "/^    def test_stdin_timeout(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "RunCmdTests", "scopeKind": "class"}, {"_type": "tag", "name": "test_timeout", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oeqa/selftest/cases/runcmd.py", "pattern": "/^    def test_timeout(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "RunCmdTests", "scopeKind": "class"}, {"_type": "tag", "name": "test_timeout_split", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oeqa/selftest/cases/runcmd.py", "pattern": "/^    def test_timeout_split(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "RunCmdTests", "scopeKind": "class"}], "hash": "d7399bcbb619167352d79df082c03366", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "openembedded-core/meta/lib/oeqa/selftest/cases/runcmd.py", "fields": [{"name": "DELTA = 8", "scope": "RunCmdTests", "scopeKind": "class", "description": "unavailable"}, {"name": "TIMEOUT = 10", "scope": "RunCmdTests", "scopeKind": "class", "description": "unavailable"}], "revision_history": [{"15045": ""}]}