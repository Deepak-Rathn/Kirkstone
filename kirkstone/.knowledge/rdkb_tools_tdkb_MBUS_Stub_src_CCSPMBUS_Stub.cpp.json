{"is_source_file": true, "format": "C++", "description": "This file appears to be a C++ source file implementing the CCSPMBUS class, which provides various methods to initialize, load configurations, register/unregister components, query status, and interact with a message bus for a component support platform. It includes external C functions for interacting with underlying C-based APIs and uses JSON for input/output communication.", "external_files": ["CCSPMBUS_Stub.h", "ssp_tdk_wrp.h", "ssp_tdk_mbus_wrp.h"], "external_methods": ["ssp_register", "ssp_terminate", "ssp_getParameterValue", "ssp_setParameterValue", "ssp_getParameterAttr", "ssp_setParameterAttr", "ssp_getParameterNames", "ssp_addTableRow", "ssp_deleteTableRow", "ssp_setCommit", "ssp_setSessionId", "free_Memory_Names", "free_Memory_val", "free_Memory_Attr", "ssp_mbus_init", "ssp_mbus_exit", "ssp_mbus_register_event", "ssp_mbus_unregister_event", "ssp_mbus_loadcfg", "ssp_mbus_load_dmlxml", "ssp_mbus_register_path", "ssp_mbus_query_status", "ssp_mbus_get_allocmemory", "ssp_mbus_get_maxmemory", "ssp_mbus_register_capabilities", "ssp_mbus_unregister_namespace", "ssp_mbus_unregistercomponent", "ssp_mbus_namespace_supportedby_component", "ssp_mbus_component_supporting_dynamictbl", "ssp_mbus_get_registered_components", "ssp_mbus_check_namespace_datatype", "ssp_mbus_dump_component_registry", "ssp_mbus_issystem_ready", "ssp_mbus_bus_check", "ssp_mbus_inform_end_session", "ssp_mbus_req_sessionid", "ssp_mbus_register_base", "ssp_mbus_getHealth", "ssp_mbus_SendsystemReadySignal", "ssp_mbus_unloadcfg"], "published": ["initialize", "testmodulepre_requisites", "testmodulepost_requisites", "CCSPMBUS_GetParamValues", "CCSPMBUS_SetParamValues", "CCSPMBUS_Init", "CCSPMBUS_Exit", "CCSPMBUS_RegisterEvent", "CCSPMBUS_UnRegisterEvent", "CCSPMBUS_LoadCfg", "CCSPMBUS_LoadDmXml", "CCSPMBUS_RegisterPath", "CCSPMBUS_QueryStatus", "CCSPMBUS_GetAllocMemory", "CCSPMBUS_GetMaxMemory", "CCSPMBUS_RegisterCapabilities", "CCSPMBUS_UnRegisterNamespace", "CCSPMBUS_UnRegisterComponent", "CCSPMBUS_DiskNamespaceSupportedByComponent", "CCSPMBUS_DiskComponentSupportingDynamicTbl", "CCSPMBUS_GetRegisteredComponents", "CCSPMBUS_GetHealth", "CCSPMBUS_DumpComponentRegistry", "CCSPMBUS_IsSystemReady", "CCSPMBUS_SendSignal", "CCSPMBUS_RegisterBase", "CCSPMBUS_ReqSessionId", "CCSPMBUS_InformEndSession", "CCSPMBUS_BusCheck", "CCSPMBUS_CheckNamespaceDataType", "CCSPMBUS_UnloadCfg"], "classes": [{"name": "CCSPMBUS", "description": "Represents a message bus component for CCSP platform with methods for initialization, configuration, registration, status querying, and communication with underlying system APIs."}], "methods": [{"name": "bool initialize(IN const char * szVersion)", "description": "Initializes the CCSPMBUS object, used for setting up registration with the agent.", "scope": "CCSPMBUS", "scopeKind": "class"}, {"name": "std::string testmodulepre_requisites()", "description": "Sets pre-requisites needed before running tests, including registering with the component registry.", "scope": "CCSPMBUS", "scopeKind": "class"}, {"name": "bool testmodulepost_requisites()", "description": "Resets or cleans up pre-requisites after testing.", "scope": "CCSPMBUS", "scopeKind": "class"}, {"name": "void CCSPMBUS_GetParamValues(IN const Json::Value & req,OUT Json::Value & response)", "description": "Retrieves parameter values for a specified parameter name.", "scope": "CCSPMBUS", "scopeKind": "class"}, {"name": "void CCSPMBUS_SetParamValues(IN const Json::Value & req,OUT Json::Value & response)", "description": "Sets a specified value to a parameter and validates the setting.", "scope": "CCSPMBUS", "scopeKind": "class"}, {"name": "void CCSPMBUS_Init(IN const Json::Value & req,OUT Json::Value & response)", "description": "Initializes message bus components with configuration file.", "scope": "CCSPMBUS", "scopeKind": "class"}, {"name": "void CCSPMBUS_Exit(IN const Json::Value & req,OUT Json::Value & response)", "description": "Exits/de-initializes message bus components.", "scope": "CCSPMBUS", "scopeKind": "class"}, {"name": "void CCSPMBUS_RegisterEvent(IN const Json::Value & req,OUT Json::Value & response)", "description": "Registers an event with the message bus.", "scope": "CCSPMBUS", "scopeKind": "class"}, {"name": "void CCSPMBUS_UnRegisterEvent(IN const Json::Value & req,OUT Json::Value & response)", "description": "Unregisters an event from the message bus.", "scope": "CCSPMBUS", "scopeKind": "class"}, {"name": "void CCSPMBUS_LoadCfg(IN const Json::Value & req,OUT Json::Value & response)", "description": "Loads a configuration file for the component.", "scope": "CCSPMBUS", "scopeKind": "class"}, {"name": "void CCSPMBUS_LoadDmXml(IN const Json::Value & req,OUT Json::Value & response)", "description": "Loads a data model XML file.", "scope": "CCSPMBUS", "scopeKind": "class"}, {"name": "void CCSPMBUS_RegisterPath(IN const Json::Value & req,OUT Json::Value & response)", "description": "Registers a component path.", "scope": "CCSPMBUS", "scopeKind": "class"}, {"name": "void CCSPMBUS_QueryStatus(IN const Json::Value & req,OUT Json::Value & response)", "description": "Queries the status of the message bus.", "scope": "CCSPMBUS", "scopeKind": "class"}, {"name": "void CCSPMBUS_GetAllocMemory(IN const Json::Value & req,OUT Json::Value & response)", "description": "Retrieves allocated memory information.", "scope": "CCSPMBUS", "scopeKind": "class"}, {"name": "void CCSPMBUS_GetMaxMemory(IN const Json::Value & req,OUT Json::Value & response)", "description": "Retrieves maximum memory configuration.", "scope": "CCSPMBUS", "scopeKind": "class"}, {"name": "void CCSPMBUS_RegisterCapabilities(IN const Json::Value & req,OUT Json::Value & response)", "description": "Registers capabilities supported by the component.", "scope": "CCSPMBUS", "scopeKind": "class"}, {"name": "void CCSPMBUS_UnRegisterNamespace(IN const Json::Value & req,OUT Json::Value & response)", "description": "Unregisters a namespace.", "scope": "CCSPMBUS", "scopeKind": "class"}, {"name": "void CCSPMBUS_UnRegisterComponent(IN const Json::Value & req,OUT Json::Value & response)", "description": "Unregisters a component.", "scope": "CCSPMBUS", "scopeKind": "class"}, {"name": "void CCSPMBUS_DiskNamespaceSupportedByComponent(IN const Json::Value & req,OUT Json::Value & response)", "description": "Checks if namespace is supported by component.", "scope": "CCSPMBUS", "scopeKind": "class"}, {"name": "void CCSPMBUS_DiskComponentSupportingDynamicTbl(IN const Json::Value & req,OUT Json::Value & response)", "description": "Checks if component supports dynamic tables.", "scope": "CCSPMBUS", "scopeKind": "class"}, {"name": "void CCSPMBUS_GetRegisteredComponents(IN const Json::Value & req,OUT Json::Value & response)", "description": "Gets list of registered components.", "scope": "CCSPMBUS", "scopeKind": "class"}, {"name": "void CCSPMBUS_GetHealth(IN const Json::Value & req,OUT Json::Value & response)", "description": "Retrieves health information of a component.", "scope": "CCSPMBUS", "scopeKind": "class"}, {"name": "void CCSPMBUS_DumpComponentRegistry(IN const Json::Value & req,OUT Json::Value & response)", "description": "Dumps the component registry.", "scope": "CCSPMBUS", "scopeKind": "class"}, {"name": "void CCSPMBUS_IsSystemReady(IN const Json::Value & req,OUT Json::Value & response)", "description": "Checks if system is ready.", "scope": "CCSPMBUS", "scopeKind": "class"}, {"name": "void CCSPMBUS_SendSignal(IN const Json::Value & req,OUT Json::Value & response)", "description": "Sends a system ready signal.", "scope": "CCSPMBUS", "scopeKind": "class"}, {"name": "void CCSPMBUS_RegisterBase(IN const Json::Value & req,OUT Json::Value & response)", "description": "Registers base support.", "scope": "CCSPMBUS", "scopeKind": "class"}, {"name": "void CCSPMBUS_ReqSessionId(IN const Json::Value & req,OUT Json::Value & response)", "description": "Requests a session ID from the system.", "scope": "CCSPMBUS", "scopeKind": "class"}, {"name": "void CCSPMBUS_InformEndSession(IN const Json::Value & req,OUT Json::Value & response)", "description": "Informs system about end of session.", "scope": "CCSPMBUS", "scopeKind": "class"}, {"name": "void CCSPMBUS_BusCheck(IN const Json::Value & req,OUT Json::Value & response)", "description": "Checks bus status.", "scope": "CCSPMBUS", "scopeKind": "class"}, {"name": "void CCSPMBUS_CheckNamespaceDataType(IN const Json::Value & req,OUT Json::Value & response)", "description": "Checks data type for namespace.", "scope": "CCSPMBUS", "scopeKind": "class"}, {"name": "void CCSPMBUS_UnloadCfg(IN const Json::Value & req,OUT Json::Value & response)", "description": "Unloads configuration.", "scope": "CCSPMBUS", "scopeKind": "class"}, {"name": "CCSPMBUS * CreateObject(TcpSocketServer & ptrtcpServer)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "void DestroyObject(CCSPMBUS * stubobj)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "bool cleanup(IN const char * szVersion)", "scope": "CCSPMBUS", "scopeKind": "class", "description": "unavailable"}], "calls": ["ssp_register", "ssp_terminate", "ssp_getParameterValue", "ssp_setParameterValue", "ssp_getParameterAttr", "ssp_setParameterAttr", "ssp_getParameterNames", "ssp_addTableRow", "ssp_deleteTableRow", "ssp_setCommit", "ssp_setSessionId", "free_Memory_Names", "free_Memory_val", "free_Memory_Attr", "ssp_mbus_init", "ssp_mbus_exit", "ssp_mbus_register_event", "ssp_mbus_unregister_event", "ssp_mbus_loadcfg", "ssp_mbus_load_dmlxml", "ssp_mbus_register_path", "ssp_mbus_query_status", "ssp_mbus_get_allocmemory", "ssp_mbus_get_maxmemory", "ssp_mbus_register_capabilities", "ssp_mbus_unregister_namespace", "ssp_mbus_unregistercomponent", "ssp_mbus_namespace_supportedby_component", "ssp_mbus_component_supporting_dynamictbl", "ssp_mbus_get_registered_components", "ssp_mbus_check_namespace_datatype", "ssp_mbus_dump_component_registry", "ssp_mbus_issystem_ready", "ssp_mbus_bus_check", "ssp_mbus_inform_end_session", "ssp_mbus_req_sessionid", "ssp_mbus_register_base", "ssp_mbus_getHealth", "ssp_mbus_SendsystemReadySignal", "ssp_mbus_unloadcfg"], "search-terms": ["CCSPMBUS", "mbus", "loadcfg", "dmlxml", "register_event", "unregister_event", "component_supporting_dynamictbl", "get_health", "systemready", "sessionid", "end_session", "bus_check"], "state": 2, "file_id": 5552, "knowledge_revision": 18672, "git_revision": "", "ctags": [{"_type": "tag", "name": "CCSPMBUS_BusCheck", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/MBUS_Stub/src/CCSPMBUS_Stub.cpp", "pattern": "/^void CCSPMBUS::CCSPMBUS_BusCheck(IN const Json::Value& req, OUT Json::Value& response)$/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(IN const Json::Value & req,OUT Json::Value & response)", "scope": "CCSPMBUS", "scopeKind": "class"}, {"_type": "tag", "name": "CCSPMBUS_CheckNamespaceDataType", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/MBUS_Stub/src/CCSPMBUS_Stub.cpp", "pattern": "/^void CCSPMBUS::CCSPMBUS_CheckNamespaceDataType(IN const Json::Value& req, OUT Json::Value& respo/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(IN const Json::Value & req,OUT Json::Value & response)", "scope": "CCSPMBUS", "scopeKind": "class"}, {"_type": "tag", "name": "CCSPMBUS_DiskComponentSupportingDynamicTbl", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/MBUS_Stub/src/CCSPMBUS_Stub.cpp", "pattern": "/^void CCSPMBUS::CCSPMBUS_DiskComponentSupportingDynamicTbl(IN const Json::Value& req, OUT Json::V/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(IN const Json::Value & req,OUT Json::Value & response)", "scope": "CCSPMBUS", "scopeKind": "class"}, {"_type": "tag", "name": "CCSPMBUS_DiskNamespaceSupportedByComponent", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/MBUS_Stub/src/CCSPMBUS_Stub.cpp", "pattern": "/^void CCSPMBUS::CCSPMBUS_DiskNamespaceSupportedByComponent(IN const Json::Value& req, OUT Json::V/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(IN const Json::Value & req,OUT Json::Value & response)", "scope": "CCSPMBUS", "scopeKind": "class"}, {"_type": "tag", "name": "CCSPMBUS_DumpComponentRegistry", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/MBUS_Stub/src/CCSPMBUS_Stub.cpp", "pattern": "/^void CCSPMBUS::CCSPMBUS_DumpComponentRegistry(IN const Json::Value& req, OUT Json::Value& respon/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(IN const Json::Value & req,OUT Json::Value & response)", "scope": "CCSPMBUS", "scopeKind": "class"}, {"_type": "tag", "name": "CCSPMBUS_Exit", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/MBUS_Stub/src/CCSPMBUS_Stub.cpp", "pattern": "/^void CCSPMBUS::CCSPMBUS_Exit(IN const Json::Value& req, OUT Json::Value& response)$/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(IN const Json::Value & req,OUT Json::Value & response)", "scope": "CCSPMBUS", "scopeKind": "class"}, {"_type": "tag", "name": "CCSPMBUS_GetAllocMemory", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/MBUS_Stub/src/CCSPMBUS_Stub.cpp", "pattern": "/^void CCSPMBUS::CCSPMBUS_GetAllocMemory(IN const Json::Value& req, OUT Json::Value& response)$/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(IN const Json::Value & req,OUT Json::Value & response)", "scope": "CCSPMBUS", "scopeKind": "class"}, {"_type": "tag", "name": "CCSPMBUS_GetHealth", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/MBUS_Stub/src/CCSPMBUS_Stub.cpp", "pattern": "/^void CCSPMBUS::CCSPMBUS_GetHealth(IN const Json::Value& req, OUT Json::Value& response)$/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(IN const Json::Value & req,OUT Json::Value & response)", "scope": "CCSPMBUS", "scopeKind": "class"}, {"_type": "tag", "name": "CCSPMBUS_GetMaxMemory", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/MBUS_Stub/src/CCSPMBUS_Stub.cpp", "pattern": "/^void CCSPMBUS::CCSPMBUS_GetMaxMemory(IN const Json::Value& req, OUT Json::Value& response)$/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(IN const Json::Value & req,OUT Json::Value & response)", "scope": "CCSPMBUS", "scopeKind": "class"}, {"_type": "tag", "name": "CCSPMBUS_GetParamValues", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/MBUS_Stub/src/CCSPMBUS_Stub.cpp", "pattern": "/^void CCSPMBUS::CCSPMBUS_GetParamValues(IN const Json::Value& req, OUT Json::Value& response)$/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(IN const Json::Value & req,OUT Json::Value & response)", "scope": "CCSPMBUS", "scopeKind": "class"}, {"_type": "tag", "name": "CCSPMBUS_GetRegisteredComponents", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/MBUS_Stub/src/CCSPMBUS_Stub.cpp", "pattern": "/^void CCSPMBUS::CCSPMBUS_GetRegisteredComponents(IN const Json::Value& req, OUT Json::Value& resp/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(IN const Json::Value & req,OUT Json::Value & response)", "scope": "CCSPMBUS", "scopeKind": "class"}, {"_type": "tag", "name": "CCSPMBUS_InformEndSession", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/MBUS_Stub/src/CCSPMBUS_Stub.cpp", "pattern": "/^void CCSPMBUS::CCSPMBUS_InformEndSession(IN const Json::Value& req, OUT Json::Value& response)$/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(IN const Json::Value & req,OUT Json::Value & response)", "scope": "CCSPMBUS", "scopeKind": "class"}, {"_type": "tag", "name": "CCSPMBUS_Init", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/MBUS_Stub/src/CCSPMBUS_Stub.cpp", "pattern": "/^void CCSPMBUS::CCSPMBUS_Init(IN const Json::Value& req, OUT Json::Value& response)$/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(IN const Json::Value & req,OUT Json::Value & response)", "scope": "CCSPMBUS", "scopeKind": "class"}, {"_type": "tag", "name": "CCSPMBUS_IsSystemReady", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/MBUS_Stub/src/CCSPMBUS_Stub.cpp", "pattern": "/^void CCSPMBUS::CCSPMBUS_IsSystemReady(IN const Json::Value& req, OUT Json::Value& response)$/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(IN const Json::Value & req,OUT Json::Value & response)", "scope": "CCSPMBUS", "scopeKind": "class"}, {"_type": "tag", "name": "CCSPMBUS_LoadCfg", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/MBUS_Stub/src/CCSPMBUS_Stub.cpp", "pattern": "/^void CCSPMBUS::CCSPMBUS_LoadCfg(IN const Json::Value& req, OUT Json::Value& response)$/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(IN const Json::Value & req,OUT Json::Value & response)", "scope": "CCSPMBUS", "scopeKind": "class"}, {"_type": "tag", "name": "CCSPMBUS_LoadDmXml", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/MBUS_Stub/src/CCSPMBUS_Stub.cpp", "pattern": "/^void CCSPMBUS::CCSPMBUS_LoadDmXml(IN const Json::Value& req, OUT Json::Value& response)$/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(IN const Json::Value & req,OUT Json::Value & response)", "scope": "CCSPMBUS", "scopeKind": "class"}, {"_type": "tag", "name": "CCSPMBUS_QueryStatus", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/MBUS_Stub/src/CCSPMBUS_Stub.cpp", "pattern": "/^void CCSPMBUS::CCSPMBUS_QueryStatus(IN const Json::Value& req, OUT Json::Value& response)$/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(IN const Json::Value & req,OUT Json::Value & response)", "scope": "CCSPMBUS", "scopeKind": "class"}, {"_type": "tag", "name": "CCSPMBUS_RegisterBase", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/MBUS_Stub/src/CCSPMBUS_Stub.cpp", "pattern": "/^void CCSPMBUS::CCSPMBUS_RegisterBase(IN const Json::Value& req, OUT Json::Value& response)$/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(IN const Json::Value & req,OUT Json::Value & response)", "scope": "CCSPMBUS", "scopeKind": "class"}, {"_type": "tag", "name": "CCSPMBUS_RegisterCapabilities", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/MBUS_Stub/src/CCSPMBUS_Stub.cpp", "pattern": "/^void CCSPMBUS::CCSPMBUS_RegisterCapabilities(IN const Json::Value& req, OUT Json::Value& respons/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(IN const Json::Value & req,OUT Json::Value & response)", "scope": "CCSPMBUS", "scopeKind": "class"}, {"_type": "tag", "name": "CCSPMBUS_RegisterEvent", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/MBUS_Stub/src/CCSPMBUS_Stub.cpp", "pattern": "/^void CCSPMBUS::CCSPMBUS_RegisterEvent(IN const Json::Value& req, OUT Json::Value& response)$/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(IN const Json::Value & req,OUT Json::Value & response)", "scope": "CCSPMBUS", "scopeKind": "class"}, {"_type": "tag", "name": "CCSPMBUS_RegisterPath", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/MBUS_Stub/src/CCSPMBUS_Stub.cpp", "pattern": "/^void CCSPMBUS::CCSPMBUS_RegisterPath(IN const Json::Value& req, OUT Json::Value& response)$/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(IN const Json::Value & req,OUT Json::Value & response)", "scope": "CCSPMBUS", "scopeKind": "class"}, {"_type": "tag", "name": "CCSPMBUS_ReqSessionId", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/MBUS_Stub/src/CCSPMBUS_Stub.cpp", "pattern": "/^void CCSPMBUS::CCSPMBUS_ReqSessionId(IN const Json::Value& req, OUT Json::Value& response)$/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(IN const Json::Value & req,OUT Json::Value & response)", "scope": "CCSPMBUS", "scopeKind": "class"}, {"_type": "tag", "name": "CCSPMBUS_SendSignal", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/MBUS_Stub/src/CCSPMBUS_Stub.cpp", "pattern": "/^void CCSPMBUS::CCSPMBUS_SendSignal(IN const Json::Value& req, OUT Json::Value& response)$/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(IN const Json::Value & req,OUT Json::Value & response)", "scope": "CCSPMBUS", "scopeKind": "class"}, {"_type": "tag", "name": "CCSPMBUS_SetParamValues", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/MBUS_Stub/src/CCSPMBUS_Stub.cpp", "pattern": "/^void CCSPMBUS::CCSPMBUS_SetParamValues(IN const Json::Value& req, OUT Json::Value& response)$/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(IN const Json::Value & req,OUT Json::Value & response)", "scope": "CCSPMBUS", "scopeKind": "class"}, {"_type": "tag", "name": "CCSPMBUS_UnRegisterComponent", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/MBUS_Stub/src/CCSPMBUS_Stub.cpp", "pattern": "/^void CCSPMBUS::CCSPMBUS_UnRegisterComponent(IN const Json::Value& req, OUT Json::Value& response/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(IN const Json::Value & req,OUT Json::Value & response)", "scope": "CCSPMBUS", "scopeKind": "class"}, {"_type": "tag", "name": "CCSPMBUS_UnRegisterEvent", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/MBUS_Stub/src/CCSPMBUS_Stub.cpp", "pattern": "/^void CCSPMBUS::CCSPMBUS_UnRegisterEvent(IN const Json::Value& req, OUT Json::Value& response)$/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(IN const Json::Value & req,OUT Json::Value & response)", "scope": "CCSPMBUS", "scopeKind": "class"}, {"_type": "tag", "name": "CCSPMBUS_UnRegisterNamespace", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/MBUS_Stub/src/CCSPMBUS_Stub.cpp", "pattern": "/^void CCSPMBUS::CCSPMBUS_UnRegisterNamespace(IN const Json::Value& req, OUT Json::Value& response/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(IN const Json::Value & req,OUT Json::Value & response)", "scope": "CCSPMBUS", "scopeKind": "class"}, {"_type": "tag", "name": "CCSPMBUS_UnloadCfg", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/MBUS_Stub/src/CCSPMBUS_Stub.cpp", "pattern": "/^void CCSPMBUS::CCSPMBUS_UnloadCfg(IN const Json::Value& req, OUT Json::Value& response)$/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(IN const Json::Value & req,OUT Json::Value & response)", "scope": "CCSPMBUS", "scopeKind": "class"}, {"_type": "tag", "name": "CreateObject", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/MBUS_Stub/src/CCSPMBUS_Stub.cpp", "pattern": "/^extern \"C\" CCSPMBUS* CreateObject(TcpSocketServer &ptrtcpServer)$/", "language": "C++", "typeref": "typename:CCSPMBUS *", "kind": "function", "signature": "(TcpSocketServer & ptrtcpServer)"}, {"_type": "tag", "name": "DestroyObject", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/MBUS_Stub/src/CCSPMBUS_Stub.cpp", "pattern": "/^extern \"C\" void DestroyObject(CCSPMBUS *stubobj)$/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(CCSPMBUS * stubobj)"}, {"_type": "tag", "name": "cleanup", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/MBUS_Stub/src/CCSPMBUS_Stub.cpp", "pattern": "/^bool CCSPMBUS::cleanup(IN const char* szVersion)$/", "language": "C++", "typeref": "typename:bool", "kind": "function", "signature": "(IN const char * szVersion)", "scope": "CCSPMBUS", "scopeKind": "class"}, {"_type": "tag", "name": "initialize", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/MBUS_Stub/src/CCSPMBUS_Stub.cpp", "pattern": "/^bool CCSPMBUS::initialize(IN const char* szVersion)$/", "language": "C++", "typeref": "typename:bool", "kind": "function", "signature": "(IN const char * szVersion)", "scope": "CCSPMBUS", "scopeKind": "class"}, {"_type": "tag", "name": "testmodulepost_requisites", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/MBUS_Stub/src/CCSPMBUS_Stub.cpp", "pattern": "/^bool CCSPMBUS::testmodulepost_requisites()$/", "language": "C++", "typeref": "typename:bool", "kind": "function", "signature": "()", "scope": "CCSPMBUS", "scopeKind": "class"}, {"_type": "tag", "name": "testmodulepre_requisites", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/MBUS_Stub/src/CCSPMBUS_Stub.cpp", "pattern": "/^std::string CCSPMBUS::testmodulepre_requisites()$/", "language": "C++", "typeref": "typename:std::string", "kind": "function", "signature": "()", "scope": "CCSPMBUS", "scopeKind": "class"}], "hash": "18283c0f15a9a1a7ff65cc0345825eb5", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "rdkb/tools/tdkb/MBUS_Stub/src/CCSPMBUS_Stub.cpp", "revision_history": [{"18672": ""}]}