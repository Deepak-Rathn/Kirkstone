{"is_source_file": true, "format": "C++", "description": "This file is a C++ source file implementing the 'ethsw_stub_hal' class and associated functions for a hardware abstraction layer (HAL) related to Ethernet switch management. It contains method definitions for port configuration, status retrieval, and interface management, along with external creation and cleanup functions.", "external_files": ["ethsw_stub_hal.h"], "external_methods": ["ssp_ethsw_stub_hal_GetAdminPortStatus", "ssp_ethsw_stub_hal_GetPortCfg", "ssp_ethsw_stub_hal_GetPort_Status", "ssp_ethsw_stub_hal_Init", "ssp_ethsw_stub_hal_LocatePort_By_MacAddress", "ssp_ethsw_stub_hal_SetAgingSpeed", "ssp_ethsw_stub_hal_SetPortAdminStatus", "ssp_ethsw_stub_hal_SetPortCfg", "ssp_ethsw_stub_hal_Get_AssociatedDevice", "ssp_ethsw_stub_hal_Get_EthWanInterfaceName", "ssp_ethsw_stub_hal_Get_EthWanEnable", "ssp_ethsw_stub_hal_Set_EthWanEnable", "ssp_ethsw_stub_hal_Get_EthWanPort", "ssp_ethsw_stub_hal_Set_EthWanPort", "ssp_ethsw_stub_hal_Get_EthWanLinkStatus"], "published": ["ethsw_stub_hal::testmodulepre_requisites", "ethsw_stub_hal::testmodulepost_requisites", "ethsw_stub_hal::initialize", "ethsw_stub_hal::ethsw_stub_hal_Get_Port_Admin_Status", "ethsw_stub_hal::ethsw_stub_hal_Get_Port_Cfg", "ethsw_stub_hal::ethsw_stub_hal_Get_Port_Status", "ethsw_stub_hal::ethsw_stub_hal_Init", "ethsw_stub_hal::ethsw_stub_hal_LocatePort_By_MacAddress", "ethsw_stub_hal::ethsw_stub_hal_SetAgingSpeed", "ethsw_stub_hal::ethsw_stub_hal_SetPortAdminStatus", "ethsw_stub_hal::ethsw_stub_hal_SetPortCfg", "ethsw_stub_hal::ethsw_stub_hal_Get_AssociatedDevice", "ethsw_stub_hal::ethsw_stub_hal_Get_EthWanInterfaceName", "ethsw_stub_hal::ethsw_stub_hal_Get_EthWanEnable", "ethsw_stub_hal::ethsw_stub_hal_Set_EthWanEnable", "ethsw_stub_hal::ethsw_stub_hal_Get_EthWanPort", "ethsw_stub_hal::ethsw_stub_hal_Set_EthWanPort", "ethsw_stub_hal::ethsw_stub_hal_Get_EthWanLinkStatus"], "classes": [{"name": "ethsw_stub_hal", "description": "A class providing hardware abstraction layer methods for Ethernet switch management, including port configuration, status retrieval, MAC address localization, and WAN interface controls."}], "methods": [{"name": "std::string testmodulepre_requisites()", "description": "Registers prerequisites for the testing module; returns 'SUCCESS'.", "scope": "ethsw_stub_hal", "scopeKind": "class"}, {"name": "bool testmodulepost_requisites()", "description": "Unregisters prerequisites for the testing module; returns true.", "scope": "ethsw_stub_hal", "scopeKind": "class"}, {"name": "bool initialize(IN const char * szVersion)", "description": "Initializes the HAL by registering all methods; returns true.", "scope": "ethsw_stub_hal", "scopeKind": "class"}, {"name": "void ethsw_stub_hal_Get_Port_Admin_Status(IN const Json::Value & req,OUT Json::Value & response)", "description": "Retrieves the administrative status of a specified port, filling response JSON accordingly.", "scope": "ethsw_stub_hal", "scopeKind": "class"}, {"name": "void ethsw_stub_hal_Get_Port_Cfg(IN const Json::Value & req,OUT Json::Value & response)", "description": "Gets configuration details of a port, including max bitrate and duplex mode, updating response JSON.", "scope": "ethsw_stub_hal", "scopeKind": "class"}, {"name": "void ethsw_stub_hal_Get_Port_Status(IN const Json::Value & req,OUT Json::Value & response)", "description": "Fetches port status including link, bit rate, and duplex mode, updating response JSON.", "scope": "ethsw_stub_hal", "scopeKind": "class"}, {"name": "void ethsw_stub_hal_Init(IN const Json::Value & req,OUT Json::Value & response)", "description": "Initializes the HAL layer, returning success status in response JSON.", "scope": "ethsw_stub_hal", "scopeKind": "class"}, {"name": "void ethsw_stub_hal_LocatePort_By_MacAddress(IN const Json::Value & req,OUT Json::Value & response)", "description": "Locates port by MAC address; updates response JSON with port number.", "scope": "ethsw_stub_hal", "scopeKind": "class"}, {"name": "void ethsw_stub_hal_SetAgingSpeed(IN const Json::Value & req,OUT Json::Value & response)", "description": "Sets the aging speed for a port, returning success state.", "scope": "ethsw_stub_hal", "scopeKind": "class"}, {"name": "void ethsw_stub_hal_SetPortAdminStatus(IN const Json::Value & req,OUT Json::Value & response)", "description": "Sets administrative status for a port, indicating success or failure.", "scope": "ethsw_stub_hal", "scopeKind": "class"}, {"name": "void ethsw_stub_hal_SetPortCfg(IN const Json::Value & req,OUT Json::Value & response)", "description": "Configures port with specified link rate and mode, responding with success or failure.", "scope": "ethsw_stub_hal", "scopeKind": "class"}, {"name": "void ethsw_stub_hal_Get_AssociatedDevice(IN const Json::Value & req,OUT Json::Value & response)", "description": "Retrieves associated device info, fills response with status and details.", "scope": "ethsw_stub_hal", "scopeKind": "class"}, {"name": "void ethsw_stub_hal_Get_EthWanInterfaceName(IN const Json::Value & req,OUT Json::Value & response)", "description": "Gets Ethernet WAN interface name, updates response JSON.", "scope": "ethsw_stub_hal", "scopeKind": "class"}, {"name": "void ethsw_stub_hal_Get_EthWanEnable(IN const Json::Value & req,OUT Json::Value & response)", "description": "Checks if EthWan is enabled, updates response JSON.", "scope": "ethsw_stub_hal", "scopeKind": "class"}, {"name": "void ethsw_stub_hal_Set_EthWanEnable(IN const Json::Value & req,OUT Json::Value & response)", "description": "Sets EthWan enable status, response indicates success.", "scope": "ethsw_stub_hal", "scopeKind": "class"}, {"name": "void ethsw_stub_hal_Get_EthWanPort(IN const Json::Value & req,OUT Json::Value & response)", "description": "Retrieves EthWan port number, updates response JSON.", "scope": "ethsw_stub_hal", "scopeKind": "class"}, {"name": "void ethsw_stub_hal_Set_EthWanPort(IN const Json::Value & req,OUT Json::Value & response)", "description": "Sets EthWan port number, updates response JSON.", "scope": "ethsw_stub_hal", "scopeKind": "class"}, {"name": "void ethsw_stub_hal_Get_EthWanLinkStatus(IN const Json::Value & req,OUT Json::Value & response)", "description": "Checks EthWan link status, updates response JSON.", "scope": "ethsw_stub_hal", "scopeKind": "class"}, {"name": "ethsw_stub_hal * CreateObject(TcpSocketServer & ptrtcpServer)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "void DestroyObject(ethsw_stub_hal * stubobj)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "bool cleanup(IN const char * szVersion)", "scope": "ethsw_stub_hal", "scopeKind": "class", "description": "unavailable"}], "calls": ["ssp_ethsw_stub_hal_GetAdminPortStatus", "ssp_ethsw_stub_hal_GetPortCfg", "ssp_ethsw_stub_hal_GetPort_Status", "ssp_ethsw_stub_hal_Init", "ssp_ethsw_stub_hal_LocatePort_By_MacAddress", "ssp_ethsw_stub_hal_SetAgingSpeed", "ssp_ethsw_stub_hal_SetPortAdminStatus", "ssp_ethsw_stub_hal_SetPortCfg", "ssp_ethsw_stub_hal_Get_AssociatedDevice", "ssp_ethsw_stub_hal_Get_EthWanInterfaceName", "ssp_ethsw_stub_hal_Get_EthWanEnable", "ssp_ethsw_stub_hal_Set_EthWanEnable", "ssp_ethsw_stub_hal_Get_EthWanPort", "ssp_ethsw_stub_hal_Set_EthWanPort", "ssp_ethsw_stub_hal_Get_EthWanLinkStatus"], "search-terms": ["ethsw_hal", "Ethernet switch", "Port configuration", "WAN interface", "MAC address", "Port status", "Port admin status", "Aging Speed", "Link rate", "Duplex mode"], "state": 2, "file_id": 2318, "knowledge_revision": 15453, "git_revision": "", "ctags": [{"_type": "tag", "name": "CHECK_PARAM_AND_RET", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/ethsw_hal_stub/src/ethsw_stub_hal.cpp", "pattern": "/^#define CHECK_PARAM_AND_RET(/", "file": true, "language": "C++", "kind": "macro", "signature": "(x)"}, {"_type": "tag", "name": "CreateObject", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/ethsw_hal_stub/src/ethsw_stub_hal.cpp", "pattern": "/^extern \"C\" ethsw_stub_hal* CreateObject(TcpSocketServer &ptrtcpServer)$/", "language": "C++", "typeref": "typename:ethsw_stub_hal *", "kind": "function", "signature": "(TcpSocketServer & ptrtcpServer)"}, {"_type": "tag", "name": "DestroyObject", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/ethsw_hal_stub/src/ethsw_stub_hal.cpp", "pattern": "/^extern \"C\" void DestroyObject(ethsw_stub_hal *stubobj)$/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(ethsw_stub_hal * stubobj)"}, {"_type": "tag", "name": "MAXBITRATE_10", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/ethsw_hal_stub/src/ethsw_stub_hal.cpp", "pattern": "/^#define MAXBITRATE_10 /", "file": true, "language": "C++", "kind": "macro"}, {"_type": "tag", "name": "MAXBITRATE_100", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/ethsw_hal_stub/src/ethsw_stub_hal.cpp", "pattern": "/^#define MAXBITRATE_100 /", "file": true, "language": "C++", "kind": "macro"}, {"_type": "tag", "name": "MAXBITRATE_1000", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/ethsw_hal_stub/src/ethsw_stub_hal.cpp", "pattern": "/^#define MAXBITRATE_1000 /", "file": true, "language": "C++", "kind": "macro"}, {"_type": "tag", "name": "MAXBITRATE_10000", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/ethsw_hal_stub/src/ethsw_stub_hal.cpp", "pattern": "/^#define MAXBITRATE_10000 /", "file": true, "language": "C++", "kind": "macro"}, {"_type": "tag", "name": "MAX_BUFFER_SIZE", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/ethsw_hal_stub/src/ethsw_stub_hal.cpp", "pattern": "/^#define MAX_BUFFER_SIZE /", "file": true, "language": "C++", "kind": "macro"}, {"_type": "tag", "name": "MAX_BUFFER_SIZE_TO_SEND", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/ethsw_hal_stub/src/ethsw_stub_hal.cpp", "pattern": "/^#define MAX_BUFFER_SIZE_TO_SEND /", "file": true, "language": "C++", "kind": "macro"}, {"_type": "tag", "name": "MAX_STRING_SIZE", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/ethsw_hal_stub/src/ethsw_stub_hal.cpp", "pattern": "/^#define MAX_STRING_SIZE /", "file": true, "language": "C++", "kind": "macro"}, {"_type": "tag", "name": "RETURN_FAILURE", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/ethsw_hal_stub/src/ethsw_stub_hal.cpp", "pattern": "/^#define RETURN_FAILURE /", "file": true, "language": "C++", "kind": "macro"}, {"_type": "tag", "name": "RETURN_SUCCESS", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/ethsw_hal_stub/src/ethsw_stub_hal.cpp", "pattern": "/^#define RETURN_SUCCESS /", "file": true, "language": "C++", "kind": "macro"}, {"_type": "tag", "name": "TEST_FAILURE", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/ethsw_hal_stub/src/ethsw_stub_hal.cpp", "pattern": "/^#define TEST_FAILURE /", "file": true, "language": "C++", "kind": "macro"}, {"_type": "tag", "name": "TEST_SUCCESS", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/ethsw_hal_stub/src/ethsw_stub_hal.cpp", "pattern": "/^#define TEST_SUCCESS /", "file": true, "language": "C++", "kind": "macro"}, {"_type": "tag", "name": "WAIT_TIME", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/ethsw_hal_stub/src/ethsw_stub_hal.cpp", "pattern": "/^#define WAIT_TIME /", "file": true, "language": "C++", "kind": "macro"}, {"_type": "tag", "name": "cleanup", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/ethsw_hal_stub/src/ethsw_stub_hal.cpp", "pattern": "/^bool ethsw_stub_hal::cleanup(IN const char* szVersion)$/", "language": "C++", "typeref": "typename:bool", "kind": "function", "signature": "(IN const char * szVersion)", "scope": "ethsw_stub_hal", "scopeKind": "class"}, {"_type": "tag", "name": "ethsw_stub_hal_Get_AssociatedDevice", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/ethsw_hal_stub/src/ethsw_stub_hal.cpp", "pattern": "/^void ethsw_stub_hal::ethsw_stub_hal_Get_AssociatedDevice(IN const Json::Value& req, OUT Json::Va/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(IN const Json::Value & req,OUT Json::Value & response)", "scope": "ethsw_stub_hal", "scopeKind": "class"}, {"_type": "tag", "name": "ethsw_stub_hal_Get_EthWanEnable", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/ethsw_hal_stub/src/ethsw_stub_hal.cpp", "pattern": "/^void ethsw_stub_hal::ethsw_stub_hal_Get_EthWanEnable(IN const Json::Value& req, OUT Json::Value&/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(IN const Json::Value & req,OUT Json::Value & response)", "scope": "ethsw_stub_hal", "scopeKind": "class"}, {"_type": "tag", "name": "ethsw_stub_hal_Get_EthWanInterfaceName", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/ethsw_hal_stub/src/ethsw_stub_hal.cpp", "pattern": "/^void ethsw_stub_hal::ethsw_stub_hal_Get_EthWanInterfaceName(IN const Json::Value& req, OUT Json:/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(IN const Json::Value & req,OUT Json::Value & response)", "scope": "ethsw_stub_hal", "scopeKind": "class"}, {"_type": "tag", "name": "ethsw_stub_hal_Get_EthWanLinkStatus", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/ethsw_hal_stub/src/ethsw_stub_hal.cpp", "pattern": "/^void ethsw_stub_hal::ethsw_stub_hal_Get_EthWanLinkStatus(IN const Json::Value& req, OUT Json::Va/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(IN const Json::Value & req,OUT Json::Value & response)", "scope": "ethsw_stub_hal", "scopeKind": "class"}, {"_type": "tag", "name": "ethsw_stub_hal_Get_EthWanPort", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/ethsw_hal_stub/src/ethsw_stub_hal.cpp", "pattern": "/^void ethsw_stub_hal::ethsw_stub_hal_Get_EthWanPort(IN const Json::Value& req, OUT Json::Value& r/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(IN const Json::Value & req,OUT Json::Value & response)", "scope": "ethsw_stub_hal", "scopeKind": "class"}, {"_type": "tag", "name": "ethsw_stub_hal_Get_Port_Admin_Status", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/ethsw_hal_stub/src/ethsw_stub_hal.cpp", "pattern": "/^void ethsw_stub_hal::ethsw_stub_hal_Get_Port_Admin_Status(IN const Json::Value& req, OUT Json::V/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(IN const Json::Value & req,OUT Json::Value & response)", "scope": "ethsw_stub_hal", "scopeKind": "class"}, {"_type": "tag", "name": "ethsw_stub_hal_Get_Port_Cfg", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/ethsw_hal_stub/src/ethsw_stub_hal.cpp", "pattern": "/^void ethsw_stub_hal::ethsw_stub_hal_Get_Port_Cfg(IN const Json::Value& req, OUT Json::Value& res/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(IN const Json::Value & req,OUT Json::Value & response)", "scope": "ethsw_stub_hal", "scopeKind": "class"}, {"_type": "tag", "name": "ethsw_stub_hal_Get_Port_Status", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/ethsw_hal_stub/src/ethsw_stub_hal.cpp", "pattern": "/^void ethsw_stub_hal::ethsw_stub_hal_Get_Port_Status(IN const Json::Value& req, OUT Json::Value& /", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(IN const Json::Value & req,OUT Json::Value & response)", "scope": "ethsw_stub_hal", "scopeKind": "class"}, {"_type": "tag", "name": "ethsw_stub_hal_Init", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/ethsw_hal_stub/src/ethsw_stub_hal.cpp", "pattern": "/^void ethsw_stub_hal::ethsw_stub_hal_Init(IN const Json::Value& req, OUT Json::Value& response)$/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(IN const Json::Value & req,OUT Json::Value & response)", "scope": "ethsw_stub_hal", "scopeKind": "class"}, {"_type": "tag", "name": "ethsw_stub_hal_LocatePort_By_MacAddress", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/ethsw_hal_stub/src/ethsw_stub_hal.cpp", "pattern": "/^void ethsw_stub_hal::ethsw_stub_hal_LocatePort_By_MacAddress(IN const Json::Value& req, OUT Json/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(IN const Json::Value & req,OUT Json::Value & response)", "scope": "ethsw_stub_hal", "scopeKind": "class"}, {"_type": "tag", "name": "ethsw_stub_hal_SetAgingSpeed", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/ethsw_hal_stub/src/ethsw_stub_hal.cpp", "pattern": "/^void ethsw_stub_hal::ethsw_stub_hal_SetAgingSpeed(IN const Json::Value& req, OUT Json::Value& re/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(IN const Json::Value & req,OUT Json::Value & response)", "scope": "ethsw_stub_hal", "scopeKind": "class"}, {"_type": "tag", "name": "ethsw_stub_hal_SetPortAdminStatus", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/ethsw_hal_stub/src/ethsw_stub_hal.cpp", "pattern": "/^void ethsw_stub_hal::ethsw_stub_hal_SetPortAdminStatus(IN const Json::Value& req, OUT Json::Valu/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(IN const Json::Value & req,OUT Json::Value & response)", "scope": "ethsw_stub_hal", "scopeKind": "class"}, {"_type": "tag", "name": "ethsw_stub_hal_SetPortCfg", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/ethsw_hal_stub/src/ethsw_stub_hal.cpp", "pattern": "/^void ethsw_stub_hal::ethsw_stub_hal_SetPortCfg(IN const Json::Value& req, OUT Json::Value& respo/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(IN const Json::Value & req,OUT Json::Value & response)", "scope": "ethsw_stub_hal", "scopeKind": "class"}, {"_type": "tag", "name": "ethsw_stub_hal_Set_EthWanEnable", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/ethsw_hal_stub/src/ethsw_stub_hal.cpp", "pattern": "/^void ethsw_stub_hal::ethsw_stub_hal_Set_EthWanEnable(IN const Json::Value& req, OUT Json::Value&/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(IN const Json::Value & req,OUT Json::Value & response)", "scope": "ethsw_stub_hal", "scopeKind": "class"}, {"_type": "tag", "name": "ethsw_stub_hal_Set_EthWanPort", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/ethsw_hal_stub/src/ethsw_stub_hal.cpp", "pattern": "/^void ethsw_stub_hal::ethsw_stub_hal_Set_EthWanPort(IN const Json::Value& req, OUT Json::Value& r/", "language": "C++", "typeref": "typename:void", "kind": "function", "signature": "(IN const Json::Value & req,OUT Json::Value & response)", "scope": "ethsw_stub_hal", "scopeKind": "class"}, {"_type": "tag", "name": "initialize", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/ethsw_hal_stub/src/ethsw_stub_hal.cpp", "pattern": "/^bool ethsw_stub_hal::initialize(IN const char* szVersion)$/", "language": "C++", "typeref": "typename:bool", "kind": "function", "signature": "(IN const char * szVersion)", "scope": "ethsw_stub_hal", "scopeKind": "class"}, {"_type": "tag", "name": "testmodulepost_requisites", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/ethsw_hal_stub/src/ethsw_stub_hal.cpp", "pattern": "/^bool ethsw_stub_hal::testmodulepost_requisites()$/", "language": "C++", "typeref": "typename:bool", "kind": "function", "signature": "()", "scope": "ethsw_stub_hal", "scopeKind": "class"}, {"_type": "tag", "name": "testmodulepre_requisites", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/ethsw_hal_stub/src/ethsw_stub_hal.cpp", "pattern": "/^std::string ethsw_stub_hal::testmodulepre_requisites()$/", "language": "C++", "typeref": "typename:std::string", "kind": "function", "signature": "()", "scope": "ethsw_stub_hal", "scopeKind": "class"}], "hash": "eb795fcec74a824b8f5d8e21dc0d868e", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "rdkb/tools/tdkb/ethsw_hal_stub/src/ethsw_stub_hal.cpp", "revision_history": [{"15453": ""}]}