{"is_source_file": true, "format": "C", "description": "This file contains implementations of a queue data structure, hash map, and associated utility functions used within the telemetry component of a software project. It includes functions for creating, manipulating, and destroying queues and hash maps, with support for external cleanup functions and key-value management.", "external_files": ["t2collection.h"], "external_methods": ["t2_queue_create", "t2_queue_push", "t2_queue_pop", "t2_queue_remove", "t2_queue_peek", "t2_queue_count", "t2_queue_destroy", "hash_map_get", "hash_map_remove", "hash_map_put", "hash_map_get_first", "hash_map_lookup", "hash_map_lookupKey", "hash_map_get_next", "hash_map_count", "hash_map_create", "hash_map_destroy", "hash_map_clear"], "published": ["t2_queue_create", "t2_queue_push", "t2_queue_pop", "t2_queue_remove", "t2_queue_peek", "t2_queue_count", "t2_queue_destroy", "hash_map_get", "hash_map_remove", "hash_map_put", "hash_map_get_first", "hash_map_lookup", "hash_map_lookupKey", "hash_map_get_next", "hash_map_count", "hash_map_create", "hash_map_destroy", "hash_map_clear"], "classes": [], "methods": [{"name": "queue_t * t2_queue_create(void)", "description": "Creates and initializes a new queue.", "scope": "", "scopeKind": ""}, {"name": "int8_t t2_queue_push(queue_t * q,void * data)", "description": "Adds a new element to the front of the queue.", "scope": "", "scopeKind": ""}, {"name": "void * t2_queue_pop(queue_t * q)", "description": "Removes and returns the last element added to the queue.", "scope": "", "scopeKind": ""}, {"name": "void * t2_queue_remove(queue_t * q,uint32_t index)", "description": "Removes and returns the element at the specified index.", "scope": "", "scopeKind": ""}, {"name": "void * t2_queue_peek(queue_t * q,uint32_t index)", "description": "Returns the data at the specified index without removing it.", "scope": "", "scopeKind": ""}, {"name": "uint32_t t2_queue_count(queue_t * q)", "description": "Returns the number of elements in the queue.", "scope": "", "scopeKind": ""}, {"name": "void t2_queue_destroy(queue_t * q,queue_cleanup freeItem)", "description": "Frees all elements and the queue itself, with optional cleanup for data items.", "scope": "", "scopeKind": ""}, {"name": "void * hash_map_get(hash_map_t * map,const char * key)", "description": "Retrieves data associated with a key in the hash map.", "scope": "", "scopeKind": ""}, {"name": "void * hash_map_remove(hash_map_t * map,const char * key)", "description": "Removes the entry with the specified key from the hash map and returns its data.", "scope": "", "scopeKind": ""}, {"name": "int8_t hash_map_put(hash_map_t * map,char * key,void * data,hashelement_data_cleanup freeItem)", "description": "Adds or replaces an entry in the hash map with the given key and data.", "scope": "", "scopeKind": ""}, {"name": "void * hash_map_get_first(hash_map_t * map)", "description": "Retrieves the data of the first element in the hash map.", "scope": "", "scopeKind": ""}, {"name": "void * hash_map_lookup(hash_map_t * map,uint32_t n)", "description": "Retrieves data at a specific index in the hash map.", "scope": "", "scopeKind": ""}, {"name": "void * hash_map_lookupKey(hash_map_t * map,uint32_t n)", "description": "Retrieves the key of the element at a specific index.", "scope": "", "scopeKind": ""}, {"name": "void * hash_map_get_next(hash_map_t * map,void * data)", "description": "Retrieves the next data element following the given data.", "scope": "", "scopeKind": ""}, {"name": "uint32_t hash_map_count(hash_map_t * map)", "description": "Returns the number of elements in the hash map.", "scope": "", "scopeKind": ""}, {"name": "hash_map_t * hash_map_create()", "description": "Creates and initializes a new hash map.", "scope": "", "scopeKind": ""}, {"name": "void hash_map_destroy(hash_map_t * map,queue_cleanup freeItem)", "description": "Frees the hash map and its elements, with support for external cleanup.", "scope": "", "scopeKind": ""}, {"name": "void hash_map_clear(hash_map_t * map,queue_cleanup freeItem)", "description": "Clears all elements from the hash map, resetting it.", "scope": "", "scopeKind": ""}], "calls": ["malloc", "free", "memset", "assert", "strncmp", "realloc"], "search-terms": ["queue_t", "hash_map_t", "t2collection", "queue_create", "hash_map_operations", "telemetry utils", "linked list queue", "hash map implementation", "queue destruction", "hash map management"], "state": 2, "file_id": 12853, "knowledge_revision": 25754, "git_revision": "", "ctags": [{"_type": "tag", "name": "hash_map_clear", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/utils/t2collection.c", "pattern": "/^void hash_map_clear(hash_map_t *map, queue_cleanup freeItem)$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(hash_map_t * map,queue_cleanup freeItem)"}, {"_type": "tag", "name": "hash_map_count", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/utils/t2collection.c", "pattern": "/^uint32_t hash_map_count(hash_map_t *map)$/", "language": "C", "typeref": "typename:uint32_t", "kind": "function", "signature": "(hash_map_t * map)"}, {"_type": "tag", "name": "hash_map_create", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/utils/t2collection.c", "pattern": "/^hash_map_t *hash_map_create()$/", "language": "C", "typeref": "typename:hash_map_t *", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "hash_map_destroy", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/utils/t2collection.c", "pattern": "/^void  hash_map_destroy(hash_map_t *map, queue_cleanup freeItem)$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(hash_map_t * map,queue_cleanup freeItem)"}, {"_type": "tag", "name": "hash_map_get", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/utils/t2collection.c", "pattern": "/^void *hash_map_get(hash_map_t *map, const char *key)$/", "language": "C", "typeref": "typename:void *", "kind": "function", "signature": "(hash_map_t * map,const char * key)"}, {"_type": "tag", "name": "hash_map_get_first", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/utils/t2collection.c", "pattern": "/^void *hash_map_get_first(hash_map_t *map)$/", "language": "C", "typeref": "typename:void *", "kind": "function", "signature": "(hash_map_t * map)"}, {"_type": "tag", "name": "hash_map_get_next", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/utils/t2collection.c", "pattern": "/^void *hash_map_get_next(hash_map_t *map, void *data)$/", "language": "C", "typeref": "typename:void *", "kind": "function", "signature": "(hash_map_t * map,void * data)"}, {"_type": "tag", "name": "hash_map_lookup", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/utils/t2collection.c", "pattern": "/^void *hash_map_lookup(hash_map_t *map, uint32_t n)$/", "language": "C", "typeref": "typename:void *", "kind": "function", "signature": "(hash_map_t * map,uint32_t n)"}, {"_type": "tag", "name": "hash_map_lookupKey", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/utils/t2collection.c", "pattern": "/^void *hash_map_lookupKey(hash_map_t *map, uint32_t n)$/", "language": "C", "typeref": "typename:void *", "kind": "function", "signature": "(hash_map_t * map,uint32_t n)"}, {"_type": "tag", "name": "hash_map_put", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/utils/t2collection.c", "pattern": "/^int8_t hash_map_put(hash_map_t *map, char *key, void *data, hashelement_data_cleanup freeItem) $/", "language": "C", "typeref": "typename:int8_t", "kind": "function", "signature": "(hash_map_t * map,char * key,void * data,hashelement_data_cleanup freeItem)"}, {"_type": "tag", "name": "hash_map_remove", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/utils/t2collection.c", "pattern": "/^void *hash_map_remove(hash_map_t *map, const char *key)$/", "language": "C", "typeref": "typename:void *", "kind": "function", "signature": "(hash_map_t * map,const char * key)"}, {"_type": "tag", "name": "t2_queue_count", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/utils/t2collection.c", "pattern": "/^uint32_t t2_queue_count(queue_t *q)$/", "language": "C", "typeref": "typename:uint32_t", "kind": "function", "signature": "(queue_t * q)"}, {"_type": "tag", "name": "t2_queue_create", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/utils/t2collection.c", "pattern": "/^queue_t *t2_queue_create(void)$/", "language": "C", "typeref": "typename:queue_t *", "kind": "function", "signature": "(void)"}, {"_type": "tag", "name": "t2_queue_destroy", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/utils/t2collection.c", "pattern": "/^void t2_queue_destroy(queue_t *q, queue_cleanup freeItem)$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(queue_t * q,queue_cleanup freeItem)"}, {"_type": "tag", "name": "t2_queue_peek", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/utils/t2collection.c", "pattern": "/^void    *t2_queue_peek(queue_t *q, uint32_t index)$/", "language": "C", "typeref": "typename:void *", "kind": "function", "signature": "(queue_t * q,uint32_t index)"}, {"_type": "tag", "name": "t2_queue_pop", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/utils/t2collection.c", "pattern": "/^void *t2_queue_pop(queue_t *q)$/", "language": "C", "typeref": "typename:void *", "kind": "function", "signature": "(queue_t * q)"}, {"_type": "tag", "name": "t2_queue_push", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/utils/t2collection.c", "pattern": "/^int8_t t2_queue_push(queue_t *q, void *data)$/", "language": "C", "typeref": "typename:int8_t", "kind": "function", "signature": "(queue_t * q,void * data)"}, {"_type": "tag", "name": "t2_queue_remove", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/utils/t2collection.c", "pattern": "/^void *t2_queue_remove(queue_t *q, uint32_t index)$/", "language": "C", "typeref": "typename:void *", "kind": "function", "signature": "(queue_t * q,uint32_t index)"}], "hash": "7b59d6642b2e66e5467b2d9cdea1943d", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "rdk/components/generic/telemetry/source/utils/t2collection.c", "revision_history": [{"25754": ""}]}