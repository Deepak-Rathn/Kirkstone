{"is_source_file": true, "format": "C++ header file", "description": "This file defines a mock class SystemMock implementing the SystemInterface for unit testing purposes. It uses Google Mock to create mock methods for system-related system calls such as system, unlink, access, vsnprintf, remove, and v_secure_system.", "external_files": ["gtest/gtest.h", "gmock/gmock.h"], "external_methods": ["testing::NiceMock", "testing::StrictMock", "testing::Return", "MOCK_METHOD1", "MOCK_METHOD2", "MOCK_METHOD4", "MOCK_METHOD1"], "published": ["SystemInterface", "SystemMock"], "classes": [{"name": "SystemInterface", "description": "Abstract interface defining system-related functions for mocking."}, {"name": "SystemMock", "description": "Mock class implementing SystemInterface, using Google Mock to simulate system calls for testing."}], "methods": [{"name": "system", "description": "Mock method representing the 'system' call."}, {"name": "unlink", "description": "Mock method representing the 'unlink' call."}, {"name": "access", "description": "Mock method representing the 'access' call."}, {"name": "v_snprintf", "description": "Mock method representing the 'vsnprintf' call."}, {"name": "remove", "description": "Mock method representing the 'remove' call."}, {"name": "v_secure_system", "description": "Mock method representing the 'v_secure_system' call."}, {"name": "~SystemInterface()", "scope": "SystemInterface", "scopeKind": "class", "description": "unavailable"}, {"name": "~SystemMock()", "scope": "SystemMock", "scopeKind": "class", "description": "unavailable"}], "calls": ["MOCK_METHOD1(system, int(const char *))", "MOCK_METHOD1(unlink, int(const char *))", "MOCK_METHOD2(access, int(const char *, int))", "MOCK_METHOD4(vsnprintf, int(char*, size_t, const char*, va_list))", "MOCK_METHOD1(remove, int(const char *))", "MOCK_METHOD1(v_secure_system, int(const char *))"], "search-terms": ["SystemMock", "SystemInterface", "Google Mock", "unit test mock", "system call mock", "C++ mock class", "telemetry source test"], "state": 2, "file_id": 12815, "knowledge_revision": 25714, "git_revision": "", "ctags": [{"_type": "tag", "name": "SOURCE_TEST_MOCKS_SYSTEMMOCK_H_", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/test/mocks/SystemMock.h", "pattern": "/^#define SOURCE_TEST_MOCKS_SYSTEMMOCK_H_$/", "language": "C++", "kind": "macro"}, {"_type": "tag", "name": "SystemInterface", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/test/mocks/SystemMock.h", "pattern": "/^class SystemInterface {$/", "language": "C++", "kind": "class"}, {"_type": "tag", "name": "SystemMock", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/test/mocks/SystemMock.h", "pattern": "/^class SystemMock : public SystemInterface {$/", "language": "C++", "kind": "class"}, {"_type": "tag", "name": "~SystemInterface", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/test/mocks/SystemMock.h", "pattern": "/^   virtual ~SystemInterface() {}$/", "language": "C++", "kind": "function", "signature": "()", "scope": "SystemInterface", "scopeKind": "class"}, {"_type": "tag", "name": "~SystemMock", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/test/mocks/SystemMock.h", "pattern": "/^   virtual ~SystemMock() {}$/", "language": "C++", "kind": "function", "signature": "()", "scope": "SystemMock", "scopeKind": "class"}], "hash": "ef941c0f1f173bae5522c61d823cd82d", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "rdk/components/generic/telemetry/source/test/mocks/SystemMock.h", "revision_history": [{"25714": ""}]}