{"is_source_file": true, "format": "C header file", "description": "This header file 'repeatingTask.h' defines interfaces and typedefs for creating and managing various types of repeating tasks, including fixed interval, fixed rate, initial delay, and back-off strategies, in a concurrent environment. It provides function prototypes for task creation, cancellation, and modification, tailored for background repeating operations.", "external_files": ["icConcurrent/delayedTask.h"], "external_methods": [], "published": ["createRepeatingTask", "createFixedRateRepeatingTask", "createBackOffRepeatingTask", "cancelRepeatingTask", "shortCircuitRepeatingTask", "changeRepeatingTask"], "classes": [], "methods": [{"name": "createRepeatingTask", "description": "Creates a repeating task that periodically executes a callback function after a specified delay, until canceled."}, {"name": "createFixedRateRepeatingTask", "description": "Creates a repeating task that executes at fixed intervals relative to the start time."}, {"name": "createBackOffRepeatingTask", "description": "Creates a back-off style repeating task that increases delay each iteration until a maximum is reached, with optional success callback upon termination."}, {"name": "cancelRepeatingTask", "description": "Cancels a running repeating task and returns the associated argument for cleanup."}, {"name": "shortCircuitRepeatingTask", "description": "Immediately cancels the delay and causes the task to loop and execute again."}, {"name": "changeRepeatingTask", "description": "Adjusts the delay of an existing repeating task, immediately if specified."}], "calls": [], "search-terms": ["repeatingTask", "createBackOffRepeatingTask", "cancelRepeatingTask", "fixed rate", "initial delay", "back-off strategy", "concurrent tasks", "delayed task"], "state": 2, "file_id": 896, "knowledge_revision": 26178, "git_revision": "", "ctags": [{"_type": "tag", "name": "IC_REPEATTASK_H", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/public/icConcurrent/repeatingTask.h", "pattern": "/^#define IC_REPEATTASK_H$/", "language": "C++", "kind": "macro"}, {"_type": "tag", "name": "backOffTaskRunCallbackFunc", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/public/icConcurrent/repeatingTask.h", "pattern": "/^typedef bool (*backOffTaskRunCallbackFunc)(void *arg);$/", "language": "C++", "typeref": "typename:bool (*)(void * arg)", "kind": "typedef"}, {"_type": "tag", "name": "backOffTaskSuccessCallbackFunc", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/concurrent/c/public/icConcurrent/repeatingTask.h", "pattern": "/^typedef void (*backOffTaskSuccessCallbackFunc)(void *arg);$/", "language": "C++", "typeref": "typename:void (*)(void * arg)", "kind": "typedef"}], "hash": "a098550037c44304aa2e9fdd83ffaf16", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "components/opensource/zilker-sdk/source/libs/concurrent/c/public/icConcurrent/repeatingTask.h", "revision_history": [{"26178": ""}]}