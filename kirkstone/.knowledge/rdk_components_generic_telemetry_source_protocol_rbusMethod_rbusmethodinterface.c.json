{"is_source_file": true, "format": "C", "description": "This file implements a C interface for sending telemetry reports over RBUS, including asynchronous handling, retries, and report caching. It references external RBUS APIs and manages synchronization through mutexes.", "external_files": ["reportgen.h", "rbusInterface.h", "rbusmethodinterface.h", "reportprofiles.h", "t2log_wrapper.h"], "external_methods": ["rbusHandle_t rbusHandle_t", "rbusError_t rbusError_t", "rbusObject_t rbusObject_t", "rbusValue_t rbusValue_t", "rbusObject_Init", "rbusObject_SetValue", "rbusObject_Release", "rbusValue_Init", "rbusValue_SetString", "rbusValue_SetInt32", "rbusValue_Release", "rbusMethodCaller", "rbusError_ToString"], "published": ["sendReportsOverRBUSMethod", "sendCachedReportsOverRBUSMethod"], "classes": [], "methods": [{"name": "void sendOverRBUSMethodInit()", "description": "Initializes the mutex used for RBUS method handling.", "scope": "", "scopeKind": ""}, {"name": "void asyncMethodHandler(rbusHandle_t handle,char const * methodName,rbusError_t retStatus,rbusObject_t params)", "description": "Callback invoked upon completion of RBUS method call, sets success or failure status.", "scope": "", "scopeKind": ""}, {"name": "T2ERROR sendReportsOverRBUSMethod(char * methodName,Vector * inputParams,char * payload)", "description": "Constructs and sends a telemetry report over RBUS, with retries on failure.", "scope": "", "scopeKind": ""}, {"name": "T2ERROR sendCachedReportsOverRBUSMethod(char * methodName,Vector * inputParams,Vector * reportList)", "description": "Sends a batch of cached reports over RBUS, stopping on failure.", "scope": "", "scopeKind": ""}], "calls": ["pthread_once", "pthread_mutex_init", "pthread_mutex_lock", "pthread_mutex_trylock", "pthread_mutex_unlock", "sleep", "rbusObject_Init", "rbusObject_SetValue", "rbusObject_Release", "rbusValue_Init", "rbusValue_SetString", "rbusValue_SetInt32", "rbusValue_Release", "rbusMethodCaller", "rbusError_ToString"], "search-terms": ["rbusmethodinterface", "sendReportsOverRBUSMethod", "asyncMethodHandler", "RBUS_ERROR_SUCCESS", "mutex", "retry", "caching"], "state": 2, "file_id": 12897, "knowledge_revision": 25793, "git_revision": "", "ctags": [{"_type": "tag", "name": "MAX_RETRY_ATTEMPTS", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/protocol/rbusMethod/rbusmethodinterface.c", "pattern": "/^#define MAX_RETRY_ATTEMPTS /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "asyncMethodHandler", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/protocol/rbusMethod/rbusmethodinterface.c", "pattern": "/^static void asyncMethodHandler(rbusHandle_t handle, char const* methodName, rbusError_t retStatu/", "file": true, "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(rbusHandle_t handle,char const * methodName,rbusError_t retStatus,rbusObject_t params)"}, {"_type": "tag", "name": "isRbusMethod", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/protocol/rbusMethod/rbusmethodinterface.c", "pattern": "/^static bool isRbusMethod = false ;$/", "file": true, "language": "C", "typeref": "typename:bool", "kind": "variable"}, {"_type": "tag", "name": "rbusMethodMutex", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/protocol/rbusMethod/rbusmethodinterface.c", "pattern": "/^static pthread_mutex_t rbusMethodMutex;$/", "file": true, "language": "C", "typeref": "typename:pthread_mutex_t", "kind": "variable"}, {"_type": "tag", "name": "rbusMethodMutexOnce", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/protocol/rbusMethod/rbusmethodinterface.c", "pattern": "/^static pthread_once_t rbusMethodMutexOnce = PTHREAD_ONCE_INIT;$/", "file": true, "language": "C", "typeref": "typename:pthread_once_t", "kind": "variable"}, {"_type": "tag", "name": "sendCachedReportsOverRBUSMethod", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/protocol/rbusMethod/rbusmethodinterface.c", "pattern": "/^T2ERROR sendCachedReportsOverRBUSMethod(char *methodName, Vector* inputParams, Vector* reportLis/", "language": "C", "typeref": "typename:T2ERROR", "kind": "function", "signature": "(char * methodName,Vector * inputParams,Vector * reportList)"}, {"_type": "tag", "name": "sendOverRBUSMethodInit", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/protocol/rbusMethod/rbusmethodinterface.c", "pattern": "/^static void sendOverRBUSMethodInit() {$/", "file": true, "language": "C", "typeref": "typename:void", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "sendReportsOverRBUSMethod", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/telemetry/source/protocol/rbusMethod/rbusmethodinterface.c", "pattern": "/^T2ERROR sendReportsOverRBUSMethod(char *methodName, Vector* inputParams, char* payload) {$/", "language": "C", "typeref": "typename:T2ERROR", "kind": "function", "signature": "(char * methodName,Vector * inputParams,char * payload)"}], "hash": "cc287743e86e7b0c0b153ebe7022da57", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "rdk/components/generic/telemetry/source/protocol/rbusMethod/rbusmethodinterface.c", "fields": [{"name": "bool isRbusMethod", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "pthread_mutex_t rbusMethodMutex", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "pthread_once_t rbusMethodMutexOnce", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"25793": ""}]}