{"is_source_file": true, "format": "Python", "description": "This file implements a custom test loader class for the oeqa testing framework in Python, including methods for discovering, loading, and filtering test cases, as well as handling decorators and module validation.", "external_files": ["oeqa.core.utils.path", "oeqa.core.utils.test", "oeqa.core.exception", "oeqa.core.case", "oeqa.core.decorator"], "external_methods": ["findFile", "getSuiteModules", "getCaseID", "OEQATestNotFound"], "published": ["OETestLoader"], "classes": [{"name": "OETestLoader", "description": "A custom unittest loader class for loading and discovering tests with additional filtering, decorator handling, and module validation specific to the oeqa framework."}], "methods": [{"name": "__init__(self, tc, module_paths, modules, tests, modules_required, *args, **kwargs)", "description": "Initializes the OETestLoader with test configuration parameters.", "scope": "OETestLoader", "scopeKind": "class"}, {"name": "_patchCaseClass(self, testCaseClass)", "description": "Adds custom attributes to the test case class for tracking the test environment.", "scope": "OETestLoader", "scopeKind": "class"}, {"name": "_registerTestCase(self, case)", "description": "Stores a test case instance in the test registry.", "scope": "OETestLoader", "scopeKind": "class"}, {"name": "_handleTestCaseDecorators(self, case)", "description": "Applies decorators to a test case, binding them to the test registry.", "scope": "OETestLoader", "scopeKind": "class"}, {"name": "_filterTest(self, case)", "description": "Filters out test cases based on module, class, test name, and tags.", "scope": "OETestLoader", "scopeKind": "class"}, {"name": "_getTestCase(self, testCaseClass, tcName)", "description": "Creates and initializes a test case instance, applying monkey patches for setup/teardown.", "scope": "OETestLoader", "scopeKind": "class"}, {"name": "loadTestsFromTestCase(self, testCaseClass)", "description": "Loads all test methods from a given test case class, filtering according to configuration.", "scope": "OETestLoader", "scopeKind": "class"}, {"name": "_required_modules_validation(self)", "description": "Ensures that required modules are present in the test registry.", "scope": "OETestLoader", "scopeKind": "class"}, {"name": "discover(self)", "description": "Discovers tests from specified paths, combining modules and decorator-based discovers.", "scope": "OETestLoader", "scopeKind": "class"}, {"name": "_filterModule(self, module)", "description": "Determines whether a module should be loaded based on its name and configuration.", "scope": "OETestLoader", "scopeKind": "class"}, {"name": "loadTestsFromModule(self, module, *args, pattern=None, **kws)", "description": "Loads tests from a specified module, with compatibility considerations for different Python versions.", "scope": "OETestLoader", "scopeKind": "class"}, {"name": "_built_modules_dict(modules)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "_find_duplicated_modules(suite, directory)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "_handle(obj)", "scope": "OETestLoader._handleTestCaseDecorators", "scopeKind": "member", "description": "unavailable"}, {"name": "_walk_closure(obj)", "scope": "OETestLoader._handleTestCaseDecorators", "scopeKind": "member", "description": "unavailable"}, {"name": "loadTestsFromModule(self, module, use_load_tests=True)", "scope": "OETestLoader", "scopeKind": "class", "description": "unavailable"}], "calls": ["inspect.getfullargspec", "unittest.loader._make_failed_test", "findFile", "getSuiteModules", "getCaseID", "raise ImportError", "re.match", "issubclass", "getattr", "setattr", "super", "hasattr"], "search-terms": ["OETestLoader", "custom unittest loader", "test discovery", "filter test cases", "decorator handling", "module validation", "oeqa framework"], "state": 2, "file_id": 2035, "knowledge_revision": 15181, "git_revision": "", "ctags": [{"_type": "tag", "name": "OETestLoader", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oeqa/core/loader.py", "pattern": "/^class OETestLoader(unittest.TestLoader):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oeqa/core/loader.py", "pattern": "/^    def __init__(self, tc, module_paths, modules, tests, modules_required,$/", "language": "Python", "kind": "member", "signature": "(self, tc, module_paths, modules, tests, modules_required, *args, **kwargs)", "scope": "OETestLoader", "scopeKind": "class"}, {"_type": "tag", "name": "_built_modules_dict", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oeqa/core/loader.py", "pattern": "/^def _built_modules_dict(modules):$/", "language": "Python", "kind": "function", "signature": "(modules)"}, {"_type": "tag", "name": "_failed_test_args", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oeqa/core/loader.py", "pattern": "/^_failed_test_args = inspect.getfullargspec(unittest.loader._make_failed_test).args$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "_filterModule", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oeqa/core/loader.py", "pattern": "/^    def _filterModule(self, module):$/", "language": "Python", "kind": "member", "signature": "(self, module)", "scope": "OETestLoader", "scopeKind": "class"}, {"_type": "tag", "name": "_filterTest", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oeqa/core/loader.py", "pattern": "/^    def _filterTest(self, case):$/", "language": "Python", "kind": "member", "signature": "(self, case)", "scope": "OETestLoader", "scopeKind": "class"}, {"_type": "tag", "name": "_find_duplicated_modules", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oeqa/core/loader.py", "pattern": "/^def _find_duplicated_modules(suite, directory):$/", "language": "Python", "kind": "function", "signature": "(suite, directory)"}, {"_type": "tag", "name": "_getTestCase", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oeqa/core/loader.py", "pattern": "/^    def _getTestCase(self, testCaseClass, tcName):$/", "language": "Python", "kind": "member", "signature": "(self, testCaseClass, tcName)", "scope": "OETestLoader", "scopeKind": "class"}, {"_type": "tag", "name": "_handle", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oeqa/core/loader.py", "pattern": "/^        def _handle(obj):$/", "file": true, "language": "Python", "kind": "function", "signature": "(obj)", "scope": "OETestLoader._handleTestCaseDecorators", "scopeKind": "member"}, {"_type": "tag", "name": "_handleTestCaseDecorators", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oeqa/core/loader.py", "pattern": "/^    def _handleTestCaseDecorators(self, case):$/", "language": "Python", "kind": "member", "signature": "(self, case)", "scope": "OETestLoader", "scopeKind": "class"}, {"_type": "tag", "name": "_patchCaseClass", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oeqa/core/loader.py", "pattern": "/^    def _patchCaseClass(self, testCaseClass):$/", "language": "Python", "kind": "member", "signature": "(self, testCaseClass)", "scope": "OETestLoader", "scopeKind": "class"}, {"_type": "tag", "name": "_registerTestCase", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oeqa/core/loader.py", "pattern": "/^    def _registerTestCase(self, case):$/", "language": "Python", "kind": "member", "signature": "(self, case)", "scope": "OETestLoader", "scopeKind": "class"}, {"_type": "tag", "name": "_required_modules_validation", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oeqa/core/loader.py", "pattern": "/^    def _required_modules_validation(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "OETestLoader", "scopeKind": "class"}, {"_type": "tag", "name": "_walk_closure", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oeqa/core/loader.py", "pattern": "/^        def _walk_closure(obj):$/", "file": true, "language": "Python", "kind": "function", "signature": "(obj)", "scope": "OETestLoader._handleTestCaseDecorators", "scopeKind": "member"}, {"_type": "tag", "name": "caseClass", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oeqa/core/loader.py", "pattern": "/^    caseClass = OETestCase$/", "language": "Python", "kind": "variable", "scope": "OETestLoader", "scopeKind": "class"}, {"_type": "tag", "name": "discover", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oeqa/core/loader.py", "pattern": "/^    def discover(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "OETestLoader", "scopeKind": "class"}, {"_type": "tag", "name": "kwargs_names", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oeqa/core/loader.py", "pattern": "/^    kwargs_names = ['testMethodPrefix', 'sortTestMethodUsing', 'suiteClass',$/", "language": "Python", "kind": "variable", "scope": "OETestLoader", "scopeKind": "class"}, {"_type": "tag", "name": "loadTestsFromModule", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oeqa/core/loader.py", "pattern": "/^        def loadTestsFromModule(self, module, *args, pattern=None, **kws):$/", "language": "Python", "kind": "member", "signature": "(self, module, *args, pattern=None, **kws)", "scope": "OETestLoader", "scopeKind": "class"}, {"_type": "tag", "name": "loadTestsFromModule", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oeqa/core/loader.py", "pattern": "/^        def loadTestsFromModule(self, module, use_load_tests=True):$/", "language": "Python", "kind": "member", "signature": "(self, module, use_load_tests=True)", "scope": "OETestLoader", "scopeKind": "class"}, {"_type": "tag", "name": "loadTestsFromTestCase", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oeqa/core/loader.py", "pattern": "/^    def loadTestsFromTestCase(self, testCaseClass):$/", "language": "Python", "kind": "member", "signature": "(self, testCaseClass)", "scope": "OETestLoader", "scopeKind": "class"}], "hash": "d61ac8f289e95b9eb45ffd0248379857", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "openembedded-core/meta/lib/oeqa/core/loader.py", "fields": [{"name": "_failed_test_args = inspect.getfullargspec(unittest.loader._make_failed_test).args", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "caseClass = OETestCase", "scope": "OETestLoader", "scopeKind": "class", "description": "unavailable"}, {"name": "kwargs_names = ['testMethodPrefix', 'sortTestMethodUsing', 'suiteClass',", "scope": "OETestLoader", "scopeKind": "class", "description": "unavailable"}], "revision_history": [{"15181": ""}]}