{"is_source_file": true, "format": "C", "description": "This file appears to be a C source code file implementing Wi-Fi access point and service management functions, including initialization, start/stop operations, cache updates, ACL handling, and service lookup based on type or name.", "external_files": ["wifi_hal.h", "wifi_ctrl.h", "wifi_mgr.h", "wifi_util.h", "vap_svc.h"], "external_methods": ["get_wifimgr_obj", "get_wifictrl_obj", "get_wifidb_vap_map", "get_wifidb_rdk_vaps", "get_wifidb_rdk_vap_info", "get_wifidb_vap_info", "hash_map_get_first", "hash_map_get_next", "to_mac_str", "wifi_hal_delApAclDevices", "wifi_delApAclDevices", "wifi_hal_addApAclDevice", "wifi_addApAclDevice", "getTotalNumberVAPs", "getNumberRadios", "wifi_hal_createVAP"], "published": ["svc_init", "update_global_cache", "update_acl_entries", "get_wifi_hal_capability_info", "update_lnf_psk_vap_hal_prop_bridge_name", "vap_svc_start_stop", "vap_svc_stop", "vap_svc_start", "get_svc_by_type", "get_svc_by_name", "get_svc_by_vap_index"], "classes": [], "methods": [{"name": "int svc_init(vap_svc_t * svc,vap_svc_type_t type)", "description": "Initializes a vap_svc_t structure based on the specified service type, setting function pointers and control parameters.", "scope": "", "scopeKind": ""}, {"name": "int update_global_cache(wifi_vap_info_map_t * tgt_vap_map,rdk_wifi_vap_info_t * rdk_vap_info)", "description": "Updates the global cache of VAP info structures with new data, ensuring consistency across internal representations.", "scope": "", "scopeKind": ""}, {"name": "int update_acl_entries(wifi_vap_info_map_t * tgt_vap_map)", "description": "Updates the Access Control List (ACL) entries for each VAP based on current configuration, adding or removing devices accordingly.", "scope": "", "scopeKind": ""}, {"name": "wifi_interface_name_idex_map_t * get_wifi_hal_capability_info(wifi_platform_property_t * wifi_prop,wifi_vap_info_t * old_vap_info)", "description": "Retrieves hardware capability information for a specific VAP based on its name and the platform properties.", "scope": "", "scopeKind": ""}, {"name": "int update_lnf_psk_vap_hal_prop_bridge_name(vap_svc_t * svc,wifi_vap_info_map_t * vap_map)", "description": "Updates the bridge name property in hardware capability info for VAPs matching certain criteria.", "scope": "", "scopeKind": ""}, {"name": "int vap_svc_start_stop(vap_svc_t * svc,bool enable)", "description": "Starts or stops VAP services across all radios based on the enable parameter, creating or deleting VAPs as needed.", "scope": "", "scopeKind": ""}, {"name": "int vap_svc_stop(vap_svc_t * svc)", "description": "Stops the VAP services by invoking start_stop with enable set to false.", "scope": "", "scopeKind": ""}, {"name": "int vap_svc_start(vap_svc_t * svc)", "description": "Starts the VAP services by invoking start_stop with enable set to true.", "scope": "", "scopeKind": ""}, {"name": "vap_svc_t * get_svc_by_type(wifi_ctrl_t * ct,vap_svc_type_t type)", "description": "Retrieves a service object from the control structure based on its type.", "scope": "", "scopeKind": ""}, {"name": "vap_svc_t * get_svc_by_name(wifi_ctrl_t * ct,char * vap_name)", "description": "Returns a service object based on the VAP name, inferring the service type from name substrings.", "scope": "", "scopeKind": ""}, {"name": "vap_svc_t * get_svc_by_vap_index(wifi_ctrl_t * ct,unsigned int vap_index)", "description": "Finds and returns a service object responsible for a specific VAP index.", "scope": "", "scopeKind": ""}], "calls": ["get_wifimgr_obj()", "get_wifictrl_obj()", "get_wifidb_vap_map()", "get_wifidb_rdk_vaps()", "get_wifidb_rdk_vap_info()", "get_wifidb_vap_info()", "hash_map_get_first()", "hash_map_get_next()", "to_mac_str()", "wifi_hal_delApAclDevices()", "wifi_delApAclDevices()", "wifi_hal_addApAclDevice()", "wifi_addApAclDevice()", "getTotalNumberVAPs()", "getNumberRadios()", "wifi_hal_createVAP()"], "search-terms": ["vap_svc", "Wi-Fi VAP management", "ACL configuration", "service initialization", "radio VAP cache", "private/public/mesh services", "VAP start/stop", "VAP lookup"], "state": 2, "file_id": 6029, "knowledge_revision": 19137, "git_revision": "", "ctags": [{"_type": "tag", "name": "get_svc_by_name", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/services/vap_svc.c", "pattern": "/^vap_svc_t *get_svc_by_name(wifi_ctrl_t *ct, char *vap_name)$/", "language": "C", "typeref": "typename:vap_svc_t *", "kind": "function", "signature": "(wifi_ctrl_t * ct,char * vap_name)"}, {"_type": "tag", "name": "get_svc_by_type", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/services/vap_svc.c", "pattern": "/^vap_svc_t *get_svc_by_type(wifi_ctrl_t *ct, vap_svc_type_t type)$/", "language": "C", "typeref": "typename:vap_svc_t *", "kind": "function", "signature": "(wifi_ctrl_t * ct,vap_svc_type_t type)"}, {"_type": "tag", "name": "get_svc_by_vap_index", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/services/vap_svc.c", "pattern": "/^vap_svc_t *get_svc_by_vap_index(wifi_ctrl_t *ct, unsigned int vap_index)$/", "language": "C", "typeref": "typename:vap_svc_t *", "kind": "function", "signature": "(wifi_ctrl_t * ct,unsigned int vap_index)"}, {"_type": "tag", "name": "get_wifi_hal_capability_info", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/services/vap_svc.c", "pattern": "/^wifi_interface_name_idex_map_t *get_wifi_hal_capability_info(wifi_platform_property_t *wifi_prop/", "language": "C", "typeref": "typename:wifi_interface_name_idex_map_t *", "kind": "function", "signature": "(wifi_platform_property_t * wifi_prop,wifi_vap_info_t * old_vap_info)"}, {"_type": "tag", "name": "svc_init", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/services/vap_svc.c", "pattern": "/^int svc_init(vap_svc_t *svc, vap_svc_type_t type)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(vap_svc_t * svc,vap_svc_type_t type)"}, {"_type": "tag", "name": "update_acl_entries", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/services/vap_svc.c", "pattern": "/^int update_acl_entries(wifi_vap_info_map_t *tgt_vap_map)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(wifi_vap_info_map_t * tgt_vap_map)"}, {"_type": "tag", "name": "update_global_cache", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/services/vap_svc.c", "pattern": "/^int update_global_cache(wifi_vap_info_map_t *tgt_vap_map, rdk_wifi_vap_info_t *rdk_vap_info)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(wifi_vap_info_map_t * tgt_vap_map,rdk_wifi_vap_info_t * rdk_vap_info)"}, {"_type": "tag", "name": "update_lnf_psk_vap_hal_prop_bridge_name", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/services/vap_svc.c", "pattern": "/^int update_lnf_psk_vap_hal_prop_bridge_name(vap_svc_t *svc, wifi_vap_info_map_t *vap_map)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(vap_svc_t * svc,wifi_vap_info_map_t * vap_map)"}, {"_type": "tag", "name": "vap_svc_start", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/services/vap_svc.c", "pattern": "/^int vap_svc_start(vap_svc_t *svc)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(vap_svc_t * svc)"}, {"_type": "tag", "name": "vap_svc_start_stop", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/services/vap_svc.c", "pattern": "/^int vap_svc_start_stop(vap_svc_t *svc, bool enable)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(vap_svc_t * svc,bool enable)"}, {"_type": "tag", "name": "vap_svc_stop", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/OneWifi/source/core/services/vap_svc.c", "pattern": "/^int vap_svc_stop(vap_svc_t *svc)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(vap_svc_t * svc)"}], "hash": "59349534295553574110fd09693ed62a", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "rdkb/components/opensource/ccsp/OneWifi/source/core/services/vap_svc.c", "revision_history": [{"19137": ""}]}