{"is_source_file": true, "format": "C", "description": "This file contains implementation of wrapper functions for Ethernet switch port management, including getting/setting port status, configuration, MAC address location, associated devices, and ETH WAN interface controls. It interacts with hardware abstraction layer (HAL) APIs to retrieve and modify Ethernet port and WAN settings.", "external_files": ["ssp_tdk_Ethsw_wrp.h", "ssp_hal_logger.h"], "external_methods": ["CcspHalEthSwGetPortAdminStatus", "CcspHalEthSwGetPortCfg", "CcspHalEthSwGetPortStatus", "CcspHalEthSwInit", "CcspHalExtSw_getAssociatedDevice", "GWP_GetEthWanInterfaceName", "CcspHalExtSw_getEthWanEnable", "CcspHalExtSw_getEthWanPort", "CcspHalExtSw_setEthWanEnable", "CcspHalExtSw_setEthWanPort", "CcspHalExtSw_getEthWanLinkStatus", "CcspHalEthSwSetAgingSpeed", "CcspHalEthSwSetPortAdminStatus", "CcspHalEthSwSetPortCfg", "CSP_HAL_ETHSW_AdminUp", "CSP_HAL_ETHSW_AdminDown", "CSP_HAL_ETHSW_AdminTest", "CCSP_HAL_ETHSW_AdminUp", "CCSP_HAL_ETHSW_AdminDown", "CCSP_HAL_ETHSW_AdminTest", "CCSP_HAL_ETHSW_LINK_10Mbps", "CCSP_HAL_ETHSW_LINK_100Mbps", "CCSP_HAL_ETHSW_LINK_1Gbps", "CCSP_HAL_ETHSW_LINK_2_5Gbps", "CCSP_HAL_ETHSW_LINK_5Gbps", "CCSP_HAL_ETHSW_LINK_10Gbps", "CCSP_HAL_ETHSW_LINK_Auto", "CCSP_HAL_ETHSW_LINK_NULL", "CCSP_HAL_ETHSW_DUPLEX_Auto", "CCSP_HAL_ETHSW_DUPLEX_Half", "CCSP_HAL_ETHSW_DUPLEX_Full", "RETURN_OK", "RETURN_ERR", "DEBUG_PRINT", "CHECK_PARAM_AND_RET", "MAX_STRING_SIZE", "ETH_WAN_LINK_UP", "ETH_WAN_LINK_DOWN", "GWP_GetEthWanLinkStatus"], "published": ["ssp_ethsw_stub_hal_GetAdminPortStatus", "ssp_ethsw_stub_hal_GetPortCfg", "ssp_ethsw_stub_hal_GetPort_Status", "ssp_ethsw_stub_hal_Init", "ssp_ethsw_stub_hal_LocatePort_By_MacAddress", "ssp_ethsw_stub_hal_SetAgingSpeed", "ssp_ethsw_stub_hal_SetPortAdminStatus", "ssp_ethsw_stub_hal_SetPortCfg", "ssp_ethsw_stub_hal_Get_AssociatedDevice", "ssp_ethsw_stub_hal_Get_EthWanInterfaceName", "ssp_ethsw_stub_hal_Get_EthWanEnable", "ssp_ethsw_stub_hal_Set_EthWanEnable", "ssp_ethsw_stub_hal_Get_EthWanPort", "ssp_ethsw_stub_hal_Set_EthWanPort", "ssp_ethsw_stub_hal_Get_EthWanLinkStatus"], "classes": [], "methods": [{"name": "int ssp_ethsw_stub_hal_GetAdminPortStatus(int portId,char * pAdminStatus,int isNegativeScenario)", "description": "Retrieves current administrative status (up/down/test) of a specified port, with support for negative scenario testing.", "scope": "", "scopeKind": ""}, {"name": "int ssp_ethsw_stub_hal_GetPortCfg(int portId,char * pDuplexMode,int * pLinkRate,int isNegativeScenario)", "description": "Retrieves current link rate and duplex mode configuration for a specified port, supporting negative scenario testing.", "scope": "", "scopeKind": ""}, {"name": "int ssp_ethsw_stub_hal_GetPort_Status(int portId,char * pLinkStatus,int * pLinkRate,char * pDuplexMode,int isNegativeScenario)", "description": "Retrieves current link status, speed, and duplex mode for a specified port, with negative scenario support.", "scope": "", "scopeKind": ""}, {"name": "int ssp_ethsw_stub_hal_Init()", "description": "Initializes the Ethernet switch HAL.", "scope": "", "scopeKind": ""}, {"name": "int ssp_ethsw_stub_hal_LocatePort_By_MacAddress(char * pMacAddr,int * pPortId,int isNegativeScenario)", "description": "Locates the port number associated with a given MAC address.", "scope": "", "scopeKind": ""}, {"name": "int ssp_ethsw_stub_hal_SetAgingSpeed(int portId,int agingSpeed)", "description": "Sets the aging speed for a specified port.", "scope": "", "scopeKind": ""}, {"name": "int ssp_ethsw_stub_hal_SetPortAdminStatus(int portId,char * portAdminstatus)", "description": "Sets the administrative status (up/down/test) of a specified port.", "scope": "", "scopeKind": ""}, {"name": "int ssp_ethsw_stub_hal_SetPortCfg(int portId,int linkRate,char * pDuplexMode)", "description": "Configures link speed and duplex mode for a specified port.", "scope": "", "scopeKind": ""}, {"name": "int ssp_ethsw_stub_hal_Get_AssociatedDevice(unsigned long int * array_size,eth_device_t ** eth_device_conf,int isNegativeScenario)", "description": "Retrieves configuration details of associated devices, supports negative scenario testing.", "scope": "", "scopeKind": ""}, {"name": "int ssp_ethsw_stub_hal_Get_EthWanInterfaceName(char * interface,int isNegativeScenario)", "description": "Retrieves the interface name of Eth WAN.", "scope": "", "scopeKind": ""}, {"name": "int ssp_ethsw_stub_hal_Get_EthWanEnable(unsigned char * enableStatus,int isNegativeScenario)", "description": "Gets Eth WAN enabled/disabled status.", "scope": "", "scopeKind": ""}, {"name": "int ssp_ethsw_stub_hal_Set_EthWanEnable(unsigned char enableStatus)", "description": "Sets Eth WAN enabled or disabled.", "scope": "", "scopeKind": ""}, {"name": "int ssp_ethsw_stub_hal_Get_EthWanPort(unsigned int * portNum,int isNegativeScenario)", "description": "Retrieves the Eth WAN port number.", "scope": "", "scopeKind": ""}, {"name": "int ssp_ethsw_stub_hal_Set_EthWanPort(unsigned int portNum)", "description": "Sets the Eth WAN port number.", "scope": "", "scopeKind": ""}, {"name": "int ssp_ethsw_stub_hal_Get_EthWanLinkStatus(int * linkStatus)", "description": "Retrieves the current Eth WAN link status.", "scope": "", "scopeKind": ""}], "calls": ["CcspHalEthSwGetPortAdminStatus", "CcspHalEthSwGetPortCfg", "CcspHalEthSwGetPortStatus", "CSP_HAL_ETHSW_AdminUp", "CSP_HAL_ETHSW_AdminDown", "CSP_HAL_ETHSW_AdminTest", "CcspHalEthSwInit", "CcspHalExtSw_getAssociatedDevice", "GWP_GetEthWanInterfaceName", "CcspHalExtSw_getEthWanEnable", "CcspHalExtSw_getEthWanPort", "CcspHalExtSw_setEthWanEnable", "CcspHalExtSw_setEthWanPort", "GWP_GetEthWanLinkStatus", "CcspHalEthSwSetAgingSpeed", "CcspHalEthSwSetPortAdminStatus", "CcspHalEthSwSetPortCfg"], "search-terms": ["ETHSW", "PortCfg", "WAN", "MacAddress", "AgingSpeed", "EthWan", "PortStatus", "AdminStatus", "LinkRate", "DuplexMode"], "state": 2, "file_id": 5570, "knowledge_revision": 18687, "git_revision": "", "ctags": [{"_type": "tag", "name": "ETH_WAN_LINK_DOWN", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/tdkb_lib/src/ssp_tdk_Ethsw_wrp.c", "pattern": "/^#define ETH_WAN_LINK_DOWN /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "ETH_WAN_LINK_UP", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/tdkb_lib/src/ssp_tdk_Ethsw_wrp.c", "pattern": "/^#define ETH_WAN_LINK_UP /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "INVALID_VALUE", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/tdkb_lib/src/ssp_tdk_Ethsw_wrp.c", "pattern": "/^#define INVALID_VALUE /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "MAXBITRATE_10", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/tdkb_lib/src/ssp_tdk_Ethsw_wrp.c", "pattern": "/^#define MAXBITRATE_10 /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "MAXBITRATE_100", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/tdkb_lib/src/ssp_tdk_Ethsw_wrp.c", "pattern": "/^#define MAXBITRATE_100 /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "MAXBITRATE_1000", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/tdkb_lib/src/ssp_tdk_Ethsw_wrp.c", "pattern": "/^#define MAXBITRATE_1000 /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "MAXBITRATE_10000", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/tdkb_lib/src/ssp_tdk_Ethsw_wrp.c", "pattern": "/^#define MAXBITRATE_10000 /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "MAXBITRATE_2500", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/tdkb_lib/src/ssp_tdk_Ethsw_wrp.c", "pattern": "/^#define MAXBITRATE_2500 /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "MAXBITRATE_5000", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/tdkb_lib/src/ssp_tdk_Ethsw_wrp.c", "pattern": "/^#define MAXBITRATE_5000 /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "MAXBITRATE_AUTO", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/tdkb_lib/src/ssp_tdk_Ethsw_wrp.c", "pattern": "/^#define MAXBITRATE_AUTO /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "MAX_STRING_SIZE", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/tdkb_lib/src/ssp_tdk_Ethsw_wrp.c", "pattern": "/^#define MAX_STRING_SIZE /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "ssp_ethsw_stub_hal_GetAdminPortStatus", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/tdkb_lib/src/ssp_tdk_Ethsw_wrp.c", "pattern": "/^int ssp_ethsw_stub_hal_GetAdminPortStatus(int portId, char *pAdminStatus, int isNegativeScenario/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(int portId,char * pAdminStatus,int isNegativeScenario)"}, {"_type": "tag", "name": "ssp_ethsw_stub_hal_GetPortCfg", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/tdkb_lib/src/ssp_tdk_Ethsw_wrp.c", "pattern": "/^int ssp_ethsw_stub_hal_GetPortCfg(int portId, char *pDuplexMode, int *pLinkRate, int isNegativeS/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(int portId,char * pDuplexMode,int * pLinkRate,int isNegativeScenario)"}, {"_type": "tag", "name": "ssp_ethsw_stub_hal_GetPort_Status", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/tdkb_lib/src/ssp_tdk_Ethsw_wrp.c", "pattern": "/^int ssp_ethsw_stub_hal_GetPort_Status(int portId, char *pLinkStatus, int *pLinkRate, char *pDupl/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(int portId,char * pLinkStatus,int * pLinkRate,char * pDuplexMode,int isNegativeScenario)"}, {"_type": "tag", "name": "ssp_ethsw_stub_hal_Get_AssociatedDevice", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/tdkb_lib/src/ssp_tdk_Ethsw_wrp.c", "pattern": "/^int ssp_ethsw_stub_hal_Get_AssociatedDevice(unsigned long int *array_size,eth_device_t **eth_dev/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(unsigned long int * array_size,eth_device_t ** eth_device_conf,int isNegativeScenario)"}, {"_type": "tag", "name": "ssp_ethsw_stub_hal_Get_EthWanEnable", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/tdkb_lib/src/ssp_tdk_Ethsw_wrp.c", "pattern": "/^int ssp_ethsw_stub_hal_Get_EthWanEnable( unsigned char* enableStatus, int isNegativeScenario)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(unsigned char * enableStatus,int isNegativeScenario)"}, {"_type": "tag", "name": "ssp_ethsw_stub_hal_Get_EthWanInterfaceName", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/tdkb_lib/src/ssp_tdk_Ethsw_wrp.c", "pattern": "/^int ssp_ethsw_stub_hal_Get_EthWanInterfaceName( char* interface, int isNegativeScenario)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(char * interface,int isNegativeScenario)"}, {"_type": "tag", "name": "ssp_ethsw_stub_hal_Get_EthWanLinkStatus", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/tdkb_lib/src/ssp_tdk_Ethsw_wrp.c", "pattern": "/^int ssp_ethsw_stub_hal_Get_EthWanLinkStatus(int* linkStatus)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(int * linkStatus)"}, {"_type": "tag", "name": "ssp_ethsw_stub_hal_Get_EthWanPort", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/tdkb_lib/src/ssp_tdk_Ethsw_wrp.c", "pattern": "/^int ssp_ethsw_stub_hal_Get_EthWanPort( unsigned int* portNum, int isNegativeScenario)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(unsigned int * portNum,int isNegativeScenario)"}, {"_type": "tag", "name": "ssp_ethsw_stub_hal_Init", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/tdkb_lib/src/ssp_tdk_Ethsw_wrp.c", "pattern": "/^int ssp_ethsw_stub_hal_Init()$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "ssp_ethsw_stub_hal_LocatePort_By_MacAddress", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/tdkb_lib/src/ssp_tdk_Ethsw_wrp.c", "pattern": "/^int ssp_ethsw_stub_hal_LocatePort_By_MacAddress(char *pMacAddr, int *pPortId, int isNegativeScen/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(char * pMacAddr,int * pPortId,int isNegativeScenario)"}, {"_type": "tag", "name": "ssp_ethsw_stub_hal_SetAgingSpeed", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/tdkb_lib/src/ssp_tdk_Ethsw_wrp.c", "pattern": "/^int ssp_ethsw_stub_hal_SetAgingSpeed(int portId, int agingSpeed)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(int portId,int agingSpeed)"}, {"_type": "tag", "name": "ssp_ethsw_stub_hal_SetPortAdminStatus", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/tdkb_lib/src/ssp_tdk_Ethsw_wrp.c", "pattern": "/^int ssp_ethsw_stub_hal_SetPortAdminStatus(int portId, char *portAdminstatus)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(int portId,char * portAdminstatus)"}, {"_type": "tag", "name": "ssp_ethsw_stub_hal_SetPortCfg", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/tdkb_lib/src/ssp_tdk_Ethsw_wrp.c", "pattern": "/^int ssp_ethsw_stub_hal_SetPortCfg(int portId, int linkRate, char *pDuplexMode)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(int portId,int linkRate,char * pDuplexMode)"}, {"_type": "tag", "name": "ssp_ethsw_stub_hal_Set_EthWanEnable", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/tdkb_lib/src/ssp_tdk_Ethsw_wrp.c", "pattern": "/^int ssp_ethsw_stub_hal_Set_EthWanEnable( unsigned char enableStatus)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(unsigned char enableStatus)"}, {"_type": "tag", "name": "ssp_ethsw_stub_hal_Set_EthWanPort", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/tdkb_lib/src/ssp_tdk_Ethsw_wrp.c", "pattern": "/^int ssp_ethsw_stub_hal_Set_EthWanPort( unsigned int portNum)$/", "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(unsigned int portNum)"}], "hash": "1b048b13c5f3713aad8b632ca78be2b7", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "rdkb/tools/tdkb/tdkb_lib/src/ssp_tdk_Ethsw_wrp.c", "revision_history": [{"18687": ""}]}