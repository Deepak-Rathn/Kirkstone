{"is_source_file": true, "format": "Python", "description": "This Python source file defines decorators and functions for managing and validating test case dependencies in a testing framework, including dependency registration, validation, ordering, and skipping tests based on dependencies.", "external_files": ["oeqa.core.exception"], "external_methods": [], "published": ["OETestDepends"], "classes": [{"name": "OETestDepends", "description": "Decorator class that manages test case dependency registration, validation, and execution order."}], "methods": [{"name": "_add_depends(registry, case, depends)", "description": "Adds dependency information for a test case into the registry.", "scope": "", "scopeKind": ""}, {"name": "_validate_test_case_depends(cases, depends)", "description": "Validates that all dependencies referenced by test cases exist.", "scope": "", "scopeKind": ""}, {"name": "_order_test_case_by_depends(cases, depends)", "description": "Orders test cases based on their dependencies, resolving dependency chains and detecting circular dependencies.", "scope": "", "scopeKind": ""}, {"name": "_skipTestDependency(case, depends)", "description": "Skips a test case if its dependencies did not pass or run.", "scope": "", "scopeKind": ""}, {"name": "bind(self, registry, case)", "description": "Binds the dependency attribute to the test case and registers its dependencies.", "scope": "OETestDepends", "scopeKind": "class"}, {"name": "discover(registry)", "description": "Discovers and orders test cases based on their dependencies.", "scope": "OETestDepends", "scopeKind": "class"}, {"name": "setUpDecorator(self)", "description": "Sets up the test case decorator, including dependency checks to skip tests if dependencies fail.", "scope": "OETestDepends", "scopeKind": "class"}, {"name": "_dep_resolve(graph, node, resolved, seen)", "scope": "_order_test_case_by_depends", "scopeKind": "function", "description": "unavailable"}], "calls": ["_add_depends", "_validate_test_case_depends", "_order_test_case_by_depends", "_skipTestDependency"], "search-terms": ["dependency registration", "test case order", "circular dependency detection", "SkipTest decorator", "dependency validation"], "state": 2, "file_id": 2039, "knowledge_revision": 15180, "git_revision": "", "ctags": [{"_type": "tag", "name": "OETestDepends", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oeqa/core/decorator/depends.py", "pattern": "/^class OETestDepends(OETestDiscover):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "_add_depends", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oeqa/core/decorator/depends.py", "pattern": "/^def _add_depends(registry, case, depends):$/", "language": "Python", "kind": "function", "signature": "(registry, case, depends)"}, {"_type": "tag", "name": "_dep_resolve", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oeqa/core/decorator/depends.py", "pattern": "/^    def _dep_resolve(graph, node, resolved, seen):$/", "file": true, "language": "Python", "kind": "function", "signature": "(graph, node, resolved, seen)", "scope": "_order_test_case_by_depends", "scopeKind": "function"}, {"_type": "tag", "name": "_order_test_case_by_depends", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oeqa/core/decorator/depends.py", "pattern": "/^def _order_test_case_by_depends(cases, depends):$/", "language": "Python", "kind": "function", "signature": "(cases, depends)"}, {"_type": "tag", "name": "_skipTestDependency", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oeqa/core/decorator/depends.py", "pattern": "/^def _skipTestDependency(case, depends):$/", "language": "Python", "kind": "function", "signature": "(case, depends)"}, {"_type": "tag", "name": "_validate_test_case_depends", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oeqa/core/decorator/depends.py", "pattern": "/^def _validate_test_case_depends(cases, depends):$/", "language": "Python", "kind": "function", "signature": "(cases, depends)"}, {"_type": "tag", "name": "attrs", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oeqa/core/decorator/depends.py", "pattern": "/^    attrs = ('depends',)$/", "language": "Python", "kind": "variable", "scope": "OETestDepends", "scopeKind": "class"}, {"_type": "tag", "name": "bind", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oeqa/core/decorator/depends.py", "pattern": "/^    def bind(self, registry, case):$/", "language": "Python", "kind": "member", "signature": "(self, registry, case)", "scope": "OETestDepends", "scopeKind": "class"}, {"_type": "tag", "name": "discover", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oeqa/core/decorator/depends.py", "pattern": "/^    def discover(registry):$/", "language": "Python", "kind": "member", "signature": "(registry)", "scope": "OETestDepends", "scopeKind": "class"}, {"_type": "tag", "name": "setUpDecorator", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oeqa/core/decorator/depends.py", "pattern": "/^    def setUpDecorator(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "OETestDepends", "scopeKind": "class"}], "hash": "85e42d0ec88ce8c7bcf058c349b47806", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "openembedded-core/meta/lib/oeqa/core/decorator/depends.py", "fields": [{"name": "attrs = ('depends',)", "scope": "OETestDepends", "scopeKind": "class", "description": "unavailable"}], "revision_history": [{"15180": ""}]}