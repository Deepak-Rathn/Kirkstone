{"is_source_file": true, "format": "C++ header file", "description": "This header file defines the interface for a WIFI hardware abstraction layer (HAL) stub implementation used for testing or interfacing with Wi-Fi hardware. It includes external C function declarations for Wi-Fi operations, class definitions for RPC interface methods, and a registration mechanism for various Wi-Fi related procedures.", "external_files": ["rdkteststubintf.h", "rdktestagentintf.h", "jsonrpccpp/server/connectors/tcpsocketserver.h", "wifi_hal.h"], "external_methods": ["wifi_getDeclineBARequestEnable", "wifi_setDeclineBARequestEnable", "wifi_getDfsEnable", "wifi_setDfsEnable", "wifi_setRadioDfsRefreshPeriod", "wifi_getApBasicAuthenticationMode", "wifi_kickAssociatedDevice", "wifi_getAssociatedDeviceDetail", "wifi_setDTIMInterval", "wifi_getApVlanID", "wifi_pushChannel", "wifi_getIndexFromName", "wifi_clearRadioResetCount", "wifi_ifConfigUp", "wifi_ifConfigDown", "wifi_initRadio", "wifi_getAutoBlockAckEnable", "wifi_setAutoBlockAckEnable", "wifi_getRadioAbsoluteTransmitPower_priv", "wifi_factoryReset_post", "wifi_apply_wldm"], "published": ["WIFIHAL", "WIFIHAL_GetOrSetParamBoolValue", "WIFIHAL_GetOrSetParamULongValue", "WIFIHAL_GetOrSetParamStringValue", "WIFIHAL_GetOrSetRadioStandard", "WIFIHAL_GetOrSetParamIntValue", "WIFIHAL_GetOrSetParamUIntValue", "WIFIHAL_GetIndexFromName", "WIFIHAL_GetApIndexFromName", "WIFIHAL_ClearRadioResetCount", "WIFIHAL_Reset", "WIFIHAL_GetOrSetSecurityRadiusServer", "WIFIHAL_GetOrSetApBridgeInfo", "WIFIHAL_GetOrSetRadioDCSScanTime", "WIFIHAL_AddorDelApAclDevice", "WIFIHAL_IfConfigUporDown", "WIFIHAL_ParamRadioIndex", "WIFIHAL_StartorStopHostApd", "WIFIHAL_FactoryReset", "WIFIHAL_GetOrSetSecurityRadiusSettings", "WIFIHAL_GetSSIDTrafficStats2", "WIFIHAL_GetRadioTrafficStats2", "WIFIHAL_Down", "WIFIHAL_Init", "WIFIHAL_CreateInitialConfigFiles", "WIFIHAL_GetNeighboringWiFiDiagnosticResult2", "WIFIHAL_PushRadioChannel2", "WIFIHAL_GetNeighboringWiFiStatus", "WIFIHAL_GetRadioChannelStats", "WIFIHAL_ParamApIndex", "WIFIHAL_GetApAssociatedDevice", "WIFIHAL_GetApDeviceRSSI", "WIFIHAL_DelApAclDevices", "WIFIHAL_GetApAclDevices", "WIFIHAL_CreateAp", "WIFIHAL_GetApAssociatedDeviceStats", "WIFIHAL_StartNeighborScan", "WIFIHAL_GetApAssociatedDeviceTxStatsResult", "WIFIHAL_GetApAssociatedDeviceRxStatsResult", "WIFIHAL_GetApDeviceTxRxRate", "WIFIHAL_GetApAssociatedDeviceDiagnosticResult", "WIFIHAL_GetAPCapabilities", "WIFIHAL_GetAvailableBSSColor", "WIFIHAL_GetOrSetFTMobilityDomainID", "WIFIHAL_GetOrSetFTR0KeyHolderID", "WIFIHAL_GetRMCapabilities", "WIFIHAL_GetApSecurity", "WIFIHAL_SetApSecurity", "WIFIHAL_GetApWpsConfiguration", "WIFIHAL_SetApWpsConfiguration", "WIFIHAL_GetOrSetFTR1KeyHolderID", "WIFIHAL_SetBSSColor", "WIFIHAL_PushApFastTransitionConfig", "WIFIHAL_GetMuEdca", "WIFIHAL_GetRadioOperatingParameters", "WIFIHAL_GetRadioChannels", "WIFIHAL_GetEAPParam"], "methods": [{"name": "WIFIHAL_GetOrSetParamULongValue", "description": "Stub method for getting or setting a ULONG parameter value via RPC"}, {"name": "WIFIHAL_GetOrSetParamBoolValue", "description": "Stub method for getting or setting a boolean parameter value via RPC"}, {"name": "WIFIHAL_GetOrSetParamStringValue", "description": "Stub method for getting or setting a string parameter value via RPC"}, {"name": "WIFIHAL_GetOrSetRadioStandard", "description": "Stub method for configuring or retrieving radio standard settings"}, {"name": "WIFIHAL_GetOrSetParamIntValue", "description": "Stub method for getting or setting an integer parameter value"}, {"name": "WIFIHAL_GetOrSetParamUIntValue", "description": "Stub method for getting or setting an unsigned integer parameter value"}, {"name": "WIFIHAL_GetIndexFromName", "description": "RPC method to get index from wireless SSID name"}, {"name": "WIFIHAL_GetApIndexFromName", "description": "RPC method to get AP index from name"}, {"name": "WIFIHAL_ClearRadioResetCount", "description": "RPC method to clear radio reset counter"}, {"name": "WIFIHAL_Reset", "description": "RPC method to reset configuration or hardware"}, {"name": "WIFIHAL_GetOrSetSecurityRadiusServer", "description": "RPC method to get or set RADIUS security server parameters"}, {"name": "WIFIHAL_GetOrSetApBridgeInfo", "description": "RPC method to get or set AP bridge information"}, {"name": "WIFIHAL_GetOrSetRadioDCSScanTime", "description": "RPC method to configure radio scan timing"}, {"name": "WIFIHAL_AddorDelApAclDevice", "description": "RPC method to add or delete ACL devices to the AP"}, {"name": "WIFIHAL_IfConfigUporDown", "description": "RPC method to bring network interface up or down"}, {"name": "WIFIHAL_ParamRadioIndex", "description": "RPC method to get radio index from parameter"}, {"name": "WIFIHAL_StartorStopHostApd", "description": "RPC method to start or stop host access point daemon"}, {"name": "WIFIHAL_FactoryReset", "description": "RPC method to perform factory reset"}, {"name": "WIFIHAL_GetOrSetSecurityRadiusSettings", "description": "RPC method to get or set RADIUS security settings"}, {"name": "WIFIHAL_GetSSIDTrafficStats2", "description": "RPC method to retrieve SSID traffic statistics"}, {"name": "WIFIHAL_GetRadioTrafficStats2", "description": "RPC method to retrieve radio traffic statistics"}, {"name": "WIFIHAL_Down", "description": "RPC method to bring radio or interface down"}, {"name": "WIFIHAL_Init", "description": "RPC method to initialize Wi-Fi HAL"}, {"name": "WIFIHAL_CreateInitialConfigFiles", "description": "RPC method to create initial configuration files"}, {"name": "WIFIHAL_GetApAssociatedDeviceDiagnosticResult", "description": "Retrieve diagnostic results for associated devices"}, {"name": "WIFIHAL_GetNeighboringWiFiDiagnosticResult2", "description": "Get neighboring WiFi diagnostic results"}, {"name": "WIFIHAL_PushRadioChannel2", "description": "Push new radio channel configuration"}, {"name": "WIFIHAL_GetNeighboringWiFiStatus", "description": "Check status of neighboring WiFi networks"}, {"name": "WIFIHAL_GetRadioChannelStats", "description": "Retrieve channel statistics for a radio"}, {"name": "WIFIHAL_ParamApIndex", "description": "Get AP index based on input parameter"}, {"name": "WIFIHAL_GetApAssociatedDevice", "description": "Get list of devices associated with AP"}, {"name": "WIFIHAL_GetApDeviceRSSI", "description": "Retrieve RSSI of an associated device"}, {"name": "WIFIHAL_DelApAclDevices", "description": "Remove ACL devices from AP"}, {"name": "WIFIHAL_GetApAclDevices", "description": "Retrieve ACL devices associated with AP"}, {"name": "WIFIHAL_CreateAp", "description": "Create a new Access Point"}, {"name": "WIFIHAL_GetApAssociatedDeviceStats", "description": "Get statistics for associated devices"}, {"name": "WIFIHAL_StartNeighborScan", "description": "Start neighbor scanning"}, {"name": "WIFIHAL_GetApAssociatedDeviceTxStatsResult", "description": "Get TX stats for associated devices"}, {"name": "WIFIHAL_GetApAssociatedDeviceRxStatsResult", "description": "Get RX stats for associated devices"}, {"name": "WIFIHAL_GetApDeviceTxRxRate", "description": "Device transmit/receive rate info"}, {"name": "WIFIHAL_GetApAssociatedDeviceDiagnosticResult3", "description": "Diagnostic result version 3"}, {"name": "WIFIHAL_GetRadioMode", "description": "Retrieve the current radio mode"}, {"name": "WIFIHAL_SetRadioMode", "description": "Configure the radio mode"}, {"name": "WIFIHAL_GetAssociatedDeviceDetail", "description": "Get details about an associated device"}, {"name": "WIFIHAL_GetBasicTrafficStats", "description": "Retrieve basic traffic stats"}, {"name": "WIFIHAL_GetWifiTrafficStats", "description": "Retrieve WiFi traffic statistics"}, {"name": "WIFIHAL_SteeringClientDisconnect", "description": "Disconnect a client from steering group"}, {"name": "WIFIHAL_SteeringClientSet", "description": "Set steering client parameters"}, {"name": "WIFIHAL_SteeringClientRemove", "description": "Remove client from steering group"}, {"name": "WIFIHAL_GetBTMClientCapabilityList", "description": "Retrieve BTM client capability list"}, {"name": "WIFIHAL_GetApRoamingConsortiumElement", "description": "Get roaming consortium elements"}, {"name": "WIFIHAL_PushApRoamingConsortiumElement", "description": "Push new roaming consortium elements"}, {"name": "WIFIHAL_GetBSSColorValue", "description": "Get BSS color value for BSS coloring feature"}, {"name": "WIFIHAL_ApplyGASConfiguration", "description": "Apply GAS (Generic Advertisement Service) configuration"}, {"name": "WIFIHAL_GetApInterworkingElement", "description": "Retrieve interworking element"}, {"name": "WIFIHAL_PushApInterworkingElement", "description": "Push interworking element configuration"}, {"name": "WIFIHAL_EnableCSIEngine", "description": "Enable CSI (Channel State Information) engine"}, {"name": "WIFIHAL_SendDataFrame", "description": "Send WiFi data frame"}, {"name": "WIFIHAL_GetVAPTelemetry", "description": "Get VAP telemetry data"}, {"name": "WIFIHAL_GetRadioVapInfoMap", "description": "Retrieve radio-VAP mapping information"}, {"name": "WIFIHAL_SetNeighborReports", "description": "Configure neighbor reports"}, {"name": "WIFIHAL_GetApAssociatedClientDiagnosticResult", "description": "Get client diagnostics for associated devices"}, {"name": "WIFIHAL_GetAPCapabilities", "description": "Retrieve capabilities of an AP"}, {"name": "WIFIHAL_GetAvailableBSSColor", "description": "Retrieve available BSS color options"}, {"name": "WIFIHAL_GetOrSetFTMobilityDomainID", "description": "Get or set FT mobility domain ID"}, {"name": "WIFIHAL_GetOrSetFTR0KeyHolderID", "description": "Get or set FTR0 key holder ID"}, {"name": "WIFIHAL_GetRMCapabilities", "description": "Retrieve RM (Radio Management) capabilities"}, {"name": "WIFIHAL_GetApSecurity", "description": "Get security settings for AP"}, {"name": "WIFIHAL_SetApSecurity", "description": "Set security settings for AP"}, {"name": "WIFIHAL_GetApWpsConfiguration", "description": "Get WPS configuration"}, {"name": "WIFIHAL_SetApWpsConfiguration", "description": "Set WPS configuration"}, {"name": "WIFIHAL_GetOrSetFTR1KeyHolderID", "description": "Get or set FTR1 key holder ID"}, {"name": "WIFIHAL_SetBSSColor", "description": "Set BSS color for BSS coloring"}, {"name": "WIFIHAL_PushApFastTransitionConfig", "description": "Push fast transition (FT) configuration"}, {"name": "WIFIHAL_GetMuEdca", "description": "Retrieve MU-EDCA settings"}, {"name": "WIFIHAL_GetRadioOperatingParameters", "description": "Get radio operating parameters"}, {"name": "WIFIHAL_GetRadioChannels", "description": "Get available radio channels"}, {"name": "WIFIHAL_GetEAPParam", "description": "Get EAP (Extensible Authentication Protocol) parameters"}, {"name": "WIFIHAL(TcpSocketServer & ptrRpcServer)", "scope": "WIFIHAL", "scopeKind": "class", "description": "unavailable"}], "search-terms": ["WIFIHAL", "RPC", "Wi-Fi", "stub interface", "AP management", "radio configuration", "WiFi diagnostics", "interworking", "roaming", "traffic stats"], "state": 2, "file_id": 2288, "knowledge_revision": 26099, "git_revision": "", "ctags": [{"_type": "tag", "name": "IN", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/WIFIHAL_stub/include/WIFIHAL.h", "pattern": "/^#define IN$/", "language": "C++", "kind": "macro"}, {"_type": "tag", "name": "OUT", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/WIFIHAL_stub/include/WIFIHAL.h", "pattern": "/^#define OUT$/", "language": "C++", "kind": "macro"}, {"_type": "tag", "name": "SSP_FAILURE", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/WIFIHAL_stub/include/WIFIHAL.h", "pattern": "/^#define SSP_FAILURE /", "language": "C++", "kind": "macro"}, {"_type": "tag", "name": "SSP_SUCCESS", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/WIFIHAL_stub/include/WIFIHAL.h", "pattern": "/^#define SSP_SUCCESS /", "language": "C++", "kind": "macro"}, {"_type": "tag", "name": "TEST_FAILURE", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/WIFIHAL_stub/include/WIFIHAL.h", "pattern": "/^#define TEST_FAILURE /", "language": "C++", "kind": "macro"}, {"_type": "tag", "name": "TEST_SUCCESS", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/WIFIHAL_stub/include/WIFIHAL.h", "pattern": "/^#define TEST_SUCCESS /", "language": "C++", "kind": "macro"}, {"_type": "tag", "name": "WIFIHAL", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/WIFIHAL_stub/include/WIFIHAL.h", "pattern": "/^        WIFIHAL(TcpSocketServer &ptrRpcServer) : AbstractServer <WIFIHAL>(ptrRpcServer)$/", "language": "C++", "kind": "function", "signature": "(TcpSocketServer & ptrRpcServer)", "scope": "WIFIHAL", "scopeKind": "class"}, {"_type": "tag", "name": "WIFIHAL", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/WIFIHAL_stub/include/WIFIHAL.h", "pattern": "/^class WIFIHAL : public RDKTestStubInterface, public AbstractServer<WIFIHAL>$/", "language": "C++", "kind": "class"}, {"_type": "tag", "name": "__WIFIHAL_STUB_H__", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/tools/tdkb/WIFIHAL_stub/include/WIFIHAL.h", "pattern": "/^#define __WIFIHAL_STUB_H__$/", "language": "C++", "kind": "macro"}], "hash": "3051f81354cf3b0fe40fcf6499c238fb", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "rdkb/tools/tdkb/WIFIHAL_stub/include/WIFIHAL.h", "revision_history": [{"26099": ""}]}