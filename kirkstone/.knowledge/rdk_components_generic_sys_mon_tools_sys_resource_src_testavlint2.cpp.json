{"is_source_file": true, "format": "C++", "description": "Test suite for AVL Tree implementation, including insertion, sorting, traversal, and min/max operations.", "external_files": ["avlTree.h"], "external_methods": ["AVLTree<int,int>::Insert", "AVLTree<int,int>::Sort", "AVLTree<int,int>::getSize", "AVLTree<int,int>::begin", "AVLTree<int,int>::end", "AVLTree<int,int>::rbegin", "AVLTree<int,int>::rend", "AVLTree<int,int>::Min", "AVLTree<int,int>::Max", "AVLTree<int,int>::isStrict"], "published": ["avlintTests", "testavlint2"], "classes": [{"name": "AVLTree<int,int>", "description": "Template class implementing an AVL Tree for integers, supporting insertion, sorting, traversal, and min/max operations."}, {"name": "AVLTreeInOrderIterator<int,int>", "description": "Iterator class for in-order traversal of AVL Tree nodes."}, {"name": "AVLNode<int,int>", "description": "Node class for AVL Tree elements."}], "methods": [{"name": "int printArray(int * intArray,int arrayLength)", "description": "Prints the contents of an integer array.", "scope": "", "scopeKind": ""}, {"name": "int insertInArray(AVLTree<int,int> & avlTree,int * intArray,int arrayLength)", "description": "Inserts array elements into AVL tree and reports insertion success.", "scope": "", "scopeKind": ""}, {"name": "int sortAndPrint(AVLTree<int,int> & avlTree,int arrayLength,bool asc)", "description": "Sorts and prints elements of AVL tree in ascending or descending order.", "scope": "", "scopeKind": ""}, {"name": "int traverseAndPrint(AVLTree<int,int> & avlTree,bool forward)", "description": "Traverses the AVL tree inorder and prints elements forward or backward.", "scope": "", "scopeKind": ""}, {"name": "int minmaxAndPrint(AVLTree<int,int> & avlTree)", "description": "Finds and prints the minimum and maximum data values in the AVL tree.", "scope": "", "scopeKind": ""}, {"name": "int avlintTests(int testCase,AVLTree<int,int> & avlTree,int * intArray,int arrayLength)", "description": "Performs a sequence of insertion, sort, traversal, and min/max tests on AVL tree.", "scope": "", "scopeKind": ""}, {"name": "int testavlint2()", "description": "Runs multiple test cases with predefined arrays to validate AVL Tree implementation.", "scope": "", "scopeKind": ""}, {"name": "int avlintTests(int testCase,AVLTree<int,int> & avlTree,int arrayLength)", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["printf", "avlTree.Insert", "avlTree.Sort", "avlTree.getSize", "avlTree.begin", "avlTree.end", "avlTree.rbegin", "avlTree.rend", "avlTree.Min", "avlTree.Max", "avlTree.isStrict"], "search-terms": ["AVLTree", "avlTreeTests", "testavlint2", "AVLNode", "AVLTreeInOrderIterator", "AVLTreeSort", "AVLTreeTraversal"], "state": 2, "file_id": 12536, "knowledge_revision": 25434, "git_revision": "", "ctags": [{"_type": "tag", "name": "avlintTests", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/sys_mon_tools/sys_resource/src/testavlint2.cpp", "pattern": "/^int avlintTests(int testCase, AVLTree<int,int> &avlTree, int *intArray, int arrayLength)$/", "language": "C++", "typeref": "typename:int", "kind": "function", "signature": "(int testCase,AVLTree<int,int> & avlTree,int * intArray,int arrayLength)"}, {"_type": "tag", "name": "avlintTests", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/sys_mon_tools/sys_resource/src/testavlint2.cpp", "pattern": "/^int avlintTests(int testCase, AVLTree<int,int> &avlTree, int arrayLength)$/", "language": "C++", "typeref": "typename:int", "kind": "function", "signature": "(int testCase,AVLTree<int,int> & avlTree,int arrayLength)"}, {"_type": "tag", "name": "insertInArray", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/sys_mon_tools/sys_resource/src/testavlint2.cpp", "pattern": "/^int insertInArray(AVLTree<int,int> &avlTree, int *intArray, int arrayLength)$/", "language": "C++", "typeref": "typename:int", "kind": "function", "signature": "(AVLTree<int,int> & avlTree,int * intArray,int arrayLength)"}, {"_type": "tag", "name": "minmaxAndPrint", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/sys_mon_tools/sys_resource/src/testavlint2.cpp", "pattern": "/^int minmaxAndPrint(AVLTree<int,int> &avlTree)$/", "language": "C++", "typeref": "typename:int", "kind": "function", "signature": "(AVLTree<int,int> & avlTree)"}, {"_type": "tag", "name": "printArray", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/sys_mon_tools/sys_resource/src/testavlint2.cpp", "pattern": "/^int printArray(int *intArray, int arrayLength)$/", "language": "C++", "typeref": "typename:int", "kind": "function", "signature": "(int * intArray,int arrayLength)"}, {"_type": "tag", "name": "sortAndPrint", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/sys_mon_tools/sys_resource/src/testavlint2.cpp", "pattern": "/^int\tsortAndPrint(AVLTree<int,int> &avlTree, int arrayLength, bool asc)$/", "language": "C++", "typeref": "typename:int", "kind": "function", "signature": "(AVLTree<int,int> & avlTree,int arrayLength,bool asc)"}, {"_type": "tag", "name": "testavlint2", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/sys_mon_tools/sys_resource/src/testavlint2.cpp", "pattern": "/^int testavlint2()$/", "language": "C++", "typeref": "typename:int", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "traverseAndPrint", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdk/components/generic/sys_mon_tools/sys_resource/src/testavlint2.cpp", "pattern": "/^int traverseAndPrint(AVLTree<int,int> &avlTree, bool forward)$/", "language": "C++", "typeref": "typename:int", "kind": "function", "signature": "(AVLTree<int,int> & avlTree,bool forward)"}], "hash": "2c1dbd652dabd2a5f7cff47591866cfa", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "rdk/components/generic/sys_mon_tools/sys_resource/src/testavlint2.cpp", "revision_history": [{"25434": ""}]}