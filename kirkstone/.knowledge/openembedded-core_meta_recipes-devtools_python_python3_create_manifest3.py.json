{"is_source_file": true, "format": "Python", "description": "This script is used as a BitBake task to create a minimal and accurate Python package manifest by analyzing dependencies of Python modules and files, updating package dependencies and file lists, handling special cases, and generating a structured JSON manifest.", "external_files": ["get_module_deps3.py", "python3-manifest.json"], "external_methods": ["subprocess.check_output", "os.path.isdir", "os.path.splitext", "os.path.basename", "os.path.dirname", "json.loads", "json.dump"], "published": ["new_manifest", "repeated", "wildcards", "hasfolders", "allfolders", "allfiles"], "classes": [], "methods": [{"name": "isCached(item)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "isFolder(value)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "prepend_comments(comments, json_manifest)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "print_indent(msg, offset)", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["subprocess.check_output", "os.path.isdir", "os.path.splitext", "os.path.basename", "os.path.dirname", "json.loads", "json.dump"], "search-terms": ["create_manifest3.py", "BitBake", "Python dependency analysis", "manifest generation", "package dependency resolution", "dependency parsing", "dependency graph"], "state": 2, "file_id": 2076, "knowledge_revision": 15226, "git_revision": "", "ctags": [{"_type": "tag", "name": "allfiles", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/recipes-devtools/python/python3/create_manifest3.py", "pattern": "/^allfiles = []$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "allfolders", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/recipes-devtools/python/python3/create_manifest3.py", "pattern": "/^allfolders = []$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "check_path", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/recipes-devtools/python/python3/create_manifest3.py", "pattern": "/^                    check_path = pymodule_dep$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "comments", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/recipes-devtools/python/python3/create_manifest3.py", "pattern": "/^    comments = manifest.read(json_start)$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "coredep", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/recipes-devtools/python/python3/create_manifest3.py", "pattern": "/^    coredep = coredep.replace(pyversion,'${PYTHON_MAJMIN}')$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "debugFlag", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/recipes-devtools/python/python3/create_manifest3.py", "pattern": "/^    debugFlag = '-d'$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "error_msg", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/recipes-devtools/python/python3/create_manifest3.py", "pattern": "/^    error_msg = '\\\\n\\\\nERROR:\\\\n'$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "folderFound", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/recipes-devtools/python/python3/create_manifest3.py", "pattern": "/^                                    folderFound = True$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "folderFound", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/recipes-devtools/python/python3/create_manifest3.py", "pattern": "/^                    folderFound = False # Second flag to break inner for$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "hasfolders", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/recipes-devtools/python/python3/create_manifest3.py", "pattern": "/^hasfolders = []$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "inFolders", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/recipes-devtools/python/python3/create_manifest3.py", "pattern": "/^                    inFolders = True # Did we find a folder?$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "inFolders", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/recipes-devtools/python/python3/create_manifest3.py", "pattern": "/^            inFolders = False$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "isCached", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/recipes-devtools/python/python3/create_manifest3.py", "pattern": "/^def isCached(item):$/", "language": "Python", "kind": "function", "signature": "(item)"}, {"_type": "tag", "name": "isFolder", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/recipes-devtools/python/python3/create_manifest3.py", "pattern": "/^def isFolder(value):$/", "language": "Python", "kind": "function", "signature": "(value)"}, {"_type": "tag", "name": "json_start", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/recipes-devtools/python/python3/create_manifest3.py", "pattern": "/^    json_start = manifest_str.find('# EOC') + 6 # EOC + \\\\n$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "manifest_str", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/recipes-devtools/python/python3/create_manifest3.py", "pattern": "/^    manifest_str =  manifest.read()$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "manifest_str", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/recipes-devtools/python/python3/create_manifest3.py", "pattern": "/^    manifest_str = manifest.read()$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "mod", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/recipes-devtools/python/python3/create_manifest3.py", "pattern": "/^            path,mod = os.path.split(filedep)$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "nativelibfolder", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/recipes-devtools/python/python3/create_manifest3.py", "pattern": "/^        nativelibfolder = p[:p.find(pivot)+len(pivot)]$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "new_manifest", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/recipes-devtools/python/python3/create_manifest3.py", "pattern": "/^new_manifest = collections.OrderedDict()$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "old_manifest", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/recipes-devtools/python/python3/create_manifest3.py", "pattern": "/^    old_manifest = json.loads(manifest_str, object_pairs_hook=collections.OrderedDict)$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "output", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/recipes-devtools/python/python3/create_manifest3.py", "pattern": "/^        output = subprocess.check_output([sys.executable, 'get_module_deps3.py', '%s' % pymodule/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "output", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/recipes-devtools/python/python3/create_manifest3.py", "pattern": "/^    output = subprocess.check_output([sys.executable, 'get_module_deps3.py', '%s' % pymodule, '%/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "output", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/recipes-devtools/python/python3/create_manifest3.py", "pattern": "/^output = subprocess.check_output([sys.executable, 'get_module_deps3.py', 'python-core-package', /", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "path", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/recipes-devtools/python/python3/create_manifest3.py", "pattern": "/^            path,mod = os.path.split(filedep)$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "path", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/recipes-devtools/python/python3/create_manifest3.py", "pattern": "/^        path = os.path.basename(path)$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "path", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/recipes-devtools/python/python3/create_manifest3.py", "pattern": "/^        path, pymodule = os.path.split(filedep)$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "pivot", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/recipes-devtools/python/python3/create_manifest3.py", "pattern": "/^pivot = 'recipe-sysroot-native'$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "prepend_comments", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/recipes-devtools/python/python3/create_manifest3.py", "pattern": "/^def prepend_comments(comments, json_manifest):$/", "language": "Python", "kind": "function", "signature": "(comments, json_manifest)"}, {"_type": "tag", "name": "print_indent", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/recipes-devtools/python/python3/create_manifest3.py", "pattern": "/^def print_indent(msg, offset):$/", "language": "Python", "kind": "function", "signature": "(msg, offset)"}, {"_type": "tag", "name": "pymodule", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/recipes-devtools/python/python3/create_manifest3.py", "pattern": "/^                pymodule = path + '.' + pymodule$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "pymodule", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/recipes-devtools/python/python3/create_manifest3.py", "pattern": "/^        path, pymodule = os.path.split(filedep)$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "pymodule", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/recipes-devtools/python/python3/create_manifest3.py", "pattern": "/^        pymodule = os.path.splitext(os.path.basename(pymodule))[0]$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "pymodule", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/recipes-devtools/python/python3/create_manifest3.py", "pattern": "/^    pymodule = os.path.splitext(os.path.basename(os.path.normpath(filedep)))[0]$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "pymodule_dep", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/recipes-devtools/python/python3/create_manifest3.py", "pattern": "/^            pymodule_dep = pymodule_dep.replace(pyversion,'${PYTHON_MAJMIN}')$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "pymodule_dep", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/recipes-devtools/python/python3/create_manifest3.py", "pattern": "/^        pymodule_dep = pymodule_dep.replace(pyversion,'${PYTHON_MAJMIN}')$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "pyversion", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/recipes-devtools/python/python3/create_manifest3.py", "pattern": "/^pyversion = str(sys.argv[1])$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "repeated", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/recipes-devtools/python/python3/create_manifest3.py", "pattern": "/^repeated = []$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "reportFILES", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/recipes-devtools/python/python3/create_manifest3.py", "pattern": "/^        reportFILES = []$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "reportRDEPS", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/recipes-devtools/python/python3/create_manifest3.py", "pattern": "/^        reportRDEPS = []$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "special_packages", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/recipes-devtools/python/python3/create_manifest3.py", "pattern": "/^    special_packages = ['misc', 'modules', 'dev', 'tests']$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "wildcards", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/recipes-devtools/python/python3/create_manifest3.py", "pattern": "/^wildcards = []$/", "language": "Python", "kind": "variable"}], "hash": "c1b5164ec6dcac349334997c69db4ab2", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "openembedded-core/meta/recipes-devtools/python/python3/create_manifest3.py", "fields": [{"name": "allfiles = []", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "allfolders = []", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "check_path = pymodule_dep", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "comments = manifest.read(json_start)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "coredep = coredep.replace(pyversion,'${PYTHON_MAJMIN}')", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "debugFlag = '-d'", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "error_msg = '\\\\n\\\\nERROR:\\\\n'", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "folderFound = True", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "folderFound = False # Second flag to break inner for", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "hasfolders = []", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "inFolders = True # Did we find a folder?", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "inFolders = False", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "json_start = manifest_str.find('# EOC') + 6 # EOC + \\\\n", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "manifest_str =  manifest.read()", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "manifest_str = manifest.read()", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "path,mod = os.path.split(filedep)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "nativelibfolder = p[:p.find(pivot)+len(pivot)]", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "new_manifest = collections.OrderedDict()", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "old_manifest = json.loads(manifest_str, object_pairs_hook=collections.OrderedDict)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "output = subprocess.check_output([sys.executable, 'get_module_deps3.py', '%s' % pymodule/", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "output = subprocess.check_output([sys.executable, 'get_module_deps3.py', '%s' % pymodule, '%/", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "output = subprocess.check_output([sys.executable, 'get_module_deps3.py', 'python-core-package', /", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "path = os.path.basename(path)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "path, pymodule = os.path.split(filedep)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "pivot = 'recipe-sysroot-native'", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "pymodule = path + '.' + pymodule", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "pymodule = os.path.splitext(os.path.basename(pymodule))[0]", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "pymodule = os.path.splitext(os.path.basename(os.path.normpath(filedep)))[0]", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "pymodule_dep = pymodule_dep.replace(pyversion,'${PYTHON_MAJMIN}')", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "pyversion = str(sys.argv[1])", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "repeated = []", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "reportFILES = []", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "reportRDEPS = []", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "special_packages = ['misc', 'modules', 'dev', 'tests']", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "wildcards = []", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"15226": ""}]}