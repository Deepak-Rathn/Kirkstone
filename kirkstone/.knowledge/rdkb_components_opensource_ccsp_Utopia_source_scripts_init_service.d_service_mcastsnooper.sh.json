{"is_source_file": true, "format": "Shell Script", "description": "This script manages the lifecycle of the IGMP snooper service, including starting, stopping, and initializing it. It sources external utility scripts, handles service states via sysevent, and manages a process identified by a PID file.", "external_files": ["/etc/utopia/service.d/ulog_functions.sh", "/etc/utopia/service.d/event_handler_functions.sh"], "external_methods": ["utctx_cmd", "sysevent get", "sysevent set", "wait_till_end_state", "ulog"], "published": [], "classes": [], "methods": [{"name": "do_stop_igmp_snooper", "description": "Stops the IGMP snooper process by killing the process if running and removing the PID file."}, {"name": "do_start_igmp_snooper", "description": "Starts the IGMP snooper process with optional parameters based on system configuration and records its PID."}, {"name": "service_init", "description": "Initializes service variables, fetching configuration parameters."}, {"name": "service_start", "description": "Starts the IGMP snooper service, managing service state and logging."}, {"name": "service_stop", "description": "Stops the IGMP snooper service, managing service state and logging."}], "calls": ["utctx_cmd get mcastsnooper_enabled lan_sw_unit lan_ifname lan_sw_np_port", "sysevent get", "sysevent set", "wait_till_end_state", "ulog"], "search-terms": ["IGMP snooper", "service control", "systemd script", "Utopia", "service management", "network service script"], "state": 2, "file_id": 7544, "knowledge_revision": 20613, "git_revision": "", "hash": "450c5eaba363186460a46410cba91dc8", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "rdkb/components/opensource/ccsp/Utopia/source/scripts/init/service.d/service_mcastsnooper.sh", "revision_history": [{"20613": ""}]}