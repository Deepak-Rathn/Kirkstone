{"is_source_file": true, "format": "Python", "description": "This source file provides utility functions for reading, modifying, and managing recipes in the OpenEmbedded build system, including aspects like recipe metadata, patch handling, version checking, and layer directory management.", "external_files": ["bb.tinfoil", "bb.utils", "bb.patch", "bb.fetch2", "bb.cookerdata", "bb.data", "bb.providers"], "external_methods": ["bb.tinfoil.Tinfoil", "bb.utils.mkdirhier", "bb.utils.edit_metadata", "bb.patch.src_patches", "bb.patch.PatchSet.getPatchedFiles", "bb.fetch2.Fetch", "bb.fetch2.decodeurl", "bb.fetch2.get_srcrev", "bb.cookerdata.parse_config_file", "bb.data.createCopy", "bb.data.setVar", "bb.data.getVar", "bb.providers.NoProvider", "bb.note", "shutil.copy2", "shutil.copytree", "glob.glob", "fnmatch.fnmatchcase", "re.compile", "re.match", "re.search", "datetime.strptime", "datetime.now"], "published": ["simplify_history", "get_var_files", "split_var_value", "patch_recipe_lines", "patch_recipe_file", "localise_file_vars", "patch_recipe", "copy_recipe_files", "get_recipe_local_files", "get_recipe_patches", "get_recipe_patched_files", "validate_pn", "get_bbfile_path", "get_bbappend_path", "bbappend_recipe", "find_layerdir", "replace_dir_vars", "get_recipe_pv_without_srcpv", "get_recipe_upstream_version", "_get_recipe_upgrade_status", "get_recipe_upgrade_status"], "classes": [{"name": "FetchData", "description": "Data structure for handling fetch operations; used internally in version extraction and upstream version determination."}], "methods": [{"name": "simplify_history(history, d)", "description": "Eliminates irrelevant events from a variable change history, keeping only the most recent relevant changes.", "scope": "", "scopeKind": ""}, {"name": "get_var_files(fn, varlist, d)", "description": "Identifies the files where specific variables are set within the recipe's variable history.", "scope": "", "scopeKind": ""}, {"name": "split_var_value(value, assignment=True)", "description": "Splits a space-separated variable value into a list, handling expressions with spaces and assignment syntax.", "scope": "", "scopeKind": ""}, {"name": "patch_recipe_lines(fromlines, values, trailing_newline=True)", "description": "Updates or inserts variable assignments into recipe lines, with support for wrapping and comment handling.", "scope": "", "scopeKind": ""}, {"name": "patch_recipe_file(fn, values, patch=False, relpath='', redirect_output=None)", "description": "Reads a recipe file, modifies its variable lines, and writes back or diffs as needed.", "scope": "", "scopeKind": ""}, {"name": "localise_file_vars(fn, varfiles, varlist)", "description": "Determines which file should be modified for each variable, favoring inc files over recipes.", "scope": "", "scopeKind": ""}, {"name": "patch_recipe(d, fn, varvalues, patch=False, relpath='', redirect_output=None)", "description": "Modifies recipe variables, handling inc files, overlays, and version-specific changes.", "scope": "", "scopeKind": ""}, {"name": "copy_recipe_files(d, tgt_dir, whole_dir=False, download=True, all_variants=False)", "description": "Copies local or included recipe files, as specified by SRC_URI, to a target directory.", "scope": "", "scopeKind": ""}, {"name": "get_recipe_local_files(d, patches=False, archives=False)", "description": "Lists local files included in SRC_URI of a recipe.", "scope": "", "scopeKind": ""}, {"name": "get_recipe_patches(d)", "description": "Gets patches included in SRC_URI of a recipe.", "scope": "", "scopeKind": ""}, {"name": "get_recipe_patched_files(d)", "description": "Returns a mapping of patches to the files they modify within a recipe.", "scope": "", "scopeKind": ""}, {"name": "validate_pn(pn)", "description": "Validates a recipe name against naming conventions and reserved names.", "scope": "", "scopeKind": ""}, {"name": "get_bbfile_path(d, destdir, extrapathhint=None)", "description": "Determines the filesystem path for a recipe within a layer based on various criteria.", "scope": "", "scopeKind": ""}, {"name": "get_bbappend_path(d, destlayerdir, wildcardver=False)", "description": "Constructs the filename and location for a bbappend file for a recipe within a layer.", "scope": "", "scopeKind": ""}, {"name": "bbappend_recipe(rd, destlayerdir, srcfiles, install=None, wildcardver=False, machine=None, extralines=None, removevalues=None, redirect_output=None, params=None)", "description": "Creates or updates a bbappend file for a recipe, adding sources, patches, and other modifications.", "scope": "", "scopeKind": ""}, {"name": "find_layerdir(fn)", "description": "Locates the root directory of the layer containing a given file.", "scope": "", "scopeKind": ""}, {"name": "replace_dir_vars(path, d)", "description": "Replaces absolute directory paths in a given path with variable references like ${sysconfdir}.", "scope": "", "scopeKind": ""}, {"name": "get_recipe_pv_without_srcpv(pv, uri_type)", "description": "Extracts version prefix and suffix from a PV string, especially for git URIs.", "scope": "", "scopeKind": ""}, {"name": "get_recipe_upstream_version(rd)", "description": "Determines the upstream version information of a recipe, including handling of SCM and date-based info.", "scope": "", "scopeKind": ""}, {"name": "_get_recipe_upgrade_status(data)", "description": "Evaluates the upgrade status of a recipe based on upstream version info.", "scope": "", "scopeKind": ""}, {"name": "get_recipe_upgrade_status(recipes=None)", "description": "Checks the upgrade status for multiple recipes, possibly in parallel.", "scope": "", "scopeKind": ""}, {"name": "appendfile_varfunc(varname, origvalue, op, newlines)", "scope": "bbappend_recipe", "scopeKind": "function", "description": "unavailable"}, {"name": "appendline(varname, op, value)", "scope": "bbappend_recipe", "scopeKind": "function", "description": "unavailable"}, {"name": "fetch_urls(rdata)", "scope": "copy_recipe_files", "scopeKind": "function", "description": "unavailable"}, {"name": "get_recipe_pos(variable)", "scope": "patch_recipe_lines", "scopeKind": "function", "description": "unavailable"}, {"name": "outputvalue(name, lines, rewindcomments=False)", "scope": "patch_recipe_lines", "scopeKind": "function", "description": "unavailable"}, {"name": "override_applicable(hevent)", "scope": "patch_recipe", "scopeKind": "function", "description": "unavailable"}, {"name": "patch_recipe_varfunc(varname, origvalue, op, newlines)", "scope": "patch_recipe_lines", "scopeKind": "function", "description": "unavailable"}, {"name": "popline(varname)", "scope": "bbappend_recipe", "scopeKind": "function", "description": "unavailable"}], "calls": ["bb.tinfoil.Tinfoil", "bb.utils.mkdirhier", "bb.utils.edit_metadata", "bb.patch.src_patches", "bb.patch.PatchSet.getPatchedFiles", "bb.fetch2.Fetch", "bb.fetch2.decodeurl", "bb.fetch2.get_srcrev", "bb.cookerdata.parse_config_file", "bb.data.createCopy", "bb.data.setVar", "bb.data.getVar", "bb.providers.NoProvider", "bb.note", "shutil.copy2", "shutil.copytree", "glob.glob", "fnmatch.fnmatchcase", "re.compile", "re.match", "re.search", "datetime.strptime", "datetime.now", "bb.patch.src_patches", "bb.patch.PatchSet.getPatchedFiles", "bb.fetch2.Fetch", "bb.fetch2.decodeurl", "bb.fetch2.get_srcrev", "bb.cookerdata.parse_config_file", "bb.data.createCopy", "bb.data.setVar", "bb.data.getVar", "bb.providers.NoProvider", "bb.note", "shutil.copy2", "shutil.copyfile", "bb.utils.mkdirhier"], "search-terms": ["recipeutils", "patch_recipe", "get_var_files", "get_recipe_upstream_version", "bbappend", "layer", "SRC_URI", "fetch", "patch", "version", "layer.conf", "layer", "recipe", "bbappend"], "state": 2, "file_id": 1794, "knowledge_revision": 14955, "git_revision": "", "ctags": [{"_type": "tag", "name": "_get_recipe_upgrade_status", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/recipeutils.py", "pattern": "/^def _get_recipe_upgrade_status(data):$/", "language": "Python", "kind": "function", "signature": "(data)"}, {"_type": "tag", "name": "appendfile_varfunc", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/recipeutils.py", "pattern": "/^        def appendfile_varfunc(varname, origvalue, op, newlines):$/", "file": true, "language": "Python", "kind": "function", "signature": "(varname, origvalue, op, newlines)", "scope": "bbappend_recipe", "scopeKind": "function"}, {"_type": "tag", "name": "appendline", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/recipeutils.py", "pattern": "/^    def appendline(varname, op, value):$/", "file": true, "language": "Python", "kind": "function", "signature": "(varname, op, value)", "scope": "bbappend_recipe", "scopeKind": "function"}, {"_type": "tag", "name": "bbappend_recipe", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/recipeutils.py", "pattern": "/^def bbappend_recipe(rd, destlayerdir, srcfiles, install=None, wildcardver=False, machine=None, e/", "language": "Python", "kind": "function", "signature": "(rd, destlayerdir, srcfiles, install=None, wildcardver=False, machine=None, extralines=None, removevalues=None, redirect_output=None, params=None)"}, {"_type": "tag", "name": "copy_recipe_files", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/recipeutils.py", "pattern": "/^def copy_recipe_files(d, tgt_dir, whole_dir=False, download=True, all_variants=False):$/", "language": "Python", "kind": "function", "signature": "(d, tgt_dir, whole_dir=False, download=True, all_variants=False)"}, {"_type": "tag", "name": "fetch_urls", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/recipeutils.py", "pattern": "/^    def fetch_urls(rdata):$/", "file": true, "language": "Python", "kind": "function", "signature": "(rdata)", "scope": "copy_recipe_files", "scopeKind": "function"}, {"_type": "tag", "name": "find_layerdir", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/recipeutils.py", "pattern": "/^def find_layerdir(fn):$/", "language": "Python", "kind": "function", "signature": "(fn)"}, {"_type": "tag", "name": "get_bbappend_path", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/recipeutils.py", "pattern": "/^def get_bbappend_path(d, destlayerdir, wildcardver=False):$/", "language": "Python", "kind": "function", "signature": "(d, destlayerdir, wildcardver=False)"}, {"_type": "tag", "name": "get_bbfile_path", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/recipeutils.py", "pattern": "/^def get_bbfile_path(d, destdir, extrapathhint=None):$/", "language": "Python", "kind": "function", "signature": "(d, destdir, extrapathhint=None)"}, {"_type": "tag", "name": "get_recipe_local_files", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/recipeutils.py", "pattern": "/^def get_recipe_local_files(d, patches=False, archives=False):$/", "language": "Python", "kind": "function", "signature": "(d, patches=False, archives=False)"}, {"_type": "tag", "name": "get_recipe_patched_files", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/recipeutils.py", "pattern": "/^def get_recipe_patched_files(d):$/", "language": "Python", "kind": "function", "signature": "(d)"}, {"_type": "tag", "name": "get_recipe_patches", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/recipeutils.py", "pattern": "/^def get_recipe_patches(d):$/", "language": "Python", "kind": "function", "signature": "(d)"}, {"_type": "tag", "name": "get_recipe_pos", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/recipeutils.py", "pattern": "/^    def get_recipe_pos(variable):$/", "file": true, "language": "Python", "kind": "function", "signature": "(variable)", "scope": "patch_recipe_lines", "scopeKind": "function"}, {"_type": "tag", "name": "get_recipe_pv_without_srcpv", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/recipeutils.py", "pattern": "/^def get_recipe_pv_without_srcpv(pv, uri_type):$/", "language": "Python", "kind": "function", "signature": "(pv, uri_type)"}, {"_type": "tag", "name": "get_recipe_upgrade_status", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/recipeutils.py", "pattern": "/^def get_recipe_upgrade_status(recipes=None):$/", "language": "Python", "kind": "function", "signature": "(recipes=None)"}, {"_type": "tag", "name": "get_recipe_upstream_version", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/recipeutils.py", "pattern": "/^def get_recipe_upstream_version(rd):$/", "language": "Python", "kind": "function", "signature": "(rd)"}, {"_type": "tag", "name": "get_var_files", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/recipeutils.py", "pattern": "/^def get_var_files(fn, varlist, d):$/", "language": "Python", "kind": "function", "signature": "(fn, varlist, d)"}, {"_type": "tag", "name": "list_vars", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/recipeutils.py", "pattern": "/^list_vars = ['SRC_URI', 'LIC_FILES_CHKSUM']$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "localise_file_vars", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/recipeutils.py", "pattern": "/^def localise_file_vars(fn, varfiles, varlist):$/", "language": "Python", "kind": "function", "signature": "(fn, varfiles, varlist)"}, {"_type": "tag", "name": "meta_vars", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/recipeutils.py", "pattern": "/^meta_vars = ['SUMMARY', 'DESCRIPTION', 'HOMEPAGE', 'BUGTRACKER', 'SECTION']$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "nowrap_vars", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/recipeutils.py", "pattern": "/^nowrap_vars = ['SUMMARY', 'HOMEPAGE', 'BUGTRACKER', r'SRC_URI\\\\[(.+\\\\.)?md5sum\\\\]', r'SRC_URI\\\\[/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "outputvalue", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/recipeutils.py", "pattern": "/^    def outputvalue(name, lines, rewindcomments=False):$/", "file": true, "language": "Python", "kind": "function", "signature": "(name, lines, rewindcomments=False)", "scope": "patch_recipe_lines", "scopeKind": "function"}, {"_type": "tag", "name": "override_applicable", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/recipeutils.py", "pattern": "/^    def override_applicable(hevent):$/", "file": true, "language": "Python", "kind": "function", "signature": "(hevent)", "scope": "patch_recipe", "scopeKind": "function"}, {"_type": "tag", "name": "patch_recipe", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/recipeutils.py", "pattern": "/^def patch_recipe(d, fn, varvalues, patch=False, relpath='', redirect_output=None):$/", "language": "Python", "kind": "function", "signature": "(d, fn, varvalues, patch=False, relpath='', redirect_output=None)"}, {"_type": "tag", "name": "patch_recipe_file", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/recipeutils.py", "pattern": "/^def patch_recipe_file(fn, values, patch=False, relpath='', redirect_output=None):$/", "language": "Python", "kind": "function", "signature": "(fn, values, patch=False, relpath='', redirect_output=None)"}, {"_type": "tag", "name": "patch_recipe_lines", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/recipeutils.py", "pattern": "/^def patch_recipe_lines(fromlines, values, trailing_newline=True):$/", "language": "Python", "kind": "function", "signature": "(fromlines, values, trailing_newline=True)"}, {"_type": "tag", "name": "patch_recipe_varfunc", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/recipeutils.py", "pattern": "/^    def patch_recipe_varfunc(varname, origvalue, op, newlines):$/", "file": true, "language": "Python", "kind": "function", "signature": "(varname, origvalue, op, newlines)", "scope": "patch_recipe_lines", "scopeKind": "function"}, {"_type": "tag", "name": "popline", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/recipeutils.py", "pattern": "/^    def popline(varname):$/", "file": true, "language": "Python", "kind": "function", "signature": "(varname)", "scope": "bbappend_recipe", "scopeKind": "function"}, {"_type": "tag", "name": "recipe_progression", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/recipeutils.py", "pattern": "/^recipe_progression = ['SUMMARY', 'DESCRIPTION', 'AUTHOR', 'HOMEPAGE', 'BUGTRACKER', 'SECTION', '/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "replace_dir_vars", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/recipeutils.py", "pattern": "/^def replace_dir_vars(path, d):$/", "language": "Python", "kind": "function", "signature": "(path, d)"}, {"_type": "tag", "name": "simplify_history", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/recipeutils.py", "pattern": "/^def simplify_history(history, d):$/", "language": "Python", "kind": "function", "signature": "(history, d)"}, {"_type": "tag", "name": "split_var_value", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/recipeutils.py", "pattern": "/^def split_var_value(value, assignment=True):$/", "language": "Python", "kind": "function", "signature": "(value, assignment=True)"}, {"_type": "tag", "name": "validate_pn", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/openembedded-core/meta/lib/oe/recipeutils.py", "pattern": "/^def validate_pn(pn):$/", "language": "Python", "kind": "function", "signature": "(pn)"}], "hash": "17ce258209cedbeee43402c9a31ba3f7", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "openembedded-core/meta/lib/oe/recipeutils.py", "fields": [{"name": "list_vars = ['SRC_URI', 'LIC_FILES_CHKSUM']", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "meta_vars = ['SUMMARY', 'DESCRIPTION', 'HOMEPAGE', 'BUGTRACKER', 'SECTION']", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "nowrap_vars = ['SUMMARY', 'HOMEPAGE', 'BUGTRACKER', r'SRC_URI\\\\[(.+\\\\.)?md5sum\\\\]', r'SRC_URI\\\\[/", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "recipe_progression = ['SUMMARY', 'DESCRIPTION', 'AUTHOR', 'HOMEPAGE', 'BUGTRACKER', 'SECTION', '/", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"14955": ""}]}