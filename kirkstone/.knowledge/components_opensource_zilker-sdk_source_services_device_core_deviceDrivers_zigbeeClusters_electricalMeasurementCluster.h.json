{"is_source_file": true, "format": "C/C++ header", "description": "This file defines a header interface for the Electrical Measurement Cluster in a Zigbee SDK, including structure definitions, function declarations for creating and retrieving electrical measurement data, and callback mechanisms.", "external_files": ["zigbeeCluster.h", "icBuildtime.h"], "external_methods": ["ZigbeeCluster *electricalMeasurementClusterCreate(const ElectricalMeasurementClusterCallbacks *callbacks, void *callbackContext)", "bool electricalMeasurementClusterGetActivePower(uint64_t eui64, uint8_t endpointId, int16_t *watts)", "bool electricalMeasurementClusterGetAcPowerDivisor(uint64_t eui64, uint8_t endpointId, uint16_t *divisor)", "bool electricalMeasurementClusterGetAcPowerMultiplier(uint64_t eui64, uint8_t endpointId, uint16_t *multiplier)"], "published": ["electricalMeasurementClusterCreate", "electricalMeasurementClusterGetActivePower", "electricalMeasurementClusterGetAcPowerDivisor", "electricalMeasurementClusterGetAcPowerMultiplier"], "classes": [], "methods": [{"name": "electricalMeasurementClusterCreate", "description": "Creates a new instance of the Electrical Measurement Cluster with specified callbacks and context."}, {"name": "electricalMeasurementClusterGetActivePower", "description": "Retrieves the active power measurement for a specific device endpoint."}, {"name": "electricalMeasurementClusterGetAcPowerDivisor", "description": "Retrieves the divisor value used for active power calculation."}, {"name": "electricalMeasurementClusterGetAcPowerMultiplier", "description": "Retrieves the multiplier value used for active power calculation."}], "calls": ["electricalMeasurementClusterCreate", "electricalMeasurementClusterGetActivePower", "electricalMeasurementClusterGetAcPowerDivisor", "electricalMeasurementClusterGetAcPowerMultiplier"], "search-terms": ["ElectricalMeasurementCluster", "zigbeeClusters", "core", "deviceDrivers", "ZigbeeCluster", "electricalMeasurement"], "state": 2, "file_id": 1050, "knowledge_revision": 14201, "git_revision": "", "ctags": [{"_type": "tag", "name": "ElectricalMeasurementClusterCallbacks", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/device/core/deviceDrivers/zigbeeClusters/electricalMeasurementCluster.h", "pattern": "/^} ElectricalMeasurementClusterCallbacks;$/", "language": "C++", "typeref": "struct:__anonb8d2bac80108", "kind": "typedef"}, {"_type": "tag", "name": "ZILKER_ELECTRICALMEASUREMENTCLUSTER_H", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/device/core/deviceDrivers/zigbeeClusters/electricalMeasurementCluster.h", "pattern": "/^#define ZILKER_ELECTRICALMEASUREMENTCLUSTER_H$/", "language": "C++", "kind": "macro"}, {"_type": "tag", "name": "__anonb8d2bac80108", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/device/core/deviceDrivers/zigbeeClusters/electricalMeasurementCluster.h", "pattern": "/^{$/", "language": "C++", "kind": "struct"}, {"_type": "tag", "name": "activePowerChanged", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/services/device/core/deviceDrivers/zigbeeClusters/electricalMeasurementCluster.h", "pattern": "/^    void (*activePowerChanged)(uint64_t eui64,$/", "language": "C++", "typeref": "typename:void (*)(uint64_t eui64,uint8_t endpointId,int16_t watts,const void * ctx)", "kind": "member", "scope": "__anonb8d2bac80108", "scopeKind": "struct"}], "hash": "e53b85c3b6459d813a12389a1f1b8fb7", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "components/opensource/zilker-sdk/source/services/device/core/deviceDrivers/zigbeeClusters/electricalMeasurementCluster.h", "fields": [{"name": "void (*)(uint64_t eui64,uint8_t endpointId,int16_t watts,const void * ctx) activePowerChanged", "scope": "__anonb8d2bac80108", "scopeKind": "struct", "description": "unavailable"}], "revision_history": [{"14201": ""}]}