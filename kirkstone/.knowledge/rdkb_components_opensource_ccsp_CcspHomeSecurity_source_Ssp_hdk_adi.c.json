{"is_source_file": true, "format": "C", "description": "This is a C source file implementing a variety of interface functions for device management in a networked device, including methods to get/set device configurations, manage port mappings, retrieve device info, and handle wireless and WAN settings. It includes function implementations for specific RPC-like methods related to device configuration management, often guarded by preprocessor conditionals indicating optional features or protocols.", "external_files": ["hdk_data.h", "hdk.h", "hdk_adi.h", "hdk_methods.h", "chs_log.h"], "external_methods": ["HDK_Device_GetValue", "HDK_Device_SetValue", "HDK_Get_BoolEx", "HDK_Get_IPAddress", "HDK_Get_MACAddress", "HDK_Get_Struct", "HDK_Get_StructMember", "HDK_Set_String", "HDK_Set_IPAddress", "HDK_Set_Bool", "HDK_Set_Int", "HDK_Set_Result", "HDK_Set_Stream", "HDK_Struct_Init", "HDK_Struct_Free", "HDK_Get_PN_WANTypeEx", "HDK_Get_PN_WiFiClientNetworkTypeEx", "HDK_Get_PN_WiFiClientSecurityEx", "HDK_Get_PN_WiFiEncryptionEx", "HDK_Get_PN_IPProtocol", "HDK_Get_Bool", "HDK_Get_PN_WiFiSecurity", "HDK_Get_PN_WiFiMode", "HDK_Get_Int", "HDK_Get_String", "HDK_Util_ValidateSubnetMask", "HDK_Util_ValidateIPSubnet", "HDK_Util_ValidateValue", "HDK_Device_ValidateValue", "HDK_Device_CheckValue", "HDK_Get_PN_WWANType", "HDK_Get_PN_WLANRadioFrequencies", "HDK_Get_PN_WLANRadioSecurity", "HDK_Get_PN_WLANRadioSettings", "HDK_Get_WLANRadioSettings", "HDK_Get_WLANRadioSecurity", "HDK_Get_WLANRadioFrequencies", "HDK_Get_PN_WiFiModeMember", "HDK_Get_PN_WiFiSecurityMember", "HDK_Get_PN_WiFiEncryptionMember", "HDK_Get_PN_WiFiEncryption", "HDK_Device_ValidateSubnetMask"], "published": ["HDK_Method_PN_AddPortMapping", "HDK_Method_PN_DeletePortMapping", "HDK_Method_PN_DownloadSpeedTest", "HDK_Method_PN_GetClientStats", "HDK_Method_PN_GetConnectedDevices", "HDK_Method_PN_GetDeviceSettings", "HDK_Method_PN_GetDeviceSettings2", "HDK_Method_PN_GetFirmwareSettings", "HDK_Method_PN_GetMACFilters2", "HDK_Method_PN_GetNetworkStats", "HDK_Method_PN_GetPortMappings", "HDK_Method_PN_GetRouterLanSettings2", "HDK_Method_PN_GetRouterSettings", "HDK_Method_PN_GetWirelessClientCapabilities", "HDK_Method_PN_GetWirelessClientConnectionInfo", "HDK_Method_PN_GetWirelessClientSettings", "HDK_Method_PN_GetWLANRadioFrequencies", "HDK_Method_PN_GetWLANRadioSecurity", "HDK_Method_PN_GetWLANRadioSettings", "HDK_Method_PN_GetWLanRadios", "HDK_Method_PN_GetWanInfo", "HDK_Method_PN_GetWanSettings", "HDK_Method_PN_RenewWanConnection", "HDK_Method_PN_SetAccessPointMode", "HDK_Method_PN_SetDeviceSettings", "HDK_Method_PN_SetDeviceSettings2", "HDK_Method_PN_SetMACFilters2", "HDK_Method_PN_SetRouterLanSettings2", "HDK_Method_PN_SetRouterSettings", "HDK_Method_PN_SetWirelessClientSettings", "HDK_Method_PN_SetWLANRadioFrequency", "HDK_Method_PN_SetWLanRadioFrequency", "HDK_Method_PN_SetWLanRadioSecurity", "HDK_Method_PN_SetWLanRadioSettings", "HDK_Method_PN_SetWanSettings", "HDK_Method_PN_SetBridgeConnect"], "classes": [], "methods": [{"name": "int HDK_Device_CheckValue(void * pDeviceCtx,HDK_DeviceValue eValue)", "description": "Checks whether a particular device setting is allowed based on current context and value.", "scope": "", "scopeKind": ""}, {"name": "int HDK_Util_AreIPsDuplicate(HDK_IPAddress * pIpAddr1,HDK_IPAddress * pIpAddr2)", "description": "Returns 1 if two IP addresses are identical.", "scope": "", "scopeKind": ""}, {"name": "int HDK_Util_AreMACsDuplicate(HDK_MACAddress * pMacAddr1,HDK_MACAddress * pMacAddr2)", "description": "Returns 1 if two MAC addresses are identical.", "scope": "", "scopeKind": ""}, {"name": "int HDK_Util_ValidateIPRange(HDK_IPAddress * pDevIp,HDK_IPAddress * pDevSubnet,HDK_IPAddress * pIpFirst,HDK_IPAddress * pIpLast)", "description": "Validates whether a range of IP addresses falls within a subnet.", "scope": "", "scopeKind": ""}, {"name": "int HDK_Util_ValidateIPSubnet(HDK_IPAddress * pDevIp,HDK_IPAddress * pDevSubnet,HDK_IPAddress * pIpAddress)", "description": "Validates whether a specific IP is within a subnet.", "scope": "", "scopeKind": ""}, {"name": "int HDK_Util_ValidateSubnetMask(HDK_IPAddress * pSubnetMask)", "description": "Checks if a subnet mask is valid (continuous ones followed by zeros).", "scope": "", "scopeKind": ""}, {"name": "int HDK_Util_ValidateEncryptionKey(char * pszKey,HDK_Enum_PN_WiFiEncryption eWiFiEncryption)", "description": "Validates the format of a wireless encryption key based on encryption type.", "scope": "", "scopeKind": ""}, {"name": "void HDK_Method_PN_AddPortMapping(void * pDeviceCtx,HDK_Struct * pInput,HDK_Struct * pOutput)", "description": "Adds a port mapping configuration to the device.", "scope": "", "scopeKind": ""}, {"name": "void HDK_Method_PN_DeletePortMapping(void * pDeviceCtx,HDK_Struct * pInput,HDK_Struct * pOutput)", "description": "Deletes a port mapping configuration.", "scope": "", "scopeKind": ""}, {"name": "void HDK_Method_PN_DownloadSpeedTest(void * pDeviceCtx,HDK_Struct * pInput,HDK_Struct * pOutput)", "description": "Performs a download speed test by streaming bytes.", "scope": "", "scopeKind": ""}, {"name": "void HDK_Method_PN_GetClientStats(void * pDeviceCtx,HDK_Struct * pInput,HDK_Struct * pOutput)", "description": "Retrieves client statistics from device.", "scope": "", "scopeKind": ""}, {"name": "void HDK_Method_PN_GetConnectedDevices(void * pDeviceCtx,HDK_Struct * pInput,HDK_Struct * pOutput)", "description": "Retrieves list of connected devices.", "scope": "", "scopeKind": ""}, {"name": "void HDK_Method_PN_GetDeviceSettings(void * pDeviceCtx,HDK_Struct * pInput,HDK_Struct * pOutput)", "description": "Retrieves device information and settings.", "scope": "", "scopeKind": ""}, {"name": "void HDK_Method_PN_GetDeviceSettings2(void * pDeviceCtx,HDK_Struct * pInput,HDK_Struct * pOutput)", "description": "Retrieves additional device info such as serial number, timezone, locale, SSL, supported locales.", "scope": "", "scopeKind": ""}, {"name": "void HDK_Method_PN_GetFirmwareSettings(void * pDeviceCtx,HDK_Struct * pInput,HDK_Struct * pOutput)", "description": "Retrieves firmware version, vendor, model, date, and update methods.", "scope": "", "scopeKind": ""}, {"name": "void HDK_Method_PN_GetMACFilters2(void * pDeviceCtx,HDK_Struct * pInput,HDK_Struct * pOutput)", "description": "Retrieves MAC filtering status, allow list, and MAC list.", "scope": "", "scopeKind": ""}, {"name": "void HDK_Method_PN_GetNetworkStats(void * pDeviceCtx,HDK_Struct * pInput,HDK_Struct * pOutput)", "description": "Retrieves network statistics.", "scope": "", "scopeKind": ""}, {"name": "void HDK_Method_PN_GetPortMappings(void * pDeviceCtx,HDK_Struct * pInput,HDK_Struct * pOutput)", "description": "Retrieves current port mapping configurations.", "scope": "", "scopeKind": ""}, {"name": "void HDK_Method_PN_GetRouterLanSettings2(void * pDeviceCtx,HDK_Struct * pInput,HDK_Struct * pOutput)", "description": "Retrieves LAN IP, subnet, DHCP settings, and reservations.", "scope": "", "scopeKind": ""}, {"name": "void HDK_Method_PN_GetRouterSettings(void * pDeviceCtx,HDK_Struct * pInput,HDK_Struct * pOutput)", "description": "Retrieves basic router management and wireless management settings.", "scope": "", "scopeKind": ""}, {"name": "void HDK_Method_PN_GetWirelessClientCapabilities(void * pDeviceCtx,HDK_Struct * pInput,HDK_Struct * pOutput)", "description": "Retrieves supported wireless client network types and security modes.", "scope": "", "scopeKind": ""}, {"name": "void HDK_Method_PN_GetWirelessClientConnectionInfo(void * pDeviceCtx,HDK_Struct * pInput,HDK_Struct * pOutput)", "description": "Returns info about current wireless client connection such as SSID, channel, signal, noise, speed.", "scope": "", "scopeKind": ""}, {"name": "void HDK_Method_PN_GetWirelessClientSettings(void * pDeviceCtx,HDK_Struct * pInput,HDK_Struct * pOutput)", "description": "Retrieves current wireless client configuration.", "scope": "", "scopeKind": ""}, {"name": "HDK_Method_PN_GetWLANRadioFrequencies", "description": "Retrieves available radio frequencies."}, {"name": "HDK_Method_PN_GetWLANRadioSecurity", "description": "Retrieves security settings for a specified WLAN radio."}, {"name": "HDK_Method_PN_GetWLANRadioSettings", "description": "Retrieves WLAN radio configuration for a specific radio."}, {"name": "void HDK_Method_PN_GetWLanRadios(void * pDeviceCtx,HDK_Struct * pInput,HDK_Struct * pOutput)", "description": "Retrieves info of all WLAN radios.", "scope": "", "scopeKind": ""}, {"name": "void HDK_Method_PN_GetWanInfo(void * pDeviceCtx,HDK_Struct * pInput,HDK_Struct * pOutput)", "description": "Retrieves WAN connection type, status, and supported types.", "scope": "", "scopeKind": ""}, {"name": "void HDK_Method_PN_GetWanSettings(void * pDeviceCtx,HDK_Struct * pInput,HDK_Struct * pOutput)", "description": "Retrieves detailed WAN connection settings based on WAN type.", "scope": "", "scopeKind": ""}, {"name": "void HDK_Method_PN_RenewWanConnection(void * pDeviceCtx,HDK_Struct * pInput,HDK_Struct * pOutput)", "description": "Triggers WAN connection renewal.", "scope": "", "scopeKind": ""}, {"name": "void HDK_Method_PN_SetAccessPointMode(void * pDeviceCtx,HDK_Struct * pInput,HDK_Struct * pOutput)", "description": "Sets access point mode and updates IP accordingly.", "scope": "", "scopeKind": ""}, {"name": "void HDK_Method_PN_SetDeviceSettings(void * pDeviceCtx,HDK_Struct * pInput,HDK_Struct * pOutput)", "description": "Sets device name and admin password.", "scope": "", "scopeKind": ""}, {"name": "void HDK_Method_PN_SetDeviceSettings2(void * pDeviceCtx,HDK_Struct * pInput,HDK_Struct * pOutput)", "description": "Sets device serial number, timezone, locale, SSL, supported locales.", "scope": "", "scopeKind": ""}, {"name": "void HDK_Method_PN_SetMACFilters2(void * pDeviceCtx,HDK_Struct * pInput,HDK_Struct * pOutput)", "description": "Sets MAC filtering allow list, enable status, and list.", "scope": "", "scopeKind": ""}, {"name": "void HDK_Method_PN_SetRouterLanSettings2(void * pDeviceCtx,HDK_Struct * pInput,HDK_Struct * pOutput)", "description": "Configures LAN IP, subnet, DHCP range, lease time, reservations, with validation.", "scope": "", "scopeKind": ""}, {"name": "void HDK_Method_PN_SetRouterSettings(void * pDeviceCtx,HDK_Struct * pInput,HDK_Struct * pOutput)", "description": "Sets remote management, wireless management, domain, QoS, WPS pin.", "scope": "", "scopeKind": ""}, {"name": "void HDK_Method_PN_SetWirelessClientSettings(void * pDeviceCtx,HDK_Struct * pInput,HDK_Struct * pOutput)", "description": "Configures wireless client SSID, network type, security, encryption, key, connection status.", "scope": "", "scopeKind": ""}, {"name": "HDK_Method_PN_SetWLANRadioFrequency", "description": "Adjusts WLAN radio frequency."}, {"name": "HDK_Method_PN_SetWirelessClientSettings", "description": "Sets wireless client configuration including SSID, security, and encryption parameters."}, {"name": "void HDK_Method_PN_SetWLanRadioFrequency(void * pDeviceCtx,HDK_Struct * pInput,HDK_Struct * pOutput)", "description": "Configures the radio frequency of a WLAN radio, validating radio ID and frequency.", "scope": "", "scopeKind": ""}, {"name": "void HDK_Method_PN_SetWLanRadioSecurity(void * pDeviceCtx,HDK_Struct * pInput,HDK_Struct * pOutput)", "description": "Configures WLAN radio security settings, including security type, encryption, keys, and radius servers.", "scope": "", "scopeKind": ""}, {"name": "void HDK_Method_PN_SetWLanRadioSettings(void * pDeviceCtx,HDK_Struct * pInput,HDK_Struct * pOutput)", "description": "Sets WLAN radio parameters such as enabled state, mode, channel, channel width, SSID, and QoS.", "scope": "", "scopeKind": ""}, {"name": "void HDK_Method_PN_SetWanSettings(void * pDeviceCtx,HDK_Struct * pInput,HDK_Struct * pOutput)", "description": "Configures WAN connection parameters including type, MTU, IP address, subnet, gateway, DNS, and authentication.", "scope": "", "scopeKind": ""}, {"name": "void HDK_Method_PN_SetBridgeConnect(void * pDeviceCtx,HDK_Struct * pInput,HDK_Struct * pOutput)", "description": "Enables or disables bridge connection mode.", "scope": "", "scopeKind": ""}, {"name": "void HDK_Method_PN_GetWLanRadioFrequencies(void * pDeviceCtx,HDK_Struct * pInput,HDK_Struct * pOutput)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "void HDK_Method_PN_GetWLanRadioSecurity(void * pDeviceCtx,HDK_Struct * pInput,HDK_Struct * pOutput)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "void HDK_Method_PN_GetWLanRadioSettings(void * pDeviceCtx,HDK_Struct * pInput,HDK_Struct * pOutput)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "void HDK_Method_PN_StreamOut_ByteStream(void * pDeviceCtx,HDK_Struct * pInput,void * pMemberCtx,void * pStreamCtx,HDK_StreamOutFn pfnStreamOut)", "scope": "", "scopeKind": "", "description": "unavailable"}], "search-terms": ["HNAP", "device configuration", "port mapping", "WAN settings", "wireless settings", "router management", "MAC filtering", "WLAN radio", "firmware", "device info", "wireless security", "radio frequency configuration", "WLAN radio settings", "WAN connection setup", "bridge mode", "WLAN radio security", "WAN type MTU", "WAN IP validation", "PPPoe", "PPPoA", "L2TP", "PPTP", "RJ-45 port settings"], "calls": ["HDK_Device_SetValue", "HDK_Device_GetValue", "HDK_Get_Struct", "HDK_Get_StructMember", "HDK_Get_String", "HDK_Get_IPAddress", "HDK_Util_ValidateSubnetMask", "HDK_Util_ValidateIPSubnet", "HDK_Device_ValidateValue", "HDK_Struct_Free", "HDK_Set_Result"], "state": 2, "file_id": 9595, "knowledge_revision": 26197, "git_revision": "", "ctags": [{"_type": "tag", "name": "HDK_Device_CheckValue", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspHomeSecurity/source/Ssp/hdk_adi.c", "pattern": "/^static int HDK_Device_CheckValue(void* pDeviceCtx, HDK_DeviceValue eValue)$/", "file": true, "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(void * pDeviceCtx,HDK_DeviceValue eValue)"}, {"_type": "tag", "name": "HDK_Method_PN_AddPortMapping", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspHomeSecurity/source/Ssp/hdk_adi.c", "pattern": "/^void HDK_Method_PN_AddPortMapping(void* pDeviceCtx, HDK_Struct* pInput, HDK_Struct* pOutput)$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(void * pDeviceCtx,HDK_Struct * pInput,HDK_Struct * pOutput)"}, {"_type": "tag", "name": "HDK_Method_PN_DeletePortMapping", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspHomeSecurity/source/Ssp/hdk_adi.c", "pattern": "/^void HDK_Method_PN_DeletePortMapping(void* pDeviceCtx, HDK_Struct* pInput, HDK_Struct* pOutput)$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(void * pDeviceCtx,HDK_Struct * pInput,HDK_Struct * pOutput)"}, {"_type": "tag", "name": "HDK_Method_PN_DownloadSpeedTest", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspHomeSecurity/source/Ssp/hdk_adi.c", "pattern": "/^void HDK_Method_PN_DownloadSpeedTest(void* pDeviceCtx, HDK_Struct* pInput, HDK_Struct* pOutput)$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(void * pDeviceCtx,HDK_Struct * pInput,HDK_Struct * pOutput)"}, {"_type": "tag", "name": "HDK_Method_PN_GetClientStats", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspHomeSecurity/source/Ssp/hdk_adi.c", "pattern": "/^void HDK_Method_PN_GetClientStats(void* pDeviceCtx, HDK_Struct* pInput, HDK_Struct* pOutput)$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(void * pDeviceCtx,HDK_Struct * pInput,HDK_Struct * pOutput)"}, {"_type": "tag", "name": "HDK_Method_PN_GetConnectedDevices", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspHomeSecurity/source/Ssp/hdk_adi.c", "pattern": "/^void HDK_Method_PN_GetConnectedDevices(void* pDeviceCtx, HDK_Struct* pInput, HDK_Struct* pOutput/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(void * pDeviceCtx,HDK_Struct * pInput,HDK_Struct * pOutput)"}, {"_type": "tag", "name": "HDK_Method_PN_GetDeviceSettings", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspHomeSecurity/source/Ssp/hdk_adi.c", "pattern": "/^void HDK_Method_PN_GetDeviceSettings(void* pDeviceCtx, HDK_Struct* pInput, HDK_Struct* pOutput)$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(void * pDeviceCtx,HDK_Struct * pInput,HDK_Struct * pOutput)"}, {"_type": "tag", "name": "HDK_Method_PN_GetDeviceSettings2", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspHomeSecurity/source/Ssp/hdk_adi.c", "pattern": "/^void HDK_Method_PN_GetDeviceSettings2(void* pDeviceCtx, HDK_Struct* pInput, HDK_Struct* pOutput)$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(void * pDeviceCtx,HDK_Struct * pInput,HDK_Struct * pOutput)"}, {"_type": "tag", "name": "HDK_Method_PN_GetFirmwareSettings", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspHomeSecurity/source/Ssp/hdk_adi.c", "pattern": "/^void HDK_Method_PN_GetFirmwareSettings(void* pDeviceCtx, HDK_Struct* pInput, HDK_Struct* pOutput/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(void * pDeviceCtx,HDK_Struct * pInput,HDK_Struct * pOutput)"}, {"_type": "tag", "name": "HDK_Method_PN_GetMACFilters2", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspHomeSecurity/source/Ssp/hdk_adi.c", "pattern": "/^void HDK_Method_PN_GetMACFilters2(void* pDeviceCtx, HDK_Struct* pInput, HDK_Struct* pOutput)$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(void * pDeviceCtx,HDK_Struct * pInput,HDK_Struct * pOutput)"}, {"_type": "tag", "name": "HDK_Method_PN_GetNetworkStats", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspHomeSecurity/source/Ssp/hdk_adi.c", "pattern": "/^void HDK_Method_PN_GetNetworkStats(void* pDeviceCtx, HDK_Struct* pInput, HDK_Struct* pOutput)$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(void * pDeviceCtx,HDK_Struct * pInput,HDK_Struct * pOutput)"}, {"_type": "tag", "name": "HDK_Method_PN_GetPortMappings", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspHomeSecurity/source/Ssp/hdk_adi.c", "pattern": "/^void HDK_Method_PN_GetPortMappings(void* pDeviceCtx, HDK_Struct* pInput, HDK_Struct* pOutput)$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(void * pDeviceCtx,HDK_Struct * pInput,HDK_Struct * pOutput)"}, {"_type": "tag", "name": "HDK_Method_PN_GetRouterLanSettings2", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspHomeSecurity/source/Ssp/hdk_adi.c", "pattern": "/^void HDK_Method_PN_GetRouterLanSettings2(void* pDeviceCtx, HDK_Struct* pInput, HDK_Struct* pOutp/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(void * pDeviceCtx,HDK_Struct * pInput,HDK_Struct * pOutput)"}, {"_type": "tag", "name": "HDK_Method_PN_GetRouterSettings", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspHomeSecurity/source/Ssp/hdk_adi.c", "pattern": "/^void HDK_Method_PN_GetRouterSettings(void* pDeviceCtx, HDK_Struct* pInput, HDK_Struct* pOutput)$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(void * pDeviceCtx,HDK_Struct * pInput,HDK_Struct * pOutput)"}, {"_type": "tag", "name": "HDK_Method_PN_GetWLanRadioFrequencies", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspHomeSecurity/source/Ssp/hdk_adi.c", "pattern": "/^void HDK_Method_PN_GetWLanRadioFrequencies(void* pDeviceCtx, HDK_Struct* pInput, HDK_Struct* pOu/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(void * pDeviceCtx,HDK_Struct * pInput,HDK_Struct * pOutput)"}, {"_type": "tag", "name": "HDK_Method_PN_GetWLanRadioSecurity", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspHomeSecurity/source/Ssp/hdk_adi.c", "pattern": "/^void HDK_Method_PN_GetWLanRadioSecurity(void* pDeviceCtx, HDK_Struct* pInput, HDK_Struct* pOutpu/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(void * pDeviceCtx,HDK_Struct * pInput,HDK_Struct * pOutput)"}, {"_type": "tag", "name": "HDK_Method_PN_GetWLanRadioSettings", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspHomeSecurity/source/Ssp/hdk_adi.c", "pattern": "/^void HDK_Method_PN_GetWLanRadioSettings(void* pDeviceCtx, HDK_Struct* pInput, HDK_Struct* pOutpu/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(void * pDeviceCtx,HDK_Struct * pInput,HDK_Struct * pOutput)"}, {"_type": "tag", "name": "HDK_Method_PN_GetWLanRadios", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspHomeSecurity/source/Ssp/hdk_adi.c", "pattern": "/^void HDK_Method_PN_GetWLanRadios(void* pDeviceCtx, HDK_Struct* pInput, HDK_Struct* pOutput)$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(void * pDeviceCtx,HDK_Struct * pInput,HDK_Struct * pOutput)"}, {"_type": "tag", "name": "HDK_Method_PN_GetWanInfo", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspHomeSecurity/source/Ssp/hdk_adi.c", "pattern": "/^void HDK_Method_PN_GetWanInfo(void* pDeviceCtx, HDK_Struct* pInput, HDK_Struct* pOutput)$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(void * pDeviceCtx,HDK_Struct * pInput,HDK_Struct * pOutput)"}, {"_type": "tag", "name": "HDK_Method_PN_GetWanSettings", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspHomeSecurity/source/Ssp/hdk_adi.c", "pattern": "/^void HDK_Method_PN_GetWanSettings(void* pDeviceCtx, HDK_Struct* pInput, HDK_Struct* pOutput)$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(void * pDeviceCtx,HDK_Struct * pInput,HDK_Struct * pOutput)"}, {"_type": "tag", "name": "HDK_Method_PN_GetWirelessClientCapabilities", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspHomeSecurity/source/Ssp/hdk_adi.c", "pattern": "/^void HDK_Method_PN_GetWirelessClientCapabilities(void* pDeviceCtx, HDK_Struct* pInput, HDK_Struc/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(void * pDeviceCtx,HDK_Struct * pInput,HDK_Struct * pOutput)"}, {"_type": "tag", "name": "HDK_Method_PN_GetWirelessClientConnectionInfo", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspHomeSecurity/source/Ssp/hdk_adi.c", "pattern": "/^void HDK_Method_PN_GetWirelessClientConnectionInfo(void* pDeviceCtx, HDK_Struct* pInput, HDK_Str/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(void * pDeviceCtx,HDK_Struct * pInput,HDK_Struct * pOutput)"}, {"_type": "tag", "name": "HDK_Method_PN_GetWirelessClientSettings", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspHomeSecurity/source/Ssp/hdk_adi.c", "pattern": "/^void HDK_Method_PN_GetWirelessClientSettings(void* pDeviceCtx, HDK_Struct* pInput, HDK_Struct* p/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(void * pDeviceCtx,HDK_Struct * pInput,HDK_Struct * pOutput)"}, {"_type": "tag", "name": "HDK_Method_PN_RenewWanConnection", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspHomeSecurity/source/Ssp/hdk_adi.c", "pattern": "/^void HDK_Method_PN_RenewWanConnection(void* pDeviceCtx, HDK_Struct* pInput, HDK_Struct* pOutput)$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(void * pDeviceCtx,HDK_Struct * pInput,HDK_Struct * pOutput)"}, {"_type": "tag", "name": "HDK_Method_PN_SetAccessPointMode", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspHomeSecurity/source/Ssp/hdk_adi.c", "pattern": "/^void HDK_Method_PN_SetAccessPointMode(void* pDeviceCtx, HDK_Struct* pInput, HDK_Struct* pOutput)$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(void * pDeviceCtx,HDK_Struct * pInput,HDK_Struct * pOutput)"}, {"_type": "tag", "name": "HDK_Method_PN_SetBridgeConnect", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspHomeSecurity/source/Ssp/hdk_adi.c", "pattern": "/^void HDK_Method_PN_SetBridgeConnect(void* pDeviceCtx, HDK_Struct* pInput, HDK_Struct* pOutput)$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(void * pDeviceCtx,HDK_Struct * pInput,HDK_Struct * pOutput)"}, {"_type": "tag", "name": "HDK_Method_PN_SetDeviceSettings", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspHomeSecurity/source/Ssp/hdk_adi.c", "pattern": "/^void HDK_Method_PN_SetDeviceSettings(void* pDeviceCtx, HDK_Struct* pInput, HDK_Struct* pOutput)$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(void * pDeviceCtx,HDK_Struct * pInput,HDK_Struct * pOutput)"}, {"_type": "tag", "name": "HDK_Method_PN_SetDeviceSettings2", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspHomeSecurity/source/Ssp/hdk_adi.c", "pattern": "/^void HDK_Method_PN_SetDeviceSettings2(void* pDeviceCtx, HDK_Struct* pInput, HDK_Struct* pOutput)$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(void * pDeviceCtx,HDK_Struct * pInput,HDK_Struct * pOutput)"}, {"_type": "tag", "name": "HDK_Method_PN_SetMACFilters2", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspHomeSecurity/source/Ssp/hdk_adi.c", "pattern": "/^void HDK_Method_PN_SetMACFilters2(void* pDeviceCtx, HDK_Struct* pInput, HDK_Struct* pOutput)$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(void * pDeviceCtx,HDK_Struct * pInput,HDK_Struct * pOutput)"}, {"_type": "tag", "name": "HDK_Method_PN_SetRouterLanSettings2", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspHomeSecurity/source/Ssp/hdk_adi.c", "pattern": "/^void HDK_Method_PN_SetRouterLanSettings2(void* pDeviceCtx, HDK_Struct* pInput, HDK_Struct* pOutp/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(void * pDeviceCtx,HDK_Struct * pInput,HDK_Struct * pOutput)"}, {"_type": "tag", "name": "HDK_Method_PN_SetRouterSettings", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspHomeSecurity/source/Ssp/hdk_adi.c", "pattern": "/^void HDK_Method_PN_SetRouterSettings(void* pDeviceCtx, HDK_Struct* pInput, HDK_Struct* pOutput)$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(void * pDeviceCtx,HDK_Struct * pInput,HDK_Struct * pOutput)"}, {"_type": "tag", "name": "HDK_Method_PN_SetWLanRadioFrequency", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspHomeSecurity/source/Ssp/hdk_adi.c", "pattern": "/^void HDK_Method_PN_SetWLanRadioFrequency(void* pDeviceCtx, HDK_Struct* pInput, HDK_Struct* pOutp/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(void * pDeviceCtx,HDK_Struct * pInput,HDK_Struct * pOutput)"}, {"_type": "tag", "name": "HDK_Method_PN_SetWLanRadioSecurity", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspHomeSecurity/source/Ssp/hdk_adi.c", "pattern": "/^void HDK_Method_PN_SetWLanRadioSecurity(void* pDeviceCtx, HDK_Struct* pInput, HDK_Struct* pOutpu/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(void * pDeviceCtx,HDK_Struct * pInput,HDK_Struct * pOutput)"}, {"_type": "tag", "name": "HDK_Method_PN_SetWLanRadioSettings", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspHomeSecurity/source/Ssp/hdk_adi.c", "pattern": "/^void HDK_Method_PN_SetWLanRadioSettings(void* pDeviceCtx, HDK_Struct* pInput, HDK_Struct* pOutpu/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(void * pDeviceCtx,HDK_Struct * pInput,HDK_Struct * pOutput)"}, {"_type": "tag", "name": "HDK_Method_PN_SetWanSettings", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspHomeSecurity/source/Ssp/hdk_adi.c", "pattern": "/^void HDK_Method_PN_SetWanSettings(void* pDeviceCtx, HDK_Struct* pInput, HDK_Struct* pOutput)$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(void * pDeviceCtx,HDK_Struct * pInput,HDK_Struct * pOutput)"}, {"_type": "tag", "name": "HDK_Method_PN_SetWirelessClientSettings", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspHomeSecurity/source/Ssp/hdk_adi.c", "pattern": "/^void HDK_Method_PN_SetWirelessClientSettings(void* pDeviceCtx, HDK_Struct* pInput, HDK_Struct* p/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(void * pDeviceCtx,HDK_Struct * pInput,HDK_Struct * pOutput)"}, {"_type": "tag", "name": "HDK_Method_PN_StreamOut_ByteStream", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspHomeSecurity/source/Ssp/hdk_adi.c", "pattern": "/^static void HDK_Method_PN_StreamOut_ByteStream(void* pDeviceCtx, HDK_Struct* pInput,$/", "file": true, "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(void * pDeviceCtx,HDK_Struct * pInput,void * pMemberCtx,void * pStreamCtx,HDK_StreamOutFn pfnStreamOut)"}, {"_type": "tag", "name": "HDK_Util_AreIPsDuplicate", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspHomeSecurity/source/Ssp/hdk_adi.c", "pattern": "/^static int HDK_Util_AreIPsDuplicate(HDK_IPAddress* pIpAddr1, HDK_IPAddress* pIpAddr2)$/", "file": true, "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(HDK_IPAddress * pIpAddr1,HDK_IPAddress * pIpAddr2)"}, {"_type": "tag", "name": "HDK_Util_AreMACsDuplicate", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspHomeSecurity/source/Ssp/hdk_adi.c", "pattern": "/^static int HDK_Util_AreMACsDuplicate(HDK_MACAddress* pMacAddr1, HDK_MACAddress* pMacAddr2)$/", "file": true, "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(HDK_MACAddress * pMacAddr1,HDK_MACAddress * pMacAddr2)"}, {"_type": "tag", "name": "HDK_Util_ValidateEncryptionKey", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspHomeSecurity/source/Ssp/hdk_adi.c", "pattern": "/^static int HDK_Util_ValidateEncryptionKey(char* pszKey, HDK_Enum_PN_WiFiEncryption eWiFiEncrypti/", "file": true, "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(char * pszKey,HDK_Enum_PN_WiFiEncryption eWiFiEncryption)"}, {"_type": "tag", "name": "HDK_Util_ValidateIPRange", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspHomeSecurity/source/Ssp/hdk_adi.c", "pattern": "/^static int HDK_Util_ValidateIPRange(HDK_IPAddress* pDevIp, HDK_IPAddress* pDevSubnet,$/", "file": true, "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(HDK_IPAddress * pDevIp,HDK_IPAddress * pDevSubnet,HDK_IPAddress * pIpFirst,HDK_IPAddress * pIpLast)"}, {"_type": "tag", "name": "HDK_Util_ValidateIPSubnet", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspHomeSecurity/source/Ssp/hdk_adi.c", "pattern": "/^static int HDK_Util_ValidateIPSubnet(HDK_IPAddress* pDevIp, HDK_IPAddress* pDevSubnet,$/", "file": true, "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(HDK_IPAddress * pDevIp,HDK_IPAddress * pDevSubnet,HDK_IPAddress * pIpAddress)"}, {"_type": "tag", "name": "HDK_Util_ValidateSubnetMask", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspHomeSecurity/source/Ssp/hdk_adi.c", "pattern": "/^static int HDK_Util_ValidateSubnetMask(HDK_IPAddress* pSubnetMask)$/", "file": true, "language": "C", "typeref": "typename:int", "kind": "function", "signature": "(HDK_IPAddress * pSubnetMask)"}, {"_type": "tag", "name": "MAX_STRING_LEN", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/rdkb/components/opensource/ccsp/CcspHomeSecurity/source/Ssp/hdk_adi.c", "pattern": "/^#define  MAX_STRING_LEN /", "file": true, "language": "C", "kind": "macro"}], "hash": "44b74657b815c5c9b8dafd429731d46c", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "rdkb/components/opensource/ccsp/CcspHomeSecurity/source/Ssp/hdk_adi.c", "revision_history": [{"26197": ""}]}