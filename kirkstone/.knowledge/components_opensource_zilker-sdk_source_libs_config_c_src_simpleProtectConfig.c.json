{"is_source_file": true, "format": "C", "description": "This file implements cryptographic protection functions for configuration data, including encryption, decryption, key management, and storage of keys within a namespace. It provides higher-level API functions for securing configuration data using simple obfuscation and encoding techniques, along with managing encryption keys stored in a JSON file.", "external_files": ["cjson/cJSON.h", "icUtil/base64.h", "icConfig/simpleProtectConfig.h", "icConfig/storage.h", "icConfig/protectedConfig.h", "icConfig/obfuscation.h"], "external_methods": ["openProtectConfigSession()", "closeProtectConfigSession()", "protectConfigData()", "unprotectConfigData()", "destroyProtectConfigData()", "generateProtectPassword()", "storageLoad()", "storageSave()", "icDecodeBase64()", "obfuscate()", "unobfuscate()"], "published": ["simpleProtectConfigData", "simpleUnprotectConfigData", "simpleProtectEncrypt", "simpleProtectDecrypt", "simpleProtectGetSecret", "simpleProtectDestroySecret", "simpleProtectDestroySecret__auto"], "classes": [], "methods": [{"name": "char * simpleProtectConfigData(const char * namespace,const char * dataToProtect)", "description": "Encrypts data and returns a BASE64 encoded string that can be safely stored.", "scope": "", "scopeKind": ""}, {"name": "char * simpleUnprotectConfigData(const char * namespace,const char * protectedData)", "description": "Decrypts previously protected data, returning the original string.", "scope": "", "scopeKind": ""}, {"name": "char * simpleProtectDecrypt(const ProtectSecret * secret,const char * protectedData)", "description": "Performs decryption of protected data using provided secret key.", "scope": "", "scopeKind": ""}, {"name": "char * simpleProtectEncrypt(const ProtectSecret * secret,const char * dataToProtect)", "description": "Encrypts data with a secret key and returns the protected data.", "scope": "", "scopeKind": ""}, {"name": "ProtectSecret * simpleProtectGetSecret(const char * ns,bool autoCreate)", "description": "Retrieves or creates an encryption secret associated with a namespace.", "scope": "", "scopeKind": ""}, {"name": "void simpleProtectDestroySecret(ProtectSecret * secret)", "description": "Destroys and frees a ProtectSecret object, zeroing out its key.", "scope": "", "scopeKind": ""}, {"name": "void simpleProtectDestroySecret__auto(ProtectSecret ** secret)", "description": "Automatically destroys a ProtectSecret pointer.", "scope": "", "scopeKind": ""}, {"name": "pcData * readNamespaceKey(const char * namespace,const char * identifier)", "description": "Reads the encrypted key associated with a namespace and identifier from storage, un-obfuscates it.", "scope": "", "scopeKind": ""}, {"name": "bool writeNamespaceKey(const char * namespace,const char * identifier,pcData * key)", "description": "Stores an obfuscated and base64-encoded encryption key in the namespace storage.", "scope": "", "scopeKind": ""}], "calls": ["openProtectConfigSession()", "closeProtectConfigSession()", "protectConfigData()", "unprotectConfigData()", "destroyProtectConfigData()", "generateProtectPassword()", "storageLoad()", "storageSave()", "icDecodeBase64()", "obfuscate()", "unobfuscate()"], "search-terms": ["simpleProtectConfig", "namespaceKey", "encryption", "decryption", "key management", "obfuscation", "base64 encoding", "simpleProtect", "config encryption", "protectConfigData", "unprotectConfigData"], "state": 2, "file_id": 865, "knowledge_revision": 14023, "git_revision": "", "ctags": [{"_type": "tag", "name": "DEFAULT_KEY_IDENTIFIER", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/config/c/src/simpleProtectConfig.c", "pattern": "/^#define DEFAULT_KEY_IDENTIFIER /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "OBFUSCATE_KEY", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/config/c/src/simpleProtectConfig.c", "pattern": "/^#define OBFUSCATE_KEY /", "file": true, "language": "C", "kind": "macro"}, {"_type": "tag", "name": "ProtectSecret", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/config/c/src/simpleProtectConfig.c", "pattern": "/^struct ProtectSecret$/", "file": true, "language": "C", "kind": "struct"}, {"_type": "tag", "name": "key", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/config/c/src/simpleProtectConfig.c", "pattern": "/^    pcData *key;$/", "file": true, "language": "C", "typeref": "typename:pcData *", "kind": "member", "scope": "ProtectSecret", "scopeKind": "struct"}, {"_type": "tag", "name": "readNamespaceKey", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/config/c/src/simpleProtectConfig.c", "pattern": "/^static pcData *readNamespaceKey(const char *namespace, const char *identifier)$/", "file": true, "language": "C", "typeref": "typename:pcData *", "kind": "function", "signature": "(const char * namespace,const char * identifier)"}, {"_type": "tag", "name": "simpleProtectConfigData", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/config/c/src/simpleProtectConfig.c", "pattern": "/^char *simpleProtectConfigData(const char *namespace, const char *dataToProtect)$/", "language": "C", "typeref": "typename:char *", "kind": "function", "signature": "(const char * namespace,const char * dataToProtect)"}, {"_type": "tag", "name": "simpleProtectDecrypt", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/config/c/src/simpleProtectConfig.c", "pattern": "/^char *simpleProtectDecrypt(const ProtectSecret *secret, const char *protectedData)$/", "language": "C", "typeref": "typename:char *", "kind": "function", "signature": "(const ProtectSecret * secret,const char * protectedData)"}, {"_type": "tag", "name": "simpleProtectDestroySecret", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/config/c/src/simpleProtectConfig.c", "pattern": "/^void simpleProtectDestroySecret(ProtectSecret *secret)$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(ProtectSecret * secret)"}, {"_type": "tag", "name": "simpleProtectDestroySecret__auto", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/config/c/src/simpleProtectConfig.c", "pattern": "/^void simpleProtectDestroySecret__auto(ProtectSecret **secret)$/", "language": "C", "typeref": "typename:void", "kind": "function", "signature": "(ProtectSecret ** secret)"}, {"_type": "tag", "name": "simpleProtectEncrypt", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/config/c/src/simpleProtectConfig.c", "pattern": "/^char *simpleProtectEncrypt(const ProtectSecret *secret, const char *dataToProtect)$/", "language": "C", "typeref": "typename:char *", "kind": "function", "signature": "(const ProtectSecret * secret,const char * dataToProtect)"}, {"_type": "tag", "name": "simpleProtectGetSecret", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/config/c/src/simpleProtectConfig.c", "pattern": "/^ProtectSecret *simpleProtectGetSecret(const char *ns, bool autoCreate)$/", "language": "C", "typeref": "typename:ProtectSecret *", "kind": "function", "signature": "(const char * ns,bool autoCreate)"}, {"_type": "tag", "name": "simpleUnprotectConfigData", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/config/c/src/simpleProtectConfig.c", "pattern": "/^char *simpleUnprotectConfigData(const char *namespace, const char *protectedData)$/", "language": "C", "typeref": "typename:char *", "kind": "function", "signature": "(const char * namespace,const char * protectedData)"}, {"_type": "tag", "name": "writeNamespaceKey", "path": "/home/kavia/workspace/code-generation/Kirkstone/kirkstone/components/opensource/zilker-sdk/source/libs/config/c/src/simpleProtectConfig.c", "pattern": "/^static bool writeNamespaceKey(const char *namespace, const char *identifier, pcData *key)$/", "file": true, "language": "C", "typeref": "typename:bool", "kind": "function", "signature": "(const char * namespace,const char * identifier,pcData * key)"}], "hash": "844d61dcbee06e30ea7002609ddf842c", "format-version": 4, "code-base-name": "meta-rdk-sampleapp", "filename": "components/opensource/zilker-sdk/source/libs/config/c/src/simpleProtectConfig.c", "fields": [{"name": "pcData * key", "scope": "ProtectSecret", "scopeKind": "struct", "description": "unavailable"}], "revision_history": [{"14023": ""}]}